sample_id,query,generated_code
13151559,Is the large hair both white and soft?," # assumes only one large hair
    image_patch = ImagePatch(image)
    large_hair_patches = image_patch.find(""large hair"")
    # Question assumes only one large hair patch
    if len(large_hair_patches) == 0:
        # If no large hair is found, query the image directly
        return image_patch.simple_query(""Is the large hair both white and soft?"")
    large_hair_patch = large_hair_patches[0]
    is_white = large_hair_patch.verify_property(""large hair"", ""white"")
    is_soft = large_hair_patch.verify_property(""large hair"", ""soft"")
    return bool_to_yesno(is_white and is_soft)"
18370956,Who is eating the cupcake?," # assumes only one person and one cupcake
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        cupcake_patches = image_patch.find(""cupcake"")
        for cupcake_patch in cupcake_patches:
            if cupcake_patch.horizontal_center > person_patch.horizontal_center:
                return person_patch.simple_query(""Who is eating the cupcake?"")
    return ""no one"""
6436809,What is the guy wearing?," # assumes only one guy
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""What is the guy wearing?"")
    guy_patch = guy_patches[0]
    return guy_patch.simple_query(""What is the guy wearing?"")"
117037,Which kind of food is to the right of the cabbage?," # assumes only one cabbage patch
    image_patch = ImagePatch(image)
    cabbage_patches = image_patch.find(""cabbage"")
    if len(cabbage_patches) == 0:
        # If no cabbage is found, query the image directly
        return image_patch.simple_query(""Which kind of food is to the right of the cabbage?"")
    cabbage_patch = cabbage_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center > cabbage_patch.horizontal_center:
            return food_patch.simple_query(""Which kind of food is to the right of the cabbage?"") # crop would include the food so keep it in the query
    return ""no"""
758936,Who wears the cap?," # assumes only one person
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch.simple_query(""Who wears the cap?"")
    for cap_patch in cap_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if person_patch.horizontal_center > cap_patch.horizontal_center:
                return person_patch.simple_query(""Who wears the cap?"")
    return ""no one"""
111046440,Who is pointing?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        is_pointing = (person_patch.simple_query(""Is the person pointing?"") == ""yes"")
        if is_pointing:
            return person_patch.simple_query(""Who is pointing?"") # crop would include the pointing so keep it in the query
    return ""no one"""
15804389,Is the woman's hair short or long?," # assumes only one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman's hair short or long?"")
    woman_patch = woman_patches[0]
    return woman_patch.best_text_match([""short"", ""long""])"
11445636,The women are watching who?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The women are watching who?"")"
17736165,Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?," # TODO: add kitchen
    image_patch = ImagePatch(image)
    dishwasher_patches = image_patch.find(""dishwasher"")
    # Question assumes only one dishwasher patch
    if len(dishwasher_patches) == 0:
        # If no dishwasher is found, query the image directly
        return image_patch.simple_query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"")
    for dishwasher_patch in dishwasher_patches:
        if dishwasher_patch.horizontal_center < image_patch.horizontal_center:
            gas_stove_patches = image_patch.find(""gas stove"")
            # Question assumes only one gas stove patch
            if len(gas_stove_patches) == 0:
                # If no gas stove is found, query the image directly
                return image_patch.simple_query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"")
            for gas_stove_patch in gas_stove_patches:
                if gas_stove_patch.simple_query(""Is the gas stove inside the kitchen?"") == ""yes"":
                    return bool_to_yesno(dishwasher_patch.verify_property(""dishwasher"", ""white"") and gas_stove_patch.verify_property(""gas stove"", ""white""))
    return ""no"""
1594898,What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?," # TODO: add a way to get the color of the bed sheet
    image_patch = ImagePatch(image)
    baby_patches = image_patch.find(""baby"")
    # Question assumes only one baby patch
    if len(baby_patches) == 0:
        # If no baby is found, query the image directly
        return image_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")
    for baby_patch in baby_patches:
        bed_sheet_patches = image_patch.find(""bed sheet"")
        for bed_sheet_patch in bed_sheet_patches:
            if bed_sheet_patch.horizontal_center > baby_patch.horizontal_center:
                furniture_patches = image_patch.find(""furniture"")
                for furniture_patch in furniture_patches:
                    if furniture_patch.color == bed_sheet_patch.color:
                        return furniture_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")
    return ""no"""
758958,Is there either any red pillow or snowboard?," # assumes only one pillow and one snowboard
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is there either any red pillow or snowboard?"")
    for pillow_patch in pillow_patches:
        is_red = pillow_patch.simple_query(""Is the pillow red?"") == ""yes""
        if is_red:
            return ""yes""
    for snowboard_patch in snowboard_patches:
        is_red = snowboard_patch.simple_query(""Is the snowboard red?"") == ""yes""
        if is_red:
            return ""yes""
    return ""no"""
143816,Which place is it?," # TODO: add more places
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
13741513,Which side is the knife on?," # assumes only one knife
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Which side is the knife on?"")
    knife_patch = knife_patches[0]
    if knife_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17829769,What is the computer mouse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer mouse in front of?"")"
17233738,What is the toddler holding?," # assumes only one toddler patch
    image_patch = ImagePatch(image)
    toddler_patches = image_patch.find(""toddler"")
    if len(toddler_patches) == 0:
        # If no toddler is found, query the image directly
        return image_patch.simple_query(""What is the toddler holding?"")
    for toddler_patch in toddler_patches:
        return toddler_patch.simple_query(""What is the toddler holding?"")"
2951242,Is the gray shirt sleeveless or short sleeved?," # TODO: add sleeveless
    image_patch = ImagePatch(image)
    gray_shirt_patches = image_patch.find(""gray shirt"")
    # Question assumes only one gray shirt patch
    if len(gray_shirt_patches) == 0:
        # If no gray shirt is found, query the image directly
        return image_patch.simple_query(""Is the gray shirt sleeveless or short sleeved?"")
    gray_shirt_patch = gray_shirt_patches[0]
    is_sleeveless = gray_shirt_patch.simple_query(""Is the gray shirt sleeveless?"") == ""yes""
    is_short_sleeved = gray_shirt_patch.simple_query(""Is the gray shirt short sleeved?"") == ""yes""
    return bool_to_yesno(is_sleeveless or is_short_sleeved)"
