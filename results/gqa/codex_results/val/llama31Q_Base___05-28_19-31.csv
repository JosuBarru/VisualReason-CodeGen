sample_id,query,generated_code
13151559,Is the large hair both white and soft?," # assumes one hair patch
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Is the large hair both white and soft?"")
    hair_patch = hair_patches[0]
    is_white = hair_patch.verify_property(""hair"", ""white"")
    is_soft = hair_patch.verify_property(""hair"", ""soft"")
    return bool_to_yesno(is_white and is_soft) # returns yes or no udál���������������������������取���������������������������取�����取������������������取���取���������������������������������������������������������������������������������取�������取�����������������取���������������������������������������������������������������������取���������取��取���取�����������取�����取�����取�����取���������取���������取�������������������取�������������取������������������取"
18370956,Who is eating the cupcake?," # assumes one cupcake
    image_patch = ImagePatch(image)
    cupcake_patches = image_patch.find(""cupcake"")
    # Question assumes only one cupcake patch
    if len(cupcake_patches) == 0:
        # If no cupcake is found, query the image directly
        return image_patch.simple_query(""Who is eating the cupcake?"")
    for cupcake_patch in cupcake_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if person_patch.horizontal_center > cupcake_patch.horizontal_center:
                return person_patch.simple_query(""Who is eating the cupcake?"")
    return ""no one"" # if no one is eating the cupcake, return ""no one"" chtě chtě���������������������������������������������取������������������取����取���������������������取���取����取����������������������取�������取�����������������������������������������������������������������取������������������取����取����取������取������������������������������������������������������������取���取�����������������������取�����取����������������������������������������取����取���取�����������������取"
6436809,What is the guy wearing?," # returns a string describing the clothing
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""What is the guy wearing?"")
    guy_patch = guy_patches[0]
    return guy_patch.simple_query(""What is the guy wearing?"") # crop would include the clothing so keep it in the query�����取����������取���������������������取��������������取�������取���������������取���取������取���������������������������������������������������������������取�������取����������取���取��������取�������������取��������������������������������������������������������������������������������������������取����取����取���取������取���取���取�������������取"
117037,Which kind of food is to the right of the cabbage?," # assumes only one cabbage patch
    image_patch = ImagePatch(image)
    cabbage_patches = image_patch.find(""cabbage"")
    if len(cabbage_patches) == 0:
        # If no cabbage is found, query the image directly
        return image_patch.simple_query(""Which kind of food is to the right of the cabbage?"")
    cabbage_patch = cabbage_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center > cabbage_patch.horizontal_center:
            return food_patch.simple_query(""What kind of food is to the right of the cabbage?"")
    return ""no food to the right of the cabbage"" # if no food is to the right of the cabbage, return this messageERCHANTABILITY: return ""no food to the right of the cabbage"" # if no food is to the right of the cabbage, return this messageERCHANTABILITYERCHANTABILITY����������取��������������������������取�����取��������������������������������������取���取����������������������取����取���取����������取������������������������������������取������������������������取���������取������取��������������取�������取�����������������������������������������������������������������������取������取������������取"
758936,Who wears the cap?," # assumes one cap patch
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch.simple_query(""Who wears the cap?"")
    return cap_patches[0].simple_query(""Who wears the cap?"") # crop would include the cap so keep it in the query��取������������������������������������������������取�����取��������������取�������取������������������取�����取���������������������������������取�������������取�������������������������������������������������������������������������������������取�������������������取��������������������������������������������������������������������������������取����取����������取������取����������取���取���取���取����取����������取���取��������������取�����取�������������������������������取"
111046440,Who is pointing?," # assumes one person is pointing
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is pointing?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is pointing?"") # crop would include the pointing so keep it in the query���取��������取����������������������������取��������������������������������������取���取������������������取���取�������������取������������������������������������取���取��������������������������取���������������������������������������������������������������������������取�������取���取�����取�����������������取���取���取������������������������������������������������������������������������������������������������������������������取�������������取���������取����������������取�������取"
15804389,Is the woman's hair short or long?," # assumes one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        return image_patch.simple_query(""Is the woman's hair short or long?"")
    woman_patch = woman_patches[0]
    return woman_patch.simple_query(""Is the woman's hair short or long?"") # crop would include the hair so keep it in the query��������������取������������取����取��取����������������������������������������������取���取���������������������������������取������取����������������������������������������������������������取������������取����取�������������������������������������������������������������������������������取������取������取�����取�������������������取���取�����取������取���取������取"
11445636,The women are watching who?," # assumes only one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""The women are watching who?"")
    woman_patch = woman_patches[0]
    return woman_patch.simple_query(""Who is the woman watching?"") # crop would include the woman so keep it in the query��取�������取������������������������取�����������取�����������������������取������������������������取����取�����������取���������������������取���取������取�����取��������取����取��������������������������������������������������取���������������取���������������取������取����������������������������������������������������������������������������������������������������取�����������取����取����取����取���������取����取�����取�������取���������取���取�����取�����取����取������取�������取��������取"
17736165,Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?," # assumes one woman and one kitchen
    image_patch = ImagePatch(image)
    dishwasher_patches = image_patch.find(""dishwasher"")
    # Question assumes only one dishwasher patch
    if len(dishwasher_patches) == 0:
        # If no dishwasher is found, query the image directly
        return image_patch.simple_query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"")
    for dishwasher_patch in dishwasher_patches:
        if dishwasher_patch.horizontal_center < image_patch.horizontal_center:
            gas_stove_patches = image_patch.find(""gas stove"")
            # Question assumes only one gas stove patch
            if len(gas_stove_patches) == 0:
                return ""no""
            gas_stove_patch = gas_stove_patches[0]
            if gas_stove_patch.verify_property(""gas stove"", ""inside kitchen""):
                return bool_to_yesno(dishwasher_patch.verify_property(""dishwasher"", ""white"") and gas_stove_patch.verify_property(""gas stove"", ""white""))
    return ""no"" # if no dishwasher is to the left of the woman, return noERCHANTABILITYERCHANTABILITYERCHANTABILITY���������������取����取��取����取���取����取���������������取��������������取����������������������取������取����取��������������������������������������������������������������������������取���取���取�������������取��������������������取�������������������������������������������������������������������������������取����取"
1594898,What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?," # assumes one bed sheet and one baby
    image_patch = ImagePatch(image)
    bed_sheet_patches = image_patch.find(""bed sheet"")
    # Question assumes only one bed sheet patch
    if len(bed_sheet_patches) == 0:
        # If no bed sheet is found, query the image directly
        return image_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")
    bed_sheet_patch = bed_sheet_patches[0]
    baby_patches = image_patch.find(""baby"")
    # Question assumes only one baby patch
    if len(baby_patches) == 0:
        return image_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")
    baby_patch = baby_patches[0]
    if baby_patch.horizontal_center > bed_sheet_patch.horizontal_center:
        return bed_sheet_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")
    else:
        return bed_sheet_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the left of?"") # crop would include the baby so keep it in the query�������������取�����������取�����������������������������取�����������������������������������������������������取���������������������������������������������取��������取��������������取�����������������������������������������������������������������取"
758958,Is there either any red pillow or snowboard?," # returns yes or no
    image_patch = ImagePatch(image)
    is_red_pillow = image_patch.exists(""red pillow"")
    is_snowboard = image_patch.exists(""snowboard"")
    return bool_to_yesno(is_red_pillow or is_snowboard)���取����������������������������������������������取�������取��取�������������取�����取�����������������������������������取����������������������������������������������取��������取������������取��������取��������������������������������������������������������������������取�������取���取������取���������取����取���������取�����取������������������取����������������������取�������������������������������������取�����������������������取�����������������取������������取��������������取��������������������������取���取"
143816,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
���������������������������������取���������������������������������������取�����取������������������取�������取��������取���取����������������������������������取����取���取�����取����������取���������取����取�����取���取������������������������������������������������������������������������取����取�����������取�����������������取�����取������取����取����取���取��������������取������取���������������������������������������������������������������������������������������������������������������������������������������������������������������������取����取"
13741513,Which side is the knife on?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Which side is the knife on?"")
    knife_patch = knife_patches[0]
    if knife_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取��������取���������������������������取�����������������������������������������������������������������������������������������������������������取����取��������取����������取�����������������������������������������������������������������������取�����取���取��������������取�������取���取����������������取������取���取������取����取"
17829769,What is the computer mouse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer mouse in front of?"") # crop would include the mouse so keep it in the query��������������取���取��������������取����������������������������������������������������取����������������������取����取���取�������取��������������������������������������������������取����������������取������取���取����取����������������取����������������������������������������������������������������取�����������������������������取�����������取�������取���取����取���������取�����取����取"
17233738,What is the toddler holding?," # assumes one toddler patch
    image_patch = ImagePatch(image)
    toddler_patches = image_patch.find(""toddler"")
    if len(toddler_patches) == 0:
        # If no toddler is found, query the image directly
        return image_patch.simple_query(""What is the toddler holding?"")
    toddler_patch = toddler_patches[0]
    return toddler_patch.simple_query(""What is the toddler holding?"") # crop would include the object so keep it in the query������������������������取�������������取���取������������������������������������取�����取����������������������������取������������������������������������������������������取�������取��������������取������������������取��������������������������������������������������������������取����������取���取�������取���������取����������取����取����取���取�����取����取����取�������取"
2951242,Is the gray shirt sleeveless or short sleeved?," # assumes one gray shirt
    image_patch = ImagePatch(image)
    gray_shirt_patches = image_patch.find(""gray shirt"")
    # Question assumes only one gray shirt patch
    if len(gray_shirt_patches) == 0:
        # If no gray shirt is found, query the image directly
        return image_patch.simple_query(""Is the gray shirt sleeveless or short sleeved?"")
    gray_shirt_patch = gray_shirt_patches[0]
    is_sleeveless = gray_shirt_patch.verify_property(""gray shirt"", ""sleeveless"")
    is_short_sleeved = gray_shirt_patch.verify_property(""gray shirt"", ""short sleeved"")
    if is_sleeveless:
        return ""sleeveless""
    elif is_short_sleeved:
        return ""short sleeved""
    else:
        return ""long sleeved"" # default case, although this should never be reached if the question is correct
�������取������������������������������������取�����取���取���������������������取����������������������取����取����取�������������������������������������������������������������取����取������取����取���������������������������������������������������������������������������取�����取��������������������取�����取�������取������取����������取����取����取���取����取����取������取���������取"
15241795,Is the tank top red?," # returns yes or no
    image_patch = ImagePatch(image)
    tank_top_patches = image_patch.find(""tank top"")
    # Question assumes only one tank top patch
    if len(tank_top_patches) == 0:
        # If no tank top is found, query the image directly
        return image_patch.simple_query(""Is the tank top red?"")
    return bool_to_yesno(tank_top_patches[0].verify_property(""tank top"", ""red"")) # crop would include the color so keep it in the query��������������取��������������������������取��������������取������������������������取���取���取���������������������������取�����������������������������������������取������取���取������取�������取���取����������������取����取����取���������������取���������取��������������������������������������������������������������������������������取�����������取������取���取����������取"
13885234,Which kind of animal is in front of the rocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in front of the rocks?"") # crop would include the rocks so keep it in the query���取��取������������������������������取�����������取�����取���������������取�������������������������������������������������������取���取��取��������取���������������������������������������������������������������取���取����取����取���取������取�������取���取�������������������取������������取���������������������������������������������������������������取��������������������������������������取����取����������������取���取�����取��������取���������取����取�����������取����������取��������取"
19335715,Do you see any grapes?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""grapes"")) # returns True or False, which is then converted to yes or noERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting����取������取������������������������������������取�����������������������������取������取����取�����������������������������������取����取����取����������������������������������������������������������取������取��取�����取������������������������取���取����������������������������������������������������������������������������������������取���������������取���取"
6455591,What type of furniture is white?," # returns the type of furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What type of furniture is white?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.verify_property(""furniture"", ""white""):
            return furniture_patch.simple_query(""What type of furniture is white?"") # crop would include the white so keep it in the query
    # If no furniture is white, pick the first furniture
    return furniture_patches[0].simple_query(""What type of furniture is white?"") # crop would include the white so keep it in the query������取�������取���取����������取��取����������������������取�����取������������������取�����������������������������取���取����取�����取���取���取�����������������������������������取���������������������������取���取�����取��������取�������取���������������������������������������������������������������������������������取����������取���������取�������取�����取��������������取���取�����取���取"
1033761,What is the blue clothing item?," # returns the name of the blue clothing item
    image_patch = ImagePatch(image)
    blue_clothing_patches = image_patch.find(""blue clothing"")
    # Question assumes only one blue clothing patch
    if len(blue_clothing_patches) == 0:
        # If no blue clothing is found, query the image directly
        return image_patch.simple_query(""What is the blue clothing item?"")
    return blue_clothing_patches[0].simple_query(""What is the blue clothing item?"") # crop would include the blue clothing so keep it in the query���取�����������������������������������取������������取��������取����������������取����取����取������取���取����������������������取���取�������������������������������������������������取���������取�������取������取��取��取�������取��������������������������������������������������������������������取���������������取���������取���������取��取��������������������������������������������������������������������������������取����������取"
17726504,Who is wearing the glasses?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the glasses?"")
    person_patch = person_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    if glasses_patch.left < person_patch.left:
        return ""left""
    elif glasses_patch.right > person_patch.right:
        return ""right""
    else:
        return ""no"" # glasses are not on the person's face
���������������取�����������������������������������取��������������取���取�����取�����������������������取�������������������������������������������取���取��������������取������取�����������������取�������������������������������������������������������������������取�����取���������������取������取"
13112902,Is the woman wearing a bracelet?," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman wearing a bracelet?"")
    woman_patch = woman_patches[0]
    return bool_to_yesno(woman_patch.verify_property(""woman"", ""bracelet"")) # crop would include the bracelet so keep it in the query���������取�����������������取���取�������������������������取�����取������������������取�������取�������������������������������取�����������������������������������������������������取���取����������������取�����取�����������取�����������������������������������������������������������������������������取���取����������������取���取������������取����������取����取�������取�����取�������取"
698766,What is the food that is not white?," # assumes only one food patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch.simple_query(""What is the food that is not white?"")
    for food_patch in food_patches:
        if not food_patch.verify_property(""food"", ""white""):
            return food_patch.simple_query(""What is the food that is not white?"")
    # If no food is not white, query the image directly
    return image_patch.simple_query(""What is the food that is not white?"") # crop would include the food so keep it in the query��������取�������取�����������取�����������取����������������取�������������������������������������������������取���������取���取����取�����������������������������������������取������������������取�������取�����取�����������取�����取����������������������������������������������������������������������������������������������取����取������取��������取���取����取���取���取���取���������取�����������������取"
1332276,Are there both a cup and a bottle in the picture?," # returns a boolean
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_cup and is_bottle)������取���������取��������取�������������������������������取��������������������������取�����������������������������取�����������������������������������������������������取������取��������取�����取���取����������取������取���������取����取����取��������������������������������������������������������������������������������������取�����������取����取������取�������������取�����������取���取����取����取���取���取"
12633088,What color is that glove?," # returns the color of the glove
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""What color is that glove?"")
    return glove_patches[0].simple_query(""What color is that glove?"") # crop would include the glove so keep it in the query�����������������������������������������������������取�����������������������取������������取�����������������������取����取����取���������������������������������������取�����取����������取���取���取������������������取����������������������������������������������������������������������������������������取���������取��������取������������������取"
18103787,Who is holding the helmet?," # assumes one helmet patch
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is holding the helmet?"")
    helmet_patch = helmet_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.horizontal_center > helmet_patch.horizontal_center:
            return person_patch.simple_query(""Who is holding the helmet?"")
    return ""no one"" # if no person is found, query the image directly
����������������������������������������������������取������������������������������取�����������������������取������������������������������������取���取���取����取���取�����取���������取����������取�������取�����������取��������������������������������������������������取��������取���取���������取�������取���������������取������取"
2143247,What is the name of the food to the left of the donut that looks little?," # assumes only one donut patch
    image_patch = ImagePatch(image)
    donut_patches = image_patch.find(""donut"")
    if len(donut_patches) == 0:
        # If no donut is found, query the image directly
        return image_patch.simple_query(""What is the name of the food to the left of the donut that looks little?"")
    donut_patch = donut_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center < donut_patch.horizontal_center and food_patch.simple_query(""Does the food look little?"") == ""yes"":
            return food_patch.simple_query(""What is the name of the food to the left of the donut that looks little?"")
    return image_patch.simple_query(""What is the name of the food to the left of the donut that looks little?"") # if no food is found, query the image directly��������������������������取��������������取���������������取�������������������������������������������������取���取�����取������������������������������������������取�������������������取���取�������取�����取����取���������取��������取�������������������������������������������������������������������取�������������取���取��������取�������取����取�����取���取������取���取����取����取"
3767951,Is the clock to the right or to the left of the man on the left?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the clock to the right or to the left of the man on the left?"")
    man_patch = man_patches[0]
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        return ""no""
    clock_patch = clock_patches[0]
    if clock_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������������������取��������������������������������取�����������������取�������取����取������������������������取�����������������������������������������取����取������取���������取��������取�������取����������������������������������������������������������取����������������������取������取����取���取������������������������取�������取�����������������������取"
17655180,What's the sticker on?," # assumes one sticker patch
    image_patch = ImagePatch(image)
    sticker_patches = image_patch.find(""sticker"")
    if len(sticker_patches) == 0:
        # If no sticker is found, query the image directly
        return image_patch.simple_query(""What's the sticker on?"")
    return sticker_patches[0].simple_query(""What's the sticker on?"") # crop would include the sticker so keep it in the query��������取��取���������取����������取�����������������������取����取����取�����������������������取�����������������������������取������������取�������������������������������������������������取���取�����������取������取����取����������取�������取�����取������������������������������������������������������������������������������������������������������������取����取������������������������������������������取��取���������取�����取�������取"
3468831,In front of what is this table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In front of what is this table?"") # crop would include the table so keep it in the query�����������������������������������取���取���取��������������������������������������������取�������������������取�����取���������取����取���取����������������������������������������������取�������取���取��������取������������取��������������取����取������������������������������������������������������������������������������������取���������取������������������取���取�����������取"
5888523,Do you see people to the right of the still car?," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Do you see people to the right of the still car?"")
    car_patch = car_patches[0]
    people_patches = image_patch.find(""people"")
    for people_patch in people_patches:
        if people_patch.horizontal_center > car_patch.horizontal_center:
            return ""yes""
    return ""no""����������������取���������������������������������取���取�����������取����������������������������������������取�����������������������������������������������取����取������取���取���取���取���取����取�����������取������������取�����������������������������������������������������������取�������������取����������������������取�������取����������������取�����������������取"
7188981,Does the giraffe look adult?," # returns yes or no
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch.simple_query(""Does the giraffe look adult?"")
    return bool_to_yesno(giraffe_patches[0].verify_property(""giraffe"", ""adult"")) # crop would include the giraffe so keep it in the query��������������取���取���������������������������������������取����������������������取����取���取����取���������������������������取����������������������������������������取�����取����������������������取��������������������������取��������取�����������������������������������������������������������������������������取������取�������取����取�����������������������取����������������������取"
16852802,Of what color are the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Of what color are the pants?"")
    return pants_patches[0].simple_query(""Of what color are the pants?"") # crop would include the pants so keep it in the query�����取�����������取��������取�����������������������������取������������������取���取�������������������������取���取������取���取�������������������������������������������������取����取���取����������取���������取����������������取����������������������������������������������������������������������������������取����������取���取����������取�������取�����������������取"
9619158,What kind of watercraft is full of men?," # assumes only one watercraft
    image_patch = ImagePatch(image)
    watercraft_patches = image_patch.find(""watercraft"")
    if len(watercraft_patches) == 0:
        # If no watercraft is found, query the image directly
        return image_patch.simple_query(""What kind of watercraft is full of men?"")
    watercraft_patch = watercraft_patches[0]
    men_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(men_patches) == 0:
        return ""no""
    men_patch = men_patches[0]
    if men_patch.horizontal_center > watercraft_patch.horizontal_center:
        return watercraft_patch.simple_query(""What kind of watercraft is full of men?"")
    return ""no"" # men are not in the watercraft, so it's not full of menERCHANTABILITY: This function is not yet implemented and returns ""no"" as a placeholder.�回答是否水船满人。recatedERCHANTABILITY: This function is not yet implemented and returns ""no"" as a placeholderERCHANTABILITYERCHANTABILITYERCHANTABILITY������������������������������������������������������������������取��取������������������������������������取��取��������������������������������������������������������取�����������取��������������������取��������������������������������������������������取���取���������������取����������������取������������取"
3625225,On which side of the picture are the boats?," # assumes one boat patch
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the boats?"")
    boat_patch = boat_patches[0]
    if boat_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������������������取�������������������取��������������������������取�����取������������������������取�����������������������������������取��������������������������取�������������取���������������������������������������������������������������取���������������取�����������取���取���������取���取��������取���取���������������取������取������������������������������������������������������������������������������������������������取"
7126345,Does the elephant to the left of the other elephant have large size?," # assumes only two elephant patches
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only two elephant patches
    if len(elephant_patches) < 2:
        # If no two elephant patches are found, query the image directly
        return image_patch.simple_query(""Does the elephant to the left of the other elephant have large size?"")
    left_elephant_patch = elephant_patches[0]
    right_elephant_patch = elephant_patches[1]
    if left_elephant_patch.horizontal_center < right_elephant_patch.horizontal_center:
        return bool_to_yesno(left_elephant_patch.verify_property(""elephant"", ""large size""))
    else:
        return bool_to_yesno(right_elephant_patch.verify_property(""elephant"", ""large size"")) # crop would include the elephant so keep it in the query������������������������������������取���取����������������������������������������������������������取��������������������������������������������������取����������������������������������������������������������������������取���������������取����������取����取�����取���取����������������������取�����取���取���������������取�����������取���取�����取"
19834124,What is the girl holding?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What is the girl holding?"")
    girl_patch = girl_patches[0]
    holding_patches = image_patch.find(""holding"")
    if len(holding_patches) == 0:
        return girl_patch.simple_query(""What is the girl holding?"")
    return holding_patches[0].simple_query(""What is the girl holding?"") # crop would include the girl so keep it in the query��������������取�����������������取������取���取������������������������������������������取������������������������取�������������������������������������������������取���取����������������取�������取����������������������������������������������������������������取�����������取��取���������取�����������取����取�������取���取����取����取���取��������取�������������������取"
4617704,Does the toilet seat that is not down appear to be white and open?," # TODO: add a check for the toilet seat being down
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Does the toilet seat that is not down appear to be white and open?"")
    for toilet_patch in toilet_patches:
        is_white = toilet_patch.verify_property(""toilet"", ""white"")
        is_open = toilet_patch.verify_property(""toilet"", ""open"")
        if is_white and is_open:
            return ""yes""
    return ""no"" # if no toilet seat is not down, return no
���������������������������������取�������������取�����取���������������������������������取��取��取��������取����������取��������������������������������������取�����取�����取��������取���取����������取������取���取������������������������������������������������������������������取������取����������������取����������取��������取"
5899539,Are there any bottles or mugs that are not purple?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_mug = image_patch.exists(""mug"")
    if is_bottle or is_mug:
        bottle_patches = image_patch.find(""bottle"")
        mug_patches = image_patch.find(""mug"")
        for bottle_patch in bottle_patches:
            if not bottle_patch.verify_property(""bottle"", ""purple""):
                return ""yes""
        for mug_patch in mug_patches:
            if not mug_patch.verify_property(""mug"", ""purple""):
                return ""yes""
    return ""no"" # if no bottles or mugs are found, or if all bottles and mugs are purple, return no
�������������������������������取��������������������������������������������������������������取�������������������������������������取������取�����取���������取����������������取����取�������取�������取��������������������������������������������������������取�������取��取�������������������������取����取�������取��������������������������������取"
2631593,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����取��������������������������取���������������������������������������取������������������������取�����������������������������������������������取���取���取�������取��������取���取�����取��取���取�������������������������������������������������������������������������取����������取������������取������取���取�����取��������取�����取���������取�����������������������������������������������������������������������取���������������������������������取������取�������取�����������������取������取�����������������������取�������������取�������取����������取�����取�����取������取"
12228864,Do you see any men to the right of the person that is in the living room?," # assumes one person and one living room
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    living_room_patches = image_patch.find(""living room"")
    # Question assumes only one person and one living room patch
    if len(person_patches) == 0 or len(living_room_patches) == 0:
        # If no person or living room is found, query the image directly
        return image_patch.simple_query(""Do you see any men to the right of the person that is in the living room?"")
    person_patch = person_patches[0]
    living_room_patch = living_room_patches[0]
    man_patches = image_patch.find(""man"")
    for man_patch in man_patches:
        if man_patch.horizontal_center > person_patch.horizontal_center and man_patch.horizontal_center < living_room_patch.horizontal_center:
            return ""yes""
    return ""no""�������取�������������������������取������������������取�����������������������������取������取���������取�����取��������取������������������������������������������������取�������������取�����取���取����取�����取�����取��������������������������������������������������������������������������������������取�������������������取����取���������取���������取��������取"
111054378,Is the small couch to the right or to the left of the bottle?," # assumes only one small couch and one bottle
    image_patch = ImagePatch(image)
    small_couch_patches = image_patch.find(""small couch"")
    bottle_patches = image_patch.find(""bottle"")
    if len(small_couch_patches) == 0 or len(bottle_patches) == 0:
        # If no small couch or bottle is found, query the image directly
        return image_patch.simple_query(""Is the small couch to the right or to the left of the bottle?"")
    small_couch_patch = small_couch_patches[0]
    bottle_patch = bottle_patches[0]
    if small_couch_patch.horizontal_center > bottle_patch.horizontal_center:
        return ""right""
    else:
        return ""left""��������������������取��取������������取�����������������取����������������取���取��������������������������取����取�����������������������������������取���������������取���������取����取���取������取����������取������取���������������������������������������������������������������������������������取���������������取����取��������取����取������取"
9392411,Is the bottle to the right or to the left of the appliance on the left?," # assumes one appliance on the left
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the right or to the left of the appliance on the left?"")
    for bottle_patch in bottle_patches:
        appliance_patches = image_patch.find(""appliance"")
        # Question assumes only one appliance patch
        if len(appliance_patches) == 0:
            # If no appliance is found, query the image directly
            return image_patch.simple_query(""Is the bottle to the right or to the left of the appliance on the left?"")
        appliance_patch = appliance_patches[0]
        if appliance_patch.horizontal_center < image_patch.horizontal_center:
            if bottle_patch.horizontal_center > appliance_patch.horizontal_center:
                return ""right""
            else:
                return ""left""
    return ""left"" # if no bottle is found, default to left if no appliance is found, which is the case in the example imageроничес���������取���������取������������������������取����������������取����取��������������������������取������������������������������取�����取���取��������取�����������������������������������������������������取������������取������取�����取����取���取�����取������取"
16753829,What type of animal is sitting in the container in the bottom of the photo?," # container is a relational verb, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is sitting in the container in the bottom of the photo?"") # container is a relational verb, so ask directlyніцип��取��������������������������������������������取�����������������������������������������取���取����������������������取������取���������取�����������������������������������������������������取������������������������������������������������������������������������������������������取����取����取�������取���取���取���取�������������取���取����取���取�������取����������取����取�������取�������������������取"
1345482,What is that train in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that train in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип�����取���取���取���������������������取����������取���������取��������取��取��������������������������取�����������������������������取�������取���������������������取��������������������������������������取�����取���������取���������取�����取��������������取�����������������������������������������������������������������������取������������取���取���������取���取�����������取���������取�����取�����取������������取��������������������������������取"
1527449,Are there cars to the right of the palm trees which are to the right of the girl?," # assumes only one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Are there cars to the right of the palm trees which are to the right of the girl?"")
    girl_patch = girl_patches[0]
    palm_tree_patches = image_patch.find(""palm tree"")
    for palm_tree_patch in palm_tree_patches:
        if palm_tree_patch.horizontal_center > girl_patch.horizontal_center:
            car_patches = image_patch.find(""car"")
            for car_patch in car_patches:
                if car_patch.horizontal_center > palm_tree_patch.horizontal_center:
                    return ""yes""
    return ""no""������������取�����������取�����取�����������������������取����������������取�����������取����������������������取���取��������取����������������������������������������取�����取���������������取������������取�����������������������������������������������������������������������取��������取����取����������������取�����取���取���������取����取�����������取�����取��取������取"
459445,In which part is the silver device?," # silver device
    image_patch = ImagePatch(image)
    silver_device_patches = image_patch.find(""silver device"")
    # Question assumes only one silver device patch
    if len(silver_device_patches) == 0:
        # If no silver device is found, query the image directly
        return image_patch.simple_query(""In which part is the silver device?"")
    if silver_device_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""��������������取����������取������������取��������������������������������������������������������������������取�����������������������������������������取�����������������������������������������������������������������������������������������������������取�����取������取��������������取���������������������取"
11786203,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"") # crop would include the object so keep it in the query��������������取�������������������������取����取���������������������������������������取�����������������������������取�����取����取����������������������������������������������������������取���取�������取�������取��������������������������������������������������������������������������������������取���������������取���取�������������������取��������取�������取�����������������������取������取"
5200013,Is there a brown door or chair?," # returns yes or no
    image_patch = ImagePatch(image)
    is_brown_door = image_patch.exists(""brown door"")
    is_brown_chair = image_patch.exists(""brown chair"")
    return bool_to_yesno(is_brown_door or is_brown_chair)�����������������������������������取������������������取�����������������������取����������������������������取�������取�����������������������������������������������������������������取��������������取��������������������������������������������������������������������������������取�������取���取����取������取������取������取����取����������取���������取���取����������������������������������������������������������������������������������������������������������取"
131031372,What is the napkin in?," # assumes one napkin patch
    image_patch = ImagePatch(image)
    napkin_patches = image_patch.find(""napkin"")
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch.simple_query(""What is the napkin in?"")
    return napkin_patches[0].simple_query(""What is the napkin in?"") # crop would include the object so keep it in the query������������取������������取���取�����������取����������������������������������������取�������取�������������取�������������取����������������������������������������������������取���取����������取����取���取������取���取���������取�����������������������������������������������������������������������������������取���取�����������������取�����取���������������取��������������������取��������������������取"
1241681,Are there any people behind the white dessert?," # dessert is a placeholder for a more specific object
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""Are there any people behind the white dessert?"")
    for people_patch in people_patches:
        dessert_patches = image_patch.find(""dessert"")
        for dessert_patch in dessert_patches:
            if dessert_patch.horizontal_center > people_patch.horizontal_center:
                return ""yes""
    return ""no""��������取���������������������������取���������������取����取����������������������取���������������������������取���取���取����������������������������������������������取�����取������������取������取�������取�����取�����������������������������������������������������������������取������������取������������取�������������取�����������取������������取"
8730954,What type of animal do you think is in front of the curtain which is to the right of the radiator?," # assumes one radiator, one curtain, and one animal
    image_patch = ImagePatch(image)
    radiator_patches = image_patch.find(""radiator"")
    # Question assumes only one radiator patch
    if len(radiator_patches) == 0:
        # If no radiator is found, query the image directly
        return image_patch.simple_query(""What type of animal do you think is in front of the curtain which is to the right of the radiator?"")
    radiator_patch = radiator_patches[0]
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        return ""no""
    curtain_patch = curtain_patches[0]
    if curtain_patch.horizontal_center > radiator_patch.horizontal_center:
        animal_patches = image_patch.find(""animal"")
        # Question assumes only one animal patch
        if len(animal_patches) == 0:
            return ""no""
        return animal_patches[0].simple_query(""What type of animal do you think is in front of the curtain which is to the right of the radiator?"")
    return ""no"" # if the curtain is not to the right of the radiator, return no
���取����������������������������������������取���取���������������������������������������������取���取����������������������������������������取������������������������������������取����取�������������������取������������������������������取����取����取�����取���取�������取���取�������取������取����取��������取"
8553578,What is the Pikachu doing?," # assumes one Pikachu patch
    image_patch = ImagePatch(image)
    pikachu_patches = image_patch.find(""Pikachu"")
    if len(pikachu_patches) == 0:
        # If no Pikachu is found, query the image directly
        return image_patch.simple_query(""What is the Pikachu doing?"")
    return pikachu_patches[0].simple_query(""What is the Pikachu doing?"") # crop would include the action so keep it in the query���������������取���������������取��������������������������取����������������������������取��������������������������取����取��������������������������������������������������取������取�����取�����������取�����������取���取�����������������取���������������������������������������������������������������������取��������取��������������������取�����取�����取���取�������取���取���取"
16711804,"On which side is the car, the left or the right?"," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side is the car, the left or the right?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����取�����������������������������取����������取������取��������������������取���������������������������������取�������������������������������������������取���������������取���取�����������取������取����������������������������������������������������������������������取��������������取����������取����������������������取��������������������������������������������������������������������������������取"
5546271,What is on the large mountains?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the large mountains?"") # crop would include the mountains so keep it in the query���������������������������������������������������������取��������������������取���取��������取�����������������������取�����取�������������������������������������������������������取�������取����取����������取���取�����取�����取�����取�����取���������������������������������������������������������������������������������取���取�����取����������取���������取�����取���取���������取�������取����取�������取���������取"
5107295,What is in the sky?," # assumes the sky is at the top of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"") # crop would include the sky so keep it in the query��取������������������������取���������������������������取���������������������������������������������������������������������������������取��取�����������取���取���取�����取������������������������������������������������������取���取�������������取�������������取����取������取��������取����������取���������������取����取����������������������������������������������������������������取�������取�����取���取���������������������取�����取�����取�����������取�������取������取���取����������取���取"
123768,What kind of watercraft is the fruit on?," # assumes only one fruit patch
    image_patch = ImagePatch(image)
    fruit_patches = image_patch.find(""fruit"")
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch.simple_query(""What kind of watercraft is the fruit on?"")
    fruit_patch = fruit_patches[0]
    watercraft_patches = image_patch.find(""watercraft"")
    # Question assumes only one watercraft patch
    if len(watercraft_patches) == 0:
        return ""no""
    watercraft_patch = watercraft_patches[0]
    return watercraft_patch.best_text_match([""boat"", ""canoe"", ""raft""]) # crop would include the fruit so keep it in the query�����������������������������取��������������������������取����取���������������������取���������������������������取���取����取��������������������������������������������������������������������取���取�����取���取�������取����������取����取�������������������������������������������������������������取�����取���取����������取��������������������������取����取�����取�������取����取�����取"
1827218,Is the bottle in the bottom of the image?," # image is a 2D array
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle in the bottom of the image?"")
    if bottle_patches[0].lower > image_patch.lower:
        return ""yes""
    else:
        return ""no""��������������取������取�����������������������������取��������������������������取����������������������������������������������������������������������取����������取����������取�����取���取����取��������������取�����������������������������������������������������������������取����������������������������取������取�����取���������取���取�������取��取�����取�����取���������取"
10938155,What color is the sky?," # returns the color of the sky
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"") # assumes the sky is the background, so query directlyніцип�����取��取���������������������������取���������������������������������������������������取�����取�������������������������������取������取������取���������������������������������������������������取�������取�������取��������取����取���取���取���取�����取�����取������������������������������������������������������������������������������������������������取��������取���������取�����取���取�������������取����取�������������������取�������取���������������取"
4893512,Does the sail look white or red?," # assumes one sail patch
    image_patch = ImagePatch(image)
    sail_patches = image_patch.find(""sail"")
    if len(sail_patches) == 0:
        # If no sail is found, query the image directly
        return image_patch.simple_query(""Does the sail look white or red?"")
    return sail_patches[0].best_text_match([""white"", ""red""]) # crop would include the sail so keep it in the query�������������������������取���������������取��取���������������取���取����������������取�������取����取���取����������������������取���取����取���������取��������������������������取���������������取������������取���取���取�������取�����������取�������取�������取����取����取�������������������������������������������������������������������������������取���取���取������������取���取���取���������取����������������取"
3662784,Do you see either any traffic lights or cars?," # returns yes or no
    image_patch = ImagePatch(image)
    is_traffic_light = image_patch.exists(""traffic light"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_traffic_light or is_car)����取���取��������������取����取����������������������������������������������������������������������取����取����取��������������������������������������������取����������取���取������取�������������������������������������������������������������������������������取�������������取����取���取���取����������������取������取���取����取�����������������������������������������������������������������������������������������������������������������������������������取������取������������������������取����取"
15515711,Are there any girls to the right of the yellow helmet?," # assumes only one yellow helmet
    image_patch = ImagePatch(image)
    yellow_helmet_patch = image_patch.find(""yellow helmet"")[0]
    girl_patches = image_patch.find(""girl"")
    for girl_patch in girl_patches:
        if girl_patch.horizontal_center > yellow_helmet_patch.horizontal_center:
            return ""yes""
    return ""no""���取����������取����������������������取����������������������������������取���取���取�������取������������������������取����取�����������������������������������������取��������取����取�������取���������取�����������������������������������������������������������������������������取�����������取���取������取�����������取����取�������������取��������������������取����取���������������������������������������������������取�����������������������������������������������取������������取�������������������取"
6315316,Which kind of furniture is in front of the window?," # assumes one window patch
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is in front of the window?"")
    window_patch = window_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > window_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is in front of the window?"")
    return image_patch.simple_query(""Which kind of furniture is in front of the window?"") # if no furniture is in front of the window, query the image directly・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
17736488,What appliance is to the left of the faucet?," # assumes only one faucet
    image_patch = ImagePatch(image)
    faucet_patches = image_patch.find(""faucet"")
    # Question assumes only one faucet patch
    if len(faucet_patches) == 0:
        # If no faucet is found, query the image directly
        return image_patch.simple_query(""What appliance is to the left of the faucet?"")
    faucet_patch = faucet_patches[0]
    appliance_patches = image_patch.find(""appliance"")
    for appliance_patch in appliance_patches:
        if appliance_patch.horizontal_center < faucet_patch.horizontal_center:
            return appliance_patch.simple_query(""What appliance is to the left of the faucet?"")
    return ""no"" # if no appliance is to the left of the faucet, return no
�������������������������������取�������������取���������������������������������������������������取����取������������������������������������������������取��������������������取����������取���������������������������������������������������������������取���取����������取��������������������取����������������������������������取"
41050828,What is the color of the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What is the color of the jacket?"")
    return jacket_patches[0].simple_query(""What is the color of the jacket?"") # crop would include the jacket so keep it in the query�������������������������取���取����������取����取����������������������������������取�������取���������������������������取����取����������������������������������取����������������取��������取����������取����取�������������������������������������������������������������������������������������������取���取�����取����取�����取��������取����������������取�����取�����取����取������������������������������取"
610914,Is the green boat to the right or to the left of the wood house?," # assumes one boat and one house
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    house_patches = image_patch.find(""house"")
    if len(boat_patches) == 0 or len(house_patches) == 0:
        return image_patch.simple_query(""Is the green boat to the right or to the left of the wood house?"")
    boat_patch = boat_patches[0]
    house_patch = house_patches[0]
    if boat_patch.horizontal_center > house_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������������������取�����������������取�����������取�����取�������������������������取���取�����������������取������取����取��������������������������������取�������取����取����������������取���取����������取����������取������������������������������������������������������������������������������������������������取������取���取���取��������取"
13158346,Is the woman in the bottom part of the picture?," # image is a 2D array
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman in the bottom part of the picture?"")
    if woman_patches[0].vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no""������������取���取��取��������������������取�����������取�������������������取����������取������������������������取������取����取���取���������������������������������������取����������取���������������取��������������������������������������������������������������������������������������������取������������������取������取���取�������取"
16318707,Are there either any colorful bikes or skateboards?," # returns yes or no
    image_patch = ImagePatch(image)
    is_colorful_bike = image_patch.exists(""colorful bike"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_colorful_bike or is_skateboard) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns"
2805654,Is the bag to the right or to the left of the bench?," # assumes one bag and one bench
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    bench_patches = image_patch.find(""bench"")
    if len(bag_patches) == 0 or len(bench_patches) == 0:
        return image_patch.simple_query(""Is the bag to the right or to the left of the bench?"")
    bag_patch = bag_patches[0]
    bench_patch = bench_patches[0]
    if bag_patch.horizontal_center > bench_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取�������取���������������������������������������������取�����取��������������������������取����取�����取������������������������������������������取��取��取�����取��������取����取�������������取��������������������������������������������������������������������������������取����取�����������������������������取�����取������������������������������������������取"
15315607,What do you think is in the sky?," # no question
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is in the sky?"") # no question, so ask directly・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
2995829,What color is the truck near the gas station?," # assumes one gas station patch
    image_patch = ImagePatch(image)
    gas_station_patches = image_patch.find(""gas station"")
    if len(gas_station_patches) == 0:
        # If no gas station is found, query the image directly
        return image_patch.simple_query(""What color is the truck near the gas station?"")
    gas_station_patch = gas_station_patches[0]
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        return image_patch.simple_query(""What color is the truck near the gas station?"")
    truck_patch = truck_patches[0]
    if truck_patch.horizontal_center > gas_station_patch.horizontal_center:
        return truck_patch.simple_query(""What color is the truck near the gas station?"")
    return gas_station_patch.simple_query(""What color is the truck near the gas station?"") # crop would include the truck so keep it in the query����������������取�������取������������取���取������������取���取����取����������������������取�������������������������������取��������取�������������������������������������������������取�����取�������取���������取�����������������������������取���������������������������������������������取�����取���取���������������取����������������������取�����取����取����取������取���取������取"
12140940,"What are the headphones on, a sofa or a desk?"," # assumes only one headphone patch
    image_patch = ImagePatch(image)
    headphone_patches = image_patch.find(""headphones"")
    if len(headphone_patches) == 0:
        # If no headphones are found, query the image directly
        return image_patch.simple_query(""What are the headphones on, a sofa or a desk?"")
    headphone_patch = headphone_patches[0]
    sofa_patches = image_patch.find(""sofa"")
    desk_patches = image_patch.find(""desk"")
    if len(sofa_patches) == 0 and len(desk_patches) == 0:
        # If no sofa or desk is found, query the image directly
        return image_patch.simple_query(""What are the headphones on, a sofa or a desk?"")
    if len(sofa_patches) > 0:
        for sofa_patch in sofa_patches:
            if sofa_patch.horizontal_center > headphone_patch.horizontal_center:
                return ""sofa""
    if len(desk_patches) > 0:
        for desk_patch in desk_patches:
            if desk_patch.horizontal_center > headphone_patch.horizontal_center:
                return ""desk""
    return ""sofa"" # if no sofa or desk is found, return sofa as default, but this is a bit of a hack and should be handled better overposting the image directly if no sofa or desk is found
���取�������������取��������取����������������取����取���������������取�������������������������������取�������取���������������������取����取������������取�����取������取������������������������������������������������取�������取�����������取�����取��������取����������������取���������取�����取"
727533,Does the bun look brown and toasted?," # returns a boolean
    image_patch = ImagePatch(image)
    bun_patches = image_patch.find(""bun"")
    # Question assumes only one bun patch
    if len(bun_patches) == 0:
        # If no bun is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the bun look brown and toasted?""))
    return bool_to_yesno(bun_patches[0].verify_property(""bun"", ""brown"") and bun_patches[0].verify_property(""bun"", ""toasted"")) # crop would include the bun so keep it in the queryніцип������������取��������������������取������������取�������������������������������������������取������������������������������������取���������取�������������������������������������������������取�����������取�����������取���������取������取���������取���������������������������������������������������������������取������取�����������������取�������取����取�������取�������������������������取������取���������������������取����������������������取"
61044602,What is in the brown basket?," # assumes one basket
    image_patch = ImagePatch(image)
    basket_patches = image_patch.find(""brown basket"")
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch.simple_query(""What is in the brown basket?"")
    return basket_patches[0].simple_query(""What is in the brown basket?"") # crop would include the basket so keep it in the query�����������������������������������������������������取����取������������������������������取�����取���������������������取���������������取����������������������������取������取���取�����取����取�����取��������������������取�����������������������������������������������������������������������������取��取��取���������������������取���取����������取��������������������取��������取�����取"
16827204,Is the marker different in color than the paper?," # returns yes or no
    image_patch = ImagePatch(image)
    marker_patches = image_patch.find(""marker"")
    # Question assumes only one marker patch
    if len(marker_patches) == 0:
        # If no marker is found, query the image directly
        return image_patch.simple_query(""Is the marker different in color than the paper?"")
    marker_patch = marker_patches[0]
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        return ""no""
    paper_patch = paper_patches[0]
    return bool_to_yesno(marker_patch.cropped_image[0,0,0] != paper_patch.cropped_image[0,0,0]) # assuming RGB image, so check the first pixel of the first channel (R, G, or B)ніцип������������������取�������������取��取�����������取������������������������������������取�����������������������������������取��������������������������������������������������取�����������取������取������������������������������������������������������������������������������������������������取�������������������������������取����取���������取���������取���������取"
1284539,Is there a racket to the right of the man on the right side?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is there a racket to the right of the man on the right side?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""racket"")
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no""�����������取����������取����������������������������取��������������������取�������取���取���������������������取���取�������������������������������������������取�����取�����取�������������������������������������������������������������������������������������������������取���取�����取��������������������取���取������取���取����取���取����取��������������������������������取"
1257391,What place is this?," # returns a string describing the place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"") # assumes the image is of a placeERCHANTABILITY: This function is not yet implementedERCHANTABILITYERCHANTABILITYERCHANTABILITY��取������������取�����取�����������������������������������������������������������取�������������������������������������������������������������������������取��取��取��取�������������������取�������取����取���取��������取����取����������������������������������������������������������������������������������取�������取���取�����������������取��������取�����取������取������������������������������������������������������������������取�������������������������������������取����取�����取���取��取����取��������������������������������������取���取"
16223517,What do you think is the color of the large device?," # returns the color of the large device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the large device?"")
    device_patch = device_patches[0]
    return device_patch.simple_query(""What do you think is the color of the large device?"") # crop would include the device so keep it in the query�������������������������取����������������������������������������������������������������������取����������取�����取���取����������������������������������������������������取����取������取�������������取����取�����取�����取������������������������������������������������������������������������������������������取��������取�������取���取"
1024280,Does the shirt look long sleeved or sleeveless?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does the shirt look long sleeved or sleeveless?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""long sleeved"")) # crop would include the sleeves so keep it in the query��取�����������������������取���取��������取���������������������������������取�������取�����������������������取���取�������������������������取����������������取���取������������取�����取�����取���������取����������������������������������������������取����������������取������������取��������取������取�������取�������取������取����取�����������������������������������������取�������������取����������取���取��取��������取���取���������������取���������取���取���取�������取���������取�������取�����取�������取����取����取"
2769463,Which kind of animal is lying in the chair?," # assumes one chair patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""lying""):
            return animal_patch.simple_query(""Which kind of animal is lying in the chair?"")
    return image_patch.simple_query(""Which kind of animal is lying in the chair?"") # if no animal is lying, query the image directly��取�����取���取�������������������������取�������������������������������������取�����������������取����������取������������������������������取��������������������������������������������取�����������������������������取�����������������取����������取�������取����取���取������������������������������������������������取������取��������������������������������取����������������������取��������������取��������������������取�����取"
18503776,Is the white box to the right of the crate the chair is to the right of?," # assumes one crate and one chair
    image_patch = ImagePatch(image)
    white_box_patches = image_patch.find(""white box"")
    # Question assumes only one white box patch
    if len(white_box_patches) == 0:
        # If no white box is found, query the image directly
        return image_patch.simple_query(""Is the white box to the right of the crate the chair is to the right of?"")
    white_box_patch = white_box_patches[0]
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        return ""no""
    crate_patch = crate_patches[0]
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        return ""no""
    chair_patch = chair_patches[0]
    if white_box_patch.horizontal_center > crate_patch.horizontal_center and crate_patch.horizontal_center > chair_patch.horizontal_center:
        return ""yes""
    return ""no""������������取����������取�����������取��������������������������������取���取��������取����������������������������取��������������������������������������������������取���������取����取������取�������取��������������������������������������������������������������������������������取���取�����取������������������取�������取���取�����取���取���取���取�����取"
3434581,Are there both a coffee table and a lamp?," # returns yes or no
    image_patch = ImagePatch(image)
    is_coffee_table = image_patch.exists(""coffee table"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_coffee_table and is_lamp) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
19201196,Is that flower pot made of clay?," # assumes one flower pot
    image_patch = ImagePatch(image)
    flower_pot_patches = image_patch.find(""flower pot"")
    if len(flower_pot_patches) == 0:
        # If no flower pot is found, query the image directly
        return image_patch.simple_query(""Is that flower pot made of clay?"")
    return bool_to_yesno(flower_pot_patches[0].verify_property(""flower pot"", ""clay"")) # crop would include the clay so keep it in the query�����������������������������������������������������取���������������������取����������������取�������������������������取�����取�������������������������������������������取��������������������������取�����������取���������������������������������������������������������������������������������������取�����������取����������������取��������取���取������������取"
191006281,Does the sky look clear and gray?," # clear and gray are properties of the sky
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""clear"") and image_patch.verify_property(""sky"", ""gray"")) # clear and gray are properties of the skyніцип����������������取�����取�������������取�������������取�������������������������������������������������������������������������������取�������������������������������������������������������取�������取���取����������取������取�����������取��������������������������������������������������������������������取�������������������������������������取������������������取���������取�������取������������取�����取����取����取���������������������������������������取�����������������������������������������取����������取"
681336,Do you see hats or gloves that are white?," # returns yes or no
    image_patch = ImagePatch(image)
    is_hat = image_patch.exists(""hat"")
    is_glove = image_patch.exists(""glove"")
    if is_hat or is_glove:
        hat_patches = image_patch.find(""hat"")
        glove_patches = image_patch.find(""glove"")
        for hat_patch in hat_patches:
            if hat_patch.verify_property(""hat"", ""white""):
                return ""yes""
        for glove_patch in glove_patches:
            if glove_patch.verify_property(""glove"", ""white""):
                return ""yes""
    return ""no""����������������������������������取����������������取���������������������������取���取����取������������������������������取�������������������������������取����������取������������取��������取����取����取�����������������������������������������������������������������������������������取��������������������取���取��������������取����取�����取���������取"
1300368,What is on the cabinet that is to the right of the keyboard?," # assumes one cabinet and one keyboard
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one cabinet and one keyboard patch
    if len(cabinet_patches) == 0 or len(keyboard_patches) == 0:
        # If no cabinet or keyboard is found, query the image directly
        return image_patch.simple_query(""What is on the cabinet that is to the right of the keyboard?"")
    cabinet_patch = cabinet_patches[0]
    keyboard_patch = keyboard_patches[0]
    if cabinet_patch.horizontal_center > keyboard_patch.horizontal_center:
        return cabinet_patch.simple_query(""What is on the cabinet?"")
    return keyboard_patch.simple_query(""What is on the keyboard?"") # crop would include the keyboard so keep it in the query�������������取�������������取���取�������������������������取����������������������取��������������������������取�������取����取���取������������������������������������取������������取�����取�����������取��������取���������取�����������������������������������������������������������������取�����������������取���������������取����取����������������取����取"
172394,What is the animal to the left of the tap called?," # assumes one tap patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the animal to the left of the tap called?"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center < image_patch.find(""tap"")[0].horizontal_center:
            return animal_patch.simple_query(""What is the animal to the left of the tap called?"")
    return ""no animal to the left of the tap"" # if no animal is to the left of the tap, return this string
�����������取�������������������������������������������������������取��������������������������取���取��������������������������取������������������������取���取�����������取������取��������取���取����取������������������������������������������������������取����������������������������取����取�����������取���取�����取��������取������取����取������������������取��取"
738176,Is the chair on the right?," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the chair on the right?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""����������������������取������������������������������������������������取�������取�����������������������������取�����������������������������������������������取��取��������取�����取����取����������������������������������������������������������������������������取��������������������取���������������取��������取���������取�����取�������������取"
4194919,Is the child on the right of the picture?," # assumes the image is in portrait mode
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""Is the child on the right of the picture?"")
    if child_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""����取���取������取���������������������������取���取����������������������������������������������������取����������取���取����������������������������取����������取���������������取��取��������������取�������������������������������������������������������������������������取���取�������������取������取���取��������������取���取���取����������������������������������������������������������������������������������������������������取���取���������������取�������������取���������取"
3585327,Who is on the surfboard?," # assumes one surfboard patch
    image_patch = ImagePatch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch.simple_query(""Who is on the surfboard?"")
    surfboard_patch = surfboard_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.horizontal_center > surfboard_patch.horizontal_center:
            return person_patch.simple_query(""Who is on the surfboard?"")
    return ""no one"" # if no one is on the surfboard, return ""no one"" chtě 노출등록�����������取�������取���������������取����������取���取������������������������取���������������������������������������������������������������取�������������取��������������������������������������取������������������������������取��������������取���取�����������������������������������������������������������������������取���������������������������������������������取������������取��������取���取���取����取"
1711172,What size are the packages the candle is on top of?," # returns the size of the packages
    image_patch = ImagePatch(image)
    candle_patches = image_patch.find(""candle"")
    # Question assumes only one candle patch
    if len(candle_patches) == 0:
        # If no candle is found, query the image directly
        return image_patch.simple_query(""What size are the packages the candle is on top of?"")
    for candle_patch in candle_patches:
        package_patches = image_patch.find(""package"")
        # Question assumes only one package patch
        if len(package_patches) == 0:
            return image_patch.simple_query(""What size are the packages the candle is on top of?"")
        package_patch = package_patches[0]
        if package_patch.upper < candle_patch.lower:
            return ""small""
        elif package_patch.lower > candle_patch.upper:
            return ""large""
        else:
            return ""medium"" # if the package is the same size as the candle, return medium chtě����������取�����������������取�����������取����������������取�����������������������������������������������取���取�������取���������取�������������������������������取�����������取���������������取������取���取����取�����������取����������取����取����������取����������������������������������取��取�������取������������取�����������取���取�����������取���取�������取��������取���取���取���������取������取"
4353895,Who is on the snowboard on the right?," # assumes one snowboard patch
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""Who is on the snowboard on the right?"")
    snowboard_patch = snowboard_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.horizontal_center > snowboard_patch.horizontal_center:
            return person_patch.simple_query(""Who is on the snowboard on the right?"")
    return ""no one"" # if no person is on the snowboard, return ""no one"" chtě chtě������������������取��������������取�����������������������������������取����取��������������������取��������������������������������取����取������取����取���取��������������������������������������������������取������������������������取���取�����������取��������������������������������������������������������������������������������������������������������取����������������取�����������������取�����������取"
17929304,What is the vehicle that is on the road?," # assumes one vehicle and one road
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    road_patches = image_patch.find(""road"")
    if len(vehicle_patches) == 0 or len(road_patches) == 0:
        return image_patch.simple_query(""What is the vehicle that is on the road?"")
    vehicle_patch = vehicle_patches[0]
    road_patch = road_patches[0]
    if vehicle_patch.vertical_center > road_patch.vertical_center:
        return vehicle_patch.simple_query(""What is the vehicle that is on the road?"")
    else:
        return road_patch.simple_query(""What is the vehicle that is on the road?"") # crop would include the road so keep it in the query����������������取��������取������������取����取��������������取�����������������������取����������������������������������������������������������������������取���������取��������������取������取�����������������������������������������������������������������������������������������取���������取���取��������取������取���������������取����������取����������取������取��������取"
1363574,What color is the crust?," # assumes only one crust
    image_patch = ImagePatch(image)
    crust_patches = image_patch.find(""crust"")
    if len(crust_patches) == 0:
        # If no crust is found, query the image directly
        return image_patch.simple_query(""What color is the crust?"")
    return crust_patches[0].simple_query(""What color is the crust?"") # crop would include the crust so keep it in the query��������������������������������������������������������取�����������������������������取�������������������取�������������取��������������������������������������������取����取�����取����取��������取������������取����取���������������取������������������������������������������������������������������������������取��������������取������取�����取�����取���取����取������������取���取"
5672474,Is the plate to the left or to the right of the beer on the left?," # assumes one beer patch
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Is the plate to the left or to the right of the beer on the left?"")
    for plate_patch in plate_patches:
        beer_patches = image_patch.find(""beer"")
        for beer_patch in beer_patches:
            if beer_patch.horizontal_center < plate_patch.horizontal_center:
                return ""right""
    return ""left"" # if no beer is found, query the image directly
�����������取��������取����������������������������取����������������取��������取��������������������������取���取�������取���������������������������������������取�����������取���������取������取����取����取�������������������������������������������������������������������取����取����������取���取����取�����������������取����取���������取"
11341284,What is the pattern of the mattress on the street?," # assumes only one mattress patch
    image_patch = ImagePatch(image)
    mattress_patches = image_patch.find(""mattress"")
    if len(mattress_patches) == 0:
        # If no mattress is found, query the image directly
        return image_patch.simple_query(""What is the pattern of the mattress on the street?"")
    return mattress_patches[0].simple_query(""What is the pattern of the mattress on the street?"") # crop would include the mattress so keep it in the query��取�����������������������取���������������������������������������������取���������������������������取�����������������������������������������������取����取�����取����取��������������������������������������������������取������������取��������������取�������取���������������������������������������������������������������������������取�������������������������取�������取���取�������������������取����������取�������取������������取������取����取����取�����取����取������取����取"
14192693,Are there any boys behind the fence?," # returns a boolean
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Are there any boys behind the fence?""))
    for boy_patch in boy_patches:
        if boy_patch.simple_query(""Is the boy behind the fence?"") == ""yes"":
            return ""yes""
    return ""no""������取������取����取���������取�����������������������取������取�������������������取�����������������������������取���取���取������取�����取���取������������������������������������������取�����取������取����取�����������������取��������取������取����取����取�������������取����取��������������������������������������������������������������������������������取�������取����取���������������取���������取������取����取"
19203395,Is the white toilet paper to the right or to the left of the toilet?," # assumes one toilet and one toilet paper
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    toilet_paper_patches = image_patch.find(""toilet paper"")
    if len(toilet_patches) == 0 or len(toilet_paper_patches) == 0:
        # If no toilet or toilet paper is found, query the image directly
        return image_patch.simple_query(""Is the white toilet paper to the right or to the left of the toilet?"")
    toilet_patch = toilet_patches[0]
    toilet_paper_patch = toilet_paper_patches[0]
    if toilet_paper_patch.horizontal_center > toilet_patch.horizontal_center:
        return ""right""
    else:
        return ""left""���������������������取��������������������������取�������取���������������������������取������������取�����������������������������������������������������取���取�����������������取���������������取�������������������������������������������������������������������������������������������取����������������取����取���������取�����取���������取"
1194938,Are there any airplanes in front of the building?," # assumes one building patch
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    building_patches = image_patch.find(""building"")
    if len(airplane_patches) == 0 or len(building_patches) == 0:
        return ""no""
    for airplane_patch in airplane_patches:
        for building_patch in building_patches:
            if airplane_patch.horizontal_center > building_patch.horizontal_center:
                return ""yes""
    return ""no""������取��������������������������������������������������������������������取��������������������取����������������取��������������������������������������������取������������������������������取������������������������取�������������������������������������������取�����取����������������������������取���取���取�������取����������取"
5350205,How clean is the road that the car is on the side of?," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""How clean is the road that the car is on the side of?"")
    car_patch = car_patches[0]
    road_patches = image_patch.find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        return ""no""
    road_patch = road_patches[0]
    return road_patch.simple_query(""How clean is the road that the car is on the side of?"") # crop would include the road so keep it in the query����取������取�����取�������������������取����������������������������������������取���������������������������������������������������������������������������������取����取��������������������������������������������������������������������������������取���������������取"
4256016,"In which part of the picture is the black van, the bottom or the top?"," # assumes one van patch
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the black van, the bottom or the top?"")
    van_patch = van_patches[0]
    if van_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""�����������取��������������������������������������取����������������������������取����������取���������������������取�������������������������������������������������������取���取�������������取������������������������取�������������������������������������������������������������取�������取�����取�������取�������������取����取�����������������������取�������取"
9179602,What is the person to the right of the fence doing?," # assumes one person and one fence
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    fence_patches = image_patch.find(""fence"")
    if len(person_patches) == 0 or len(fence_patches) == 0:
        # If no person or fence is found, query the image directly
        return image_patch.simple_query(""What is the person to the right of the fence doing?"")
    person_patch = person_patches[0]
    fence_patch = fence_patches[0]
    if person_patch.horizontal_center > fence_patch.horizontal_center:
        return person_patch.simple_query(""What is the person doing?"")
    return ""nothing"" # or return image_patch.simple_query(""What is the person doing?"") if the person is not doing anything specific to the fenceERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting���取�������取�������������������������������������������取����������������������取��取����������取����������������������������������������取"
16471124,Does the horse have a different color than the boot?," # returns yes or no
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""Does the horse have a different color than the boot?"")
    horse_color = horse_patches[0].simple_query(""What color is the horse?"")
    boot_patches = image_patch.find(""boot"")
    # Question assumes only one boot patch
    if len(boot_patches) == 0:
        return ""no""
    boot_color = boot_patches[0].simple_query(""What color is the boot?"")
    return bool_to_yesno(horse_color!= boot_color) # returns yes or noніцип��������取�������������取�������������������������取����取�������������取������取����������������������������������������������������������取���取����������������������������������������������������取���������取�������������取�����������取��������������������������������������������������������������������������取�����������������������取����������取������取�������取����取���取�����取����取�����取������取"
958247,Is the mouse to the right of a chair?," # assumes one mouse and one chair
    image_patch = ImagePatch(image)
    mouse_patches = image_patch.find(""mouse"")
    chair_patches = image_patch.find(""chair"")
    if len(mouse_patches) == 0 or len(chair_patches) == 0:
        return ""no""
    mouse_patch = mouse_patches[0]
    chair_patch = chair_patches[0]
    return bool_to_yesno(mouse_patch.horizontal_center > chair_patch.horizontal_center) # assumes one mouse and one chairturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
11179512,The basket made of plastic is what color?," # returns the color of the basket
    image_patch = ImagePatch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch.simple_query(""The basket made of plastic is what color?"")
    return basket_patches[0].simple_query(""What color is the basket?"") # crop would include the basket so keep it in the query�����������������������取����������������取���������������������取������������������������������������������������������������������������������������������������取���取���取�����������取���������取�����取�����������������������������������������������������������������取������������取���������取���取�����取���������������������取����取����������取�����取����取�������������������取"
8816272,Do you see any elephant to the left of the bird?," # assumes one elephant and one bird
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    bird_patches = image_patch.find(""bird"")
    if len(elephant_patches) == 0 or len(bird_patches) == 0:
        return ""no""
    for elephant_patch in elephant_patches:
        for bird_patch in bird_patches:
            if elephant_patch.horizontal_center < bird_patch.horizontal_center:
                return ""yes""
    return ""no""��������������������取��������������������������������取�������������������������������������������������������取������������������������������������������取����取�����取��������������取������������取��������������������������������������取���������������������������取��������取��������������取����������������取����������������取������取���取����������������取"
11168592,What is the animal in front of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in front of the lamp?"") # crop would include the lamp so keep it in the query���取��取�������������取����������������������������������������������������取����������������������������������������������������������������������������������������������������������������������������取����取�����������取����������������取���取���取���取���取�������������取��������������������������������������������������������������������取���������������取�������取���取�����取��������取�����������取���������取�����取���������������������取"
3568717,Who is wearing the jacket?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the jacket?"")
    return person_patches[0].simple_query(""Who is wearing the jacket?"") # crop would include the jacket so keep it in the query������������������������������������取����������������������取������������������取�������取���取�����������������������������取������取�����������取������������������������������������取�������������取�������取�����������取���取���������������������������������������������������������������������������取���取��������取�����������������������取����取������取�����取"
7398502,What is the food to the left of the girl in the bottom of the photo?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What is the food to the left of the girl in the bottom of the photo?"")
    girl_patch = girl_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center < girl_patch.horizontal_center and food_patch.vertical_center > girl_patch.vertical_center:
            return food_patch.simple_query(""What is the food to the left of the girl in the bottom of the photo?"")
    return ""no food to the left of the girl in the bottom of the photo"" # if no food is found, return this string
�������取����������������������������取��取�����������������取����������取��������取�������������������������取�����取����������������������������������������������取���取������取���������������������取�������取��������取������������������������������������������������������������取��������取������������������取���取���������������������取����������取���取����取������������������取"
5145864,What is the device that the camera is in front of?," # camera is in front of device
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is the device that the camera is in front of?"") # crop would include the camera so keep it in the query������������������������������������取���取����������������取������取������������������������������������������������������取����取����������������������������������取���������������������取�����取���取��������������取������������������������������������������������������������������取������������取�����������取�������������取���取���������������取����取���取������取����取"
788143,Is the man on the surfboard?," # assumes one man and one surfboard
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    surfboard_patches = image_patch.find(""surfboard"")
    if len(man_patches) == 0 or len(surfboard_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    surfboard_patch = surfboard_patches[0]
    if man_patch.horizontal_center > surfboard_patch.horizontal_center:
        return ""yes""
    return ""no""����取��取�������取������取������������������������������������������������取���������������������������������������������������������取�������������取����取���取�����取��������取��������������������������������������������������������������������������取������������������取�����取��������取�������������������������������������������������������������������������������������������取���������取����取�������取�������������������取����������������取�������取���取����取���取"
15854501,What device has the same color as the device in the box?," # box is assumed to be in the image
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What device has the same color as the device in the box?"")
    device_patch = device_patches[0]
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        return ""no""
    box_patch = box_patches[0]
    return device_patch.best_text_match([box_patch.simple_query(""What color is the box?"")]) # crop would include the box so keep it in the query��取���������������������������������取����取���������������取������������������取����取��������取�����������������取���取���取���取����������������������取������������取�����取������取���������取�������������������������������������������������������取�������������取���取������������取�������������取��������取����������������������������������������取���������������������������取��取������取���取����������取���取����取���������������取"
3228067,What is the child wearing?," # returns the answer to ""What is the child wearing?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child wearing?"") # crop would include the child so keep it in the query������������������������������������取���取���取��������������������取�����������������������取����������������������������������取����������������������������������������������������������取�����取�����取����取�����取��取��������������取����取������取���������������������������������������������������������������������取���取�����取���取����������������������������������������取�������������������������������������������取"
6817336,Is the blue sky behind a cathedral?," # assumes one cathedral patch
    image_patch = ImagePatch(image)
    blue_patches = image_patch.find(""blue"")
    # Question assumes only one blue patch
    if len(blue_patches) == 0:
        # If no blue is found, query the image directly
        return image_patch.simple_query(""Is the blue sky behind a cathedral?"")
    for blue_patch in blue_patches:
        cathedral_patches = image_patch.find(""cathedral"")
        for cathedral_patch in cathedral_patches:
            if cathedral_patch.vertical_center > blue_patch.vertical_center:
                return ""yes""
    return ""no""�������������������取������������������������������取������������������取��������取�����取������������������������取��������������������������������������取�����������取��������取�������取���������取����������������������取��������������������������������������������������������������������������取����取����������取����取�����取���������������������������������取"
6347271,"In which part of the image is the yellow pepper, the bottom or the top?"," # image is a 2D array
    image_patch = ImagePatch(image)
    pepper_patches = image_patch.find(""yellow pepper"")
    # Question assumes only one pepper patch
    if len(pepper_patches) == 0:
        # If no pepper is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the yellow pepper, the bottom or the top?"")
    if pepper_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"" ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 2D array ‎# image is a 二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二二・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
296230,What animal is the woman feeding?," # assumes one woman and one animal
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    animal_patches = image_patch.find(""animal"")
    if len(woman_patches) == 0 or len(animal_patches) == 0:
        # If no woman or animal is found, query the image directly
        return image_patch.simple_query(""What animal is the woman feeding?"")
    woman_patch = woman_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > woman_patch.horizontal_center:
        return animal_patch.simple_query(""What animal is the woman feeding?"")
    else:
        return woman_patch.simple_query(""What animal is the woman feeding?"") # crop would include the woman so keep it in the query��������取��取�����������������������������取������������取�������������������������取����������������������������������������������������������������������������������������������������取������取������������������取���取���取����������������������������������������������������������������������������取����取�������取���������取�������������取����取�����取����取����取��������������取"
3427727,On which side is the bucket?," # assumes one bucket
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""On which side is the bucket?"")
    bucket_patch = bucket_patches[0]
    if bucket_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取���取������取���取���取�����������取�����������������取����������������������取������������������������取��������取�����������������������������������������������取�������取�����取����取���取�������������取����������取������取���������������������������������������������������������������������������������������������������������������取������������������取"
31050314,Is the small chimney in the bottom part of the picture?," # assumes one chimney patch
    image_patch = ImagePatch(image)
    chimney_patches = image_patch.find(""chimney"")
    if len(chimney_patches) == 0:
        # If no chimney is found, query the image directly
        return image_patch.simple_query(""Is the small chimney in the bottom part of the picture?"")
    chimney_patch = chimney_patches[0]
    if chimney_patch.vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no""����取��取�������取������������������取���������取���取�������������������取�������取����������������������������取����������������������������������������取������取����取�����������������������������������������������������������取�������取�����������������������取�������取���取���取�������������取�����取�����������取����������������������������������������������������������������������������取����取���取���取��������������������������������������取���取���取���取����������取���������取���取"
3503396,Are the pants purple?," # returns a boolean
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Are the pants purple?""))
    return bool_to_yesno(pants_patches[0].verify_property(""pants"", ""purple"")) # crop would include the pants so keep it in the query���������������取�����������������������������������������取���取�����������������������取�����������取��取������������������取���取���取����������������������������������������������������取������取���取��������取����取���取�������取����取��取����������������������������������������������������������������������������������取�������������取���������������取������取�����取�����取"
11742862,Which kind of furniture is to the right of the paper towels?," # assumes only one paper towel patch
    image_patch = ImagePatch(image)
    paper_towel_patches = image_patch.find(""paper towel"")
    if len(paper_towel_patches) == 0:
        # If no paper towel is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is to the right of the paper towels?"")
    paper_towel_patch = paper_towel_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > paper_towel_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is to the right of the paper towels?"")
    return ""no"" # if no furniture is to the right of the paper towel, return no
���������������������������������取������������取��������������������������取�����������������������取�����������取�������取������������������������取������������������������取�����取�����������取�����取�����������������������������������������������������������取����取��������取���取����取�����取���取���取����取����取����取���������取"
5891809,What kind of furniture is gray?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is gray?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.verify_property(""furniture"", ""gray""):
            return furniture_patch.simple_query(""What kind of furniture is gray?"") # crop would include the gray so keep it in the query
    # If no furniture is gray, pick the first furniture
    return furniture_patches[0].simple_query(""What kind of furniture is gray?"") # crop would include the gray so keep it in the query���取��������������������取����取��������������������������取��������������������������取����取��������������取����������取���取��������取�����������������������������取��������取����取������取��������������取����取���������������������������������������������������������������������取����������������取���������������������取��������取"
5370528,Is the hair white and long?," # returns yes or no
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Is the hair white and long?"")
    hair_patch = hair_patches[0]
    is_white = hair_patch.verify_property(""hair"", ""white"")
    is_long = hair_patch.verify_property(""hair"", ""long"")
    return bool_to_yesno(is_white and is_long) # returns yes or noніцип��������������������������������������������取�������������������������������������������取��������������������������������������取���取������������������������������������������������������������������取���取����取�����������������������������������������������������������������������������取�������取����取���������取���取������取�����取���������������������取���取��������取����������取����取�������������取"
781153,Do you see trains near the lamp post that looks white?," # assumes one lamp post
    image_patch = ImagePatch(image)
    lamp_post_patches = image_patch.find(""lamp post"")
    # Question assumes only one lamp post patch
    if len(lamp_post_patches) == 0:
        # If no lamp post is found, query the image directly
        return image_patch.simple_query(""Do you see trains near the lamp post that looks white?"")
    lamp_post_patch = lamp_post_patches[0]
    is_white = lamp_post_patch.simple_query(""Is the lamp post white?"")
    if is_white == ""yes"":
        train_patches = image_patch.find(""train"")
        # Question assumes only one train patch
        if len(train_patches) == 0:
            # If no train is found, query the image directly
            return image_patch.simple_query(""Do you see trains near the lamp post that looks white?"")
        for train_patch in train_patches:
            if train_patch.horizontal_center > lamp_post_patch.horizontal_center:
                return ""yes""
    return ""no""������������������取�����������������������������������������������取��������������������������������取������������������������������������取�������������������������������������取���取���������������取���取��������������������������������������������取���������取�������取������������取�������取���取���取����取���取������������取�����������取"
5543456,Is the container to the left of the person that wears bracelets?," # assumes one person and one container
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    container_patches = image_patch.find(""container"")
    if len(person_patches) == 0 or len(container_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    container_patch = container_patches[0]
    return bool_to_yesno(container_patch.horizontal_center < person_patch.horizontal_center) # left is less than right, so less than means left ofturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
163134,What do you think is on the roof?," # assumes only one roof patch
    image_patch = ImagePatch(image)
    roof_patches = image_patch.find(""roof"")
    if len(roof_patches) == 0:
        # If no roof is found, query the image directly
        return image_patch.simple_query(""What do you think is on the roof?"")
    return roof_patches[0].simple_query(""What do you think is on the roof?"") # crop would include the roof so keep it in the query�������������������������������������取��������������������������������������取���������������������������������取����������������������������������������������������������������取���取��������取�������取���������取����取���������取�����取�����������������������������������������������������������������������������取���取�����取���取���取�������取����������取���取���取����取���取"
5603075,Is the shoe white or brown?," # returns ""white"" or ""brown""
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""Is the shoe white or brown?"")
    return shoe_patches[0].best_text_match([""white"", ""brown""]) # crop would include the shoe so keep it in the query�����取�������������取�������取������������������取��������������取���������������������������取����取�������������������������������������������������������������������������取�����取������取�������������取����������������������������������������������������������������������������������������取������取���取��������取������������取���������取������取"
5511395,What is wrapped in paper?," # paper is a material
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wrapped in paper?"") # paper is a material, so ask directlyніцип�����取���������������������������������������取�������������������取���取����������������������取��������取��取������������������������������������������������������������������������������������������������������取�����取���������������������������������������������������������������������������������������������取��������������������������������取����������������������������������������取"
5611256,Are there any couches in the picture?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""couch"")) # returns True if there is a couch, False otherwiseніцип����取����������������������������取������������������������������������������������������取����������������������������������取��������������������������������������������������������取���取���取������取����取���������取����取����取����取���������取�����������������������������������������������������������������������������������取��������取�������������������取���取���取�����取���取����取�����������取�����取��������取����取����取"
1162826,The man is in what?," # contains a relation (in, on, under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is in what?"") # crop would include the man so keep it in the query��取���������������������������������取����������������取�����取���������������������������������������取������取����������������������������取����取�������������取����������取�������取���取���取����������������取�����������������������������������取���取�������������������取����取����取�����取����取�����������取������取������取�����������������������������������������������������������������������������������������取�������取����������������������取�����取��������取��������取������取�����取���������取��������������������������������取"
81020685,Which color is the small house?," # returns the color of the small house
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""Which color is the small house?"")
    house_patch = house_patches[0]
    return house_patch.simple_query(""What color is the house?"") # crop would include the house so keep it in the query������������������������取��������������取��������������������取����������������������������������������������取������������取���������������������������������������取�����������������������取���取����取����取������������������������������������������������������������������������������取����������������取����������取������取�����取������取�����������取"
19640724,Who is in the bathroom?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is in the bathroom?"")
    return person_patches[0].simple_query(""Who is in the bathroom?"") # crop would include the person so keep it in the query��������������取�����������������������������取�����������取����取���取��������������������取���取���������������������������取��������取��������������������������������取�������取���取�������取����������取�����取���取�����取����取��������取���������������������������������������������������������������������������������������取�������������������取���取������取��������取�����取����������取�����取���取"
289960,Do you see a racket to the right of the boy that is looking at the tie?," # assumes one boy and one tie
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one boy and one tie patch
    if len(boy_patches) == 0 or len(tie_patches) == 0:
        # If no boy or tie is found, query the image directly
        return image_patch.simple_query(""Do you see a racket to the right of the boy that is looking at the tie?"")
    boy_patch = boy_patches[0]
    tie_patch = tie_patches[0]
    racket_patches = image_patch.find(""racket"")
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > boy_patch.horizontal_center and racket_patch.horizontal_center < tie_patch.horizontal_center:
            return ""yes""
    return ""no""����������������取�������������������������������������������������取���������������������������������取������������������������������������������������取���取�����������取���取�����������取�����������������取�������������������������������������������������������取�������取����������������取����取������取�������取���取�����取�������取��������������������������������取"
9957748,Does the hair appear to be long and brown?," # returns a boolean
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the hair appear to be long and brown?""))
    return hair_patches[0].verify_property(""hair"", ""long and brown"") # crop would include the hair so keep it in the queryніцип����������������取�������������������������������取��������������取����取������������������������取������������������������������取������������������������������������������������������������取���取���取���取��������������������取�������取���取������取������取����������������������������������������������������������������������取����取������取�������������取���������取����������取����取��������取��������������������取�����������������取"
21031610,What is the shoe that looks black and white resting on?," # assumes one shoe patch
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""What is the shoe that looks black and white resting on?"")
    shoe_patch = shoe_patches[0]
    return shoe_patch.simple_query(""What is the shoe that looks black and white resting on?"") # crop would include the shoe so keep it in the query�����������������������取�������取�������取������取������������������取��������������������取����取�������取��������������������������取���������������取�����������������������������������取����������取�����取���������取������取���取�����取������������取�����取����取���取���������������������������������������������������������������������������取����������取�������������������取�����取"
12801921,What is the glass on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the glass on?"") # crop would include the object so keep it in the query���������������取�������������取������������取�������������������取��������������������������������������������������������取����取�����������������������������������������������������������������取������取���取�������取����取��������������������������������������������������������������������������������取����������������取������取�������������������������取����取�����������������������������取������������取�����������取"
16243948,Is the white pillow under the black animal?," # assumes one pillow and one animal
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    animal_patches = image_patch.find(""animal"")
    if len(pillow_patches) == 0 or len(animal_patches) == 0:
        return ""no""
    pillow_patch = pillow_patches[0]
    animal_patch = animal_patches[0]
    if pillow_patch.vertical_center > animal_patch.vertical_center:
        return ""yes""
    return ""no""��������取��������������取�����取������������������������������������������取��������取������取�����取��������������������取���取������������������������������������������������������������取�����取���取��������取������������取�����取����取����取������取����取��������������������������������������������������������������������取��������������������������取���取�����取����取��������取��������������������������������������������������取"
457770,What kind of clothing is striped?," # returns the answer to ""What kind of clothing is striped?""
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is striped?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""striped""):
            return clothing_patch.simple_query(""What kind of clothing is striped?"") # crop would include the striped part so keep it in the query
    # If no clothing is striped, pick the first clothing
    return clothing_patches[0].simple_query(""What kind of clothing is striped?"") # crop would include the striped part so keep it in the query���取����������������������取������������取���取����������������������������������取����取���������������������������取�����取���������取��������������������������������取���取��������������取��������取���取������取����取���取���取������������������������������������������������������������������取�������������取"
12603153,Are the child's eyes blue and open?," # returns yes or no
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""Are the child's eyes blue and open?"")
    child_patch = child_patches[0]
    is_blue = child_patch.verify_property(""eyes"", ""blue"")
    is_open = child_patch.verify_property(""eyes"", ""open"")
    return bool_to_yesno(is_blue and is_open) # returns yes or noніцип��������������������取������������������������������������������������������������������取�������������������������取��������取���取�����取����取���������������������������������������������������������取�����������������������取������取���������������������������������������������������������������������取������取���取���������取�����������取������取�������������取�����������取"
9480973,What is located on top of the tub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the tub?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�������������������������������������������������������������������������������取���������������������������������������������������������������������������������取���取�����取�����取���取���取���取�������取�������取�����取����������������������������������������������������������������������������������������������������������������������取���取���������������取������������������取�����������������������������������������������������取������������取��取���取�����取"
8399764,Is the fork to the right or to the left of the white plate?," # assumes one fork and one white plate
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    white_plate_patches = image_patch.find(""white plate"")
    if len(fork_patches) == 0 or len(white_plate_patches) == 0:
        return image_patch.simple_query(""Is the fork to the right or to the left of the white plate?"")
    fork_patch = fork_patches[0]
    white_plate_patch = white_plate_patches[0]
    if fork_patch.horizontal_center > white_plate_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取����������取������������������������������������������������������取����取�����������������取�������������������������������������������������������取����取�����取������取���取����������������取��取����������取�����������������������������������������������������取��������������取���取���取���������������������取������������������������������取������取"
13420253,On which side of the photo is the chair?," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�������������取����������������������������������������������������������������������������������������取�����������������������������������������取����取������取���取��������������������取���取����������������������������������������������������������������取�������������取����取��������������������������取�������取��������������������������取�������������������������������������������������������������������������������������取"
4747006,What is the label on?," # assumes only one label
    image_patch = ImagePatch(image)
    label_patches = image_patch.find(""label"")
    if len(label_patches) == 0:
        # If no label is found, query the image directly
        return image_patch.simple_query(""What is the label on?"")
    return label_patches[0].simple_query(""What is the label on?"") # crop would include the label so keep it in the query�������������������������取�������������������������������������������������取�������������������������������取�����������������������������������������������������������取��������������取����������������������������������������������������������������������取���������������取����取�����������������������取������取"
3322787,What bird is to the left of the person that is wearing a shirt?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What bird is to the left of the person that is wearing a shirt?"")
    person_patch = person_patches[0]
    bird_patches = image_patch.find(""bird"")
    for bird_patch in bird_patches:
        if bird_patch.horizontal_center < person_patch.horizontal_center:
            return bird_patch.simple_query(""What bird is to the left of the person that is wearing a shirt?"")
    return ""no bird to the left of the person"" # if no bird is to the left of the person, return this string
�������������������取���取�������������取���������������������������������取������取������������������������取��������������������������������������取���������������������取�������取�������取��������������������������������������������������������������������������取���取��取��������取���取����������取����取�������������取����取�����取"
6399594,On which side is the man?," # left, right, top, bottom
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif man_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    elif man_patch.vertical_center < image_patch.vertical_center:
        return ""top""
    else:
        return ""bottom""��������取���������������取�������������������������取���取��������������������������������������������取���取�������取���取�����取��������������������������������������取������������������取���取���取���取������������取�������������������������������������������������������������������������������取�������������������������������取����������������取�������取��取����取���取���������取��取����取������������取"
6930120,Is the glass bowl on the right or on the left?," # assumes one glass bowl patch
    image_patch = ImagePatch(image)
    glass_bowl_patches = image_patch.find(""glass bowl"")
    if len(glass_bowl_patches) == 0:
        # If no glass bowl is found, query the image directly
        return image_patch.simple_query(""Is the glass bowl on the right or on the left?"")
    glass_bowl_patch = glass_bowl_patches[0]
    if glass_bowl_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������������������取���取���取����������������������取�����取���取���������������������������取������������������取������取���取����取�����取�������������������������取����������取�������������������������������������������������������������������������������������������������������取�����取�����取������������������������������取������取"
12619961,What vehicles are to the left of the taxi?," # returns a list of strings
    image_patch = ImagePatch(image)
    taxi_patches = image_patch.find(""taxi"")
    # Question assumes only one taxi patch
    if len(taxi_patches) == 0:
        # If no taxi is found, query the image directly
        return image_patch.simple_query(""What vehicles are to the left of the taxi?"")
    for taxi_patch in taxi_patches:
        vehicle_patches = image_patch.find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch.horizontal_center < taxi_patch.horizontal_center:
                return vehicle_patch.simple_query(""What vehicle is to the left of the taxi?"") # crop would include the taxi so keep it in the query
    # If no vehicle is to the left of the taxi, query the image directly
    return image_patch.simple_query(""What vehicles are to the left of the taxi?"") # crop would include the taxi so keep it in the query���取��������取������取��������������������������������������������������������������������������������取���取��������取���������������������������������������������������������������������������������������������������������������������������取����取���������取�����������������取"
13362315,Is the basket on the shelf black and empty?," # returns yes or no
    image_patch = ImagePatch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch.simple_query(""Is the basket on the shelf black and empty?"")
    basket_patch = basket_patches[0]
    is_on_shelf = basket_patch.simple_query(""Is the basket on the shelf?"") == ""yes""
    is_black = basket_patch.simple_query(""Is the basket black?"") == ""yes""
    is_empty = basket_patch.simple_query(""Is the basket empty?"") == ""yes""
    return bool_to_yesno(is_on_shelf and is_black and is_empty) # returns yes or noніцип���取�����������取������������������������取��������取�����������������������������������������������������������������������取������������取������������������������������������������������������������������取�����������������取�������取�����取���������������������������������������������������取���������取�����取�����取���取������取����取���取����������取���������������取���取"
3830854,What is the animal that is standing next to the donkey that is standing in the hay?," # assumes only one donkey and one hay patch
    image_patch = ImagePatch(image)
    donkey_patches = image_patch.find(""donkey"")
    if len(donkey_patches) == 0:
        # If no donkey is found, query the image directly
        return image_patch.simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"")
    donkey_patch = donkey_patches[0]
    hay_patches = image_patch.find(""hay"")
    if len(hay_patches) == 0:
        return image_patch.simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"")
    hay_patch = hay_patches[0]
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center > donkey_patch.horizontal_center and animal_patch.horizontal_center < hay_patch.horizontal_center:
            return animal_patch.simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"")
    return image_patch.simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"") # if no animal is found, query the image directlyніцип����������������������������取�����������������取������������������取����������������������������������������������取�������������������������������������������������������取�����������取���取���������取���������取���取"
18382324,Is this a bed or a table?," # returns yes or no
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""bed"", ""table""]) # returns the best match to the imageasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasicsasics��������������������取���������������取�������������取����取����������������������������������������取�������������取���取�����������������������������������������取������取�������取������������取����取���取���取���取�����������������������������������������������������������������取��������取����取��������取���������取������取����取������������取����取"
18104571,"Which animal is that, a bird or a cat?"," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Which animal is that, a bird or a cat?"")
    animal_patch = animal_patches[0]
    return animal_patch.best_text_match([""bird"", ""cat""]) # crop would include the animal so keep it in the query����������������������������取�����������取�����������������������������������������取����取����������取������������������取���取������取���������������������������������������������������������取���������取����取���取���取���取�����������取���取���取����取�������取�����������������������������������������������������������������������������������取������取���取��������取���取���取�������������取�����������取"
2913379,Do you see any fence or pot?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_fence or is_pot) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
9294271,What is in front of the fence the zebra is kept in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the fence the zebra is kept in?"") # crop would include the fence so keep it in the query������������������取���������取����������������取��������������������取����������������取��������������������������������取�����������������������������������������������������取�������取�����������取��������取������取�����������取���取�������������������������������������������������������������������������������������������������������取����������取������取������取����取"
10741434,What is the vegetable that is on top of the plate called?," # assumes one plate patch
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""What is the vegetable that is on top of the plate called?"")
    plate_patch = plate_patches[0]
    vegetable_patches = image_patch.find(""vegetable"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.upper < plate_patch.upper:
            return vegetable_patch.simple_query(""What is the vegetable that is on top of the plate called?"")
    return image_patch.simple_query(""What is the vegetable that is on top of the plate called?"") # if no vegetable is on top of the plate, query the image directly・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
765962,Where is the car?," # returns the position of the car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Where is the car?"")
    return car_patches[0].simple_query(""Where is the car?"") # crop would include the car so keep it in the query���������������������������取��������������取������������������������������������������取�����������������������������取�������取���������������������������������������������取����������取���取�������������取�������������������������������������������������������������������������������取����取�����������取������������取������取��������取�����取�������������取"
12399262,Is there either a yellow truck or airplane?," # returns yes or no
    image_patch = ImagePatch(image)
    is_yellow_truck = image_patch.exists(""yellow truck"")
    is_airplane = image_patch.exists(""airplane"")
    return bool_to_yesno(is_yellow_truck or is_airplane)���取��������������������������������������������������取���取������������������取�������������������������������取�����取�����������������������������������������������������������������取��取�������取�����������������������������������������������������������取��������������������取��������������取����取���取������������������������������������������������������������取�������������������取�����������������������������������取�������取������������������������取����取�����取�������取��������������������������取����取"
13964213,Is the man on the left of the photo?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the left of the photo?"")
    if man_patches[0].left < image_patch.left:
        return ""yes""
    return ""no""�������������������������������������������������取������������������取���取�����取������取�����������������������������取����������������������������������������������������取������取���������取����������������������������������������������������������������������������������取�����取�������取�������取�����������取���������������取�����取"
16171369,What is covered in the snow?," # assumes one snow patch
    image_patch = ImagePatch(image)
    snow_patches = image_patch.find(""snow"")
    if len(snow_patches) == 0:
        # If no snow is found, query the image directly
        return image_patch.simple_query(""What is covered in the snow?"")
    return snow_patches[0].simple_query(""What is covered in the snow?"") # crop would include the snow so keep it in the query����取��������������取�������取��������������������������取�����������������取�����������取����取������������������取����������取�������������������������������������取����取����������取�����������取���取��取��取�������������������������������������������������������������������������������������取�����取��������取����������������取�������������取�����������取"
181055844,On which side is the plastic bottle?," # left or right
    image_patch = ImagePatch(image)
    plastic_bottle_patches = image_patch.find(""plastic bottle"")
    # Question assumes only one plastic bottle patch
    if len(plastic_bottle_patches) == 0:
        # If no plastic bottle is found, query the image directly
        return image_patch.simple_query(""On which side is the plastic bottle?"")
    plastic_bottle_patch = plastic_bottle_patches[0]
    if plastic_bottle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������取�������������������������取������������������������������������������������������������取��������取���取������������������������������������取�������������取���取��������取���取�������取������取�����������取�������������������取��取����������������������������������������������������������������������������������取���取�����取������������取���取�����取���������������取���������取"
5858491,Do you see any ropes on the fence that is on the left of the picture?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Do you see any ropes on the fence that is on the left of the picture?"")
    fence_patch = fence_patches[0]
    rope_patches = image_patch.find(""rope"")
    for rope_patch in rope_patches:
        if rope_patch.horizontal_center < fence_patch.horizontal_center:
            return ""yes""
    return ""no""������������取���������������������取�������������取�����取����取�����������������������������������������取�����取�������������������������������������������������取�����取��������取������取�����取����������取�����取���取�����取���������������������������������������������������������������������������������取������������取���取���取����取������取�����取����取������������取����取���������取��������������取��取"
17834539,Are there any lamps in the scene?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamp"")) # returns a boolean
���������������������������������取������������������取����������������������取���取������������������������������������取��������������������������������������取�������取������取�������������������������������������������������������������������������������������������������取��������������取�����取���取�����������������������取����������������������������������������������������������������������������������������������������������������������������������取�����������������取����取��取�������������������取�����取�������取����取���取"
15658176,Who is wearing a helmet?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a helmet?"")
    for person_patch in person_patches:
        if person_patch.verify_property(""person"", ""wearing helmet""):
            return person_patch.simple_query(""Who is wearing a helmet?"") # crop would include the helmet so keep it in the query
    return ""no one"" # if no one is wearing a helmet, return ""no one"" chtě chtě�������������������������������������������取���������������������������������������������取�����取������������取��������������������������取���取����������取������������������������������������������������������������取���������取������取������取����������������������������������������������������������������取������������������������������取��������������������������������取���������������取�������取����取��������取����取"
14372400,Does that coat have red color?," # returns yes or no
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Does that coat have red color?"")
    return bool_to_yesno(coat_patches[0].verify_property(""coat"", ""red"")) # crop would include the color so keep it in the query�����������������取����������������������取����������������取����������������������������������������������������������取���取�����取������������������������������������取���������������取������取����取����������������������������������������������������������������������������������取�����������������取�����������取���������������取�������取���������������取���取���������������������������������������������������������������������������������������取"
411886,Are there any curtains or blankets in this scene?," # returns yes or no
    image_patch = ImagePatch(image)
    is_curtain = image_patch.exists(""curtain"")
    is_blanket = image_patch.exists(""blanket"")
    return bool_to_yesno(is_curtain or is_blanket)���取��������������������取�������������������������取���取��������������������������取������取�����������������取���������取�����取����������������������������������������������取����取���������取�������������������������������������������������������������������������取������取��取����取�����取������������������取����取���取�����取���取����取���取����取�����取�����取�����������������取����取������������������������������������������������������������������������������������������������������取��������������取������������取���取�����������������������取"
16921850,What is the item of furniture to the left of the remote that the man is holding called?," # assumes one man and one remote
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture to the left of the remote that the man is holding called?"")
    man_patch = man_patches[0]
    remote_patches = image_patch.find(""remote"")
    # Question assumes only one remote patch
    if len(remote_patches) == 0:
        return ""no""
    remote_patch = remote_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center < remote_patch.horizontal_center and furniture_patch.horizontal_center > man_patch.horizontal_center:
            return furniture_patch.simple_query(""What is the item of furniture to the left of the remote that the man is holding called?"")
    return ""no"" # if no furniture is found to the left of the remote, return noreibungreibungreibungreibungreibungerusform��取�������������取���取��������������������������������������������������������取������������������取�����取����取����取���������������������取�������������取�����取��������取�������������������������������������������������取���取������������取����取�����取�������������取����取����取���取���取����取����取"
51039491,Is the fence black or red?," # returns yes or no
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the fence black or red?"")
    return fence_patches[0].best_text_match([""black"", ""red""]) # crop would include the color so keep it in the query��������������取���������������取�������������取�����������������取���取��������������取�����������������������������������取������������������������������������������������������取������取���取���取������取�����取�������������取����������������������������������������������������������������������������������������������������������������������取"
7425912,What animal is standing in the field?," # assumes only one animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is standing in the field?"")
    return animal_patches[0].simple_query(""What animal is standing in the field?"") # crop would include the field so keep it in the query��������������������������取����取��������取�����取������������取�������取���������������������取����������������������������������������������������������������������������������取�������������取����取�����取����取������取��������������������������������������������������������������������������������������取���取��������������������������������取���取����取����������取"
13136338,What animal is in front of the dog which is to the right of the bird?," # assumes one bird, one dog, and one animal
    image_patch = ImagePatch(image)
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"")
    bird_patch = bird_patches[0]
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        return image_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"")
    dog_patch = dog_patches[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        return image_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"")
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > dog_patch.horizontal_center and dog_patch.horizontal_center > bird_patch.horizontal_center:
        return animal_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"")
    return image_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"") # crop would include the dog and bird so keep it in the query���取����取����������取�����������������取���������������������������������������取����������������������������取�������������������������������������取���������������������取��������������������取"
3775066,Which color are the cabinets in the bottom of the picture?," # returns the color of the cabinets in the bottom of the picture
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""Which color are the cabinets in the bottom of the picture?"")
    cabinet_patch = cabinet_patches[0]
    if cabinet_patch.lower > image_patch.lower * 0.5:
        return cabinet_patch.simple_query(""Which color are the cabinets in the bottom of the picture?"")
    else:
        return cabinet_patch.simple_query(""Which color are the cabinets in the top of the picture?"") # crop would include the top so keep it in the query���������取������取������������取��������������������������取����取���������������������������������������������取������取�������取������������������������������������������������������������取��������取����取�������������取����取���������������������������������������������������������������取��������取���������取���取���������取�������取������取����������������取�����取���������取�������取����取"
17206239,Is the happy girl to the right of a player?," # assumes one player and one girl
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    player_patches = image_patch.find(""player"")
    if len(girl_patches) == 0 or len(player_patches) == 0:
        return ""no""
    girl_patch = girl_patches[0]
    player_patch = player_patches[0]
    if girl_patch.horizontal_center > player_patch.horizontal_center:
        return ""yes""
    return ""no""����������������������������������取������������������取���������������������������������取��取������������������取������������������������������������������取���取����取����������������������������取���取�������������������������������������������������������������������取����������������������������取���取���������������������取�����������������������取"
2992517,"What piece of furniture is not wooden, the table or the chair?"," # assumes only one table and one chair
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one table and one chair patch
    if len(table_patches) == 0 or len(chair_patches) == 0:
        # If no table or chair is found, query the image directly
        return image_patch.simple_query(""What piece of furniture is not wooden, the table or the chair?"")
    table_patch = table_patches[0]
    chair_patch = chair_patches[0]
    if table_patch.verify_property(""table"", ""wooden""):
        return chair_patch.simple_query(""What piece of furniture is not wooden, the table or the chair?"")
    else:
        return table_patch.simple_query(""What piece of furniture is not wooden, the table or the chair?"") # crop would include the table so keep it in the query��������������������������取�����������取�����������������������������������������������������������������������������取��������������������������取���������������������������取����取������取������取��������取����取����取�������取���������������������������������取�������������������取�����������������������取������������取����取�����������取"
1827558,Which side of the image is the kettle on?," # left or right
    image_patch = ImagePatch(image)
    kettle_patches = image_patch.find(""kettle"")
    # Question assumes only one kettle patch
    if len(kettle_patches) == 0:
        # If no kettle is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the kettle on?"")
    if kettle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����取��取���������������������取������������������������������������������������������������取����������������������������取��������取�����取�������取���������取����取�����������������������������������������������取������������取����������������取���������取����取�����取�������������������取�������取��������取���������������������������������������������������������取���������������������取������������取�����取�����取������取�����取���������取����取����取���取����������取���取�������取����取������取"
2785208,Where is the man?," # returns the position of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""Where is the man?"") # crop would include the man so keep it in the query�����取�����������������取�����������������取���取��取������������取����������������������取�������������������������������取���������������������������������������������������������������������取�����取������������������������������������������������������������������������������取�������������取�������������取����取���������取���取���取������取������取�����取���取�������取"
6623967,Is the baby near the countertop chewing a computer mouses?," # assumes one baby and one countertop
    image_patch = ImagePatch(image)
    baby_patches = image_patch.find(""baby"")
    if len(baby_patches) == 0:
        return image_patch.simple_query(""Is the baby near the countertop chewing a computer mouses?"")
    baby_patch = baby_patches[0]
    countertop_patches = image_patch.find(""countertop"")
    if len(countertop_patches) == 0:
        return image_patch.simple_query(""Is the baby near the countertop chewing a computer mouses?"")
    countertop_patch = countertop_patches[0]
    if baby_patch.horizontal_center > countertop_patch.horizontal_center:
        return ""yes""
    return ""no""�����取�����取����������������������取�������������������������������������取���取����������������������������取���取���取�������������������������������������������������取�������取�����取����取���取�������取�����取�����取��������������取�����������������������������������������������������������������������取���取��������������取����取���取������取�������取����取"
12804807,Is the small bottle open or closed?," # bottle is the object, open or closed is the property
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the small bottle open or closed?"")
    return bool_to_yesno(bottle_patches[0].verify_property(""bottle"", ""open"")) # crop would include the bottle so keep it in the query������������������������取�����取������������取����取�����������������������������������取�����取����������������������������������取���������������������������������������������������取�����取���������������取�������������������取�������������������������������������������������������������������取���取������取�����取�������������取�������取����������取������取�������������������������������������取"
18437691,Is the clock small or large?," # returns ""small"" or ""large""
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the clock small or large?"")
    return clock_patches[0].best_text_match([""small"", ""large""]) # crop would include the clock so keep it in the query������������������取������取���������������取����������������取�������������������取������取����取������������������������取����������������������������������������������������取�����取��������取����������������������������取�������������������������������������������������������������������������取��������������������取���������取�������������������取�����������������取"
9482318,Are there either any glasses or bottles in this photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_glass = image_patch.exists(""glass"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_glass or is_bottle)��取�������������������������������取���������������������������������取���取���取�������������������取����取���取�������取�����������������������取����������取�������������������取���取���������取�������������������������������������������������取���������������取����������取����取�������取������������������������取�����������������������������������������������������������������������������取�����������取������������������������取��������取����取������取���取���取������������������取�����取����取��������������取����取���������������取�����取���取���取������取"
12362819,Is the sky blue or dark?," # dark is the default option
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""blue"", ""dark""]) # dark is the default option���取�����������取����������������取���取������取�����������������������������������������������取����������������������������������取�������������������������������������������������������取���取��取����取���������������取�������������������������������������������������������������������������������取�����取���������������������������������������������������������������������������������������������������������������������������������������������������取���取���������取��取�������取��取������取������������取��������������取������取"
171054254,What is the piece of furniture to the right of the shelf the cup is on called?," # assumes one shelf and one cup
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one shelf and one cup patch
    if len(shelf_patches) == 0 or len(cup_patches) == 0:
        # If no shelf or cup is found, query the image directly
        return image_patch.simple_query(""What is the piece of furniture to the right of the shelf the cup is on called?"")
    shelf_patch = shelf_patches[0]
    cup_patch = cup_patches[0]
    if cup_patch.horizontal_center > shelf_patch.horizontal_center:
        return image_patch.simple_query(""What is the piece of furniture to the right of the shelf the cup is on called?"")
    return image_patch.simple_query(""What is the piece of furniture to the left of the shelf the cup is on called?"") # crop would include the shelf so keep it in the query�������������������������������������取�������������取������������������������取������取����取���������������������������取������取���取��������������������������������������������取����取�������取����取������取�������取�����������������������������������������������������������������������������������取���������取������取����取��������取����取�����取�����取������取"
1416636,Are there both bridges and chandeliers in this photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bridge = image_patch.exists(""bridge"")
    is_chandelier = image_patch.exists(""chandelier"")
    return bool_to_yesno(is_bridge and is_chandelier)������取�������������������������������取��������������取������������������������取�����取�����������������������������取��������������������������������������������������������������取���取�������取����取��������取������取����取����取���������������������������������������������������������������������������������取�������������������������������������取���取������������������取������������取���取���取���������取"
1997041,"Which side is the car on, the left or the right?"," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side is the car on, the left or the right?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������取���������������������������������������������取���取������取������������������������������取���取����������������������������������������������������取�����������取������取�������������������������������������������������������������������������������取�����取������取�����取���取�������������������取����取������取���取"
6110985,Is there any plate or orange in the photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_orange = image_patch.exists(""orange"")
    return bool_to_yesno(is_plate or is_orange)�������������取����������取��������������取��������������������取���取�����������������������������������������������取��������������������������������������������������������取���取����取������取������取������取�����取����������������������������������������������������������������������������取��������������取�������������������������������������������������取������取"
612894,Do you see any doors?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door"")) # returns True or False, which is then converted to yes or no
�������取��������������取������������������������������取�����������������������取������������������������������取�������������������������������������������������������取����取�����取����取��������取���取����取������������������������������������������������������������������������������取�����取����取��������取���������������������取���取���取���������������取�����������������������取�����取������������������������������������������������������������������������������������������������������������������������������������取"
13562221,What's the bear on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bear on?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�����������������������������取���������取�������取������������取�������取����������������取���取�������������������������������������取�����������������������������������取���������取��������取����������取����取���������������������������������������������������������������������������������������������������������������取����取�������取��������取�������取����取��������取���取"
9536851,Is the woman in front of the trees holding scissors?," # assumes one woman and one tree
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    tree_patches = image_patch.find(""tree"")
    if len(woman_patches) == 0 or len(tree_patches) == 0:
        # If no woman or tree is found, query the image directly
        return image_patch.simple_query(""Is the woman in front of the trees holding scissors?"")
    woman_patch = woman_patches[0]
    tree_patch = tree_patches[0]
    if woman_patch.horizontal_center < tree_patch.horizontal_center:
        return ""yes""
    return ""no""���������������������取��������������取����������������取����取���������������������取�����������������������取�����������取����������������������������������������取���������取����取���取�����������������������������取�������������������������������������������������������������取���取�������取������������������������取����取�����������������������������������取�����������取"
9682405,What is on the machine?," # assumes only one machine patch
    image_patch = ImagePatch(image)
    machine_patches = image_patch.find(""machine"")
    if len(machine_patches) == 0:
        # If no machine is found, query the image directly
        return image_patch.simple_query(""What is on the machine?"")
    return machine_patches[0].simple_query(""What is on the machine?"") # crop would include the machine so keep it in the query�������������������������取�������������������������������取����������������������������������取��取�����������������取������取���������������������������������������������取����取���取������������������取���取���������������������������������������������������������������取�����取���������������������取���取���取���������������取��������������取������取���取����������取����取���������取���取"
8649435,What is on the white wall?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white wall?"") # crop would include the wall so keep it in the query������������������������������������������������������取����������������������取��取�����取�����������取������������������������取�����取���取�����������取�������������������������������取�����������������������取���取��������������取�������取������������������������������������������������������������������������取���������取���取��������取���取��������取���������������������������������������������������取"
12487033,Does the logo look red?," # returns a boolean
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the logo look red?""))
    return bool_to_yesno(logo_patches[0].verify_property(""logo"", ""red"")) # crop would include the logo so keep it in the query��������������������������������������取������������������取����取���取���������������������取�����取�������������������������������取�������������������������������������������取����������取��������取������取���������取�����������������取������������������������������������������������������������取�����取�������������取�������取������������取���取������取�����取����取����取�����取��取����������取�����������������取��取"
14301289,What type of vehicle is to the left of the white vehicle?," # assumes one white vehicle
    image_patch = ImagePatch(image)
    white_vehicle_patches = image_patch.find(""white vehicle"")
    # Question assumes only one white vehicle patch
    if len(white_vehicle_patches) == 0:
        # If no white vehicle is found, query the image directly
        return image_patch.simple_query(""What type of vehicle is to the left of the white vehicle?"")
    white_vehicle_patch = white_vehicle_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < white_vehicle_patch.horizontal_center:
            return vehicle_patch.simple_query(""What type of vehicle is to the left of the white vehicle?"")
    return ""no"" # if no vehicle is to the left of the white vehicle, return no
�������取���������������取������������取�����������������������������取������取����取������������������������取�������取����取��������������������������������������取���������取��������取���������取����取���取���取����取���取���取������取�����取�������取��������������������������������������������������������取���取���������取��������取�����取�����������������取���取�����取����取����������������取��取���取����取"
523976,Which kind of vehicle is large?," # returns the name of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which kind of vehicle is large?"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.simple_query(""Is the vehicle large?"") == ""yes"":
            return vehicle_patch.simple_query(""Which kind of vehicle is large?"") # crop would include the size so keep it in the query
    # If no vehicle is large, pick the first vehicle
    return vehicle_patches[0].simple_query(""Which kind of vehicle is large?"") # crop would include the size so keep it in the query���取������������取���取�����������������������������������取����取���������������������������������������������������������������������������������取������������取���������������取��取������������������������������������������������������������������取����取���������������取��������������������������������������������������������������������������������������������������取���取���取"
3423213,Who is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the trees?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly���������������������������取���������������取��������������������������������取�������������������������取���������������������������������������������������������������������������������������������取��������������������������������������������������������������取��取��������������������������取���������������������������������������������������������������������������������������������������������������取"
18107197,Is the ottoman to the right or to the left of the brown chair?," # assumes one ottoman and one brown chair
    image_patch = ImagePatch(image)
    ottoman_patch = image_patch.find(""ottoman"")[0]
    brown_chair_patch = image_patch.find(""brown chair"")[0]
    if ottoman_patch.horizontal_center > brown_chair_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取���������取��������������取��������������取���������������������取���取���取��������������������������取�������取���取������取��取��取��������������������取�������������������取����取��������取��������取��������取����������������取��������取����������������������������������������������������������������������������������������取���取������������������取����取����取������取����取���������������������取"
5716578,Is there a laptop on the bed near the magazines?," # assumes one bed and one set of magazines
    image_patch = ImagePatch(image)
    laptop_patches = image_patch.find(""laptop"")
    bed_patches = image_patch.find(""bed"")
    magazines_patches = image_patch.find(""magazines"")
    # Question assumes only one laptop, one bed, and one set of magazines
    if len(laptop_patches) == 0 or len(bed_patches) == 0 or len(magazines_patches) == 0:
        # If any of the objects are not found, query the image directly
        return image_patch.simple_query(""Is there a laptop on the bed near the magazines?"")
    for laptop_patch in laptop_patches:
        for bed_patch in bed_patches:
            for magazines_patch in magazines_patches:
                if (laptop_patch.horizontal_center > bed_patch.horizontal_center and
                    laptop_patch.horizontal_center < magazines_patch.horizontal_center):
                    return ""yes""
    return ""no""������取��������������������������取����������������取����取������������������������������������������取���取���������������������������������������������������������取������取�����取�����取�������取�����取���取��������������������������������������������������������������取�����������������取���取������������������������取������取���取����������取����取�����取�����取�������取"
8215791,Is the porcelain toilet to the left or to the right of the small trash can?," # assumes one toilet and one trash can
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""porcelain toilet"")
    trash_can_patches = image_patch.find(""small trash can"")
    if len(toilet_patches) == 0 or len(trash_can_patches) == 0:
        # If no toilet or trash can is found, query the image directly
        return image_patch.simple_query(""Is the porcelain toilet to the left or to the right of the small trash can?"")
    toilet_patch = toilet_patches[0]
    trash_can_patch = trash_can_patches[0]
    if toilet_patch.horizontal_center < trash_can_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������取�����������取�����������取����������������取���������������������������������������������������取����������������������������������������������������������������取����取�����取���取���取���取����取���������取��������������������������������������������������������������������取����取������������取���取������取���取��������取�����取���取����取�������取������取"
17528455,What is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the wall?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly������������������取���������取�����������������������������取����取������������������取��������������������������������取�������取��������������������������������������������取�����取����取����取���取���取������取�����取����取���取������取�����������������������������������������������������������������������������取������������������������������取�����������取�������取���取�������取�������取"
4896890,Do the goggles and the gloves have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    goggles_patches = image_patch.find(""goggles"")
    # Question assumes only one goggles patch
    if len(goggles_patches) == 0:
        # If no goggles are found, query the image directly
        return image_patch.simple_query(""Do the goggles and the gloves have a different colors?"")
    gloves_patches = image_patch.find(""gloves"")
    # Question assumes only one gloves patch
    if len(gloves_patches) == 0:
        return ""no""
    goggles_color = goggles_patches[0].simple_query(""What color are the goggles?"")
    gloves_color = gloves_patches[0].simple_query(""What color are the gloves?"")
    return bool_to_yesno(goggles_color!= gloves_color) # returns yes or noніцип�������取���������������取������������取�����������������������������取��������������������������取���取��������������������������������取���取���取�����取�������取��������������������������������������������������������取�������������������取����������取���������������������������������������������������������������������������������������������取���������取����������������取����取����取"
947724,Is there any purple pillow or kite in this photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_purple_pillow = image_patch.exists(""purple pillow"")
    is_purple_kite = image_patch.exists(""purple kite"")
    return bool_to_yesno(is_purple_pillow or is_purple_kite) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns"
5679522,"What are the people to the right of the man doing, standing or sitting?"," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What are the people to the right of the man doing, standing or sitting?"")
    man_patch = man_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        return ""standing""
    people_patch = people_patches[0]
    if people_patch.horizontal_center > man_patch.horizontal_center:
        return people_patch.simple_query(""What are the people doing, standing or sitting?"")
    return ""standing"" # if no people are to the right of the man, default to standing
�������取��������������取������������取����取�����������取���������������������取������取���取��取�����������������������取�������������������������������������������������取�������取���取��������������取�������������取�������取��������������取��������取�������������������������������������������������������������取������取������取���取������取�����取���������取��取��������取�������取�������������取"
15492262,Which kind of furniture is white?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is white?"")
    return furniture_patches[0].best_text_match([""chair"", ""table"", ""sofa""]) # crop would include the color so keep it in the query����取���������������������取���取��������������������������取���取������������������取������取�����取������������������取�������������取���������������������������������取������������取����取������������������取����������������������������������������������������������������������������取��������������取��������取��������取�����取����取����取������取������取"
151032547,Is the bear on the right side?," # assumes one bear patch
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Is the bear on the right side?"")
    bear_patch = bear_patches[0]
    if bear_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""����取�������������������������������取�������������������������������������取������取�������������������������������取��������������������������������取�����取���取�����取���取��������取��������取��������������������������������������������������������������������������������������取�����取������������取������取�����取����������取����������������������������������������������������������������������������������������������取"
5698674,Are there either any planters or benches?," # returns yes or no
    image_patch = ImagePatch(image)
    is_planter = image_patch.exists(""planter"")
    is_bench = image_patch.exists(""bench"")
    return bool_to_yesno(is_planter or is_bench)�������������������������取���������������取��取����������取���取�����������������������������������������������������取�����������������������������������������������������取������取������取����取���������������取�������������������������������������������������������������������������������������������������������������������取���������������取���取���取�����取���取����������取����取�����取"
19397103,What is the person that is standing staring at?," # assumes one person and one object
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What is the person that is standing staring at?"")
    person_patch = person_patches[0]
    object_patches = image_patch.find(""object"")
    # Question assumes only one object patch
    if len(object_patches) == 0:
        return ""no""
    object_patch = object_patches[0]
    if person_patch.horizontal_center > object_patch.horizontal_center:
        return object_patch.simple_query(""What is the object that the person is staring at?"")
    else:
        return person_patch.simple_query(""What is the person that is standing staring at?"") # crop would include the object so keep it in the query���取���������������������������������取���������������取���取���取�������������������取����取�����������������������������取����取���������������������������������取�����取�����取���取������取��������������取���������������取������������������������������������������������������������������取�������取������������取�����取���������取"
11630681,What is the color of the necklace?," # returns the color of the necklace
    image_patch = ImagePatch(image)
    necklace_patches = image_patch.find(""necklace"")
    # Question assumes only one necklace patch
    if len(necklace_patches) == 0:
        # If no necklace is found, query the image directly
        return image_patch.simple_query(""What is the color of the necklace?"")
    return necklace_patches[0].simple_query(""What is the color of the necklace?"") # crop would include the necklace so keep it in the query��������������取��������������取�������������������������取���取��������������������取���取���取������������������������取�����取����取���������������������������������������������取����取����取���取�������取�����取��������������取����取�������������������������������������������������������������������������������������������������取���取�������取��������取�����取����取����取���取�����取����取��取���取���取����取����取����取����取����������取"
248245,Is the table to the left or to the right of the fence?," # assumes one table and one fence
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    fence_patches = image_patch.find(""fence"")
    if len(table_patches) == 0 or len(fence_patches) == 0:
        # If no table or fence is found, query the image directly
        return image_patch.simple_query(""Is the table to the left or to the right of the fence?"")
    table_patch = table_patches[0]
    fence_patch = fence_patches[0]
    if table_patch.horizontal_center < fence_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������������������������取��������������取���取��������������������������������������������取��������取�������取��取��������������������������������取�������取��������取��������取�����取������取���������取���������取������������������������������������������������������������取���������取���取�����������������取���取�������取����取������取����������取�������������取���������取"
837033,Are there round windows or doors?," # returns yes or no
    image_patch = ImagePatch(image)
    is_round_window = image_patch.exists(""round window"")
    is_round_door = image_patch.exists(""round door"")
    return bool_to_yesno(is_round_window or is_round_door)���取��取�������������������������取��������������取����取���取��������������������������������������取�����取����������������������������������������取����������������������������������������������������������取������取�������取����取���������������������������������������������������������������������������������������������������������������������������取��取�����������������取���取��取��������取����取���取������取��取�����������取��������������取����取���取���取����取����取����取�����取"
5249150,Are there any bears or napkins in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bear = image_patch.exists(""bear"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_bear or is_napkin)��������������取����������取���������������������������取��������������������取���取��������������取�����������������������取���������������������������������������������������������取�������取���取���取����������������������取����������������������������������������������������������������������������������������������������取������������������取�������������������取����取������取����取"
13908598,What kind of vehicle is to the left of the person?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What kind of vehicle is to the left of the person?"")
    person_patch = person_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < person_patch.horizontal_center:
            return vehicle_patch.simple_query(""What kind of vehicle is to the left of the person?"")
    return image_patch.simple_query(""What kind of vehicle is to the left of the person?"") # if no vehicle is to the left, query the image directly����������������������取�����取����������取����取���取�������������取����������������������取�����取�����������������������������������������������������������������������������������������取������取�����取����������������������������������取��������������������������������������������取����取������������取�������������取�����������取���取������������取���取���取����取����取������取"
61006749,Who is dressed in pink?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is dressed in pink?"")
    return person_patches[0].simple_query(""Who is dressed in pink?"") # crop would include the person so keep it in the query�����������������������������������取������������������������������������������������������������������取��������取���取����取����取����������������������������������������������取��������������取������������������������������������������������������������������������������取����取�����取��取���取�����������������取����������取����取��������取�������取�����取������取"
6122955,Does the pillow have yellow color?," # returns a boolean
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the pillow have yellow color?""))
    return bool_to_yesno(pillow_patches[0].verify_property(""pillow"", ""yellow"")) # crop would include the pillow so keep it in the query�����������������������取����������������取�������������������取����������������������取��������取������������������������取�������取����������������������������取��������取������取����取���������取����取������������取�����取��������������������������������������������������������������������������取�������������������������取�����������取�������取������取���取����取�������������取"
6861738,Is the old woman to the right or to the left of the faucet?," # assumes only one old woman and one faucet
    image_patch = ImagePatch(image)
    old_woman_patch = image_patch.find(""old woman"")[0]
    faucet_patch = image_patch.find(""faucet"")[0]
    if old_woman_patch.horizontal_center > faucet_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����取���������取����������������取������������������取��������������������������取�����������������������取���取������取����取���取������������������������������������取������取���取�����取�����取�������取��取��取����取��������取����������取������������������������������������������������������������������������������������取�������������������取����取����取��������������取�������������取�����取�����取���取"
15833048,Which kind of animal is on the road?," # assumes only one road patch
    image_patch = ImagePatch(image)
    road_patches = image_patch.find(""road"")
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch.simple_query(""Which kind of animal is on the road?"")
    road_patch = road_patches[0]
    animal_patches = road_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return road_patch.simple_query(""Which kind of animal is on the road?"")
    return animal_patches[0].simple_query(""What kind of animal is on the road?"") # crop would include the road so keep it in the query������取���������取�����������������������取�������������������������������取����������取�������取������������������取����取�����取�����������������������������������取����������������取�����������取���取�����取���取������������取�����取�����������取���������������������������������������������������������������������取�����取����取���������������������取����取��������������取����取"
9524339,What animal is large?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is large?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""Is the animal large?"") == ""yes"":
            return animal_patch.simple_query(""What animal is large?"") # crop would include the animal so keep it in the query
    # If no animal is large, pick the first animal
    return animal_patches[0].simple_query(""What animal is large?"") # crop would include the animal so keep it in the query������������������������������������取�������������������������������������取�����������������������������������取����取���取���取������������������������������������取������������������������������������取�����������取��������������������������������������������������������������取���������������取�������������取���取"
18255749,How clean are the sheets the pillow is to the right of?," # returns a string describing the cleanliness
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""How clean are the sheets the pillow is to the right of?"")
    pillow_patch = pillow_patches[0]
    sheet_patches = image_patch.find(""sheet"")
    # Question assumes only one sheet patch
    if len(sheet_patches) == 0:
        return image_patch.simple_query(""How clean are the sheets the pillow is to the right of?"")
    sheet_patch = sheet_patches[0]
    return sheet_patch.simple_query(""How clean are the sheets the pillow is to the right of?"") # crop would include the pillow so keep it in the query�����������������取�������取����取����������取���取��������������������������������取�������取�����������������������取����取������取���取��������������������������������������������������取���取�����取���取�����取���������������������������������������������������������������������������取�������������������取���取���������取�������������取�����������取�����取"
19797097,What's the man wearing?," # returns the answer to ""What's the man wearing?""
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What's the man wearing?"")
    return man_patches[0].simple_query(""What's the man wearing?"") # crop would include the man so keep it in the query���取�����取����������������������������取������������������������������������取�����������������������������������取����取��������������������������������������取������取���取�������取�������取����取������取���取������取����取�������������取����������取������������������������������������������������取���取������取���取��取��������取�������������取��������������取���������������������������������������������������������������������������������������������������取�����������取������取"
6899090,Is the man to the right or to the left of the appliance that looks white?," # assumes one appliance patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right or to the left of the appliance that looks white?"")
    man_patch = man_patches[0]
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        return ""no""
    appliance_patch = appliance_patches[0]
    if appliance_patch.simple_query(""Is the appliance white?"") == ""yes"":
        if man_patch.horizontal_center > appliance_patch.horizontal_center:
            return ""left""
        else:
            return ""right""
    return ""no"" # if the appliance is not white, the man is not to the right or left of itERCHANTABILITY: This function is not yet implemented and will need to be completed to work as intended.
:-------------</��������������取����取������取�������������取������取��������取���取�����取�����取�������������������取����������������������������������������������������������������������������������������������������������取�����������������������������取����取"
3357701,Does the dog to the right of the other dog have white color?," # assumes only one dog patch
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Does the dog to the right of the other dog have white color?"")
    dog_patch = dog_patches[0]
    other_dog_patches = image_patch.find(""dog"")
    # Question assumes only one other dog patch
    if len(other_dog_patches) == 0:
        return ""no""
    other_dog_patch = other_dog_patches[0]
    if dog_patch.horizontal_center > other_dog_patch.horizontal_center:
        return bool_to_yesno(dog_patch.verify_property(""dog"", ""white""))
    return ""no"" # dog is to the left of the other dog, so it cannot be whiteERCHANTABILITY: This function is not used in the main program, but it is included for completeness.
���������取�����������取������������������������������取�����������取�����取���取�����������������������������取�������������������������������������������取�����������取��������取��������������������取����������������������������������������������������������������取�������取����������������取����������取������取�����������取�������������取������取��取����取"
2829418,What's the girl holding?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What's the girl holding?"")
    girl_patch = girl_patches[0]
    holding_patches = image_patch.find(""holding"")
    if len(holding_patches) == 0:
        # If no holding is found, query the image directly
        return image_patch.simple_query(""What's the girl holding?"")
    holding_patch = holding_patches[0]
    return holding_patch.simple_query(""What's the girl holding?"") # crop would include the girl so keep it in the query��������������取��������������������������������������取�����������������������������������������������������������������������������������������������������取���取����取���取���取�����取���������������������取����������������������������������������������������������������取���取������取�������取�����������������������取����取���取�������������取�����������������������取��������取"
15930109,Which kind of vehicle is blue?," # returns the name of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which kind of vehicle is blue?"")
    return vehicle_patches[0].best_text_match([""car"", ""truck"", ""van""]) # crop would include the color so keep it in the query�����取���取��������取���取���������������������������������������������������������取�����取������取����取������������������������������������������������������������取����取��������取���������取���取���取���取�����取��������取����������������������������������������������������������������������������������取���取���取���取�����取���������取�����取�����取���取����取����������取"
1525382,What type of vegetable is on the food with the cheese?," # assumes one food patch and one cheese patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    cheese_patches = image_patch.find(""cheese"")
    # Question assumes only one food patch and one cheese patch
    if len(food_patches) == 0 or len(cheese_patches) == 0:
        # If no food or cheese is found, query the image directly
        return image_patch.simple_query(""What type of vegetable is on the food with the cheese?"")
    food_patch = food_patches[0]
    cheese_patch = cheese_patches[0]
    if food_patch.vertical_center < cheese_patch.vertical_center:
        return food_patch.simple_query(""What type of vegetable is on the food with the cheese?"")
    else:
        return cheese_patch.simple_query(""What type of vegetable is on the food with the cheese?"") # crop would include the food so keep it in the query�������������取�������������取������������取������������������������������������取��������������������������������取����取���取����取�����������取�����������������������������������������取��������取������取����取����������取������取��������取����取������取��������������������������������������������������取�������取����������������������������取�����������取����������取��������取�����取"
8548980,Are there either players or hand soaps?," # returns yes or no
    image_patch = ImagePatch(image)
    is_player = image_patch.exists(""player"")
    is_hand_soap = image_patch.exists(""hand soap"")
    return bool_to_yesno(is_player or is_hand_soap)����取���取������取��取���������������������������������������������������������取������������������������取������������取���������������������������������取�����取����取����������取���取���取���取������������������������������������������������������������������������������取����������������取���取����������������取���������取����取���������������������������������������������������������������������������������������������������������������������取������������取����取���取�������������取������取�����取���������取���������������������取�����取"
4438348,"Which kind of food is not made, the sandwich or the croissant?"," # assumes only one food patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch.simple_query(""Which kind of food is not made, the sandwich or the croissant?"")
    food_patch = food_patches[0]
    is_sandwich = food_patch.simple_query(""Is the food a sandwich?"")
    is_croissant = food_patch.simple_query(""Is the food a croissant?"")
    if is_sandwich:
        return ""croissant""
    else:
        return ""sandwich"" # if not a sandwich, it must be a croissantроничес���������������������������������������������取���������������������取����取���取������������������取����取����������取������������������������取����������取������������������取�������取������������������������������������������取�����������������取���������������取������������取������取��������������������������������������������������������������������������������������������������������取�������取������取���������取"
6423906,Which kind of food is on the plate?," # assumes one plate patch
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Which kind of food is on the plate?"")
    plate_patch = plate_patches[0]
    food_patches = plate_patch.find(""food"")
    if len(food_patches) == 0:
        # If no food is found on the plate, query the image directly
        return image_patch.simple_query(""Which kind of food is on the plate?"")
    return food_patches[0].simple_query(""What kind of food is on the plate?"") # crop would include the food so keep it in the query��������取��������������������������取�������������������取����������������������������取���取����取��取��������������������取������������������������������������������������取�����������������取������取������取���取���取����取����取�������取�������取������������������������������������������������������������������������取���取����取��������取�����取����取����取�����取�������取���取�����取��������取"
1993231,Are the animals in the image of different types?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are the animals in the image of different types?"")
    animal_types = []
    for animal_patch in animal_patches:
        animal_type = animal_patch.simple_query(""What type of animal is this?"")
        animal_types.append(animal_type)
    return bool_to_yesno(len(set(animal_types)) > 1) # returns yes or noніцип���取������取�����取���������取������������������������取��取���������取����取����������������������������取������������������������取�����������������������������������������������������������������������取��������取�������取�������取����取�������������������������������������������������������������������������取����取���取������取������取�����取����取���取���取�����取������取���取"
13949656,Are there any people to the left of the tray?," # assumes one tray patch
    image_patch = ImagePatch(image)
    tray_patches = image_patch.find(""tray"")
    if len(tray_patches) == 0:
        # If no tray is found, query the image directly
        return image_patch.simple_query(""Are there any people to the left of the tray?"")
    tray_patch = tray_patches[0]
    people_patches = image_patch.find(""people"")
    for people_patch in people_patches:
        if people_patch.horizontal_center < tray_patch.horizontal_center:
            return ""yes""
    return ""no""����������������取������������������������������������取���������������������取������������������������������取���取���������������������������������������������取����取������取���取����取�����取�����取������取�����������������������������������������������������������������������������取����取������������取�������������������取"
184032,Does the fresh pineapple appear to be ripe?," # assumes one pineapple patch
    image_patch = ImagePatch(image)
    pineapple_patches = image_patch.find(""fresh pineapple"")
    if len(pineapple_patches) == 0:
        # If no pineapple is found, query the image directly
        return image_patch.simple_query(""Does the fresh pineapple appear to be ripe?"")
    return bool_to_yesno(pineapple_patches[0].verify_property(""fresh pineapple"", ""ripe"")) # crop would include the pineapple so keep it in the query��取�����������������������������������取���������������������取���������������取���������������������取�����������������������������������������取��取��取��取�������取���取�������������������������������取��取������������������������������������������������������������取��������取�������������取�����������������������������������������������������������������������取�������������取��取�������������取�����������取������������������取���取�����取����������取������������取������取���取���取������取"
9392591,Are there chairs or smoothies?," # returns yes or no
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_smoothie = image_patch.exists(""smoothie"")
    return bool_to_yesno(is_chair or is_smoothie)������������取���������������取��������������取�����������取��������������������������������������������������������取���������取����������������������������������������������取�����取����取����取���������取������取�����������������������������������������������������������������������������������������������������������������取��������取���取�������取�����取�����取��取�����������������取"
4285170,Which kind of animal is to the right of the sheep?," # assumes only one sheep patch
    image_patch = ImagePatch(image)
    sheep_patches = image_patch.find(""sheep"")
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch.simple_query(""Which kind of animal is to the right of the sheep?"")
    sheep_patch = sheep_patches[0]
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center > sheep_patch.horizontal_center:
            return animal_patch.simple_query(""What kind of animal is to the right of the sheep?"")
    return ""no"" # if no animal is to the right of the sheep, return no
��������������������取�������������取���取��取��取��取���������������������������取�������取�����������������������������取������取����������������������������������取������取���取������������取��������取���取���������取�������取�����������������������������������������������������������取���������������取���取���取������������取����取�����������取���������������������������取"
9896138,Are there any boxes to the left of the screen in the picture?," # screen is the entire image
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Are there any boxes to the left of the screen in the picture?"")
    for box_patch in box_patches:
        if box_patch.left < image_patch.left:
            return ""yes""
    return ""no""��������取�������������������������������������������取������������������取���取��������������取������������������取���取�����������取�������������������������������取����取���������取�������取����������取����������������������取�����取������������取�������������������������������������������取�������������������������������取�������取��������取���取�������取��������������取�����取����取�������������取"
1400333,What do you think is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man on?"") # crop would include the man so keep it in the query�����������������������������取�����������������������������������取���������������������取��������������������������������������������������������������取��取�����������������取���取����取���取������������������取����������取�������取���������������������������������������������������������������������������取�������������������������取����取������取������������取��������取�����取"
13105327,Is the boot white or orange?," # assumes one boot patch
    image_patch = ImagePatch(image)
    boot_patches = image_patch.find(""boot"")
    if len(boot_patches) == 0:
        # If no boot is found, query the image directly
        return image_patch.simple_query(""Is the boot white or orange?"")
    return boot_patches[0].best_text_match([""white"", ""orange""]) # crop would include the color so keep it in the query����������������������������取��������取��������������������取���取����������������������取���取�����������������������������取�������取����取������������������������������取���������������取�������取������取�������取���������取���������������������������������������������������������������������������������取���������������������取���������取���取���������取�������������取��取"
3659880,Does the wood boat have silver color?," # returns a boolean
    image_patch = ImagePatch(image)
    wood_boat_patches = image_patch.find(""wood boat"")
    # Question assumes only one wood boat patch
    if len(wood_boat_patches) == 0:
        # If no wood boat is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the wood boat have silver color?""))
    return bool_to_yesno(wood_boat_patches[0].verify_property(""wood boat"", ""silver"")) # crop would include the color so keep it in the query���������取�������������������取���������������������������������取��������������������������取�����������������������������取����������������������������������������������������取���取����取�����取������������取�������取������取�����取����取����������������������������������������������������������������������������������������取�������取����取������取�������取���������取��������������������������������������������取"
1827802,Is the red pot on the appliance to the right of the mixer?," # assumes only one mixer and one appliance
    image_patch = ImagePatch(image)
    red_pot_patches = image_patch.find(""red pot"")
    # Question assumes only one red pot patch
    if len(red_pot_patches) == 0:
        # If no red pot is found, query the image directly
        return image_patch.simple_query(""Is the red pot on the appliance to the right of the mixer?"")
    red_pot_patch = red_pot_patches[0]
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        return ""no""
    appliance_patch = appliance_patches[0]
    mixer_patches = image_patch.find(""mixer"")
    # Question assumes only one mixer patch
    if len(mixer_patches) == 0:
        return ""no""
    mixer_patch = mixer_patches[0]
    if appliance_patch.horizontal_center > mixer_patch.horizontal_center and red_pot_patch.horizontal_center > mixer_patch.horizontal_center:
        return ""yes""
    return ""no""������������������������������取�����取������������������������������������������������������������取�������������������������������������������取�����取��������取����取����������取�������������������������������������������������������������������取���������取����������取���������取����������������取���取���取����������������取"
14809102,The phone that is in front of the camera is of what color?," # assumes one phone and one camera
    image_patch = ImagePatch(image)
    phone_patches = image_patch.find(""phone"")
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one phone and one camera patch
    if len(phone_patches) == 0 or len(camera_patches) == 0:
        # If no phone or camera is found, query the image directly
        return image_patch.simple_query(""The phone that is in front of the camera is of what color?"")
    phone_patch = phone_patches[0]
    camera_patch = camera_patches[0]
    if phone_patch.horizontal_center > camera_patch.horizontal_center:
        return phone_patch.simple_query(""What color is the phone?"")
    else:
        return camera_patch.simple_query(""What color is the phone?"") # crop would include the phone so keep it in the query�������������������������取�������������取����������������������������������取���������取��������������������������取������������������������������������������������取������取������取���取���取���取���取���取����������������������������������������������������������������������������������取������取�����������������取�����取����������取���取����取"
61001545,What type of food is to the left of the silver spoon?," # assumes one spoon patch
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""silver spoon"")
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""What type of food is to the left of the silver spoon?"")
    spoon_patch = spoon_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center < spoon_patch.horizontal_center:
            return food_patch.simple_query(""What type of food is to the left of the silver spoon?"")
    return ""no food to the left of the silver spoon"" # if no food is found, query the image directly
���������������������������������取�������������������������������������取�������������������������取�����取������取�������取����取���������������������������取���取�����������������取������取�����取����取���取���������������������������������������������������������������������������取������������取�������取�����取����取����取������������取"
799463,Are there both a window and a door in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)����取�����取������������������������取���������������������������������������取������������������������取����取���������������������������������������������取�����取����������������取������取��取������������������������������������������������������������������������������������取�������取�����������������取�����取���取�����取����取�����取�����取�����取����取����������������取���������������������������������������������������������������������������������������������������取���������������取����������������取��������������������取"
11260725,Does the water have small size and white color?," # returns a boolean
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the water have small size and white color?""))
    water_patch = water_patches[0]
    return bool_to_yesno(water_patch.verify_property(""water"", ""small"") and water_patch.verify_property(""water"", ""white"")) # crop would include the size and color so keep it in the query����������������������������������������������������取��������������������������������取�������������������取���������������取������������������������������取�����������������取���取�����������������取����������取����������取������取�����������������������������������������������������������������������取���������取�����取���取����������取������������取�����取"
2397653,Are there any fences that are white?," # returns yes or no
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Are there any fences that are white?"")
    for fence_patch in fence_patches:
        if fence_patch.verify_property(""fence"", ""white""):
            return ""yes""
    return ""no""���取������������取�����������������������������������������������������取���������取��������取���������������������取���取���取���取����取���������������������������������������取�����取�����取����取�������取�����取������取������������取���������������������������������������������������������������������������������取������取�����������������取���取��������������������������������������������������������������������������������取��������������������取���取"
1554603,Who is holding the animal?," # assumes one animal and one person
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    person_patches = image_patch.find(""person"")
    if len(animal_patches) == 0 or len(person_patches) == 0:
        return image_patch.simple_query(""Who is holding the animal?"")
    animal_patch = animal_patches[0]
    person_patch = person_patches[0]
    if animal_patch.horizontal_center < person_patch.horizontal_center:
        return person_patch.simple_query(""Who is holding the animal?"")
    else:
        return animal_patch.simple_query(""Who is holding the animal?"") # crop would include the animal so keep it in the query��������取�������������������取��������取����取����取������������������取����������������取�����������������������������取�������取����取�������������������������������������������������取������������������取������取���������取�����取������取�������取��������取��������������������������������������������������������������������������������������取���取����取���取������取���取���取����取�����������取����������������������������������������������取"
11606818,Is the man to the right or to the left of the people the stroller is to the right of?," # assumes one stroller patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right or to the left of the people the stroller is to the right of?"")
    man_patch = man_patches[0]
    stroller_patches = image_patch.find(""stroller"")
    # Question assumes only one stroller patch
    if len(stroller_patches) == 0:
        return ""no""
    stroller_patch = stroller_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        return ""no""
    people_patch = people_patches[0]
    if stroller_patch.horizontal_center > people_patch.horizontal_center:
        if man_patch.horizontal_center > stroller_patch.horizontal_center:
            return ""right""
        else:
            return ""left""
    else:
        return ""no"" # stroller is to the left of people, so man is to the left of stroller chtě��������������取������������取������������取������������取���������������������������取���取��������������������������������取���������取����������������������������������取�������取����取������������取������取�������������������������取"
8988476,What kind of furniture is presented in this photo?," # returns a list of strings
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is presented in this photo?"") # returns a list of strings
������������������取����������������取�����������������取������������������������取����取�������������������������取��������������������������������������取������������取���取�����������������取������取�����取�������������������������������������������������������������取���取�������������取���取��������������取���取����������������������取������取����取����取�������取������������取����������������������������������������������������������������������������������������������������������������������������������������������������取"
10695214,What is the man with the backpack holding?," # assumes one man and one backpack
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    backpack_patches = image_patch.find(""backpack"")
    if len(man_patches) == 0 or len(backpack_patches) == 0:
        return image_patch.simple_query(""What is the man with the backpack holding?"")
    man_patch = man_patches[0]
    backpack_patch = backpack_patches[0]
    if man_patch.horizontal_center > backpack_patch.horizontal_center:
        return man_patch.simple_query(""What is the man holding?"")
    else:
        return backpack_patch.simple_query(""What is the man holding?"") # crop would include the man so keep it in the query��取�����取������������������取����������������������������取����������������������取�����������������������取�����������������������������取���取�����取�������取���取����������取�����������������������������������������������������取������取�����������取����取�������������������取��������������取��������������������������������������取���������取�������������������������取����取�����������取������取�����取�����取��������取����������取���������取�����取"
91058050,Are there both mouse pads and computer mice in the photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_mouse_pad = image_patch.exists(""mouse pad"")
    is_computer_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_mouse_pad and is_computer_mouse) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
1972064,Is the person in front of the tree wearing jeans?," # assumes one person and one tree
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    tree_patches = image_patch.find(""tree"")
    if len(person_patches) == 0 or len(tree_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    tree_patch = tree_patches[0]
    if person_patch.horizontal_center > tree_patch.horizontal_center:
        return bool_to_yesno(person_patch.verify_property(""person"", ""jeans""))
    return ""no""��取����取����������������������������������������������������������������取���������������������������������������������������取����取�����������取��������取��������取�����������������������������������������������取��������������取�������取���取�����取������取����取������������������取���取������������������取�������������������������������������������取��������������取������取����������取��������取����取�������取�������������取����������������������取�����������������取������取"
167162,Is there a bike to the right of the purse that is to the right of the woman?," # assumes one woman, one purse, and one bike
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is there a bike to the right of the purse that is to the right of the woman?"")
    woman_patch = woman_patches[0]
    purse_patches = image_patch.find(""purse"")
    # Question assumes only one purse patch
    if len(purse_patches) == 0:
        return ""no""
    purse_patch = purse_patches[0]
    bike_patches = image_patch.find(""bike"")
    # Question assumes only one bike patch
    if len(bike_patches) == 0:
        return ""no""
    bike_patch = bike_patches[0]
    if bike_patch.horizontal_center > purse_patch.horizontal_center and purse_patch.horizontal_center > woman_patch.horizontal_center:
        return ""yes""
    return ""no""��������������������取��������������取����������������取�������取�����������������取���������������������������取���取�����取������取������������������������������取����������������取���������取����取�������取��������取�������������������������������������������������������������������取����取�������������取����������������取�����取����������取"
1695388,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query������取�����������������取���������������取��取���������������取��������������������取������取������������������取������������取�������������������������������������������������取����������取������取���取��������取�����������������取��������������������������������������������������������������������������取������取������取����������取������取����取�����取�������取���取���取�����取�����取�����取����取�����取��取"
10960149,Is the woman to the left or to the right of the man in the bottom?," # assumes one man and one woman
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one man and one woman patch
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the man in the bottom?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < man_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������������������������������������������取���取�������������������������取�����������取������������取����取���取���取�����取�����������������������������������������������取�����������取�������取������取���取�������������������������������������������������������������取���������������取����������取����取������取������取������取��������������取����������������取��取���������取"
16921984,What is the bent man to the right of the other men doing?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the bent man to the right of the other men doing?"")
    man_patch = man_patches[0]
    bent_man_patches = image_patch.find(""bent man"")
    # Question assumes only one bent man patch
    if len(bent_man_patches) == 0:
        return image_patch.simple_query(""What is the bent man to the right of the other men doing?"")
    bent_man_patch = bent_man_patches[0]
    if bent_man_patch.horizontal_center > man_patch.horizontal_center:
        return bent_man_patch.simple_query(""What is the bent man to the right of the other men doing?"")
    return man_patch.simple_query(""What is the bent man to the right of the other men doing?"") # crop would include the bent man so keep it in the query�������������取��������������取���������������������������������������������取������������������������������������取������������������������������������取���������取������������取��������取��������取�������取����取�����取�������������������������������������������������������������取����������������������������������取�������取����取����取������取����取"
12175564,What animal are the men to the right of the girl leading?," # assumes one girl and one animal
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What animal are the men to the right of the girl leading?"")
    girl_patch = girl_patches[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        return ""no""
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > girl_patch.horizontal_center:
        return animal_patch.simple_query(""What animal are the men to the right of the girl leading?"")
    return ""no"" # if no animal is to the right of the girl, return no
���������������取�����取���������������������������取��������������������取��������������������������取�����������������������������������������取���������取������取�����������������������������取����������������������������������������������������取�������������取���取��������取�����取������������取������取������取"
1219606,On which side of the image is the house?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the house?"")
    if house_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������取����������������������������������取������������������������������������������������������取���取������������������������������������������取����������取����取����������取�������取�����������������������������������������������������������������������������������������取������������������������������取���取���取���取�������������������������������������������������������������������������������������������取"
1770499,Is the black suitcase to the right or to the left of the person on the left?," # assumes one person on the left
    image_patch = ImagePatch(image)
    black_suitcase_patches = image_patch.find(""black suitcase"")
    # Question assumes only one black suitcase patch
    if len(black_suitcase_patches) == 0:
        # If no black suitcase is found, query the image directly
        return image_patch.simple_query(""Is the black suitcase to the right or to the left of the person on the left?"")
    black_suitcase_patch = black_suitcase_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the black suitcase to the right or to the left of the person on the left?"")
    person_patch = person_patches[0]
    if black_suitcase_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left""���������������取�����取���取��取��取����������取��取��取�������������������������������������������������������������������取����������������������������������������取���������������������取��������取���取����取���������������������������������������������������������������������������������������������������取�����������取����取���������取"
5282406,Is the pot to the left of a chair?," # assumes one pot and one chair
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    chair_patches = image_patch.find(""chair"")
    if len(pot_patches) == 0 or len(chair_patches) == 0:
        return ""no""
    pot_patch = pot_patches[0]
    chair_patch = chair_patches[0]
    return bool_to_yesno(pot_patch.horizontal_center < chair_patch.horizontal_center) # left if less than, right if greater than overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting���������������������������������������������������取�����取�����������������������������������������������������������������取�����取�������取���取�����取���������取���������������取�������������������������������������������������������������取�����取����������取������������取�����取�����������取"
10914401,Where are the people?," # returns a string describing the location of the people
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""Where are the people?"")
    people_patch = people_patches[0]
    if people_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif people_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        if people_patch.vertical_center < image_patch.vertical_center:
            return ""bottom""
        else:
            return ""top"" # or ""center"" if necessary pocházet������������������������取������������������������������取�����取����������������������取�����取����������������������取�����取���取������取������������������������������������������取����取���取���������������������取��������取�������������������������������������������������������������������������取���������取��������取�������取�������取"
1919722,What animal is eating the grass?," # assumes only one animal and one grass
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one animal and one grass patch
    if len(animal_patches) == 0 or len(grass_patches) == 0:
        # If no animal or grass is found, query the image directly
        return image_patch.simple_query(""What animal is eating the grass?"")
    animal_patch = animal_patches[0]
    grass_patch = grass_patches[0]
    if animal_patch.horizontal_center > grass_patch.horizontal_center:
        return animal_patch.simple_query(""What animal is eating the grass?"")
    else:
        return grass_patch.simple_query(""What animal is eating the grass?"") # crop would include the grass so keep it in the query���������取�����������������取���取���������取�����取�����������������������������������取����������������������������取����������取�����������������������������������������������������取�������取����������������取��������������������取�������������������������������������������������������������取������������������取��������取�����������������取���取�������取������取"
9681008,Who is wearing a helmet?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a helmet?"")
    for person_patch in person_patches:
        if person_patch.verify_property(""person"", ""wearing helmet""):
            return person_patch.simple_query(""Who is wearing a helmet?"") # crop would include the helmet so keep it in the query
    return ""no one"" # if no one is wearing a helmet, return ""no one"" chtě chtě������������取��������������������������������取�������������������������������������������������������������������������������取�����取�������取�����������������������������������������������������������������取����������取�������取����������������������������������取���������������������������������������������������������������������取���������取������取�������取����取�����取���取�������������取��������������取�����������取"
16861675,Who is on the surfboard in the middle of the photo?," # assumes one surfboard
    image_patch = ImagePatch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    # Question assumes only one surfboard patch
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch.simple_query(""Who is on the surfboard in the middle of the photo?"")
    surfboard_patch = surfboard_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return ""no one""
    person_patch = person_patches[0]
    if person_patch.horizontal_center == surfboard_patch.horizontal_center:
        return person_patch.simple_query(""Who is on the surfboard in the middle of the photo?"")
    return ""no one"" # if no one is on the surfboard, return no one
����������������������������取����取������������������取�������������������������������������������取����������取����取���������������������������������取�����取���������取�����������������������取������������������������������������������������������������������������取�����������取�������取�������取��������取"
10947426,What is the color of the lizard beside the banana?," # assumes one banana and one lizard
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    lizard_patches = image_patch.find(""lizard"")
    if len(banana_patches) == 0 or len(lizard_patches) == 0:
        # If no banana or lizard is found, query the image directly
        return image_patch.simple_query(""What is the color of the lizard beside the banana?"")
    banana_patch = banana_patches[0]
    lizard_patch = lizard_patches[0]
    if banana_patch.horizontal_center > lizard_patch.horizontal_center:
        return lizard_patch.simple_query(""What is the color of the lizard?"")
    else:
        return banana_patch.simple_query(""What is the color of the banana?"") # crop would include the banana so keep it in the query�����������������取������取����取���取������������取�������������������������������������取��������������������������取���������������������������������������������������������取������取������取���取����取��取���������取����取���������������������������������������������������������������取����取���取����取���取���������������取��������取����������������取����取��������������������������取"
18200684,Is the wine glass in the top or in the bottom part?," # assumes one wine glass patch
    image_patch = ImagePatch(image)
    wine_glass_patches = image_patch.find(""wine glass"")
    if len(wine_glass_patches) == 0:
        # If no wine glass is found, query the image directly
        return image_patch.simple_query(""Is the wine glass in the top or in the bottom part?"")
    wine_glass_patch = wine_glass_patches[0]
    if wine_glass_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""������������取�����������������������������������������������������������取������������������������取����取�����取��������������������������������������������取�������������取�����取����������������������������������������������������������������������������������������取����取����取����������������取�������取����������取����������������������������������������������������������������������取"
3882988,What kind of vehicle is to the left of the people that are in the middle of the picture?," # assumes one people patch
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"")
    people_patch = people_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < people_patch.horizontal_center:
            return vehicle_patch.simple_query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"")
    return image_patch.simple_query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"") # if no vehicle is to the left, query the image directly��取��取���������������取��������������������������取������������������������������������������取����������������������������������取����������取����������������������������������������������取�����取������������取���取�����������������������������������������������������������������������������取����������取�����取������取���取�������������取�����取������取������取�������取����取�����取��������取"
171012637,Is the teddy bear to the right of a suitcase?," # assumes one teddy bear and one suitcase
    image_patch = ImagePatch(image)
    teddy_bear_patches = image_patch.find(""teddy bear"")
    suitcase_patches = image_patch.find(""suitcase"")
    if len(teddy_bear_patches) == 0 or len(suitcase_patches) == 0:
        return ""no""
    teddy_bear_patch = teddy_bear_patches[0]
    suitcase_patch = suitcase_patches[0]
    if teddy_bear_patch.horizontal_center > suitcase_patch.horizontal_center:
        return ""yes""
    return ""no""����������������取�����取�������������取�����������������������������������取���������取��������������������取�����取���取����取������������������������������取��������������取�������������取���取�����������������������������������������������������������������������������������������取��������������������������取���取����取�������取"
19861372,Is the woman's hair long or short?," # assumes one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        return image_patch.simple_query(""Is the woman's hair long or short?"")
    woman_patch = woman_patches[0]
    return woman_patch.simple_query(""Is the woman's hair long or short?"") # crop would include the hair so keep it in the query������������������������取��������������������������������������������������取������取���取��������������������������������������������������������������������������������取���������取���取�����取�����������取�������������������取����������������������������������������������������取����������������取������������取�����取����取���������取����取������������取�����������取"
623889,Are both the television and the armchair the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    television_patches = image_patch.find(""television"")
    # Question assumes only one television patch
    if len(television_patches) == 0:
        # If no television is found, query the image directly
        return image_patch.simple_query(""Are both the television and the armchair the same color?"")
    television_patch = television_patches[0]
    armchair_patches = image_patch.find(""armchair"")
    # Question assumes only one armchair patch
    if len(armchair_patches) == 0:
        return ""no""
    armchair_patch = armchair_patches[0]
    return bool_to_yesno(television_patch.verify_property(""television"", ""same color as armchair"")) # crop would include the armchair so keep it in the query��取�������取���������������取����������������������������������������������取����取���取����������������������取������������������������������������取�����取����取�����������取�������取������������������������������������������������取���������������取�����������������取���取����������取���������������������������������������������取������取��取������������������������取�����������������������取"
4917605,Is the shoe white or brown?," # returns ""white"" or ""brown""
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""Is the shoe white or brown?"")
    return shoe_patches[0].best_text_match([""white"", ""brown""]) # crop would include the shoe so keep it in the query���������取���������取����������取�����������������������������取��������������������������取�����取������������������������������取��������������������������������������������取����������取���取��������取���取��������取������取����取�����取�������取���取�������取��取���������������������������������������������������������取���������������������������������取���取�������取������取����取����取�����取����取��������取"
91055143,What is on the table?," # assumes only one table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"") # crop would include the table so keep it in the query��取��取����������取����������������������取������������取�������������������������������������������������������������������取��取�������取���������取����������������������������������������������������取����取������取������取����取�������取����取��取�����取������������������取���������取������������������������������������������������������取����������取����������������取�����取�����������������取�����取��������取���取���取�������取�������取"
5430643,What do you think sits on the plate to the left of the tomato?," # assumes one plate and one tomato
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    tomato_patches = image_patch.find(""tomato"")
    # Question assumes only one plate and one tomato patch
    if len(plate_patches) == 0 or len(tomato_patches) == 0:
        # If no plate or tomato is found, query the image directly
        return image_patch.simple_query(""What do you think sits on the plate to the left of the tomato?"")
    plate_patch = plate_patches[0]
    tomato_patch = tomato_patches[0]
    if plate_patch.horizontal_center < tomato_patch.horizontal_center:
        return plate_patch.simple_query(""What do you think sits on the plate to the left of the tomato?"")
    else:
        return tomato_patch.simple_query(""What do you think sits on the plate to the left of the tomato?"") # crop would include the plate so keep it in the query��������������取��������������取������������������������������������������������取������取������������������������������取�����取�����������������������������������������������取�������取���取��������取������������������取���������������������������������������������������������������取�����取�����������������������������取�����取�����取���取����取���取������������取"
523936,Is the woman in the top part of the picture?," # top, bottom, left, right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman in the top part of the picture?"")
    if woman_patches[0].vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no""����取��取�����取�������������������������������取���������������������取����取���取���取���������������������������������������������������取��������������������������������������������������������������������������������������������������������������取�����取����������������取��������取���取������取�������������������������������������������������取���������������������������������������取����������取�����取���������������取�����������������取���取���取���������取"
3189548,Is there a bottle on the nightstand that is on the bed?," # assumes one nightstand and one bed
    image_patch = ImagePatch(image)
    nightstand_patches = image_patch.find(""nightstand"")
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one nightstand and one bed patch
    if len(nightstand_patches) == 0 or len(bed_patches) == 0:
        # If no nightstand or bed is found, query the image directly
        return image_patch.simple_query(""Is there a bottle on the nightstand that is on the bed?"")
    nightstand_patch = nightstand_patches[0]
    bed_patch = bed_patches[0]
    bottle_patches = image_patch.find(""bottle"")
    for bottle_patch in bottle_patches:
        if bottle_patch.horizontal_center > nightstand_patch.horizontal_center and bottle_patch.horizontal_center < bed_patch.horizontal_center:
            return ""yes""
    return ""no""����取����������������取��������������������������取������������������������������������������������������������������������������������������取�������������������取���取��������������取���取����������������������������������������������������������������取�������取��������������取����取������������取"
14292161,The pot is of which color?," # returns the color of the pot
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""The pot is of which color?"")
    return pot_patches[0].simple_query(""The pot is of which color?"") # crop would include the pot so keep it in the query�������������������������取��������������取������������������取������������������������取�����������������������������������������������������������������������取����������取����������取�����������������取��������������������������������������������������������������������������������������������取������取����取���取���取������取������������取�����取����������取"
17495150,"What device is black, the microphone or the laptop?"," # returns the name of the device
    image_patch = ImagePatch(image)
    black_patches = image_patch.find(""black"")
    # Question assumes only one black patch
    if len(black_patches) == 0:
        # If no black is found, query the image directly
        return image_patch.simple_query(""What device is black, the microphone or the laptop?"")
    for black_patch in black_patches:
        microphone_patches = image_patch.find(""microphone"")
        laptop_patches = image_patch.find(""laptop"")
        # Question assumes only one microphone or laptop patch
        if len(microphone_patches) == 0 and len(laptop_patches) == 0:
            return image_patch.simple_query(""What device is black, the microphone or the laptop?"")
        if len(microphone_patches) == 0:
            return ""laptop""
        if len(laptop_patches) == 0:
            return ""microphone""
        for microphone_patch in microphone_patches:
            for laptop_patch in laptop_patches:
                if (microphone_patch.horizontal_center < black_patch.horizontal_center and
                    black_patch.horizontal_center < laptop_patch.horizontal_center):
                    return ""microphone""
        return ""laptop"" # if no microphone is to the left of the black patch, it must be the laptopERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting��取�������������������������取����������������������������取"
1521847,Is the cat on a desk?," # assumes one cat and one desk
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    desk_patches = image_patch.find(""desk"")
    if len(cat_patches) == 0 or len(desk_patches) == 0:
        return ""no""
    cat_patch = cat_patches[0]
    desk_patch = desk_patches[0]
    return bool_to_yesno(cat_patch.horizontal_center > desk_patch.horizontal_center) # assumes cat is on the desk if it is to the right of the desk çerçev çerçev�������������取������������取�����取������������������������取������取����������������取�����取���取��������������������������������������������������������������������������������取�����取�����������取�����取���取�����取��������������取����������取������������������������������������������������������������������取���������取������取����������取���取����取����取���取�����������������取����取�������取����取����取������取�������取"
16465081,The man is holding what?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""The man is holding what?"")
    man_patch = man_patches[0]
    holding_patches = image_patch.find(""holding"")
    # Question assumes only one holding patch
    if len(holding_patches) == 0:
        return image_patch.simple_query(""The man is holding what?"")
    holding_patch = holding_patches[0]
    return holding_patch.simple_query(""What is the man holding?"") # crop would include the man so keep it in the query��取��������������取���取���取���������������取�����取��������取�������������取�����������取�����������取���取�������������取������������取�������������������取���������取�������取����取��������取���������������������������������������取�����������������������������取�����������取�����������������������取��������取�������������������������������������������������������������������������取���������取���取��取�����取���������取���取���取����������������取"
17387032,What is on the post?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the post?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип��������������������取�����������������������������取������������取�����取��������������取��取�������������������取����������������������取����取��取����取���取���������取����������������������������������������������取���取�������������取������取���取���取����取��������������取����������������������������������������������������������������������������������取����取���������取������������取����取�������������������������������取��������取"
1892436,What is in front of the kids that are looking at the cake?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the kids that are looking at the cake?"") # crop would include the cake so keep it in the query��������取��取�������取�������������������������������������������������������������������取��������������������������取���������取������������������������������������������������������取����取�����取�����取����取����������取��������取�����������������������������������������������������������������������取���������������������������������取���取���������取�����取������取����取���取������取������������������������������������������取"
18906705,How big is the crowd?," # returns a string
    image_patch = ImagePatch(image)
    crowd_patches = image_patch.find(""crowd"")
    # Question assumes only one crowd patch
    if len(crowd_patches) == 0:
        # If no crowd is found, query the image directly
        return image_patch.simple_query(""How big is the crowd?"")
    return crowd_patches[0].simple_query(""How big is the crowd?"") # crop would include the crowd so keep it in the query�����������������取������取���������������取����取��������������取�������������������取���取��������取�������������������������取����取������������������������������������������������取��������取����取����取��������取�������取�������取�����������取������������������������������������������������������������������取���取��������取����������������取���取����取���取�������取���取����取���取���取����取���������������取"
6157200,Does the sign on the pole have white color?," # assumes one sign and one pole
    image_patch = ImagePatch(image)
    sign_patches = image_patch.find(""sign"")
    pole_patches = image_patch.find(""pole"")
    if len(sign_patches) == 0 or len(pole_patches) == 0:
        # If no sign or pole is found, query the image directly
        return image_patch.simple_query(""Does the sign on the pole have white color?"")
    sign_patch = sign_patches[0]
    pole_patch = pole_patches[0]
    return bool_to_yesno(sign_patch.verify_property(""sign"", ""white"") and pole_patch.verify_property(""pole"", ""white"")) # crop would include the pole so keep it in the query��取���取�����������������取���������������������������取����������������取������取����������������������������������������������������取������取�����取������取���������������������������������������������������������������������取����取��取����������取�������取������取��������取��������������取��������������������������������������取������取��取�����������������������取�����取�����������������取���������������取����取���������������������取"
16760226,What's the laptop in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the laptop in front of?"") # crop would include the laptop so keep it in the query�����������������������������取���������������取�����������������取���������������������取���������������������������������取���取����取�������������������������������������������������������取���取�����取�����������取�����取���取���������取�����取��������������������������������������������������������������������取����������������������取���取��������取���取�������������取���������取������取"
111054070,How large is the bed?," # returns a string describing the size of the bed
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""How large is the bed?"")
    return bed_patches[0].simple_query(""How large is the bed?"") # crop would include the bed so keep it in the query��������������取����������取���取�����������������������取������取�������������������������取������������������取������������������������������������������������������������取�����取����取������取����取�����取���取������取��取�����取���������������������������������������������������������������������������������������取���取�����������������取�����取�������取�������取�������������������取��取�����������������取"
14143886,Where is the person with the luggage standing on?," # assumes one person and one luggage
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    luggage_patches = image_patch.find(""luggage"")
    if len(person_patches) == 0 or len(luggage_patches) == 0:
        return image_patch.simple_query(""Where is the person with the luggage standing on?"")
    person_patch = person_patches[0]
    luggage_patch = luggage_patches[0]
    if person_patch.horizontal_center > luggage_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������������������������������������������������取���������������������取����取�����取��������取�����������������取�����取����取����������������������������������������取�������������������取��������取�������������������������������������������������������������������取�������������������取����取����取���取�����������取"
19872633,Are there either any fire extinguishers or pepper shakers?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fire_extinguisher = image_patch.exists(""fire extinguisher"")
    is_pepper_shaker = image_patch.exists(""pepper shaker"")
    return bool_to_yesno(is_fire_extinguisher or is_pepper_shaker) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting��������取������������取��������������������取����������������取������取��������������������������������������取"
12755010,Is the bottle to the right of a napkin?," # assumes one bottle and one napkin
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    napkin_patches = image_patch.find(""napkin"")
    if len(bottle_patches) == 0 or len(napkin_patches) == 0:
        return ""no""
    bottle_patch = bottle_patches[0]
    napkin_patch = napkin_patches[0]
    return bool_to_yesno(bottle_patch.horizontal_center > napkin_patch.horizontal_center) # assumes one bottle and one napkinніцип�������������������������������取�������������������������������������������������������取���取�������������������������取����������取�������取��������������������������������������������������取�����取�������取���������������������取������取��������取������������������������������������������������������������������������取�����取������������取����取���取����������取������取��������������取���取�������取�������取�����������取�����取�������������取������取�������取"
2747001,Are there any soaps or bombs?," # bomb is a toy
    image_patch = ImagePatch(image)
    is_soap = image_patch.exists(""soap"")
    is_bomb = image_patch.exists(""bomb"")
    return bool_to_yesno(is_soap or is_bomb)��取��取���������取��������取��取��������取��取������������取�����������������取�����取���������������取�����取���取����取�������������������������取���������������������������������������������������取������取��取����取������取����������������������������������������������������������������������取����取����������取����取��取���取������������取����取���������取����取���取����取�������取�����取����取������������取����取��������������取�������������������������������������������������������������������取���������������������������取��取"
1553845,Do you see baby giraffes or elephants?," # returns yes or no
    image_patch = ImagePatch(image)
    is_baby_giraffe = image_patch.exists(""baby giraffe"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_baby_giraffe or is_elephant) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes"
6898877,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"") # crop would include the sign so keep it in the query����取�����取��取�����取���������取��������������������������������������������������������������������������������������取���取����������取��取��������������������������������取�����������取����取�������取����������������������������������������������������������������������������������取��������������取������������������取�����取�����取�����取��������取����������������������������������������������������������������������������������������������������������������������取����������������������������������������取������取"
15862812,What is the sticker on?," # assumes one sticker patch
    image_patch = ImagePatch(image)
    sticker_patches = image_patch.find(""sticker"")
    if len(sticker_patches) == 0:
        # If no sticker is found, query the image directly
        return image_patch.simple_query(""What is the sticker on?"")
    return sticker_patches[0].simple_query(""What is the sticker on?"") # crop would include the sticker so keep it in the query��������������������������取����������������������������取�������������������������������������������������������������������������������������������������������取����取���������取��������取�����取�����取��������取�����������������������������������������������������������������������������������������������取���取���������取������������取����取���������取������������取"
141031470,On which side of the image is the white towel?," # assumes one towel patch
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""white towel"")
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the white towel?"")
    towel_patch = towel_patches[0]
    if towel_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������取������取��������取��������������取�������������取�������������������������������������������������������������������取�����������������������������������������取���取�����������取������取�������取���取������������取���取��������取���������������������������������������������������������������������������取���取����������取���������取���取��������取����取�����取������取��������取"
41026846,Who rides a motorcycle?," # assumes one motorcycle patch
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Who rides a motorcycle?"")
    motorcycle_patch = motorcycle_patches[0]
    return motorcycle_patch.simple_query(""Who rides a motorcycle?"") # crop would include the motorcycle so keep it in the query���������������取���取�����������取�����������������������������取���������������������取����取������������������������取���������取������������������������������������������������������������������取������取������������������������������������������������������������������������������������取�������取�������������取������取����取����取�����������取���������������取����取"
16540391,What is around the bathtub the towel is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the bathtub the towel is on?"") # crop would include the towel so keep it in the query���������取������������������取����������������������������取���������������������取���������取��������������������������取��������取���������取������取������������������������������������取���取���取������������������取����取�������取����取���取����取����取���������������������������������������������������������������������������������������取����取������取�������������������������取�����������取"
7469617,Is the man to the left or to the right of the person that is to the left of the people?," # assumes only one person patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the left or to the right of the person that is to the left of the people?"")
    man_patch = man_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is the man to the left or to the right of the person that is to the left of the people?"")
    person_patch = person_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        return image_patch.simple_query(""Is the man to the left or to the right of the person that is to the left of the people?"")
    people_patch = people_patches[0]
    if person_patch.horizontal_center < people_patch.horizontal_center:
        if man_patch.horizontal_center < person_patch.horizontal_center:
            return ""left""
        else:
            return ""right""
    else:
        return ""right"" # person is to the right of people, so man is to the right of person if person is to the left of people, and vice versaERCHANTABILITYERCHANTABILITY������������取����������������取����������������������������取�������������������������������������取������������������������������������������������取���������取���取������������������取"
64308,What's located on top of the soup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the soup?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�������������������������������������取�������������������取�����取�������取�������������取���取��������������������������������������取���������������������������������������������取����取����������取�����取�������取����������������取�����取�������������������������������������������������������������取�������取����取��取��取���������������������取����������取��������������取�����取����取����取����取�����取"
16660910,Are both the fence and the bench made of the same material?," # returns yes or no
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Are both the fence and the bench made of the same material?"")
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        return ""no""
    fence_material = fence_patches[0].simple_query(""What material is the fence made of?"")
    bench_material = bench_patches[0].simple_query(""What material is the bench made of?"")
    return bool_to_yesno(fence_material == bench_material) # returns yes or noніцип�������������������取����������������������������取��������������取����������������������������取���������������������������取����取���取�����������取��取���取���������������������������������������������取��������取����取�������取������取��取������取������取���取���取����取���取��取����取�����������������������������������������������������������������������取������������取����������取�������������取������������������取"
3196255,Are there helmets that are not white?," # returns yes or no
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are there helmets that are not white?"")
    for helmet_patch in helmet_patches:
        if not helmet_patch.verify_property(""helmet"", ""white""):
            return ""yes""
    return ""no""��������取��取������������取��������������取����������������取���������������������取��������取������������������������取������取�����������������������������������取����������取������������������取������取���取�������取�����������������取�����取������取������������������������������������������������������������������������������取������������取���取����取�����取�����取����取����取�������取���取����取�����取�����������取"
2992630,Is the bowl to the right or to the left of the man that is drinking?," # assumes one man and one bowl
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    bowl_patches = image_patch.find(""bowl"")
    if len(man_patches) == 0 or len(bowl_patches) == 0:
        return image_patch.simple_query(""Is the bowl to the right or to the left of the man that is drinking?"")
    man_patch = man_patches[0]
    bowl_patch = bowl_patches[0]
    if bowl_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left""���������������������������������������������������������������������取��取�������取���取���������������������������������������������������������������������������������取���������������������������������取�������取�������������������������������������������������������取���取��������取������取����取������取�����取���取���取"
513894,Is the person above the sand wearing glasses?," # assumes one person and one sand patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    sand_patches = image_patch.find(""sand"")
    if len(person_patches) == 0 or len(sand_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    sand_patch = sand_patches[0]
    if person_patch.vertical_center < sand_patch.vertical_center:
        return person_patch.simple_query(""Is the person wearing glasses?"")
    return ""no""����取���取��������������取�����������取��������������������������������取�������取��������������������������取���������取�����������������������������������������取���取���取���取������取��������取����取����������������������������������������������������������������������������������取����取���取����取������取����������取���������取�����取����取����取����取���取������������������������������������������������������������������������������������������取"
14167599,Is the color of the life preserver the same as that of the house?," # assumes one life preserver and one house
    image_patch = ImagePatch(image)
    life_preserver_patches = image_patch.find(""life preserver"")
    house_patches = image_patch.find(""house"")
    if len(life_preserver_patches) == 0 or len(house_patches) == 0:
        # If no life preserver or house is found, query the image directly
        return image_patch.simple_query(""Is the color of the life preserver the same as that of the house?"")
    life_preserver_patch = life_preserver_patches[0]
    house_patch = house_patches[0]
    return bool_to_yesno(life_preserver_patch.verify_property(""life preserver"", ""color"") == house_patch.verify_property(""house"", ""color"")) # assumes color is a property of both objectsніцип�������取��������������取����取���������������������取�����������������取����������������������取�������取�������������������������取���������取���取���取�������������取�������������������������������������������������������������������������取���取�������取���取�����������������取���������������������������������������������������������������������������取���取�����������������������取����取���������取�����取"
18264755,How is the weather?," # weather is a property of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"") # query the image directly
��������������������取�����������������取������������取�����取�����������������������������������������������������取���������������������������������������������取�����取����取����������取����取���取���取�����取�����������������������������������������������������������������������������������取������取���取����取����������取�������������取�������取���取���取����������取������取���取���取����取�������������������������������������������������������������������������������������������������������������������������������������������������������取������取���取"
6711450,What is the animal that is looking into the toilet that is not closed?," # assumes one toilet patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""looking into the toilet""):
            if not animal_patch.verify_property(""toilet"", ""closed""):
                return animal_patch.simple_query(""What is the animal?"")
    return image_patch.simple_query(""What is the animal that is looking into the toilet that is not closed?"") # query the image directly if no animal is found or if the toilet is closedERCHANTABILITY:initComponentsERCHANTABILITY��������取��������取��������������取��取�������������������������取�������������取����������取�������������������������������取�����取����������������������������������������������������取���取������������������取����取�����取����������取���取�����������取����取������������������������������������������������������������������取��������取���取����取�����������������������������取"
8641613,Do you see any helmets in the picture that are not red?," # returns yes or no
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you see any helmets in the picture that are not red?"")
    for helmet_patch in helmet_patches:
        if not helmet_patch.verify_property(""helmet"", ""red""):
            return ""yes""
    return ""no""��������取�������������取���������������取������������������取�������������������������取��������取��������������������������������������������������������������������������������取����������取�������取��������������取��������取����取����取����取�����取�������������������������������������������������������取����������取���取�������取�����������取������取����取���������取������取�������取�����取���取����取"
2409779,What does the happy person hold?," # assumes one happy person
    image_patch = ImagePatch(image)
    happy_patches = image_patch.find(""happy"")
    if len(happy_patches) == 0:
        # If no happy person is found, query the image directly
        return image_patch.simple_query(""What does the happy person hold?"")
    happy_patch = happy_patches[0]
    object_patches = image_patch.find(""object"")
    # Question assumes only one object patch
    if len(object_patches) == 0:
        return image_patch.simple_query(""What does the happy person hold?"")
    object_patch = object_patches[0]
    return object_patch.simple_query(""What does the happy person hold?"") # crop would include the object so keep it in the query��������������取�����������取���取���������������������������取��������������������������������������������取���取�������取�����������������������������������������������������取���取��������������取���取�������������������������������������������������������������������������������取�����取�����取���取���������取���取��������取�������取�����取������取���取"
8461507,Are there either tissue boxes or lamps in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_tissue_box = image_patch.exists(""tissue box"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_tissue_box or is_lamp)��������取���取�����取�����������������������������������取��������取��������������������������������������������������取�������������������������������������������������������取��������取������取����������������������������取��取��������������������������������������������������������������������������������������������取���取���取���取������取���取��������������取���取����取�����������取�������取���取�����������������������������������������������取"
10770916,Which kind of animal is it?," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"") # crop would include the animal so keep it in the query������取�����������取���������取��������������������������������������������������������取��������������������������取������������������������������������������������������������������取�����取�������取�����取���取���取���������������������������������������������������������������������������������������������取���取����������������������������������取����取����取������������������取������取�������取������取�����取��������取"
19102906,What type of drink is to the left of the plate?," # assumes one plate and one drink
    image_patch = ImagePatch(image)
    drink_patches = image_patch.find(""drink"")
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one drink and one plate patch
    if len(drink_patches) == 0 or len(plate_patches) == 0:
        # If no drink or plate is found, query the image directly
        return image_patch.simple_query(""What type of drink is to the left of the plate?"")
    drink_patch = drink_patches[0]
    plate_patch = plate_patches[0]
    if drink_patch.horizontal_center < plate_patch.horizontal_center:
        return drink_patch.simple_query(""What type of drink is to the left of the plate?"")
    else:
        return drink_patch.simple_query(""What type of drink is to the right of the plate?"") # crop would include the plate so keep it in the query�������������������������取�������������取������������������������������������取�������������������������������������取��������������������������������取������������取�������取����������������取��������������������取�����������������������������������������������������������取���取��������取��������取����������������������取����取����取�������取����取��������取����������取"
18315440,Is the sky cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cloudy = image_patch.verify_property(""sky"", ""cloudy"")
    is_blue = image_patch.verify_property(""sky"", ""blue"")
    return bool_to_yesno(is_cloudy and is_blue) # returns yes or no
�����取��������取����������������������取������������������取����������������取������������取�����������������取��������取���取�������������������������������������������取���取����取���������������取�����������������������������������������������������������������������取������������取������取���������������������取���取������取���������取����������取�������������������������取"
453061,Is the fork on the right of the image?," # assumes the image is in the correct orientation
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Is the fork on the right of the image?"")
    if fork_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""��������取��������������取��������������取������������������取�������������������取������������������������������取�����取�������取�������������������������������������������������取�����������������取����取���取�����������取��������������������������������������������������������������������取�����������������取���取���取�����取����取�����取���取�������������取���取������取�������取"
71002567,"What is the broccoli on, a table or a nightstand?"," # assumes only one broccoli patch
    image_patch = ImagePatch(image)
    broccoli_patches = image_patch.find(""broccoli"")
    if len(broccoli_patches) == 0:
        # If no broccoli is found, query the image directly
        return image_patch.simple_query(""What is the broccoli on, a table or a nightstand?"")
    broccoli_patch = broccoli_patches[0]
    table_patches = image_patch.find(""table"")
    nightstand_patches = image_patch.find(""nightstand"")
    if len(table_patches) == 0 and len(nightstand_patches) == 0:
        # If no table or nightstand is found, query the image directly
        return image_patch.simple_query(""What is the broccoli on, a table or a nightstand?"")
    if len(table_patches) > 0:
        for table_patch in table_patches:
            if table_patch.horizontal_center > broccoli_patch.horizontal_center:
                return ""table""
    if len(nightstand_patches) > 0:
        for nightstand_patch in nightstand_patches:
            if nightstand_patch.horizontal_center > broccoli_patch.horizontal_center:
                return ""nightstand""
    return ""table"" # if no table or nightstand is found, default to table if both are absent, or if present, return the first one foundækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeækkeække����������������������取���������������取������������������取������������������������������������������������取��������������������������������������取���取���������取�������取����取��������������取�����取"
17465089,Is the field green and small?," # field is a noun, so go step by step
    image_patch = ImagePatch(image)
    field_patches = image_patch.find(""field"")
    # Question assumes only one field patch
    if len(field_patches) == 0:
        # If no field is found, query the image directly
        return image_patch.simple_query(""Is the field green and small?"")
    field_patch = field_patches[0]
    is_green = field_patch.verify_property(""field"", ""green"")
    is_small = field_patch.verify_property(""field"", ""small"")
    return bool_to_yesno(is_green and is_small) # crop would include the field so keep it in the queryніцип��取�������������������取����������������������������������������������������������������取���������������������������取����取�����������取����取�������������������������������������������取��������������������取����取���������������������������������������������������������������������������取�����������取�����取"
16150157,What is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"") # crop would include the wall so keep it in the query������取��������������������取����取����������取�������������������取���取�����������������������取�������������������������取��取����������������������������������������������������������������������取�������取���取���������取�������������取����取����取����������������������������������������������������������������������������取���取���取������������������������������������取�������������取����取"
17882658,Is the van to the left or to the right of the SUV on the right side?," # assumes one van and one SUV
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""Is the van to the left or to the right of the SUV on the right side?"")
    van_patch = van_patches[0]
    suv_patches = image_patch.find(""SUV"")
    # Question assumes only one SUV patch
    if len(suv_patches) == 0:
        return ""no""
    suv_patch = suv_patches[0]
    if van_patch.horizontal_center < suv_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������������������取�����������������������������������������������������������������取�����������������������������������������取������取���������取�������������������取��������������������������������������������������������������������取�����取�����������取������������������取����取"
15101358,Is the girl to the left of the boy?," # assumes one girl and one boy
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    boy_patches = image_patch.find(""boy"")
    if len(girl_patches) == 0 or len(boy_patches) == 0:
        return ""no""
    girl_patch = girl_patches[0]
    boy_patch = boy_patches[0]
    return bool_to_yesno(girl_patch.horizontal_center < boy_patch.horizontal_center) # assumes one girl and one boyturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
12785181,What animals are in the grass?," # returns a list of strings
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animals are in the grass?"")
    return [animal_patch.simple_query(""What animal is in the grass?"") for animal_patch in animal_patches] # crop would include the grass so keep it in the query�����取��取������������������������������������������取���取������������������������������取�������������取�������������������������������������������取����取���取����取���取����取���取��������������������������������������������������������������������������������取��������取������取���取����������������������取�����取�����取���������������������������������������������������������������������������������������������������取�������取����取"
348093,Are there both an apple and a bag in the picture?," # returns a boolean
    image_patch = ImagePatch(image)
    is_apple = image_patch.exists(""apple"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_apple and is_bag)�������������取��������������取�����������取����������������取���取�������������������取����������������������������取���������取�����������������������������������������������取���取������取�������取����取�������取��������取���取���������取����取��������������������������������������������������������������������������������������取�������������������������取��������取����取�����取��������取�����取���������取������取"
314181,Which sign is shown?," # returns the text of the sign
    image_patch = ImagePatch(image)
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch.simple_query(""Which sign is shown?"")
    return sign_patches[0].simple_query(""Which sign is shown?"") # crop would include the sign so keep it in the query�����������������������������������������������������取���������������������取������������取����取�����������������������取�������取��������������������������������������������������取���取��������������取���取������取���取���������取�����������取�����取������������������������������������������������������取��取�������������������������取���取������取��������取��������取������取����取�������������������取"
16275314,"On which side is the woman, the right or the left?"," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side is the woman, the right or the left?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取���������������������������������������������������������������������������������������取����������������取�������������������������������取���取���取��������������������������������������������������������������������������������������������取����取�������取�������取����取��������������取���取����取����取���取������取������取������取������取�������������取����取"
19535592,Who runs on the sand?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who runs on the sand?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who runs on the sand?"") # crop would include the sand so keep it in the query��取����������取���������������取����������������取�����取�������取���������������������������������������取�����������������������������取����取���取���取����������取�������取���������������������������������������������������取����取������取���������取���取����������取����������取����取�������������取�������取���������������������������������������������������������取���取��������取��������取����取��������取��������取�����������取����������取���取��������取����������取����������取����取�����取����取"
156886,Is there a giraffe near the bush?," # assumes one giraffe and one bush
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    bush_patches = image_patch.find(""bush"")
    if len(giraffe_patches) == 0 or len(bush_patches) == 0:
        return ""no""
    giraffe_patch = giraffe_patches[0]
    bush_patch = bush_patches[0]
    if giraffe_patch.horizontal_center > bush_patch.horizontal_center:
        return ""yes""
    return ""no""���取��������������������取������������������取������������������取���������������������取���取����取������������������������������������������������������������取�������取����取�������取����������������取��������取�����������������������������������������������������������������������取����取���������������取�����取���取�����取����������������取"
1756642,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
���������������������������������取������������������取���������������������取�����������������������������取��������取����������������������������取���������取����取�������取��������������取���取����取���������������������������������������������������������������������取�����������取���取����������������取�����������取��������取�����������������取�������������������������������������������������������������������������������������������������������������������������������取����������������������������������������������取���������取���取"
11177243,Who wears the shirt?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who wears the shirt?"")
    return person_patches[0].simple_query(""Who wears the shirt?"") # crop would include the shirt so keep it in the query�����������������������������������������������������取��������������������取������������取����������������������������取����������������������������������������取�����取�����取���������取��������������取������������取���取�������������������������������������������������������������������������取�����������������取����取���取�������������������取����������取����取"
1972390,What type of animal is standing in the field?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What type of animal is standing in the field?"")
    return animal_patches[0].simple_query(""What type of animal is standing in the field?"") # crop would include the field so keep it in the query�����取�����取�������取�������������������������������������取���������������������������������������������������������取������������������������������������取������取������取����取����������取���取����取�������取���取�������取���取�����������������������������������������������������������取����取���取������取�������������������������取���取����取������取���取��������取����取"
14579439,Is the stuffed animal on the right?," # assumes only one stuffed animal
    image_patch = ImagePatch(image)
    stuffed_animal_patches = image_patch.find(""stuffed animal"")
    # Question assumes only one stuffed animal patch
    if len(stuffed_animal_patches) == 0:
        # If no stuffed animal is found, query the image directly
        return image_patch.simple_query(""Is the stuffed animal on the right?"")
    return bool_to_yesno(stuffed_animal_patches[0].horizontal_center > image_patch.horizontal_center) # crop would include the stuffed animal so keep it in the query��������������取���取������������������������取����������������������������������������������取�����������������������取������������������������������������������������取���取�������������取�����取����取�������取����取���取���取���������取����取����取�������取����������������������������������������������������������������������������������取��������取�����取����取���取���取���取���取���取���取��������取����取�����������������取�������������取��������������������取"
6645395,Is the gray building behind the passengers that are boarding the airplane?," # assumes one airplane and one building
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    building_patches = image_patch.find(""building"")
    if len(airplane_patches) == 0 or len(building_patches) == 0:
        return ""no""
    airplane_patch = airplane_patches[0]
    building_patch = building_patches[0]
    if building_patch.horizontal_center > airplane_patch.horizontal_center:
        return ""yes""
    return ""no""���取�����������取���������������������������������������取��������������������������取���取��������������������������取����������������������������������������������取�������取����������������取���取���������取������������������������������������������������������������取������������取��������取�����������������取���������取����取������取����取�����������取����取���������������������������������������������������������������������������������������������取"
19610200,Is the fence metallic?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the fence metallic?"")
    return bool_to_yesno(fence_patches[0].verify_property(""fence"", ""metallic"")) # crop would include the fence so keep it in the query���������取������取���������������������取���取����取�������������取������取������������������������取�������������������������取�����取����������������������������������������������������������������������取�����取�����取�����取���取������������取����取����������������������������������������������������������������������������取�����取�������取������取���������������取���取�����������取���取"
5299471,What does the girl that to the left of the trashcan carry?," # assumes one trashcan patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What does the girl that to the left of the trashcan carry?"")
    girl_patch = girl_patches[0]
    trashcan_patches = image_patch.find(""trashcan"")
    # Question assumes only one trashcan patch
    if len(trashcan_patches) == 0:
        return image_patch.simple_query(""What does the girl that to the left of the trashcan carry?"")
    trashcan_patch = trashcan_patches[0]
    if girl_patch.horizontal_center < trashcan_patch.horizontal_center:
        return girl_patch.simple_query(""What does the girl that to the left of the trashcan carry?"")
    return girl_patch.simple_query(""What does the girl that to the right of the trashcan carry?"") # crop would include the trashcan so keep it in the query������������取��������������������������取������������������取�����������������������取�����������������������取�����取�����取�������取��������������������������������������取���������取�������������取����取�����������取�����������������������������������������������������������������������������������取������������������������取"
7548203,Which kind of vegetable is on the pizza?," # assumes only one pizza patch
    image_patch = ImagePatch(image)
    pizza_patches = image_patch.find(""pizza"")
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch.simple_query(""Which kind of vegetable is on the pizza?"")
    pizza_patch = pizza_patches[0]
    vegetable_patches = pizza_patch.find(""vegetable"")
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return pizza_patch.simple_query(""Which kind of vegetable is on the pizza?"")
    return vegetable_patches[0].simple_query(""Which kind of vegetable is on the pizza?"") # crop would include the pizza so keep it in the query��取����������取����������取���取�����������取������������取���取�����������������������取���取������������������取���������������������������������取����������取����������取���������������������取������������������������������取�����取���������取���取�������������������������������取����������取�����取�������������������������������������������������������������取����������������取�������������取��������取��������������取"
91027737,On which side is the pan?," # left or right
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch.simple_query(""On which side is the pan?"")
    pan_patch = pan_patches[0]
    if pan_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������取�����取�����取����������������取���������������取���������取��取��������������取�����取���取���������������������������取����取���������������������������������������������������取�������������������取���取����������������������������������������������������������������������������������������������������������������取��������取����������取����取���������取����取�����������取����������������������������������������������������取"
19133443,Are the black cars in the top part of the photo?," # returns yes or no
    image_patch = ImagePatch(image)
    black_car_patches = image_patch.find(""black car"")
    # Question assumes only one black car patch
    if len(black_car_patches) == 0:
        # If no black car is found, query the image directly
        return image_patch.simple_query(""Are the black cars in the top part of the photo?"")
    for black_car_patch in black_car_patches:
        if black_car_patch.vertical_center > image_patch.vertical_center:
            return ""yes""
    return ""no""������������取�����������������������取��������������������������������������取��������������������������取���取���取����������������������������������������������取�������������取����取���取�������取����取���取������������������取���������������������������������������������������������������������取���������������取����������取����取����������取�����������������������������������������取������取"
6144031,Who is in the living room?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is in the living room?"")
    return person_patches[0].simple_query(""Who is in the living room?"") # crop would include the person so keep it in the query�������������取�������������������������取����取���������������取����������������������������������������������������������取���������������������������������������取���������取�����������取���取�����取��������取����������������取�����������取���������������������������������������������������������取�������取��������������取�������������������取����������������取"
14300987,What is the sink made of?," # assumes one sink patch
    image_patch = ImagePatch(image)
    sink_patches = image_patch.find(""sink"")
    if len(sink_patches) == 0:
        # If no sink is found, query the image directly
        return image_patch.simple_query(""What is the sink made of?"")
    return sink_patches[0].simple_query(""What is the sink made of?"") # crop would include the sink so keep it in the query���取������������������������取��������������������������取�����������������������取����取����������������������������取��������������������������������������取���取��������������取���������取�����������������������������������������������������������������������������取���������取������取�������取���取������������取�����取�����取���������������������������������������������������������������������������取���������取����������������������������取����������������������取��取����������取"
16464341,Is there a black cat or bird?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_cat = image_patch.exists(""black cat"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_black_cat or is_bird)������������取���������������������������������������取����取�������������������������������������������取�����取����取�����取������������������������������������������������������取���取������取������������取�����取�����取�������������������������������������������������������������������取������������������������������取���取��������取�������取�����������取����取������������取�����取��������取����������取"
1241741,Do you see a bicycle or a biker in this picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bicycle = image_patch.exists(""bicycle"")
    is_biker = image_patch.exists(""biker"")
    return bool_to_yesno(is_bicycle or is_biker) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
844747,Are there both a pillow and a kitten in the image?," # returns a boolean
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_kitten = image_patch.exists(""kitten"")
    return bool_to_yesno(is_pillow and is_kitten)��取��取������取������������������取�������取���取����取��������������取����取�����������������������������������������������������������������������取�����������������������取�����������������������������������������������������������������������������������取����取����取������取�����取��������������������取����取�����������������������������������������������������������������������������������������取��取������������������������取�������������取��取�������取�����������取������取�������取��������������取��������取�������取�����取���取����取���取���取�����取"
1104500,What kind of food is in the box?," # assumes one box patch
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""What kind of food is in the box?"")
    box_patch = box_patches[0]
    food_patches = box_patch.find(""food"")
    if len(food_patches) == 0:
        # If no food is found in the box, query the image directly
        return image_patch.simple_query(""What kind of food is in the box?"")
    return food_patches[0].simple_query(""What kind of food is in the box?"") # crop would include the food so keep it in the query������������������������������������������������取���取���取���取�������������������取����取���取�������取������������������������������������������������������������������取����取��取������取���取����������取�������取����取�������������������������������������������������������������������������������������取����取�������取�����取��������取���取���取��取����取������取�����������������������取�����取"
4204973,What is the food that is to the left of the kid called?," # assumes one food patch and one kid patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    kid_patches = image_patch.find(""kid"")
    if len(food_patches) == 0 or len(kid_patches) == 0:
        # If no food or kid is found, query the image directly
        return image_patch.simple_query(""What is the food that is to the left of the kid called?"")
    food_patch = food_patches[0]
    kid_patch = kid_patches[0]
    if food_patch.horizontal_center < kid_patch.horizontal_center:
        return food_patch.simple_query(""What is the food that is to the left of the kid called?"")
    return food_patch.simple_query(""What is the food that is to the right of the kid called?"") # crop would include the kid so keep it in the query���取��取������������������������������������������������������������������������������������������������������������������取��取�������������取�����取�����������������������������������������取������������取�����取��������������取�����取���������������������������������������������������������������������������取������������������������取�������������取��取��取�����取�������������取"
11820726,"What device is the desk in front of, a television or a printer?"," # assumes only one desk patch
    image_patch = ImagePatch(image)
    desk_patches = image_patch.find(""desk"")
    if len(desk_patches) == 0:
        # If no desk is found, query the image directly
        return image_patch.simple_query(""What device is the desk in front of, a television or a printer?"")
    desk_patch = desk_patches[0]
    television_patches = image_patch.find(""television"")
    printer_patches = image_patch.find(""printer"")
    # Question assumes only one television or printer patch
    if len(television_patches) == 0 and len(printer_patches) == 0:
        return image_patch.simple_query(""What device is the desk in front of, a television or a printer?"")
    if len(television_patches) > 0:
        for television_patch in television_patches:
            if television_patch.horizontal_center > desk_patch.horizontal_center:
                return ""television""
    if len(printer_patches) > 0:
        for printer_patch in printer_patches:
            if printer_patch.horizontal_center > desk_patch.horizontal_center:
                return ""printer""
    return ""television"" # if no television or printer is found, return television as default (or printer if preferred)���取���������������������取���取�������������������������取���������������������取���取�����取�����取��������������������������取�������������������������������������取������������取���取����������取���������取����取����������������取�����������������������������������������������������������������取���取������取"
18114588,Do you see a helmet there?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""helmet"")) # returns True or False, which is then converted to yes or noERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting�����取����取���������取���������������������������������������������������������������取����取���取��������������������������取���取�������取������取����������取����������������������������������������������������������������������������������取����������取"
11950874,What animal is standing on the ground?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is standing on the ground?"")
    animal_patch = animal_patches[0]
    return animal_patch.simple_query(""What animal is standing on the ground?"") # crop would include the ground so keep it in the query��取��������������������������������������������������取������������������������������������取��取��取����������������������������������������������������������������������������������������������������取������取���取��������������������取����取�����������取�������������������������������取�����������������������������������������������������������������取����取�����取�����取���取����������取�����������������������取�����取���取���取���������取�����������取����取"
10216953,Is the small car to the left of the fork on the right?," # assumes one fork patch
    image_patch = ImagePatch(image)
    small_car_patches = image_patch.find(""small car"")
    # Question assumes only one small car patch
    if len(small_car_patches) == 0:
        # If no small car is found, query the image directly
        return image_patch.simple_query(""Is the small car to the left of the fork on the right?"")
    for small_car_patch in small_car_patches:
        fork_patches = image_patch.find(""fork"")
        for fork_patch in fork_patches:
            if fork_patch.horizontal_center > small_car_patch.horizontal_center:
                return ""yes""
    return ""no""����取����������������取������������取������������������取�������������������取�����取���取���������������������取�����取���取���������������������������������取����������取�����取���取����取�����取��������取���������������������������������������������������������������������������������取���������取����取��������������取�������取����取�����取"
16184942,Does that grass look brown and short?," # returns a boolean
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does that grass look brown and short?""))
    return bool_to_yesno(grass_patches[0].verify_property(""grass"", ""brown"") and grass_patches[0].verify_property(""grass"", ""short"")) # crop would include the grass so keep it in the query��取���取���������������������������������������������取������取�������������������������������������取�������取�����������������������取������取�������������������������������������������������������������������取���取������取����������取�����取�����������取���取��������������������������������������������������������������取�������取���取��取����������������取���取�������取���取����取����取���取���取����������取������取���取����取����������������取������取�������取��������取���取�������取�������取"
6312238,Is the hydrant to the left of the car?," # assumes one hydrant and one car
    image_patch = ImagePatch(image)
    hydrant_patches = image_patch.find(""hydrant"")
    car_patches = image_patch.find(""car"")
    if len(hydrant_patches) == 0 or len(car_patches) == 0:
        return ""no""
    hydrant_patch = hydrant_patches[0]
    car_patch = car_patches[0]
    return bool_to_yesno(hydrant_patch.horizontal_center < car_patch.horizontal_center) # left if less than, right if greater than overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting���������������������������������������取��������������������取����������������������������������取����取�����������������������������取���������取����取������取���������取����取������取�����取���取���取����������������������������������������������������������������取�����取���取������������取����取����取�����取�����取�����取"
16646227,On which side of the picture is the gray car?," # assumes one gray car
    image_patch = ImagePatch(image)
    gray_car_patches = image_patch.find(""gray car"")
    if len(gray_car_patches) == 0:
        # If no gray car is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the gray car?"")
    gray_car_patch = gray_car_patches[0]
    if gray_car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取����������������������取�������������������取�����������������������取��������������������������取�����������������������������������������������������取����取���������取�����取������������������取�����������������������������������������������������������������取������取�������取�����取���取�������������取�����取��������取����取�������取������取���取"
10484636,Is the ball to the right or to the left of the person that is wearing sneakers?," # assumes one person and one ball
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one person and one ball patch
    if len(person_patches) == 0 or len(ball_patches) == 0:
        # If no person or ball is found, query the image directly
        return image_patch.simple_query(""Is the ball to the right or to the left of the person that is wearing sneakers?"")
    person_patch = person_patches[0]
    ball_patch = ball_patches[0]
    if ball_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����������取���������取��������������取�������������取��������������������取�������取������������������������������取�������������������������������������������������取���������取��������取����取���取������������������������������������������������������������������������������������������取������������取�������取����取������������������取����取����取�����取"
3443704,What is the woman wearing?," # returns the answer to ""What is the woman wearing?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"") # crop would include the woman so keep it in the query�����������������取�������������取����������取���取��������������取����������������������������取���������������������������取����取��������������������������������������������������取�������������取�����取��������取�����取����������取�������取����取��������������������������������������������������������������������������������取������取�����������������������取���取������取���取�����取�����������������取����取�������������������取"
19313572,What is the color of the tent to the left of the vehicles?," # assumes only one tent and one vehicle
    image_patch = ImagePatch(image)
    tent_patches = image_patch.find(""tent"")
    vehicle_patches = image_patch.find(""vehicle"")
    if len(tent_patches) == 0 or len(vehicle_patches) == 0:
        # If no tent or vehicle is found, query the image directly
        return image_patch.simple_query(""What is the color of the tent to the left of the vehicles?"")
    tent_patch = tent_patches[0]
    vehicle_patch = vehicle_patches[0]
    if tent_patch.horizontal_center < vehicle_patch.horizontal_center:
        return tent_patch.simple_query(""What is the color of the tent?"")
    else:
        return vehicle_patch.simple_query(""What is the color of the vehicle?"") # crop would include the vehicle so keep it in the query��������������取�������������取���������������取�������������取��������������������取�������������������������������取����取�����������������������������������������������取���取���取���������取�������取������取���取�����取������取��������������������������������������������������������������������������取����取���取�����������������取�����取���������取����取����取����取�������������������������取"
10885675,What is the toilet seat made of?," # assumes one toilet seat
    image_patch = ImagePatch(image)
    toilet_seat_patches = image_patch.find(""toilet seat"")
    if len(toilet_seat_patches) == 0:
        # If no toilet seat is found, query the image directly
        return image_patch.simple_query(""What is the toilet seat made of?"")
    return toilet_seat_patches[0].simple_query(""What is the toilet seat made of?"") # crop would include the toilet seat so keep it in the query�������������������������取���取���������������������������������������������������取�����取��������������������������取���������取���������������������������������������������������取�������取���������������������������取��������取���取�����������������������������������������������������������取���取���取���取�����������������������������������������������������������������������������������������������������������������取"
6926432,What animal is resting on the blanket?," # assumes one blanket patch
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What animal is resting on the blanket?"")
    blanket_patch = blanket_patches[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is resting on the blanket?"")
    animal_patch = animal_patches[0]
    if animal_patch.vertical_center > blanket_patch.vertical_center:
        return animal_patch.simple_query(""What animal is resting on the blanket?"")
    return blanket_patch.simple_query(""What animal is resting on the blanket?"") # crop would include the animal so keep it in the query��������������取������������取����������取������������������取���������������取���取����取������取��������取���������������������取����������������������������������������取��������取��取�����取����������取���取�����取����取������������������������������������������������������������������������������取���取��������������������������取�������取�����取������取�����取����取���取���取���取��������取�����取����取"
14561612,What color do you think the bikini that the woman is wearing is?," # returns the color of the bikini
    image_patch = ImagePatch(image)
    bikini_patches = image_patch.find(""bikini"")
    # Question assumes only one bikini patch
    if len(bikini_patches) == 0:
        # If no bikini is found, query the image directly
        return image_patch.simple_query(""What color do you think the bikini that the woman is wearing is?"")
    return bikini_patches[0].simple_query(""What color is the bikini?"") # crop would include the bikini so keep it in the query�����������������取�������取����������������取����取������������������������������������������������������������������取����������������������������������������������������取���������取������������取�����取���取���取����取����������取���取����取����取���������取��取�������������������������������������������������������������������取������������取����������������取�����取������������取���取������������������������取"
6587755,Are both the room and the bowl the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    room_patches = image_patch.find(""room"")
    # Question assumes only one room patch
    if len(room_patches) == 0:
        # If no room is found, query the image directly
        return image_patch.simple_query(""Are both the room and the bowl the same color?"")
    room_color = room_patches[0].simple_query(""What color is the room?"")
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        return ""no""
    bowl_color = bowl_patches[0].simple_query(""What color is the bowl?"")
    return bool_to_yesno(room_color == bowl_color) # returns yes or noніцип������������������取���取���取�����������取������������取���取��������������������������������������取������������������������取�������取������取��������������������������������������������������������������取����取���取����取������������������取������取�����������������������������������������������������������������������������������������������������取�����取������������������取�������取����取���取������取������取"
4479543,Is the barn white or brown?," # returns ""white"" or ""brown""
    image_patch = ImagePatch(image)
    barn_patches = image_patch.find(""barn"")
    # Question assumes only one barn patch
    if len(barn_patches) == 0:
        # If no barn is found, query the image directly
        return image_patch.simple_query(""Is the barn white or brown?"")
    return barn_patches[0].best_text_match([""white"", ""brown""]) # crop would include the color so keep it in the query���������������取�������������取�����������������������������������������������������取�����取����������������������������������������������������������������������������取���������取���������������������������取������������取��������������������������������������������������������取�����取�������取������������取���取���������取�����取���取�������������������取"
972522,Does the box look white or brown?," # returns yes or no
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Does the box look white or brown?"")
    return box_patches[0].best_text_match([""white"", ""brown""]) # crop would include the color so keep it in the query��������������������������取������������������������������������������������取�������取����������������������������������������������������������������������������取������取������取����取��������������������������������取��������������������������������������������������取���������取��取��������������取�����取����������������取���取����取���取���取"
3948528,What is the bowl made of?," # assumes one bowl patch
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""What is the bowl made of?"")
    return bowl_patches[0].simple_query(""What is the bowl made of?"") # crop would include the bowl so keep it in the query���取������������������������取����������取������������������取���取��取��������������������取���取������������������������������取���������取�����������������������������������取���������取�����������取������取�������取������������������������������������������������������������������������������取�������取���取�����取������取������取�����取�����取�����������取�����取����取������取"
15724828,Is the bench in front of the rock gray or red?," # assumes one bench and one rock
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    rock_patches = image_patch.find(""rock"")
    if len(bench_patches) == 0 or len(rock_patches) == 0:
        # If no bench or rock is found, query the image directly
        return image_patch.simple_query(""Is the bench in front of the rock gray or red?"")
    bench_patch = bench_patches[0]
    rock_patch = rock_patches[0]
    if bench_patch.horizontal_center > rock_patch.horizontal_center:
        return bench_patch.best_text_match([""gray"", ""red""])
    else:
        return rock_patch.best_text_match([""gray"", ""red""]) # crop would include the rock so keep it in the query��取�������取������������������取������取����取�������������������取��������������取��������������������������取����������������������������取���取���取�����取������������������������������������������������������������取��������取���取����������������取������取����������������取���������������������取���������������������������������取���取����������取����������取�����������取���取��������取���取���取������取���取�����������取����������取����取"
866459,On which side is the couch?," # left, right, top, bottom
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""On which side is the couch?"")
    if couch_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif couch_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    elif couch_patches[0].vertical_center < image_patch.vertical_center:
        return ""top""
    else:
        return ""bottom""����������������取�����������������������������������取������������������������������������������������取��������取������������������������������������������������取���取�������取���取���取�����取��������取��������������������������������������������������������������������取������������������������取�����取��������取�������取���取���取������������取�����������������������取"
8614812,Is the person that is playing wearing shorts?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person that is playing wearing shorts?"")
    person_patch = person_patches[0]
    return bool_to_yesno(person_patch.verify_property(""person"", ""shorts"")) # crop would include the shorts so keep it in the query��������������取������������取���取��������������取��������������取���������������������取������取��������������������������������������取���������������������������������������������取��������������取������������取��������取������������������������������������������������������������������������������取�����取�����取���取�������������������取����取���取�������取����取�����取"
167438,What is wearing the ground?," # ground is a property of the image, not an object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing the ground?"") # crop would include the ground so keep it in the query���������������取��������������取����取����������取�����取������������������������������取�������取���������������������������取������取��������������������������������������������������������������������取�����取���取����取�������������取����取���取���������取����������������������������������������������������������������������������取�����取���取�������������������取����������取������取���取���������取�������取����������取"
9418088,Which kind of furniture is wooden?," # returns a list of strings
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is wooden?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.verify_property(""furniture"", ""wooden""):
            return furniture_patch.simple_query(""Which kind of furniture is wooden?"") # crop would include the furniture so keep it in the query
    # If no furniture is wooden, pick the first furniture
    return furniture_patches[0].simple_query(""Which kind of furniture is wooden?"") # crop would include the furniture so keep it in the query����������������取��������取��������������������������������������������������取����������������������������������������������������������取�������������������������取������取����������取�������取���������取���取�������取����取�������������������������������������������������������取���������������取��������������取������取������取����取���取������取����������取�����������取"
1042377,Who is standing beside the person that is wearing a dress?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is standing beside the person that is wearing a dress?"")
    person_patch = person_patches[0]
    dress_patches = image_patch.find(""dress"")
    # Question assumes only one dress patch
    if len(dress_patches) == 0:
        return image_patch.simple_query(""Who is standing beside the person that is wearing a dress?"")
    dress_patch = dress_patches[0]
    if dress_patch.horizontal_center > person_patch.horizontal_center:
        return image_patch.simple_query(""Who is standing beside the person that is wearing a dress?"")
    return image_patch.simple_query(""Who is standing beside the person that is wearing a dress?"") # crop would include the dress so keep it in the query��取�������������������������������������取����������取�������������������������������������������取���取�����取������������������������取���������取���取������取���取����取���取���取�����������取����取��������������������������������������������取�����������取������取����取����������取��������������������������������������������������������������������取�������取������������������取"
16889676,Is it an indoors or outdoors scene?," # assumes the image is a single scene
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"") # assumes the image is a single sceneніцип�������������������取���������������取������������取���取����������������取����取��������������������取����������������������������������取���取�����取���取��������������������������������������������������������取��������������������������取���取������取�����取��������������������������������������������������������������������������������������������������������������������������取��������������取�����������取����������取�������取�����取���������取����取��������取"
10324400,How fat are the long skis?," # returns a string
    image_patch = ImagePatch(image)
    ski_patches = image_patch.find(""ski"")
    # Question assumes only one ski patch
    if len(ski_patches) == 0:
        # If no ski is found, query the image directly
        return image_patch.simple_query(""How fat are the long skis?"")
    return ski_patches[0].simple_query(""How fat are the long skis?"") # crop would include the skis so keep it in the query���������������取���取�������取��������������������������取����取��������������������取���取����������������������������������������������������������������������������������取��������取�������取�����取�������取���取��������取������������������������������������������������������������������������������������取������������������������������取"
2211743,Is the sky clear or overcast?," # clear or overcast
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky clear or overcast?"") # clear or overcastніцип�����取��������������������������������������������取�����������������������������������������������������������取����取����取���������取������������取����取��取��������������������������������������������������������取���������取�����取�����取���取����取�������取����������������������������������������������������������������������������������������������������取���取������������取���取�����取���������取��������������������取���取"
4224772,Are there bottles to the left of the pencils in the bottom part of the image?," # assumes only one bottle and one pencil
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    pencil_patches = image_patch.find(""pencil"")
    # Question assumes only one bottle and one pencil patch
    if len(bottle_patches) == 0 or len(pencil_patches) == 0:
        # If no bottle or pencil is found, query the image directly
        return image_patch.simple_query(""Are there bottles to the left of the pencils in the bottom part of the image?"")
    bottle_patch = bottle_patches[0]
    pencil_patch = pencil_patches[0]
    if bottle_patch.horizontal_center < pencil_patch.horizontal_center and bottle_patch.vertical_center > image_patch.vertical_center:
        return ""yes""
    return ""no""����������������取�������������������������������������取�������������取��������取���������������������������取�����取�������������������������������������������取�������取�������取���取���取����������������取��������������������������������������������������������������������������取���取����������取���取������取�����������取������取������������取��取�����������������������������������取"
15478302,Is there any dark door or window in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_dark_door = image_patch.exists(""dark door"")
    is_dark_window = image_patch.exists(""dark window"")
    return bool_to_yesno(is_dark_door or is_dark_window)������������������������������������取���取�������������������������������������取���������������������������取���取�����取�����������������������������������������������������������取�����取����取������取���������������������������������������������������������������������������������������������������取�����取�����取������取������取���������取���取���取�������取���������������������������������取"
18414234,Do you see either a knife or a chair in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_knife = image_patch.exists(""knife"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_knife or is_chair)����������������������取���取������������������������������������������������取���取�����取��������������������������取���取���取����取������������������������������������������取������取�����取����������取����取���������������取������取�����������������������������������������������������������������������������取���������������取���������������取�����取���取�������取����������取����取�����取���取�����取�������取�����取���取"
19779815,Is the book red or yellow?," # returns ""red"" or ""yellow""
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Is the book red or yellow?"")
    return book_patches[0].best_text_match([""red"", ""yellow""]) # crop would include the color so keep it in the query���������������������������������������取����������������������������������������取���取���������������������������取���取���取�������������������������������������������������取����������������取��������取����取����������������������������������������������������������������������������������������取����������������������取���取������取�����取�����取"
7257283,Are there men to the left of the picture?," # picture is the name of the object
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there men to the left of the picture?"")
    for man_patch in man_patches:
        if man_patch.horizontal_center < image_patch.horizontal_center:
            return ""yes""
    return ""no""��������������������取������������������������������取�����������������������取�����������������������������取������取������������������������������������������取�������������取���取������������取������取���������������������������������������������������������������������取���取�����取����取����������取���取��������取������取���取���������取��������取"
6621625,On which side of the picture is the bench?," # assumes the picture is a single image
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bench?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������������������取�������������������������������������取������������������������������取����取������取�����������������������������������取����取����取�������������取���取�����取������取����取���������������������������������������������������������������������������取������取���������������������������取�����取�����取"
19311589,Are there both fences and horses in this picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_fence and is_horse)�����������������������取�����取��������取����������������取�����������������������取�����������������������������������������������������������������������������������������取�����������取������取���������������������������������������������������������������������������取���取�������������取�����取����取������������������������������������������取����������������������������取��������������������������������������������������������������������������������������������������������������������������取��取������取"
171018070,What device is to the right of the container that the person is to the left of?," # assumes one person and one container
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    container_patches = image_patch.find(""container"")
    # Question assumes only one person and one container patch
    if len(person_patches) == 0 or len(container_patches) == 0:
        # If no person or container is found, query the image directly
        return image_patch.simple_query(""What device is to the right of the container that the person is to the left of?"")
    person_patch = person_patches[0]
    container_patch = container_patches[0]
    device_patches = image_patch.find(""device"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > container_patch.horizontal_center and device_patch.horizontal_center < person_patch.horizontal_center:
            return device_patch.simple_query(""What device is to the right of the container that the person is to the left of?"")
    return ""no"" # if no device is found, return no
�������取�����������取�����������������������������取������������������取�������取��������������������������取�����������������������������������������������取������������取����������取��������取������取������������取�������取������������������������������������������������������取�������取���取���������������取���取���������������取����取�����������取����������������取"
171031333,Do you see blankets in the picture that are not black?," # returns yes or no
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""Do you see blankets in the picture that are not black?"")
    for blanket_patch in blanket_patches:
        if not blanket_patch.verify_property(""blanket"", ""black""):
            return ""yes""
    return ""no""���取����������取������������������������������������取���������������������取������取���取����取�����������������������取�����������������������������������������取������������取�������������������取��������������������������������������������������������������取�����取��������������������取��������取����取������取����������取�����取������������������������������������������������������������������������������������������������������������������������取"
16695341,What is the fence made of?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What is the fence made of?"")
    return fence_patches[0].simple_query(""What is the fence made of?"") # crop would include the fence so keep it in the query�����������������取���������取�����������������������������取�������������������取���取���������取����������������������������������������������������������������������取���������������������取������取��������取�����������取����������������������������������������������������������������������������取���取����取����取���取���������������������������������取�������取�����取"
8314287,Do you see any bottle or child there?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_child = image_patch.exists(""child"")
    return bool_to_yesno(is_bottle or is_child)�������������取��������������取��������取������������������取���取�������������������取������������取��������������取��������������取�������������������������������������������������������取�����取����取��������������取���取��������取����������������������������������������������������������������������������������������������������������������������取�������取���取��������取�����取����取������取"
5111363,Are there chairs or tables that are not blue?," # returns yes or no
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_table = image_patch.exists(""table"")
    if is_chair or is_table:
        chairs = image_patch.find(""chair"")
        tables = image_patch.find(""table"")
        for chair in chairs:
            if not chair.verify_property(""chair"", ""blue""):
                return ""yes""
        for table in tables:
            if not table.verify_property(""table"", ""blue""):
                return ""yes""
    return ""no"" # if no chairs or tables are found, or if all are blue, return no
�����������取����������取������������取���取��取��取����������取�����������������取��������取�����������������������������取���取�������������������������������������������取�����������������取���取�������取���������取����取���������������取����������������������������������������������������������������������������������������取������取���取�������������������������������取�������������������取"
9230971,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����取�������取�������������������������������������������������������取����������������������������取��������取�����������������������������������������取��������取�����取�����������取��������取���取����������������������������������������������������������������取�������取�������取����取�����取����取��������������������������������������������������������������������������������������������������������������������������取�������������取����取�����取�����取���������取�������取���取���������������取������取�������取�������取������������取������������取����取���������取"
132422,Does the hair have short length and white color?," # returns a boolean
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the hair have short length and white color?""))
    return hair_patches[0].verify_property(""hair"", ""short"") and hair_patches[0].verify_property(""hair"", ""white"") # crop would include the hair so keep it in the query��������������取��������������������������取��������������取���取�����取�������������������������������������������������取�������������������������������������������������取������������������������取���������������������������������������������������������������������������取�������取�������取�������取�������������取����取�������������取�������取�����取����取"
4822200,Do you see any lettuce on the food with the meat?," # assumes only one food patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch.simple_query(""Do you see any lettuce on the food with the meat?"")
    food_patch = food_patches[0]
    lettuce_patches = image_patch.find(""lettuce"")
    for lettuce_patch in lettuce_patches:
        if lettuce_patch.horizontal_center > food_patch.horizontal_center:
            return ""yes""
    return ""no""����������������取����������������������������������������������������������������������������������������取���������������������������������������������取����取���取����������取���取������������取���������取������������������������������������取��������������������������������取���取���取������取������取�������������取����������������取��������������������������������取"
3726666,What device is to the left of the curtain that is to the left of the glasses?," # assumes only one device, curtain, and glasses
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"")
    device_patch = device_patches[0]
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        return image_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"")
    curtain_patch = curtain_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return image_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"")
    glasses_patch = glasses_patches[0]
    if curtain_patch.horizontal_center > glasses_patch.horizontal_center and device_patch.horizontal_center < curtain_patch.horizontal_center:
        return device_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"")
    return image_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"") # crop would include the curtain and glasses so keep it in the query�������������取�������������������������������������取���取�����������������������������取�������������������取�����取���取���������������������������������������取����������取���������������取��������取����取����������取"
9954849,What kind of furniture is it?," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is it?"") # returns the answer to ""What is this?""ніцип�������������������������取���������������������������������������取�����取����取��������������������������������取���取��������������������������取�����取���������������������������取���������������������������取�����������������取�����取�������取����取�������������������������������������������������������������������������������������������������������������取���取�������取����取������取��������取���取�����取�������取���取���������取������取"
19409495,Are there any red trains or buses?," # returns yes or no
    image_patch = ImagePatch(image)
    is_red_train = image_patch.exists(""red train"")
    is_red_bus = image_patch.exists(""red bus"")
    return bool_to_yesno(is_red_train or is_red_bus)��������取�������������取���������������������������������取�������������������取����取����������������������������取������取������������������������������������������������������取�������取���������取���������取�������取����������取��������������������������������������������������������������������������������������������取����取�����取�����������������取��������取������取���取�����取����取������取����取"
8965422,What kind of vegetable is to the left of the crate that is of the lettuce?," # assumes only one crate of lettuce
    image_patch = ImagePatch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch.simple_query(""What kind of vegetable is to the left of the crate that is of the lettuce?"")
    for vegetable_patch in vegetable_patches:
        crate_patches = image_patch.find(""crate"")
        for crate_patch in crate_patches:
            if crate_patch.simple_query(""What is in the crate?"") == ""lettuce"" and vegetable_patch.horizontal_center < crate_patch.horizontal_center:
                return vegetable_patch.simple_query(""What kind of vegetable is to the left of the crate that is of the lettuce?"")
    return vegetable_patches[0].simple_query(""What kind of vegetable is to the left of the crate that is of the lettuce?"") # if no vegetable is to the left of the crate of lettuce, query the image directly�����������������取��������取���取���������取����������������取�������������������������取�������������������������取������������������������������������������������������取������取�������������取������取���������������������������������������������������������������������������取����取������取�����取�������������取�������������取�������������取�������取"
623393,"What type of clothing is tan, the hat or the vest?"," # returns the answer to the question
    image_patch = ImagePatch(image)
    tan_patches = image_patch.find(""tan"")
    # Question assumes only one tan patch
    if len(tan_patches) == 0:
        # If no tan is found, query the image directly
        return image_patch.simple_query(""What type of clothing is tan, the hat or the vest?"")
    hat_patches = image_patch.find(""hat"")
    vest_patches = image_patch.find(""vest"")
    # Question assumes only one hat and one vest patch
    if len(hat_patches) == 0 or len(vest_patches) == 0:
        return image_patch.simple_query(""What type of clothing is tan, the hat or the vest?"")
    hat_patch = hat_patches[0]
    vest_patch = vest_patches[0]
    if hat_patch.simple_query(""Is the hat tan?"") == ""yes"":
        return ""hat""
    elif vest_patch.simple_query(""Is the vest tan?"") == ""yes"":
        return ""vest""
    else:
        return ""neither"" # if neither is tan, return neither
����取������������取����取������取�����取������������������������������取�����������取�������������������������������������������取������������������������取���������取���取�����取�����取����取����取�������������������������������������������������������������������取��������取���������取"
6436448,Is the color of the skirt the same as the scarf?," # returns yes or no
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the skirt the same as the scarf?"")
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        return ""no""
    return bool_to_yesno(skirt_patches[0].verify_property(""skirt"", scarf_patches[0].best_text_match([""color""]))) # crop would include the color so keep it in the queryніцип�������������������������������������������取�������������������������������������������取��������������������������取���������������取���������������������������������������������������取���取���取������取������取�����������������取�����取�����取��������取�������������������������������������������取�������������取����������取���取������取�����取����取���������取�������取�����取����������取�������取�������取��������取���取�����取"
3303313,Is the blanket under a cat?," # assumes one cat and one blanket
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    blanket_patches = image_patch.find(""blanket"")
    if len(cat_patches) == 0 or len(blanket_patches) == 0:
        return ""no""
    cat_patch = cat_patches[0]
    blanket_patch = blanket_patches[0]
    if blanket_patch.vertical_center > cat_patch.vertical_center:
        return ""yes""
    return ""no""��取������取��������������取����������������������������������������������������������取�������������������������取��������������������取���取�����������������������取��������取���������������������������������������������������������取��������取�����取�����������������������������取����������������������������������������������������������取������������取�����������������取���������������取����取�������取�����取�����取�����������������取����取������取�������������取����������取"
443663,What color is the picture?," # returns the color of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the picture?"") # crop would include the image so keep it in the query����取������取�����取���������������������������������取��������取�������������������������������������������������取������������取�����������������������������取���取�����������取������取�����取���取����取��������������������������������������������������������������������������������������取���取����取���������取�������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������取�����������取"
17267472,Is there any umbrella to the right of the man?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is there any umbrella to the right of the man?"")
    man_patch = man_patches[0]
    umbrella_patches = image_patch.find(""umbrella"")
    for umbrella_patch in umbrella_patches:
        if umbrella_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no""�����取���������������������������取����������������������������������取�������������取��������������������取�������取������������������������������������������������������取���取�������������取�����取�������������取����������������������������������������������������������������取����取���������取��������������������取���取���取����取�����������取�����取��取"
1885406,What is the toy on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toy on the bed?"") # crop would include the bed so keep it in the query���取�����取�������������������������������取�������������������������������������������������������������������取��������取�������������������������������������取����������取��������������取�����������������������������������������������������������������������取��������取�����������������������������取�������������������������������������������������������������������������������������������������������取����取������������������取��������取�����������������取���取�������取���取�������������取�����������取������取�������取"
5557965,On which side is the bag?," # assumes one bag
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side is the bag?"")
    bag_patch = bag_patches[0]
    if bag_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������取������������������������������取����取�������������������取�������������������������取������������取����������������������������取����取������取���������������������������������������������������������������������������������������������������������取�����取�������������������取����取����取��������������������������取"
4325825,On which side is the banana?," # left, right, top, bottom
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""On which side is the banana?"")
    banana_patch = banana_patches[0]
    if banana_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif banana_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    elif banana_patch.vertical_center < image_patch.vertical_center:
        return ""top""
    else:
        return ""bottom""���������������������������������取�����������������取�����取�������������������������取�������������������取������取��������取��������������������������������������������������取������取���取������取��������取�����������������������������������������������������������������������取����取����������������取�������取����取�����取������取���取����取��取����取�������取�������取�������������取"
3196355,What does the batter hold?," # batter is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the batter hold?"") # crop would include the batter so keep it in the query�������������������������������������取��������������������������������������������取���������������取�������������取������������取�����取����������������������������������������������������������取�����������取�������取��������取�������取������取�������������������������������������������������������������������������������取��������������������������������������������取"
14470748,Who wears a jacket?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who wears a jacket?"")
    for person_patch in person_patches:
        if person_patch.verify_property(""person"", ""wearing jacket""):
            return person_patch.simple_query(""Who wears a jacket?"") # crop would include the jacket so keep it in the query
    return ""no one"" # if no one is wearing a jacket, return ""no one"" chtě chtě�������������������取�������������取���������������取������������������取���������������������������取������������������������取���取����取���取�����取���取���取�����������������取����������������������������������取������取����������������取������������取������取�����取����取�����������������������������������������������������������������������������������������取�����������������取���取������取����������取���取��������取�������取����取"
16537736,Are there any houses behind the shrubs?," # assumes only one shrub patch
    image_patch = ImagePatch(image)
    shrub_patches = image_patch.find(""shrub"")
    if len(shrub_patches) == 0:
        # If no shrub is found, query the image directly
        return image_patch.simple_query(""Are there any houses behind the shrubs?"")
    shrub_patch = shrub_patches[0]
    house_patches = image_patch.find(""house"")
    for house_patch in house_patches:
        if house_patch.horizontal_center > shrub_patch.horizontal_center:
            return ""yes""
    return ""no""�����������取����������取��������������取���������������������������������������������������������������取���取���取����������������������������������������������������取�����取�����取���取���取�������取��������取����������������������������������������������������������������������������取�������������������������取����������取�������取���取"
1129541,What piece of furniture is made of wood?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What piece of furniture is made of wood?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.verify_property(""furniture"", ""wood""):
            return furniture_patch.simple_query(""What piece of furniture is made of wood?"") # crop would include the wood so keep it in the query
    # If no furniture is made of wood, pick the first furniture
    return furniture_patches[0].simple_query(""What piece of furniture is made of wood?"") # crop would include the wood so keep it in the query������取���������取���������������������取��������������取���取���取���������������������������取��������������������������取����������������������������������������������������������������取���取���������取����取����������������取��取��取����������������������������������������������������取����������取���取����������������取�������取�����取���������������取����取���取���取����取����������取"
15270011,Is the racket to the right or to the left of the man that is wearing a hat?," # assumes one man and one racket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""Is the racket to the right or to the left of the man that is wearing a hat?"")
    man_patch = man_patches[0]
    hat_patches = image_patch.find(""hat"")
    if len(hat_patches) == 0:
        return image_patch.simple_query(""Is the racket to the right or to the left of the man that is wearing a hat?"")
    hat_patch = hat_patches[0]
    racket_patches = image_patch.find(""racket"")
    if len(racket_patches) == 0:
        return image_patch.simple_query(""Is the racket to the right or to the left of the man that is wearing a hat?"")
    racket_patch = racket_patches[0]
    if racket_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������������������������������取�����������������取��������������������取�������������������������取���������������取���取���������������������������������������������������������取����������������������������������������������������������������������������取����取������������取"
12416703,Where is that cat?," # returns the position of the cat
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Where is that cat?"")
    return cat_patches[0].simple_query(""Where is that cat?"") # crop would include the cat so keep it in the query���������������������������������������������������取����取������������������������取������取����取�������������������������������������������������������������������取������取������取����������取���������������取�������������������������������������������������������������������������������取������������取��取�����������取��������取������取���取"
15603088,The animal to the right of the envelope is lying on what?," # assumes one envelope and one animal
    image_patch = ImagePatch(image)
    envelope_patches = image_patch.find(""envelope"")
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one envelope and one animal patch
    if len(envelope_patches) == 0 or len(animal_patches) == 0:
        # If no envelope or animal is found, query the image directly
        return image_patch.simple_query(""The animal to the right of the envelope is lying on what?"")
    envelope_patch = envelope_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > envelope_patch.horizontal_center:
        return animal_patch.simple_query(""What is the animal lying on?"")
    return ""envelope"" # if the animal is not to the right of the envelope, it is lying on the envelopeERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting��������������取����取�������������������������������������取�����������������������取���取���������取��������������������������������取�������取���取���������取"
5329077,Is the man on a bench?," # assumes one man and one bench
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    bench_patches = image_patch.find(""bench"")
    if len(man_patches) == 0 or len(bench_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    bench_patch = bench_patches[0]
    return bool_to_yesno(man_patch.horizontal_center > bench_patch.horizontal_center) # assumes man is on the bench if he is to the right of itERCHANTABILITY: This function is not yet implemented and needs to be completed.
��������������������取�����������������取��������取���取���取����������������取������取���取������������������������������取�����������������������������������取���������取�������������������������������取��������������������������������������������������������������������������取�����取���取��������取�����������取�����������取���������取"
1945705,What kind of device is to the left of the device that looks silver and gray?," # assumes only one device patch
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What kind of device is to the left of the device that looks silver and gray?"")
    device_patch = device_patches[0]
    if device_patch.simple_query(""Is the device silver and gray?"") == ""yes"":
        return device_patch.simple_query(""What kind of device is to the left of the device that looks silver and gray?"")
    return device_patch.simple_query(""What kind of device is to the left of the device that looks silver and gray?"") # crop would include the device so keep it in the query�������������������������取��������������取����������������取�����取�������������������取����取����取������������������������取����������������������������������������������������取����取���������取������取������取����������������������������������������������������������������������������������������取���取���取���取������取���������������取�������取���取����取�����取������������������取"
17520003,What vehicle is to the right of the pine tree?," # assumes one pine tree and one vehicle
    image_patch = ImagePatch(image)
    pine_tree_patches = image_patch.find(""pine tree"")
    vehicle_patches = image_patch.find(""vehicle"")
    if len(pine_tree_patches) == 0 or len(vehicle_patches) == 0:
        return image_patch.simple_query(""What vehicle is to the right of the pine tree?"")
    pine_tree_patch = pine_tree_patches[0]
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center > pine_tree_patch.horizontal_center:
        return vehicle_patch.simple_query(""What vehicle is to the right of the pine tree?"")
    return pine_tree_patch.simple_query(""What vehicle is to the right of the pine tree?"") # crop would include the vehicle so keep it in the query��������������取�������������取����������������������������取��������������������取��������������������������������取������取��������������������������������������������������取����取���������取�������取���������取���������取���������������������������������������������������������������������������取������取��������������������取�����取�����取"
1259983,Who is wearing pants?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing pants?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is wearing pants?"") # crop would include the pants so keep it in the query���������������������������������取����������������������取����取�������������������取��������������������������取�����取��������������������������������������������取����取���������������������取��������������������������������������������������������������取�����������������取������������������������������取�������������������取���取��������取������������取�����������������������������������������������������������������������������������������取"
6413378,Is there a black keyboard or camera?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_keyboard = image_patch.exists(""black keyboard"")
    is_camera = image_patch.exists(""camera"")
    return bool_to_yesno(is_black_keyboard or is_camera)��������取�����������������取��������������������������取�����������������������������取������取������������������������������������������������������������������������������������取���取�������取�����������取����取���取���取�����������取�����取�����������������������������������������������������������������������������取�������������取����取���取��������������������取���取����取����������������取������取"
947305,Is the sunny water blue and high?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blue = image_patch.verify_property(""water"", ""blue"")
    is_high = image_patch.verify_property(""water"", ""high"")
    return bool_to_yesno(is_blue and is_high) # returns yes or no
��������������������������������������������������取������������������取������取����取����������������������������取���取�����������������������������������������������取��������������取�����取����取����������������������������������������������������������������������������������取����������取���取�����取�������取����取����������取�����取����������������取���������������������������������������������������������������������������������������������������������������取"
4367817,What type of animal in this scene is brown?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What type of animal in this scene is brown?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""brown""):
            return animal_patch.simple_query(""What type of animal in this scene is brown?"") # crop would include the color so keep it in the query
    # If no animal is brown, pick the first animal
    return animal_patches[0].simple_query(""What type of animal in this scene is brown?"") # crop would include the color so keep it in the query�������������取�������������取�����������取���取�����������������������������������������取������������������取����������������������������������������������������������������������取��������取���取�����������������������������������������������������������取���������������������������������取�������������������取���取��������取���取����取���取���取���取����取�������������取�������������取��取��取����������取"
15485572,What is the vegetable on the hot dog with the cheese?," # assumes one hot dog patch
    image_patch = ImagePatch(image)
    hot_dog_patches = image_patch.find(""hot dog"")
    if len(hot_dog_patches) == 0:
        # If no hot dog is found, query the image directly
        return image_patch.simple_query(""What is the vegetable on the hot dog with the cheese?"")
    hot_dog_patch = hot_dog_patches[0]
    vegetable_patches = image_patch.find(""vegetable"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.horizontal_center > hot_dog_patch.horizontal_center and vegetable_patch.vertical_center > hot_dog_patch.vertical_center:
            return vegetable_patch.simple_query(""What is the vegetable on the hot dog with the cheese?"")
    return ""no vegetable"" # if no vegetable is found, return ""no vegetable"" chtě�����������取�����������取�����������取������������������������取�������取�������取��������������������取���取���取��������������������������取���������取���取���取���取����������������������������������������������������������������������������������������取��������������取���������������������������������������������������������������������������������������������取�����������取���取"
12661142,What is the appliance in the kitchen called?," # assumes one appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""What is the appliance in the kitchen called?"")
    return appliance_patches[0].simple_query(""What is the appliance in the kitchen called?"") # crop would include the kitchen so keep it in the query��������������取�������������取�������������取��������������������取��取����������������取�����取���������������������������������������������������������������������取��������������取���取�����取����取���������������取�����取���������������������������������������������������������������������������������������������������取�������取�����������取����取��������取���取����取����������取"
41012743,The arrow is on what?," # arrow is a relational verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The arrow is on what?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly���������������取�������������取��������������取���������������������������������������取�����取�������������������������������取���取�����������������������������������������������取����������������������取�����取������取�����取���������取��������取���取��取�������������������������������������������������������������������������������������������取��������取���取������取������取�������取�����取����取�����取"
4777414,What color is the bicycle in the bottom of the photo?," # returns the color of the bicycle in the bottom of the photo
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""What color is the bicycle in the bottom of the photo?"")
    for bicycle_patch in bicycle_patches:
        if bicycle_patch.lower > image_patch.lower * 0.5:
            return bicycle_patch.simple_query(""What color is the bicycle in the bottom of the photo?"")
    # If no bicycle is in the bottom, query the image directly
    return image_patch.simple_query(""What color is the bicycle in the bottom of the photo?"") # crop would include the bicycle so keep it in the query��������取����������������取�������������取����������������取����取�������������������������������������������取��������������������������������������������������������������������������������取���取�������取������取�������������取���������������������������������取������������取�����������������������������取�������取����取������������������取��������取���取���取���������取"
1185988,What is the device on top of the table that is to the right of the trashcan?," # assumes one trashcan patch
    image_patch = ImagePatch(image)
    trashcan_patches = image_patch.find(""trashcan"")
    # Question assumes only one trashcan patch
    if len(trashcan_patches) == 0:
        # If no trashcan is found, query the image directly
        return image_patch.simple_query(""What is the device on top of the table that is to the right of the trashcan?"")
    trashcan_patch = trashcan_patches[0]
    device_patches = image_patch.find(""device"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > trashcan_patch.horizontal_center:
            return device_patch.simple_query(""What is the device on top of the table that is to the right of the trashcan?"")
    return ""no"" # if no device is found, return no
�������取�������������取��������������取��取������������取�������������������������������������������������取��������取����������������������������������������取���取��取��������取������������取����������取����取����取���������������������������������������������������������������取�������������取���取������������������取�����取���取�������取��������������取����取���取���取�����������取"
13582968,Was granite used to make that floor?," # assumes one floor patch
    image_patch = ImagePatch(image)
    floor_patches = image_patch.find(""floor"")
    if len(floor_patches) == 0:
        # If no floor is found, query the image directly
        return image_patch.simple_query(""Was granite used to make that floor?"")
    return bool_to_yesno(floor_patches[0].verify_property(""floor"", ""granite"")) # crop would include the floor so keep it in the query����������������������������取����������取������取����������������������������������取������������������������������取���������取�����������������������������������������������取��取�������取��������取���取�������取����������取�������������������������������������������������������������������������������取�����取�����������取�������取���取�����取�����������取�����取������������取"
6235273,Are there women in the photo?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman"")) # returns True or False, which is then converted to yes or no
����������取����������������������������取������������取����取���������������������取����取����������������������取���取����取�����取�������������������������������������取���取�����取���取����������取�������取������取���取��������������������������������������������������������������������������������������������������������������取���取������������������取�������取������取��������������取�������������取"
5377974,What is the girl playing with?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What is the girl playing with?"")
    girl_patch = girl_patches[0]
    toy_patches = image_patch.find(""toy"")
    # Question assumes only one toy patch
    if len(toy_patches) == 0:
        # If no toy is found, query the image directly
        return image_patch.simple_query(""What is the girl playing with?"")
    toy_patch = toy_patches[0]
    return toy_patch.simple_query(""What is the girl playing with?"") # crop would include the toy so keep it in the query������������取�������������������������取������������������取�����������������������取���取���������������������������取�������������������������������������������取���������������������取�������������取����������������������取�����取��������������������������������������������������取���取�����取�����������取������������取������取������������取��������������������取�����取���������取"
51037065,On which side of the image is the fridge?," # left or right
    image_patch = ImagePatch(image)
    fridge_patches = image_patch.find(""fridge"")
    # Question assumes only one fridge patch
    if len(fridge_patches) == 0:
        # If no fridge is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fridge?"")
    if fridge_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������������������取����������������取��������������������取���取������������������������������������������������取����������������������������������������������取���取������������������������������取�������������������������������������������������������取�����������������取�����取��������取�������������取������������������������取�������取���取��������������取����������������������������������������������������������������������取"
5299477,Which kind of bag does the girl carry?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Which kind of bag does the girl carry?"")
    girl_patch = girl_patches[0]
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        return image_patch.simple_query(""Which kind of bag does the girl carry?"")
    bag_patch = bag_patches[0]
    return bag_patch.best_text_match([""backpack"", ""handbag"", ""suitcase""]) # crop would include the bag so keep it in the query�������������������������取����������������取���������������取���������������������������������������������������取����������取������������������取������������������������取���������������取������取��������取�����取����������������������������������������������������������������������������取����取����取�������取��������取���������取�����������取����取����取"
15135617,Is the white dog on a bench?," # assumes one white dog and one bench
    image_patch = ImagePatch(image)
    white_dog_patches = image_patch.find(""white dog"")
    bench_patches = image_patch.find(""bench"")
    if len(white_dog_patches) == 0 or len(bench_patches) == 0:
        return ""no""
    white_dog_patch = white_dog_patches[0]
    bench_patch = bench_patches[0]
    return bool_to_yesno(white_dog_patch.horizontal_center > bench_patch.horizontal_center) # assumes one white dog and one bench
���������取����������������������������������������取��������������������取�������������取��������������������取����������������������������������������������������������������取������������取����取���������取������������������������������������������������������������������������取�������取�������取�����取���取���取�������取������������取�����取��������������取��取"
1111583,Is the male person to the right of a person?," # assumes only one male person and one person
    image_patch = ImagePatch(image)
    male_person_patches = image_patch.find(""male person"")
    person_patches = image_patch.find(""person"")
    if len(male_person_patches) == 0 or len(person_patches) == 0:
        return ""no""
    male_person_patch = male_person_patches[0]
    person_patch = person_patches[0]
    if male_person_patch.horizontal_center > person_patch.horizontal_center:
        return ""yes""
    return ""no""���取�����������取�������取���取������������取��������������取���������������������������������取�������������������������取���取�����������������������������������������������������取����取������������取�������取������������������������������������������������������������������������取�����取�����取������取�������������取�������取���取����取���取����������取���取������取"
12352269,Are there both windows and doors in this photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
15610844,What kind of place is shown?," # returns a string describing the place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of place is shown?"") # assumes only one place patchніцип�����取���取��������������������������取�������������取����������������取����取����取��取�������������������取����������������������������������������取��������������������������������������������������������������取���取���������取�������������取���������取���������������������������������������������������������������������������������������������������������������取����������取����������取���������取������������取������取��������������取����取����������取�����������������������������������������������������������取���������取"
11869032,Is the banana below a bird?," # assumes one banana and one bird
    image_patch = ImagePatch(image)
    banana_patch = image_patch.find(""banana"")[0]
    bird_patch = image_patch.find(""bird"")[0]
    if banana_patch.vertical_center < bird_patch.vertical_center:
        return ""yes""
    else:
        return ""no""����取���取����������������������������������������������������������取������������������������������取�������取����������������������������������������取�������取���取���取�����������取������������������������������������������������������������������������������������������取���取����取������������取�������取���������取��������������������������������������������������������������������������������取����������������������������������������������取�������取������������������取���取���取�������������取"
9878360,What color is the vehicle to the left of the fence?," # assumes one vehicle and one fence
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    fence_patches = image_patch.find(""fence"")
    if len(vehicle_patches) == 0 or len(fence_patches) == 0:
        return image_patch.simple_query(""What color is the vehicle to the left of the fence?"")
    vehicle_patch = vehicle_patches[0]
    fence_patch = fence_patches[0]
    if vehicle_patch.horizontal_center < fence_patch.horizontal_center:
        return vehicle_patch.simple_query(""What color is the vehicle?"")
    return fence_patch.simple_query(""What color is the fence?"") # crop would include the fence so keep it in the query��������取������取�������������取��������������������������取�����������������������������取���������������������������取���取��������������������������������������取����������取��������������取����������取�������取���取���取�����������������������������������������������������������������取����������������������取���������取����取���取����取����������取�����取��������取������取���取���取�����取������取"
481765,Are there either any buses or trains in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_bus or is_train)��������取������取���������������������取���������������取��������������������������取�����取����取����取���������������������������������������������������������������������������������������取�����������������取��������������取�����取�����取��������������������������������������������������������������������������������取���������������取���取�����������取��������取���取���取���取���取����取����取�����取������取���取���取�������取��������������取"
6665919,What is the fence made of?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What is the fence made of?"")
    return fence_patches[0].simple_query(""What is the fence made of?"") # crop would include the fence so keep it in the query�����������������取����������取����������取����取�����������������取����������������������������������������������������取����取�����������������������������������������取������取���取������取������取���������取���取���取������取����取����取����������������������������������������������������������������������������������������������������取����取������������取�����取������取������取"
9218340,Does the man to the left of the traffic cone wear a cap?," # assumes one man and one traffic cone
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    traffic_cone_patches = image_patch.find(""traffic cone"")
    # Question assumes only one man and one traffic cone patch
    if len(man_patches) == 0 or len(traffic_cone_patches) == 0:
        # If no man or traffic cone is found, query the image directly
        return image_patch.simple_query(""Does the man to the left of the traffic cone wear a cap?"")
    man_patch = man_patches[0]
    traffic_cone_patch = traffic_cone_patches[0]
    if man_patch.horizontal_center < traffic_cone_patch.horizontal_center:
        return bool_to_yesno(man_patch.verify_property(""man"", ""cap""))
    return ""no"" # man is not to the left of the traffic cone, so he doesn't wear a capERCHANTABILITY: False
 +#+#+#+����取�����������������������取�������������取���取���取�����������������取����取������������������������取��������������������������������������取����取�����������������������������������������������������������������������取"
11981238,What is common to the blazer and the suit?," # returns a string
    image_patch = ImagePatch(image)
    blazer_patches = image_patch.find(""blazer"")
    # Question assumes only one blazer patch
    if len(blazer_patches) == 0:
        # If no blazer is found, query the image directly
        return image_patch.simple_query(""What is common to the blazer and the suit?"")
    suit_patches = image_patch.find(""suit"")
    # Question assumes only one suit patch
    if len(suit_patches) == 0:
        return image_patch.simple_query(""What is common to the blazer and the suit?"")
    blazer_patch = blazer_patches[0]
    suit_patch = suit_patches[0]
    return blazer_patch.best_text_match([blazer_patch.simple_query(""What is common to the blazer and the suit?""), suit_patch.simple_query(""What is common to the blazer and the suit?"")]) # crop would include the suit so keep it in the query������������������������������������取�����取�����������������������������������取���������������������������������取������取���取������������������������������������取������������������������取���取�����取���取��������������������������������������������������������������������取��取��������取�����������������取���取�������������������������取�����取���取"
16245,Is the shirt white or green?," # returns ""white"" or ""green""
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt white or green?"")
    return shirt_patches[0].best_text_match([""white"", ""green""]) # crop would include the shirt so keep it in the query�����取������取������取��������取������������取�����������������取����取����������������������取������������������������������������������������������������������������������������取�����������取�������取�������取�����������������������������������������������������������������������������������取����������取�����������取�������取�����取���取�����取���取�����取���取"
2595103,"In which part of the image are the cars, the bottom or the top?"," # assumes only one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""In which part of the image are the cars, the bottom or the top?"")
    car_patch = car_patches[0]
    if car_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""����取�����取����������������������取����������������取���取����������������������������������������������取���取���取�����取�����取���������������������������������������取����取��������������取��������������������������������������������������������������������������������������������������取������������取���取������取"
2429130,"How does the sand look, dry or wet?"," # assumes there is sand in the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the sand look, dry or wet?"") # assumes there is sand in the imageніцип���������������������取������������取�������������������取����������������取��������取�������������������取��������������������������取������取����������取������������������������������������������������������取�����������������������取���取������������取����取����取��取����取��������������������������������������������������������������������������������������������������������取������取���������������������取�����取������取�����取������������取�����������������������取"
4325920,Are there fruits to the right of the banana which is on the table?," # assumes one banana patch
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""Are there fruits to the right of the banana which is on the table?"")
    banana_patch = banana_patches[0]
    fruit_patches = image_patch.find(""fruit"")
    for fruit_patch in fruit_patches:
        if fruit_patch.horizontal_center > banana_patch.horizontal_center:
            return ""yes""
    return ""no""�������������取��������取������������取�����������������取��������������������������取���取��������������������取���������������������������������������������取���������取�����取�������取�������取��������取�����取������������������������������������������������������������������������������������������������������取�����取������取������������取"
6376614,What color is the car in the middle?," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car in the middle?"")
    car_patch = car_patches[0]
    return car_patch.simple_query(""What color is the car in the middle?"") # crop would include the car so keep it in the query�������������������������取������������取�����������������取�������取����������������������������������������������������������������������������������取�������取������������取������取�����������������������������������取������������������������������������������������取��������取������������������������取���取�������������������取���������������������取"
712063,What's the lamp made of?," # returns the material of the lamp
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""What's the lamp made of?"")
    return lamp_patches[0].simple_query(""What's the lamp made of?"") # crop would include the lamp so keep it in the query�����������������取�������������������取����取����������������取��������������������������取������������������������������������取���������������������������取��取����������取���取������取������取�����取�����取��������������������取���取����������取���取�����取�������������������������������������������������������������取������������������������取����取����取����取�����������取����取����取����������取���取"
19358285,Which kind of furniture is to the right of the pillow?," # assumes only one pillow patch
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is to the right of the pillow?"")
    pillow_patch = pillow_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > pillow_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is to the right of the pillow?"")
    return ""no"" # if no furniture is to the right of the pillow, return no
������������������取���������������������������取�������������������取���������取����取����������������������取���取�������取�������������������������������取�����取�������取�����取�������取����������取���取����取���取����取��������������������������������������������������������������取������������������取�����取������������取�������������取"
9647343,What type of material is the patio made of?," # patio is a type of object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the patio made of?"") # patio is a type of object, so ask directlyніцип�������������������取��取�������������取����������������������������取�����������������������������取����������取��取��取���������取���������������取����������������������������������������������������������取�����������������������取���取��������取�����取��������取���������������������������������������������������������������������������������������������������������取���取���取����取���取��������取�����取���取������取����������������取����取�������������取����������取"
12545434,Who is wearing the suit?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the suit?"")
    return person_patches[0].simple_query(""Who is wearing the suit?"") # crop would include the suit so keep it in the query��������取��������取�������������������������������������������������������������取���取���取�����������������������������取��������������������������������������������������������������取�����取����������取����取���取�������取�����取��������������������������������������������������������������������������������������取����������取�����取�����������取�����取�����取���取���取������������������������������������取�����������取"
12894285,What is the color of the clouds in the sky?," # assumes one patch for the sky
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""What is the color of the clouds in the sky?"")
    return sky_patches[0].simple_query(""What is the color of the clouds in the sky?"") # crop would include the sky so keep it in the query������取������������������取������������������取���������������取��取��������������������取����取��������取������������������������取����������������������������������������������������取����������取�������取���取���取�����取���������取���取��������取���取��������取��������������������������������������������������������������������������������������取�������������������取�����取"
9843309,Do the flowers look orange?," # returns a boolean
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the flowers look orange?""))
    return bool_to_yesno(flower_patches[0].verify_property(""flower"", ""orange"")) # crop would include the flower so keep it in the query�����取�������������取�������取���������������������������取������取����������������������取������取������������������������取�����������������������������������������取���������取������取��������取���取���取������取����������取����取��������取����������取����������������������������������������������������������������取����������取��������取�����取����取�������取����取"
618996,Is there a chair or a bed in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_chair or is_bed)������������取������������������������取����取���������������取�����������������������������������������������������取������������������������������������������������������������取������取�������������取���������������������������������������������������������������������取���������������������������取���取����取������������取����取����������������取"
18959736,Are there trucks to the left of the umbrella?," # assumes only one umbrella patch
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""Are there trucks to the left of the umbrella?"")
    for umbrella_patch in umbrella_patches:
        truck_patches = image_patch.find(""truck"")
        for truck_patch in truck_patches:
            if truck_patch.horizontal_center < umbrella_patch.horizontal_center:
                return ""yes""
    return ""no""���������������������取��取�������������取��取������������������������������������取���������������������������取���取����������������������������������������������������取���取������取����取����取�������������������������������������������������������������������������������������������������取���������取���������������取������取���取"
867869,What color are the pants the man is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    man_patch = man_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    pants_patch = pants_patches[0]
    return pants_patch.simple_query(""What color are the pants?"") # crop would include the pants so keep it in the query����������������取�������取������������������取�������������取�����������������������取�����取��������������������取�����取����������������������������������取�������������������取��������取������������取���������������������������������������������������������������������������������取���������取�������取�������������取������取�������������取������取"
551601,Are there any pillows or chairs in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_pillow or is_chair)�������������取�����������取��������������取�����������������������������������取���取����������������������取���������取�������������������������������������������������������取������取�������取���������取��������取����取��������取�������������������������������������������������������������������������������������������取�������取���取����取����������取�����取���������取����������取�������取��������������取"
10775785,Are there women to the left of the person with the bag?," # assumes one person with the bag
    image_patch = ImagePatch(image)
    person_with_bag_patches = image_patch.find(""person with the bag"")
    # Question assumes only one person with the bag patch
    if len(person_with_bag_patches) == 0:
        # If no person with the bag is found, query the image directly
        return image_patch.simple_query(""Are there women to the left of the person with the bag?"")
    person_with_bag_patch = person_with_bag_patches[0]
    woman_patches = image_patch.find(""woman"")
    for woman_patch in woman_patches:
        if woman_patch.horizontal_center < person_with_bag_patch.horizontal_center:
            return ""yes""
    return ""no""�����������取����������取�����������取����������������������������������������取���������������������������������取����������������������������������������������取����取�����������取���取�����取�����取���取������取���取�����取������������取�����������������������������������������������������取��取�����������������������取������取�����取���取���取�����������������������取"
5925408,What is the bike in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bike in front of?"") # crop would include the object in front of so keep it in the query��������������取������������取��������������������������取�������������������������取���取����取����������������������������取�����������������������������������������������������������取����������取�������������取����������������取�������������������������������������������������������������������取��取���������������������取�����取������取������取����������取���取�����������取��������取"
11328059,What type of fast food is shown in this photo?," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fast food is shown in this photo?"") # returns the answer to ""What is this?""ніцип������������取�����������������������������取����������������������������取���取�������������������������取���������������������������取������取��������������������������取���取���������������������������������������������������取���取��������取�����取���取�����取�����������������������������������������������������������������������������������������������������������取�����取���������取���������������取��������取���取���取����������������������������������取�������������������������������������������������取"
15427544,Are there either beds or desks in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_desk = image_patch.exists(""desk"")
    return bool_to_yesno(is_bed or is_desk)����������������������取������������取����取�����������������������������������取����������������������������������取��������取�������������������������������������������������������取������取����取�����取���������������������������������������������������������������������������取��取����������������������取������取���取���取������取����������������取������取����取���������������������������������取"
13778498,What type of vehicle is behind the green tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is behind the green tree?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�����������������������������������取�����取������������������取���取���������������������取����������������������������取���取���取����������������������������������������取���������������������取������取�������取�������取�����������������������������取�������������������������������������������������������������������取�����取���取�����������������取�����������取���取���取�����取"
41019603,What is the child standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child standing on?"") # crop would include the child so keep it in the query�����������������取������������取����������取����������������取�������������������������取���取�������������������������������取������������������������������������������������������取����������取����������取���������������������取���取��������������������������������������������������������������������取���������取����������取���取��������������取���������������取�������取����������������取"
11705574,What is the wooden item of furniture called?," # assumes only one wooden item of furniture
    image_patch = ImagePatch(image)
    wooden_furniture_patches = image_patch.find(""wooden item of furniture"")
    if len(wooden_furniture_patches) == 0:
        # If no wooden item of furniture is found, query the image directly
        return image_patch.simple_query(""What is the wooden item of furniture called?"")
    return wooden_furniture_patches[0].simple_query(""What is the wooden item of furniture called?"") # crop would include the furniture so keep it in the query���取�����取��取�������������������������取������������������������������������������������������������������������取���取��������������������������������������取���取���取������取�������������取�����取��取�������取�����取������������������������������������������������������������取�������取������取���取������������取��������取����取�����取���取�������������������������������������������������������������������������������取�������������������������取"
16817277,Is the man to the left or to the right of the woman?," # assumes one man and one woman
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    if len(man_patches) == 0 or len(woman_patches) == 0:
        return image_patch.simple_query(""Is the man to the left or to the right of the woman?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if man_patch.horizontal_center < woman_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取��������������������������������������������������������������������������������������取���取����取����������������������������������������������取���������������取���������取���������取����取������������������������������������������������������������取�������取��������������������������取�����������取����取���取������������取"
1316363,Who is wearing the shirt?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the shirt?"")
    return person_patches[0].simple_query(""Who is wearing the shirt?"") # crop would include the shirt so keep it in the query�������������取������������取�������������取�������������������������������������取������������取����������������������������������������������������������������取������取��������������取���取����取����取���取�������取����取���������������������������������������������������������������������������������取���������������取������取����取����������������取����������取"
18546659,What is the fence made of?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What is the fence made of?"")
    return fence_patches[0].simple_query(""What is the fence made of?"") # crop would include the fence so keep it in the query���������������������������取������������取������������������取���取���取�������������������取������������������������������取����������������������������������������������������取����������取������������取������取����������������������������������������������������������������������������������取��������取������������������取����取����取����������取�������������取����取���取"
10519192,What color is the kite that looks triangular?," # assumes one kite patch
    image_patch = ImagePatch(image)
    kite_patches = image_patch.find(""kite"")
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch.simple_query(""What color is the kite that looks triangular?"")
    kite_patch = kite_patches[0]
    return kite_patch.simple_query(""What color is the kite that looks triangular?"") # crop would include the kite so keep it in the query���取����������������������取��������������取����取�������������������取����������������取��������������������������������取���������������������������������������������������������������������取��������取������������������������������������������������������������取������取�����取�����取���������取�������取������������������������������������������������������������������������������������������������������������������������取�����������������取"
1672200,Who is drinking?," # assumes one person is drinking
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is drinking?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is drinking?"") # crop would include the person so keep it in the query���取��取�����������取����取����取������������������������������������������������������������������取�����取������取���取��������������������������取��������取���取�����������������������������������������������������������������取���������取������������取����取����������取���取���������������������������������������������������������������������������������������������������取�����取�������������取����������取���������������取���取�������取����������取������取������取�������取���取���������������取"
5703748,Is the building behind the tree white or brown?," # returns ""white"" or ""brown""
    image_patch = ImagePatch(image)
    building_patches = image_patch.find(""building"")
    # Question assumes only one building patch
    if len(building_patches) == 0:
        # If no building is found, query the image directly
        return image_patch.simple_query(""Is the building behind the tree white or brown?"")
    building_patch = building_patches[0]
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        return ""white""
    tree_patch = tree_patches[0]
    if building_patch.horizontal_center > tree_patch.horizontal_center:
        return building_patch.best_text_match([""white"", ""brown""])
    else:
        return building_patch.best_text_match([""brown"", ""white""]) # if building is in front of tree, flip the order of the optionsніцип�����������取���取������取����取����������������������取�������������������������������������������取����取���������������������������������取���取����取���������取��取��������������������������������������������取���取���������������取�����������取���������������取��取������������������������������������������������������������������������������������������������取���������取���取"
5749240,Are the glove and the undershirt both black?," # returns yes or no
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Are the glove and the undershirt both black?"")
    glove_patch = glove_patches[0]
    undershirt_patches = image_patch.find(""undershirt"")
    # Question assumes only one undershirt patch
    if len(undershirt_patches) == 0:
        return ""no""
    undershirt_patch = undershirt_patches[0]
    return bool_to_yesno(glove_patch.verify_property(""glove"", ""black"") and undershirt_patch.verify_property(""undershirt"", ""black"")) # crop would include the color so keep it in the query����������������取��取������取���取��������������������������取�����������������������取���取���������������������������������取�������������������������������������取�������������取������取���取���������取�����������������取���������取����取����������������������������������������������������取���取������������������������取���取�����������取����取����取������取���取����������取����取���������取"
18573157,Is the juice in a cup?," # returns yes or no
    image_patch = ImagePatch(image)
    juice_patches = image_patch.find(""juice"")
    # Question assumes only one juice patch
    if len(juice_patches) == 0:
        # If no juice is found, query the image directly
        return image_patch.simple_query(""Is the juice in a cup?"")
    return bool_to_yesno(juice_patches[0].verify_property(""juice"", ""in a cup"")) # crop would include the cup so keep it in the query�����取�����������������取���取������������������������������取�����������������������取�������取������������������������������取���������������������������������������������取���取�����取���取�����������������������������������������������������������������������������������������������取�����取�����取���取����取���取�������取�������������������取"
3445929,Is the brown horse on the right side of the photo?," # assumes one horse patch
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""Is the brown horse on the right side of the photo?"")
    horse_patch = horse_patches[0]
    if horse_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""��������取�����������������������������取���������������取��������������������������取����取��������������取����������������������������������������������������������取���������������������取�������取�����取���取��������������������������������������������������������������������������������取���������������取�������取���������取��������取��������取���取����取�����取������取"
16541709,Where is the grass?," # returns the position of the grass
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Where is the grass?"")
    return grass_patches[0].simple_query(""Where is the grass?"") # crop would include the grass so keep it in the query��������������������������取�������������取������������������取���取������������������������取������������������������������取�������取���������������������������������������取�����取��������������������取���取����取���取��������取�����������������������������������������������������������������������������取����取������取������������取"
15764335,Are there any dogs on the tan sand?," # returns yes or no
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_tan_sand = image_patch.exists(""tan sand"")
    return bool_to_yesno(is_dog and is_tan_sand) # returns yes or noніцип��������取������取����������取������������取�����取������取���取���������������取�����������������������取�������取�����������������������������取�����取�������取�����������������������������������������������������������������取��������取���取������取�����取�����������������������������������������������������������������������������������������������������取������������������取������取���取�������������取����������取�����取�����取�������取"
1478089,Are the door and the garage door made of the same material?," # assumes one door and one garage door
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    garage_door_patches = image_patch.find(""garage door"")
    if len(door_patches) == 0 or len(garage_door_patches) == 0:
        # If no door or garage door is found, query the image directly
        return image_patch.simple_query(""Are the door and the garage door made of the same material?"")
    door_patch = door_patches[0]
    garage_door_patch = garage_door_patches[0]
    return bool_to_yesno(door_patch.verify_property(""door"", ""material"") == garage_door_patch.verify_property(""garage door"", ""material"")) # crop would include the material so keep it in the query�����������������取��������������������取�����������������������������������������取�����������������������������������取�����取����������������������������������������������取����������������取�����������取�����取��������������������������������������������������������������取���取������������取�����取���������������取�����取���������取���取�����取��������������������取"
1250685,Was this picture taken in a bathroom or at a dining room?," # returns yes or no
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was this picture taken in a bathroom or at a dining room?"") # contains a relation (in, at, etc), so ask directly�����������������������������������������取���取��������������������������������������取����取�����������������������������������������������������������������������������������������取���取����������������取������������取������取����取����������������������������������������������������������取�����������取�����������������������取����取���取����取����������取���取������取����取������取�������取������取��������取�������������������取�������������取"
10436844,Is the zebra's nose soft and brown?," # returns a boolean
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Is the zebra's nose soft and brown?""))
    return bool_to_yesno(zebra_patches[0].verify_property(""zebra"", ""nose, soft, brown"")) # crop would include the nose so keep it in the query���������取�������������������������������取���������������������取�����������������������������������������������取���取��������������取������������������������������������������������取�������取��������������取���取�����������取������取������������������������������������������������������������������取�����������取�����������取����取����取��������取����取������取��������取�������取����取��������������������������������������取��������取"
10683765,Does the shirt have blue color?," # returns a boolean
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does the shirt have blue color?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""blue"")) # crop would include the shirt so keep it in the query���������������������������取�����������������������������取������取������������������取���������������������������������������������������������������������������������取����取����������取��������取�������取��������取�����������取������������������������������������������������������������������取����取������取���取���取�������取�������������������取����取������取"
1593352,Do the draperies look white and striped?," # returns a boolean
    image_patch = ImagePatch(image)
    drapery_patches = image_patch.find(""drapery"")
    # Question assumes only one drapery patch
    if len(drapery_patches) == 0:
        # If no drapery is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the draperies look white and striped?""))
    return bool_to_yesno(drapery_patches[0].verify_property(""drapery"", ""white"") and drapery_patches[0].verify_property(""drapery"", ""striped"")) # crop would include the drapery so keep it in the query�����取�����取�����������������取�������������������������������取���������������������������������������������取���取���取�����������������������������������������取�����������取����������������取���取����������������������������������������������������������������������������������取�����取����取���取����������������取�������������������������������������取"
16553304,Are the trunks both long and wide?," # returns yes or no
    image_patch = ImagePatch(image)
    trunks_patches = image_patch.find(""trunk"")
    # Question assumes only one trunk patch
    if len(trunks_patches) == 0:
        # If no trunk is found, query the image directly
        return image_patch.simple_query(""Are the trunks both long and wide?"")
    trunk_patch = trunks_patches[0]
    is_long = trunk_patch.verify_property(""trunk"", ""long"")
    is_wide = trunk_patch.verify_property(""trunk"", ""wide"")
    return bool_to_yesno(is_long and is_wide) # returns yes or noніцип��������������������取������������������������������������������取�����取����������������������取����������������������������������取�����取����������取�������������������������������������������������取���������������取���取�����取����取�������取�����取����取��������������������������������������������������������������取����取��������取���取��������取������取������取�����取����取�������取����取�������取���取����������取��������������������取�������取"
7165102,Is the car on the left of the photo?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Is the car on the left of the photo?"")
    if car_patches[0].left < image_patch.left:
        return ""yes""
    return ""no""���取����������������������������������������������取��取���������������������取�������取�����������������������������������������������������������������������取���取������取����������取����取����������取���������������������������������������������������������������������取���取�����������������取�������取����取�������取���取������取������������取���取"
11848830,Are both the banana that looks yellow and green and the banana that looks yellow and green short?," # assumes only one banana patch
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""Are both the banana that looks yellow and green and the banana that looks yellow and green short?"")
    banana_patch = banana_patches[0]
    is_yellow = banana_patch.simple_query(""Is the banana yellow?"")
    is_green = banana_patch.simple_query(""Is the banana green?"")
    is_short = banana_patch.simple_query(""Is the banana short?"")
    return bool_to_yesno(is_yellow and is_green and is_short) # crop would include the color and size so keep it in the query��������������取����������������������������取�����������������取�����������������取������取�������������������������������������������������������������������������取������������取��������������取����������取�������取������������������������������������������������������������取����取��������取�����取����取������取�������取�����取�����������取�����取����������������取"
19279872,What is the man to the right of the helmet wearing?," # assumes one man and one helmet
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    helmet_patches = image_patch.find(""helmet"")
    if len(man_patches) == 0 or len(helmet_patches) == 0:
        # If no man or helmet is found, query the image directly
        return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    man_patch = man_patches[0]
    helmet_patch = helmet_patches[0]
    if man_patch.horizontal_center > helmet_patch.horizontal_center:
        return man_patch.simple_query(""What is the man wearing?"")
    return helmet_patch.simple_query(""What is the man wearing?"") # crop would include the man so keep it in the query������������取�����������������������������取�������������取����������������������取����取�����取��������取������������������取������取����������������������������������������������������取����取���������取�������取�����取������������取���������取��������取�������������������������������������������������������������取�����取��������取�����������取��������取�������取��������取��取���取�����取������������取"
4285513,What is the color of the floor?," # returns the color of the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the floor?"") # assumes the floor is the bottom of the image çerçev çerçev����������������取�����������取����������取����取�������������取���������������������������������������������������������取��������取�����������������������取������������������������������������������取�����������������������������������������������������������������������取��取������取���������������������取���取����取����取����取��������取���取����取����取���取�������取�����取��������取����取����取����取����取������取�����取��������取"
3974266,Do the trousers look tan?," # returns a boolean
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the trousers look tan?""))
    return bool_to_yesno(trousers_patches[0].verify_property(""trousers"", ""tan"")) # crop would include the trousers so keep it in the query��������������取������������������取������取������������������������������������������取����������������������������取���������������������������������������������取����������������取����������������取����取�����������������取�����取�������������������������������������������������������������取�������������������取������������取�������取������取"
11595009,What are the devices to the right of the device that is to the right of the remote control?," # assumes only one remote control
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    # Question assumes only one remote control patch
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch.simple_query(""What are the devices to the right of the device that is to the right of the remote control?"")
    remote_control_patch = remote_control_patches[0]
    device_patches = image_patch.find(""device"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > remote_control_patch.horizontal_center:
            device_patches_to_right = image_patch.find(""device"")
            for device_patch_to_right in device_patches_to_right:
                if device_patch_to_right.horizontal_center > device_patch.horizontal_center:
                    return device_patch_to_right.simple_query(""What are the devices to the right of the device that is to the right of the remote control?"")
    return ""no"" # if no device is to the right of the remote control, return no
������������������取���������������取�����������������取������������������取���取����取����������������������取�����������������取��������������������������取���取���������取����取�����取����取�������������������������������������������������������������������������������取�������������������取�������取����������取���取�������������取"
6183000,Are there nightstands or beds?," # returns yes or no
    image_patch = ImagePatch(image)
    is_nightstand = image_patch.exists(""nightstand"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_nightstand or is_bed)���取��������������������������取������������������������������������������取�����������������������������������取�������������������������������������取�����取���������取������取����取����取������取������取���������������������������������������������������������������取���取�������取������������������取���取�����������取��������������������取������������������������������������������������������������������������������������取���������������������������������取�����������������������������取����取���取��������������取����������取"
14143982,Is it an outdoors scene?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""scene"", ""outdoors"")) # scene is a property of the image, not the patches, so query the image directly・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
6123160,Are the speakers to the left of a Wii controller?," # assumes one speaker and one Wii controller
    image_patch = ImagePatch(image)
    speaker_patches = image_patch.find(""speaker"")
    wii_controller_patches = image_patch.find(""Wii controller"")
    if len(speaker_patches) == 0 or len(wii_controller_patches) == 0:
        # If no speaker or Wii controller is found, query the image directly
        return image_patch.simple_query(""Are the speakers to the left of a Wii controller?"")
    speaker_patch = speaker_patches[0]
    wii_controller_patch = wii_controller_patches[0]
    return bool_to_yesno(speaker_patch.horizontal_center < wii_controller_patch.horizontal_center) # assumes one speaker and one Wii controllerніцип�����取���取��������������������������������������取���������������取����取���������������������������取����������������������������取���取���取���取��������取���取��取����������������������������������������������������������取���取���取���取���������取����取�������������取�����������������������������������������������������������取�����取������������������取������取����取�����取���取��������取��������取�����取����取�������������������������������取�����取"
3681634,Is the plastic fork in the top or in the bottom part of the photo?," # assumes only one plastic fork
    image_patch = ImagePatch(image)
    plastic_fork_patches = image_patch.find(""plastic fork"")
    if len(plastic_fork_patches) == 0:
        # If no plastic fork is found, query the image directly
        return image_patch.simple_query(""Is the plastic fork in the top or in the bottom part of the photo?"")
    plastic_fork_patch = plastic_fork_patches[0]
    if plastic_fork_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""��������������取�������取���������������������������取�������取��������������������������������������������������取����������������������������������������������������������取�������取����������������������������������������������������������������������������取�����取���取����取�������������取����������取�����������������������������取������������������取"
13629530,What is the vehicle on the street?," # assumes one vehicle and one street
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    street_patches = image_patch.find(""street"")
    if len(vehicle_patches) == 0 or len(street_patches) == 0:
        return image_patch.simple_query(""What is the vehicle on the street?"")
    vehicle_patch = vehicle_patches[0]
    street_patch = street_patches[0]
    if vehicle_patch.horizontal_center > street_patch.horizontal_center:
        return vehicle_patch.simple_query(""What is the vehicle on the street?"")
    else:
        return street_patch.simple_query(""What is the vehicle on the street?"") # crop would include the street so keep it in the query��������取��������取��������������������取���������������������������������������取������取����������������������������取�����取�������������������������������������取������取���取�����������������取�������取���取�����取������取����取��取���取�����取�����������取���������������������������������������������������������������������������������取����������取���取������取�����取������������取�����取"
1718325,Are there chairs or windows in the scene?," # returns yes or no
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_chair or is_window)����取������取���������������������������������������取������������������������取����������������������������取�����取��������������������������������������������取���取�������取����取�����������������������������������������������������������������������������������������������取����取���������������������取����������������������������������������取����取�����������������������������������������������������������������������������������������������取������������取������������取������������������������取��取"
10607062,What color is the hat the man is in?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color is the hat the man is in?"")
    man_patch = man_patches[0]
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return image_patch.simple_query(""What color is the hat the man is in?"")
    hat_patch = hat_patches[0]
    return hat_patch.simple_query(""What color is the hat?"") # crop would include the hat so keep it in the query�����������������������������������取�������������������������������������取�����取�����取�������������������������取�����取�������������������������������������������取����取���������取�����取����������������������������������取����������������������������������������������������������取����取���取����������������取�����取�������������������取"
1849976,What vegetables are to the left of the spoon?," # assumes only one spoon patch
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""What vegetables are to the left of the spoon?"")
    spoon_patch = spoon_patches[0]
    vegetable_patches = image_patch.find(""vegetable"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.horizontal_center < spoon_patch.horizontal_center:
            return vegetable_patch.simple_query(""What vegetable is to the left of the spoon?"")
    return ""no vegetable is to the left of the spoon"" # if no vegetable is to the left of the spoon, return this string
��������������������������������取��������������������������������������取����������������������取�����取��������������取�������������������������������取����取�����取�����������取���������取�������取����取������������������������������������������������������������������������取����������取��������������取������������������取"
14827816,Is the statue made of bronze or stone?," # bronze or stone
    image_patch = ImagePatch(image)
    statue_patches = image_patch.find(""statue"")
    # Question assumes only one statue patch
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch.simple_query(""Is the statue made of bronze or stone?"")
    return statue_patches[0].best_text_match([""bronze"", ""stone""]) # crop would include the material so keep it in the query�������取�����取�����取��������������取��������取������������������������������������������������取�������������������������取����������取������������������������������������������������������������取����取����取���取�������取����取��������取����取������取����取�����取�������������������������������������������������������������������取�����������取���取���取���������取���取�������取�������������取���������������取������������������������������取"
857204,What's the woman wearing?," # returns a string describing the clothing
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What's the woman wearing?"")
    return woman_patches[0].simple_query(""What's the woman wearing?"") # crop would include the clothing so keep it in the query����������������������������������������������������������������������������取��������������������������取��������������取����取����������������������������������������取�����������������取�������������取���取��������������取������取������������������������������������������������������������取����取���������取���������������取�����取����取������取"
2201105,Is the ball pink?," # returns yes or no
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch.simple_query(""Is the ball pink?"")
    return bool_to_yesno(ball_patches[0].verify_property(""ball"", ""pink"")) # crop would include the ball so keep it in the query�����取���������������取�������������������取�����������������取���������������������取������������������������������������取����取������������������������������������������取�����取�����������取������取�������取������������������������������������������������������������������������取���取�������������������������������取�������取���取���������取�����取�����取����������取��取"
14616023,What piece of furniture are the cords in front of?," # assumes only one piece of furniture
    image_patch = ImagePatch(image)
    cords_patches = image_patch.find(""cords"")
    # Question assumes only one cords patch
    if len(cords_patches) == 0:
        # If no cords are found, query the image directly
        return image_patch.simple_query(""What piece of furniture are the cords in front of?"")
    cords_patch = cords_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > cords_patch.horizontal_center:
            return furniture_patch.simple_query(""What piece of furniture are the cords in front of?"")
    return image_patch.simple_query(""What piece of furniture are the cords in front of?"") # if no furniture is in front of the cords, query the image directlyніцип������������������������������取�������取������������������������������������������������取�������������������������������取����取����取��������������������������������������������������������取����取��������������������取���取���取����������������������������������������������������������������������取�������������������������取�������������取�������取���取���������取"
161027411,Are there both doors and windows in this photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)��������取������取��取��������������������������������������取����������������������取��������������������������取�������取����������������������������������������������������������������������������取�����取�������������������������������������������������������������������������������������������������取������������取������取�����������取���取�������������取����取������������取����取���取��������取���取����������������������取"
8249677,On which side of the image is the black car?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the black car?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��取���������取�������取���取��������������取���������������取��������������������������取��������取����������������取�����取������取����������������������������取������取������取����取������������取���������������������取������������������������������������������������取�����取������������取���取������������������������������������������������������������������������������������������������������取��������������取�����取���������取���取�������取������取"
16184856,What is the striped animal called?," # assumes only one striped animal
    image_patch = ImagePatch(image)
    striped_animal_patches = image_patch.find(""striped animal"")
    if len(striped_animal_patches) == 0:
        # If no striped animal is found, query the image directly
        return image_patch.simple_query(""What is the striped animal called?"")
    return striped_animal_patches[0].simple_query(""What is the striped animal called?"") # crop would include the striped animal so keep it in the query�����������������取�������取�����������������������������取���取����������������������取���取�������取���������������������取����取���������������������������������������������������取�������取������取����取�����取�������取������取�������������取������取��������������������������������������������������������������取��������取�������������������取�������取���取���取���取����取���取������取�������取���取������������������������取"
1479068,Is it outdoors?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""outdoor"", ""outdoor"")) # assumes the property is ""outdoor"" and the object is ""outdoor""������������������������������取���������取�����取��������������取���取���取��������取���������������取�����������������������������取���取���������取����取��������������������������������������������������������取������取���取�����取���取����取����取��������������������������������������������������������������������������������������取���取���������������������������������������取����取�����取�����取������取������取�����取�����取"
16155046,Is the dry grass below a zebra?," # assumes one zebra patch
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch.simple_query(""Is the dry grass below a zebra?"")
    zebra_patch = zebra_patches[0]
    grass_patches = image_patch.find(""dry grass"")
    for grass_patch in grass_patches:
        if grass_patch.vertical_center > zebra_patch.vertical_center:
            return ""yes""
    return ""no""��取���������������������取�������������������������������取������������������取��������取���取��������������取�����取�����������������������������取�������取�������������������������取�����������������������������������������������������������取�����������������取����������取����取����������取������取�������������取���������������������������������������������������������������取���取���������取���������������取�����������������取����取��������������取"
16515071,What is the person in the water wearing?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""What is the person in the water wearing?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""What is the person in the water wearing?"") # crop would include the person so keep it in the query��取����������取����������������������取�����������取�������������������������������������������取������取������������������������������取������������取������取���������������������������������������������������������取��������取�������������������取����取�����取������取�����取����取�������取������������������取���������取�����������������������������������取����������������������取���取�����取����取�������取����取���取���取������取������������������取�������������������������取"
161015042,Who is wearing the goggles?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the goggles?"")
    person_patch = person_patches[0]
    goggles_patches = image_patch.find(""goggles"")
    # Question assumes only one goggles patch
    if len(goggles_patches) == 0:
        return ""no""
    goggles_patch = goggles_patches[0]
    if goggles_patch.left < person_patch.left:
        return ""left""
    elif goggles_patch.right > person_patch.right:
        return ""right""
    else:
        return ""no"" # goggles are not on the person's head, but on the person's body, so return no
���������������������取������������取��������������取����取�������������������取���������������������������取������取�������取�������������������������������取������取���������取�����取�������������������������������������������������������������������������������取����取���取���������取���������取���取������取�������������取���取���取����取"
19149868,What is pulled by the lady?," # assumes one lady patch
    image_patch = ImagePatch(image)
    lady_patches = image_patch.find(""lady"")
    if len(lady_patches) == 0:
        # If no lady is found, query the image directly
        return image_patch.simple_query(""What is pulled by the lady?"")
    lady_patch = lady_patches[0]
    pulled_patches = image_patch.find(""pulled"")
    # Question assumes only one pulled patch
    if len(pulled_patches) == 0:
        return image_patch.simple_query(""What is pulled by the lady?"")
    pulled_patch = pulled_patches[0]
    return pulled_patch.simple_query(""What is pulled by the lady?"") # crop would include the lady so keep it in the query��取����������������������取����������取���取��取����������������������������������������������������������取��取���取����������������������������取����������������取������������������������������������������������������������������������������取��������取�������取������取���������取���取���取����取�����������������������������������������������������������������������取���������������取����取�����取"
5199994,What's the man wearing?," # returns the answer to ""What's the man wearing?""
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What's the man wearing?"")
    return man_patches[0].simple_query(""What's the man wearing?"") # crop would include the man so keep it in the query�����取��取��������������������������������������������取���������������������取������取���取��������������������������取��������������������������������������取���取��������取����取���取�������取��������������取���取������������������������������������������������������������取����取������������取����取���取�������������取����取����取���取�����取"
19184475,Are the man glasses on the left side of the image?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the man glasses on the left side of the image?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < man_patch.horizontal_center:
        return ""yes""
    return ""no""�������������������取���������������������������������取������������������������������取�����������������取���取�����������������������������������������������������取����取�����������取������取����������������������������������������������������������������������������取���取�����������������������取���取����������������������������取"
7149602,Is the shirt orange or blue?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt orange or blue?"")
    return shirt_patches[0].best_text_match([""orange"", ""blue""]) # crop would include the shirt so keep it in the query���������������取�������������取������������取����取�������������取��������������������取���������������������������������取������������������������������������������������������������取��������取�������取����取����取����取������������取����������������������������������������������������������������������取����取���������取����取����������取���取�����������������取���取���取"
19479555,What is the person to the right of the benches holding?," # assumes one person and one bench
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    bench_patches = image_patch.find(""bench"")
    if len(person_patches) == 0 or len(bench_patches) == 0:
        # If no person or bench is found, query the image directly
        return image_patch.simple_query(""What is the person to the right of the benches holding?"")
    person_patch = person_patches[0]
    bench_patch = bench_patches[0]
    if person_patch.horizontal_center > bench_patch.horizontal_center:
        return person_patch.simple_query(""What is the person to the right of the benches holding?"")
    return bench_patch.simple_query(""What is the person to the right of the benches holding?"") # crop would include the person so keep it in the query���������取����������������������������取������������������������������������������������������������取�������取���取�����取�������������������������������������������������������������������������取���������������������������������������������������������������取��������取����������������取����������������取�������������������取����取"
19273393,Are there both a door and a window in this photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)������取������������������������������取�������������������取������������������������取�������取�������取��取���������������取���取���取��������取��������������������������������������������取�����������������取�����������取���������������������取����������������������������������������������������������������������������������取����取�������取����������������取����������取���取����取����取���取�����取������������取����取�������取������������������取"
6481656,What is the man doing?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man doing?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""What is the man doing?"") # crop would include the man so keep it in the query���取�����取������������取����������������取���取�������������取����取���������������������������������取����������������取���取���������������取�������������������������������取�������取���取�����������取�������取������取���取�����������������������������������������������������������������������������������取���取������取���取�������������取������取��取�������取������取���������取����取���������取"
13127703,What kind of drink is to the left of the bottle the woman is pouring?," # bottle the woman is pouring
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""What kind of drink is to the left of the bottle the woman is pouring?"")
    bottle_patch = bottle_patches[0]
    drink_patches = image_patch.find(""drink"")
    # Question assumes only one drink patch
    if len(drink_patches) == 0:
        return ""no""
    drink_patch = drink_patches[0]
    if drink_patch.horizontal_center < bottle_patch.horizontal_center:
        return drink_patch.simple_query(""What kind of drink is to the left of the bottle the woman is pouring?"")
    return drink_patch.simple_query(""What kind of drink is to the right of the bottle the woman is pouring?"") # crop would include the bottle so keep it in the query��������������取���������������取�������������������������������������������取��������取������������������������������取����取�������������������������������������������取����取������取�����取���������取�����������取����取��������取�������������������������������������������������������取���取��取��取������取��������������������������������取�����������取������取"
2378018,What is the toilet in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toilet in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly���������取��取�����取�����������������������取������������������取���������������������������������������������������������������������������������������������������取�������������取����������������������取�����取���������������取��������������������������������������������������������������������������������������取����取�������������取���������取�������������取"
8430841,Is the frisbee to the left of the guy?," # assumes one guy patch
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""Is the frisbee to the left of the guy?"")
    for frisbee_patch in frisbee_patches:
        guy_patches = image_patch.find(""guy"")
        for guy_patch in guy_patches:
            if guy_patch.horizontal_center > frisbee_patch.horizontal_center:
                return ""no""
    return ""yes"" # if no guy is found, query the image directly
�������取������������取����取������������取��������������������������������������取��������������������取����取���取����������������������������������������������取��������取�����取����取������取���������取����������������������������������������������������������������取����������������������取������������������取��������取"
18616818,The man is watching who?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""The man is watching who?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""Who is the man watching?"") # crop would include the man so keep it in the query��取����������������������������������������������取�������������������������取������������������������������������������������������������取��������������������������������������������������������取��������������取�������取��������������取�����������������������取���取����������������������������������������������取��取�������������������������������������取��������取������取�������取���取����取���取���取����取�������������������������取���取�����取���取��������������取����取�����取���取����������取"
179526,Is the white dog behind a girl?," # assumes one white dog and one girl
    image_patch = ImagePatch(image)
    white_dog_patches = image_patch.find(""white dog"")
    girl_patches = image_patch.find(""girl"")
    if len(white_dog_patches) == 0 or len(girl_patches) == 0:
        return ""no""
    white_dog_patch = white_dog_patches[0]
    girl_patch = girl_patches[0]
    if white_dog_patch.horizontal_center < girl_patch.horizontal_center:
        return ""yes""
    return ""no""���取������������取���取�����������������取���������������取��������取������������������取���������取����������������������取����������������������������������������������取���取�����取������取�������取������取�����������取����������取��������������取�����������������������������������������������取���������������取������取��������取����取�����取�����取��������取�����取�����取"
21018827,Is the river murky and calm?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""river"", ""murky"") and image_patch.verify_property(""river"", ""calm"")) # returns a boolean
�����������������������取�������������������������������取����������������������取����������������������������������������������������������������取�����������������取���取�����取�������取������取���取���取���取������������������������������������������������������������������取��取��取����取�������������������取�����取���取���取������������取��������������取�������������������������������������������������������������������������������������������������������������������������������������������������������������������������取"
3697449,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query��������取���������������������������取����取�������������取���取����������������������取�������������������������������取����取����取���������������������������������������������������取���取����取����������������取�������取���������������������������������������������������������������������������������取���������������������������������取��������取����取"
3697807,Are there both a racket and a toothbrush in the image?," # returns a boolean
    image_patch = ImagePatch(image)
    is_racket = image_patch.exists(""racket"")
    is_toothbrush = image_patch.exists(""toothbrush"")
    return bool_to_yesno(is_racket and is_toothbrush)���取�������������������取������������������取�������������取�������������������取����取����取����取������������������������取�����取�������������������������������������������取���取���������������取��������������取����������������������������������������������������������������������������取���取����������取��������取������取���取�����取�����取������取����取�������取������取�����取�����取��������������������������������������������������������������������������������取�������������������������取���������������������������取����取"
1904643,What do both the car and the sign have in common?," # returns a string
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What do both the car and the sign have in common?"")
    car_patch = car_patches[0]
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        return ""no""
    sign_patch = sign_patches[0]
    # Check if the car and sign have the same color
    car_color = car_patch.simple_query(""What color is the car?"")
    sign_color = sign_patch.simple_query(""What color is the sign?"")
    return bool_to_yesno(car_color == sign_color) # returns a string
�������取���������������取��������������取������������取���������������取����������取���������������������������取����取�����取���������������������������������������取������取����������取����������取����������取���取���������������������������������������������������������������������取�������取���取���������������������������取��������取���������������取���������取�����取�����取"
11764476,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
�������������������取���������������������������������取�����������������������������������������������取������取��������������������������������取�����取�����取�����取�����取��������������取���取�����������取���������������������������������������������������������������取�����������取���取���取���������������������取����取���取���取�������取���取����������取���取�������取���������取���取���取���������取�������������������������������������������������������������������������������������������������取��������������������取"
4903948,On what kind of furniture is the plate?," # assumes one plate and one furniture
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    furniture_patches = image_patch.find(""furniture"")
    if len(plate_patches) == 0 or len(furniture_patches) == 0:
        # If no plate or furniture is found, query the image directly
        return image_patch.simple_query(""On what kind of furniture is the plate?"")
    plate_patch = plate_patches[0]
    furniture_patch = furniture_patches[0]
    return furniture_patch.simple_query(""What kind of furniture is the plate on?"") # crop would include the plate so keep it in the query�������������取������������取���取�����������取���取���������������取�������������������������取���������������������������取����取������������������������������������������取�������������取�������������取����取���������取���������取��取����取��������取����取������取������������������������������������������������������������������������取�������������取���取������取������取����������取���取��������取��������������������取"
61022361,What is the painting that is to the left of the clock hanging on?," # assumes one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""What is the painting that is to the left of the clock hanging on?"")
    clock_patch = clock_patches[0]
    painting_patches = image_patch.find(""painting"")
    for painting_patch in painting_patches:
        if painting_patch.horizontal_center < clock_patch.horizontal_center:
            return painting_patch.simple_query(""What is the painting that is to the left of the clock hanging on?"")
    return image_patch.simple_query(""What is the painting that is to the left of the clock hanging on?"") # if no painting is to the left, query the image directlyніцип���������������������������������������������������������������������������������取������������������������������������������取���取����取���取����取����������������������������������������������取�����������取�����取�������取������������取��������������������������������������������������������������������������取����取���取���取������������取��取�������取��������������������������取�������取�����取"
1527392,"What color is the fence, tan or black?"," # returns the color of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What color is the fence, tan or black?"")
    return fence_patches[0].best_text_match([""tan"", ""black""]) # crop would include the fence so keep it in the query��������������取���取�������������取������������取��������������������取��������������取�����������������������������取���取���������������������������������������������������������取���������取���取�����取����取�������取���取�����取��取���取������������取��取��取������取����������������������������������������������������������������������������������取����������������取�����取����������取���������取����������取"
19229351,Do you see both bowls and carrots?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""bowl"")
    is_carrot = image_patch.exists(""carrot"")
    return bool_to_yesno(is_bowl and is_carrot) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
1297082,On which side is the silver fork?," # assumes only one fork
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side is the silver fork?"")
    fork_patch = fork_patches[0]
    if fork_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������取�������������������������������������������取������������������������������������������取�������取�������取���������������������������������������取������������取���取���取���取����������取�����������������������������������������������������������������������������取������取����取�����������������取���������������取������取�����������取���������������������������取"
16757832,Are there any blue helmets or napkins?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blue_helmet = image_patch.exists(""blue helmet"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_blue_helmet or is_napkin)��������取������取����������������������取�������������������取����������������������取�������������������������������取�����取������������������������������������������������������取���取�����取�����取������取���取���������������������������取������������������������������������������������������������������������������������������取��������取����取�����取����取�������取����取�������取�������������取"
839816,"In which part of the photo is the racket, the top or the bottom?"," # assumes one racket patch
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""In which part of the photo is the racket, the top or the bottom?"")
    racket_patch = racket_patches[0]
    if racket_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""�����������取��������取������������������取���������������取����������������������取����取������������������������取�����������������������������������������������取����取������取���取����取���取����������������取����������������������������������������������������������������������������������������������������������取����取������������取�����取����������������������取"
12385226,Is there a mirror in the bathroom?," # assumes there is only one mirror
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    if len(mirror_patches) == 0:
        return ""no""
    return ""yes"" # mirror is in the bathroom, so it is in the bathroom chtě 노출등록�������������取������取��取���������������������取��������������������取��������������取���������取�������������������������������取��取��取�����取������������������������������������������������������������������取����������������取����取������取������������������������������������������������������������取�������取�������取�������取�����������������������取�����������取����������取����取�����取����取"
18720852,Are there either blankets or tents in this picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blanket = image_patch.exists(""blanket"")
    is_tent = image_patch.exists(""tent"")
    return bool_to_yesno(is_blanket or is_tent)���取�����������取�������取�����������������������������取���������������������取�������������������������������取��������取�������������������������������������������取���取���取������������取�����取����取���取�����取�����������取����������������������������������������������������取�����������取��������取���取���取��������取��������������取�����取����取���取����������取����取������取������取���取������取�����������������������������������������������������������������������������������������������������取�������取���������������������取�������������������取"
4675139,Is the cardboard box to the right or to the left of the woman that is on the left?," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the cardboard box to the right or to the left of the woman that is on the left?"")
    woman_patch = woman_patches[0]
    cardboard_box_patches = image_patch.find(""cardboard box"")
    # Question assumes only one cardboard box patch
    if len(cardboard_box_patches) == 0:
        return ""no""
    cardboard_box_patch = cardboard_box_patches[0]
    if cardboard_box_patch.horizontal_center > woman_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����������取���������������������取�����������������������������������������取���������������������������取��������������������������������������������������������������取��������取���取���������������������取���取�����������������������������������取����������取�������������取�����取���取������取������������取���取�����������取���������取������取�������������取"
19453453,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query������取��������������������������������取����������������������������������������取�����������������������������取����取����������������������������������������������取���取���������取����取���取������������取����取������������取��取����������������������������������������������������取������取���������取������������������������取������取�������������取����取�����取���取�����取�����取���取"
19562503,Is the house in the bottom part or in the top of the photo?," # image is the original image
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""Is the house in the bottom part or in the top of the photo?"")
    if house_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"" ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image"
11737187,What is in front of the flowers that look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the flowers that look red?"") # crop would include the flowers so keep it in the query��������������取���������������取��������������取�����������������������������������取�����������������������������取��������������������������������������������������������������������取���取�������取�������������������������������������������������������������������������������取����取�������取������取��������取���取�����取������������������取�������取"
15710688,Is the shirt short sleeved or sleeveless?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt short sleeved or sleeveless?"")
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""short sleeved"") or shirt_patch.verify_property(""shirt"", ""sleeveless"")) # crop would include the shirt so keep it in the query������������������������取�������������取�����������������取���������������������������取���取��������������������������取�������������������������������������������������取���取��������取���取��������取�����������取�������������������取����取����取��������������������������������������������������������取���������取�����������������������取�������������取�������取��������������������取"
5533952,What are the white wires connected to?," # assumes only one white wire
    image_patch = ImagePatch(image)
    white_wire_patches = image_patch.find(""white wire"")
    # Question assumes only one white wire patch
    if len(white_wire_patches) == 0:
        # If no white wire is found, query the image directly
        return image_patch.simple_query(""What are the white wires connected to?"")
    white_wire_patch = white_wire_patches[0]
    return white_wire_patch.simple_query(""What are the white wires connected to?"") # crop would include the wires so keep it in the query��������取��取����������������取�������������取���������������取�����取�������������������������取��������������������������������������������������������������������������������������取�����取�����������取����取����取����取���取���������取���������取����������������������������������������������������������������������������������������取��������取���������取�������取�������取����取�������������取"
11313555,"What type of furniture is that, a table or a nightstand?"," # assumes only one patch
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What type of furniture is that, a table or a nightstand?"")
    furniture_patch = furniture_patches[0]
    return furniture_patch.best_text_match([""table"", ""nightstand""]) # crop would include the furniture so keep it in the query��取��������������������������������������取������������取��������������������������������������取��取�����������取������������������������������������取����������取����������������������������������������������������������取���取�����������������������取����������������取����取�����������������������������������������������������取��取�����取����������取���������������������取����取��������取����取�����������取��������������取�����������取����取���取����取�����取�����������������取�������取"
10508893,What animals are in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are in front of the trees?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип������������������������������取������������������取�������������������取����������������������取���������������������������������������取������取��������取��������������������������������������������������������取����取����������������������������������������������������������������������������������取����取�����������������������������������取���取�����������取"
14501997,What is the gate made of?," # gate is a type of object
    image_patch = ImagePatch(image)
    gate_patches = image_patch.find(""gate"")
    # Question assumes only one gate patch
    if len(gate_patches) == 0:
        # If no gate is found, query the image directly
        return image_patch.simple_query(""What is the gate made of?"")
    return gate_patches[0].simple_query(""What is the gate made of?"") # crop would include the gate so keep it in the query���������取����取��������������������������������������������取���取���������������取���取�����取���取��������������������������取���������取��������������������������������������������������������取���取���取���取�������������取����取���取�������取������取�����������������������������������������������������������������������������������������������取�������取����取�����取�����取�����取������取����取���������������取�����������������������取�����取"
45624,What color is the device on top of the table?," # device is a placeholder for any object
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What color is the device on top of the table?"")
    device_patch = device_patches[0]
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        return ""no""
    table_patch = table_patches[0]
    if device_patch.vertical_center < table_patch.vertical_center:
        return device_patch.simple_query(""What color is the device on top of the table?"")
    else:
        return device_patch.simple_query(""What color is the device on the table?"") # crop would include the table so keep it in the query����������������取��������������������������������������������������������取������取�����������取����������������取����取���取�������������������������������取������������������取����取����取�������取�������取���������������������������������������������������������������������������取����������������������������取�������取�������取�������取���取�����取��������������������������取"
181032044,Are these closed drawers?," # assumes only one drawer patch
    image_patch = ImagePatch(image)
    drawer_patches = image_patch.find(""drawer"")
    if len(drawer_patches) == 0:
        # If no drawer is found, query the image directly
        return image_patch.simple_query(""Are these closed drawers?"")
    return bool_to_yesno(drawer_patches[0].verify_property(""drawer"", ""closed"")) # crop would include the drawer so keep it in the query��������������取����取��取���������取������������取���������������取������������������������������������������������������取���取����������������������������������������������������������������������������取������������������������������������������������������������������������������������������������������取�������取�����取������取�����������取�����取����取�����������������������������������������������������������取"
383,What kind of furniture is made of wood?," # returns a list of strings
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is made of wood?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.verify_property(""furniture"", ""wood""):
            return furniture_patch.simple_query(""What kind of furniture is made of wood?"") # crop would include the wood so keep it in the query
    # If no furniture is made of wood, pick the first furniture
    return furniture_patches[0].simple_query(""What kind of furniture is made of wood?"") # crop would include the wood so keep it in the query������������取����������������取������������������������������������������������取�������������������������������取����取��������������������������������������������������������������������������取��������������������������������������������������������������取���������取���������取����������������取������取������������取"
101054962,What is the person by the bananas wearing?," # assumes one person and one banana
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    banana_patches = image_patch.find(""banana"")
    if len(person_patches) == 0 or len(banana_patches) == 0:
        # If no person or banana is found, query the image directly
        return image_patch.simple_query(""What is the person by the bananas wearing?"")
    person_patch = person_patches[0]
    banana_patch = banana_patches[0]
    if person_patch.horizontal_center > banana_patch.horizontal_center:
        return person_patch.simple_query(""What is the person by the bananas wearing?"")
    else:
        return banana_patch.simple_query(""What is the person by the bananas wearing?"") # crop would include the person so keep it in the query��������取���������取���������取����������������������������������������������������取������������������������������������������������������������������������������������取���������取��������������取�����取������取����取������������������������������������������������������������取����取������������取��������取����������������������取����������取����取�������������取"
759165,What is the color of the tower in the middle of the picture?," # image is a 3D numpy array
    image_patch = ImagePatch(image)
    tower_patches = image_patch.find(""tower"")
    # Question assumes only one tower patch
    if len(tower_patches) == 0:
        # If no tower is found, query the image directly
        return image_patch.simple_query(""What is the color of the tower in the middle of the picture?"")
    tower_patch = tower_patches[0]
    return tower_patch.simple_query(""What is the color of the tower in the middle of the picture?"") # crop would include the tower so keep it in the query�������������������������取���取�������������取�������������������������������������取���取������������������������������������������������������������������取��������������取���取���取�����取����������取��������������������取��������������������������������������������������������������取������������取����取���取������取������������取����取���取�����������取��取����取"
10775539,Is this giraffe tall and white?," # returns a boolean
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Is this giraffe tall and white?""))
    return bool_to_yesno(giraffe_patches[0].verify_property(""giraffe"", ""tall"") and giraffe_patches[0].verify_property(""giraffe"", ""white"")) # crop would include the color and height so keep it in the query�����取�����������取�������������取��������取����������������取����取����������������������取���取�������取����������������取����取����取�����取����取�����������������������������������取������������������取�������取����取�����取���取���������取���取�����������������������������������������������������������������������������取������取�������������取������������取"
19981804,On which side of the photo is the colorful screen?," # assumes one screen patch
    image_patch = ImagePatch(image)
    screen_patches = image_patch.find(""screen"")
    if len(screen_patches) == 0:
        # If no screen is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the colorful screen?"")
    screen_patch = screen_patches[0]
    if screen_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������取������������取���������������������������������������������������取���������������������������������取������������������������������������������������取���取�����取�������������������取��������������取�������������������������������������������������������������取��������取������������取���������������取�����取��������取�����取������取�����取����取�������������取"
7903654,Is the tap on the left side or on the right?," # assumes one tap patch
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""Is the tap on the left side or on the right?"")
    tap_patch = tap_patches[0]
    if tap_patch.left < image_patch.left + (image_patch.right - image_patch.left) / 2:
        return ""left""
    else:
        return ""right""�����������������������������������������������取����������������取�������取����取��������������������������������取���取�����������������������������������������������取���取�����取���取���取�����取���取�����������������取����取���取����������������������������������������������������������������取��������������取������取�����取���取�������������取����������������������取�����������������取"
6206183,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����取��������取��取���������取�������������������������������������取��������取����������������������������取��������取�������������������������������������������������取��������取�����������������������������������������������������������������������������取������������取�����取������取���取����取���������取����取�����������������������������������������������������������������������������������������������������������������������������������取����������������取��������������������������������取���取���������������取����取������取������取����������取"
15212437,Is the coat black or beige?," # returns yes or no
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Is the coat black or beige?"")
    return coat_patches[0].best_text_match([""black"", ""beige""]) # crop would include the color so keep it in the query�����取�����������������取�������������取���取���取���取�������������取���取������������������������取����������������取���������取����取����取���取����取��������������������������取�������取�������������取�������取����取�����取������取������������������������������������������������������������������������取��������������������������取���������取����取����取������������������������������取"
13123207,Does the kite near the field look high and red?," # assumes one kite and one field
    image_patch = ImagePatch(image)
    kite_patches = image_patch.find(""kite"")
    field_patches = image_patch.find(""field"")
    # Question assumes only one kite and one field patch
    if len(kite_patches) == 0 or len(field_patches) == 0:
        # If no kite or field is found, query the image directly
        return image_patch.simple_query(""Does the kite near the field look high and red?"")
    kite_patch = kite_patches[0]
    field_patch = field_patches[0]
    if kite_patch.horizontal_center > field_patch.horizontal_center:
        return bool_to_yesno(kite_patch.verify_property(""kite"", ""high"") and kite_patch.verify_property(""kite"", ""red""))
    else:
        return ""no"" # kite is not near the field, so it cannot be high and redроничес�����取���取������������取������取������������取�������取��取����������取������取����取���������������取����取�����取�������������������������取���������取�����取���取���������������������������������������������������������取�������取����取�����取�������取����取�������取���取���取����取�����取��������������������������������������������������������������������������取�����取�����取���取���取���取�����取���取���取����取����取����取"
7740092,Are there any utensils in this picture?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""utensil"")) # returns True or False, which is then converted to yes or no
�������������������取�����������������������������������取����������������������������������������������取��������取�����������������������������������������取�����取����������������取������取���取�����取��������������������������������������������������������������������取����取��取���取�������取�������������������取������取���������取����取�������取���������������������取����取���������������������������������������������������������������������������������������������������������取���������取���取�������������������������������������取"
8774975,What is around the guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the guy?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип�������������������取���������取��取����取���������������������������取�����������������������取������取��������������������������取������������取������取����取����������������������������������������������取�������������������取�������取����取�������取����取���������������������������������������������������������������������取�����������������������取������取��������取������取���取����������取"
17728574,Do you see bananas or cookies?," # returns yes or no
    image_patch = ImagePatch(image)
    is_banana = image_patch.exists(""banana"")
    is_cookie = image_patch.exists(""cookie"")
    return bool_to_yesno(is_banana or is_cookie)����取��取��������������������������������������������������������������取���������������������取��取��������取�����取��������������取�������������������取�������������������������������������������������������������������取�����������������������������取��������取����取�������取�����������������取�����取����取����取����������取�������������������������������取���������������������������取��������取�����������������取�����������������������取�����������������������取������取���������取���������������������取�������������������取�����取������������取"
14274506,Is the staircase different in color than the sky?," # returns yes or no
    image_patch = ImagePatch(image)
    staircase_patches = image_patch.find(""staircase"")
    # Question assumes only one staircase patch
    if len(staircase_patches) == 0:
        # If no staircase is found, query the image directly
        return image_patch.simple_query(""Is the staircase different in color than the sky?"")
    staircase_patch = staircase_patches[0]
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        return ""no""
    sky_patch = sky_patches[0]
    return bool_to_yesno(staircase_patch.cropped_image[0,0,0] != sky_patch.cropped_image[0,0,0]) # check the first pixel of the first channel (RGB)ETweetETweet������������������������������������取����取����������������取�����������������������取�����������������������取������取����取�������������������������������������������������������������������取������������取������������������������������������������������������取��������������取�����取���������取���取�������������取�������取������取������������取���取���������������取"
1605874,What color are the containers that are on the right?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""What color are the containers that are on the right?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center > image_patch.horizontal_center:
        return container_patch.simple_query(""What color are the containers that are on the right?"")
    return container_patch.simple_query(""What color are the containers that are on the left?"") # crop would include the left so keep it in the query�����������������取������������������������������������������������������������取���取����������������������������取�������取�������������������������������������������取�������取����取���������������取������取����������������取����取��������������������������������������������������������������取��������取���取���取�����取������������������取����取�����取��������������取"
12495781,Are the people to the right or to the left of the cone that is orange?," # assumes one cone patch
    image_patch = ImagePatch(image)
    cone_patches = image_patch.find(""cone"")
    if len(cone_patches) == 0:
        # If no cone is found, query the image directly
        return image_patch.simple_query(""Are the people to the right or to the left of the cone that is orange?"")
    cone_patch = cone_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        return image_patch.simple_query(""Are the people to the right or to the left of the cone that is orange?"")
    people_patch = people_patches[0]
    if people_patch.horizontal_center > cone_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�������取���������������取�����������取���取��������������取������������������������取�����������������������取���������取���取�������������������������������������������������取��������取��������������取���取����取��������������������������������������������������������������������������������取���取������������������取���������取�����取����取���取���取����取���������取���取�����取����取��������������取"
14165681,"What type of clothing is light, the sweater or the cap?"," # assumes only one light patch
    image_patch = ImagePatch(image)
    light_patches = image_patch.find(""light"")
    if len(light_patches) == 0:
        # If no light is found, query the image directly
        return image_patch.simple_query(""What type of clothing is light, the sweater or the cap?"")
    light_patch = light_patches[0]
    sweater_patches = image_patch.find(""sweater"")
    cap_patches = image_patch.find(""cap"")
    if len(sweater_patches) == 0 and len(cap_patches) == 0:
        # If no sweater or cap is found, query the image directly
        return image_patch.simple_query(""What type of clothing is light, the sweater or the cap?"")
    if len(sweater_patches) > 0:
        sweater_patch = sweater_patches[0]
        if light_patch.horizontal_center < sweater_patch.horizontal_center:
            return ""sweater""
    if len(cap_patches) > 0:
        cap_patch = cap_patches[0]
        if light_patch.horizontal_center < cap_patch.horizontal_center:
            return ""cap""
    return ""sweater"" # if no sweater or cap is found, return sweater as default udál��取����������������������������������������������������������������������������������������取�������������������������������������������������������������������������������������������������取����取������������取����取����取����������������取�����取"
19982010,Is the chair to the right or to the left of the girl that is wearing jeans?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Is the chair to the right or to the left of the girl that is wearing jeans?"")
    girl_patch = girl_patches[0]
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        return ""no""
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > girl_patch.horizontal_center:
        return ""right""
    else:
        return ""left""����������取���������取�������������������������������取������������������������������������������������取����������������������������������������������取����取�����取����取����������取�������取������取������取����取�����������������������������������������������������������������取�����取����取���取����取���������取���������取����������取�������取"
5617223,"What color is the container to the left of the horse, green or silver?"," # container is a placeholder for a more specific object
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""What color is the container to the left of the horse, green or silver?"")
    for container_patch in container_patches:
        if container_patch.horizontal_center < image_patch.horizontal_center:
            return container_patch.best_text_match([""green"", ""silver""])
    return ""silver"" # if no container is to the left of the horse, default to silver (assuming silver is the most common color)�����������������������������取�������������������������取���取�������������������取��������取����取�������������������������������������������������������������������������������������������������������取������������������������������������������������������������取������������������取��������取����取�������������取���������取�����取����取�����取�������������取���取��������取"
2428964,Is the water gray or teal?," # returns yes or no
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""Is the water gray or teal?"")
    return water_patches[0].best_text_match([""gray"", ""teal""]) # crop would include the water so keep it in the query����������������������������������������取�������������������������������������取����������������������������������取���������������������������������������������取���������������取�������������������取��������������取���������取�������������������������������������������取�����取������������取���������������������取���������取�����取������取�������������取�����������������������������������������������������������������������������������������������取"
19620769,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
�����������������������������������取���������������取����������������������������取���������������������取������������取���������������������������取���取���取�����取���取��������������������取�������取�����������取���������������������������������������������������取����������取����������������������������������取���������取�������取���������������������取�����取����取�������������������������������������������������������������������������������������������������������取���取����������������������������������������������������取"
14785459,On which side of the picture is the lamp?," # assumes the image is a single object
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the lamp?"")
    if lamp_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取�����������������������取��������������������������������������取�����������������������取����取����������������������������������������������取�����取�������取����取���取��������取�����取�����������������������������������������������������������������������������������取����取���������������������������取��������取����取����取���������������������取"
1325617,Does the brown animal look tiny?," # returns a boolean
    image_patch = ImagePatch(image)
    brown_animal_patches = image_patch.find(""brown animal"")
    # Question assumes only one brown animal patch
    if len(brown_animal_patches) == 0:
        # If no brown animal is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the brown animal look tiny?""))
    return bool_to_yesno(brown_animal_patches[0].verify_property(""brown animal"", ""tiny"")) # crop would include the animal so keep it in the query������������������������������������������������������取�����������������������������取���������������������������������取���取�����������������������������������������取�������取������������������������取���取���������������取��������取������������������������������������������������������取����取���������������������取���������������������取���取�����������������取"
5672532,Does that shirt look long sleeved?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does that shirt look long sleeved?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""long sleeved"")) # crop would include the shirt so keep it in the query���������取����������������取���取�������������取������������取�����������������������������取����������������������������取����取�����������������������������������取��������������������������������取�������取���取����取�����������������������������������������������������������������������������������������������������������取������取���������取�����取�������取"
6146439,Does the box look green?," # returns yes or no
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Does the box look green?"")
    return bool_to_yesno(box_patches[0].verify_property(""box"", ""green"")) # crop would include the box so keep it in the query������������������������取��������������取��������������取�������取����取�����������������取����������������������������取����取����������取����������������������������������������取���取��������������取���取����取���取��������������取����������������������������������������������������������������������������������取���������������������取���取������������取���������取��取������������取"
1910285,Is the white container on the left of the image?," # assumes the image is in RGB format
    image_patch = ImagePatch(image)
    white_container_patches = image_patch.find(""white container"")
    # Question assumes only one white container patch
    if len(white_container_patches) == 0:
        # If no white container is found, query the image directly
        return image_patch.simple_query(""Is the white container on the left of the image?"")
    for white_container_patch in white_container_patches:
        if white_container_patch.left == 0:
            return ""yes""
    return ""no""������������取�����������取�������������取������������������������������取����取�������������������������������������������������������������������������������������取�������取������������������������������取����取��������������������������������������������������������������取�������������取���������取������������取"
13362134,Is that shower curtain to the left of a toilet?," # assumes one shower curtain and one toilet
    image_patch = ImagePatch(image)
    shower_curtain_patches = image_patch.find(""shower curtain"")
    toilet_patches = image_patch.find(""toilet"")
    if len(shower_curtain_patches) == 0 or len(toilet_patches) == 0:
        return ""no""
    shower_curtain_patch = shower_curtain_patches[0]
    toilet_patch = toilet_patches[0]
    if shower_curtain_patch.horizontal_center < toilet_patch.horizontal_center:
        return ""yes""
    return ""no""�����取���������取��������取�������������取���������������取��������������������取����取���取�������������������������取�����取���取������������������������������������������取������取�����������取����取���������取����取���取���������������取�����������������������������������������������������������������������������������������������取���取���取�����取����取������������������������取"
161060488,Is there any cabinet to the right of the stove?," # assumes one stove patch
    image_patch = ImagePatch(image)
    stove_patch = image_patch.find(""stove"")[0]
    cabinet_patches = image_patch.find(""cabinet"")
    for cabinet_patch in cabinet_patches:
        if cabinet_patch.horizontal_center > stove_patch.horizontal_center:
            return ""yes""
    return ""no""�������������������取���������������������������������������������������取���������������������������������取�������������������������������������������������取����������������取���������������������������������������������������������������������������������������取������取������������������取�����������������������������������������������������������������������������取������������������������������������������������������������取�����������取"
111055042,Is the chair on the right?," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the chair on the right?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""����������������������取�������������������������������取����������������������������������������������取����取�����������������������������������������������取����取�����取��������取�����取������取���取���������取������取����������������������������������������������������������������������取����������������������������取���取������取���取�����取���取���取���取����取���取����取���取"
151068,Which kind of clothing is white?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is white?"")
    return clothing_patches[0].best_text_match([""shirt"", ""pants"", ""dress""]) # crop would include the clothing so keep it in the query���������取��取���������������������������取������������������取������取����������������取���取�����取�����������������������������������������������������������������������������������取�������取����取�������取������取����取������取�����������取���取������取�������������������������������������������������������������������取��������取���取������������������取���取����取�������取��������������取����取"
19387951,Is this place the forest or the garden?," # assumes the image is a single object
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""forest"", ""garden""]) # crop would include the object so keep it in the query���������������取��������������������������������������������取������������������������������������������������取������取����取��������取������������������������������������������������取������取����取�����������取�������取����取�������������������������������������������������������������������������������������������取�����������������������������������取�����������������������取�����取"
1781695,What's on the blanket?," # assumes only one blanket patch
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What's on the blanket?"")
    return blanket_patches[0].simple_query(""What's on the blanket?"") # crop would include the blanket so keep it in the query���取����������������取��取�����取����取����������������������������������������������取��������取������取��������������������������取����取�����取��取����������取���������������������������������������������������取����取���取������取����取������取�����取�������������������������������������������������������������������取��������取����������取����������������������取�����取����取�����取"
17699779,Is she on a bed?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is she on a bed?"")
    person_patch = person_patches[0]
    return bool_to_yesno(person_patch.verify_property(""person"", ""bed"")) # crop would include the bed so keep it in the query�����������������取�����������������������������������������取���取����������������������取���������������������������取����取��������������������������������������������������取�����取�����取�����取�����取��������取��������������������取���������������������������������������������������������取����������取���取���取�����������������������������取�����取����取�����取�������������������取���������取"
464441,"What piece of furniture is the blanket on, a bed or a sofa?"," # assumes only one blanket patch
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What piece of furniture is the blanket on, a bed or a sofa?"")
    blanket_patch = blanket_patches[0]
    bed_patches = image_patch.find(""bed"")
    sofa_patches = image_patch.find(""sofa"")
    if len(bed_patches) > 0 and len(sofa_patches) > 0:
        # If both a bed and a sofa are found, query the image directly
        return image_patch.simple_query(""What piece of furniture is the blanket on, a bed or a sofa?"")
    if len(bed_patches) > 0:
        return ""bed""
    else:
        return ""sofa""������������������������������������������������������������������取�������������������������取�����������取�������������������������������������取��������取�������取���������取���������取����取���取���取�������取���取������取�����取���������������������������������������������取�������������取����取������������������������������取�������取�����取����取���取�������取�����取��������取"
9505496,Are the wires above a man?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the wires above a man?"")
    man_patch = man_patches[0]
    wire_patches = image_patch.find(""wire"")
    for wire_patch in wire_patches:
        if wire_patch.vertical_center < man_patch.vertical_center:
            return ""yes""
    return ""no""������������取����������������������取�����取��������������������������������������������������������������������取����������������������������������������取����取����取������������������取������������������������������������������������������������������������������������取�������取��������������������取����������取���取���������取����������������������取"
4625512,What is the woman doing?," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What is the woman doing?"")
    woman_patch = woman_patches[0]
    return woman_patch.simple_query(""What is the woman doing?"") # crop would include the woman so keep it in the query����������������������������取�������������������������������取������������������取����取�������取�����������������������取����取����取���������������������������������������取��取��������������������������������������������������取������������������������������������������������������������取������������������������取������取������取����������取�������取���取��������取����取"
9441941,Is the woman's hair red or black?," # returns yes or no
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman's hair red or black?"")
    woman_patch = woman_patches[0]
    return woman_patch.best_text_match([""red"", ""black""]) # crop would include the hair so keep it in the query�����取���取�������������取�����取������������取���取���������������取�����取��取��取�����������取������取������取��取�������������������������取���������取����������������������������取��������������取����������取��������������������������������������������������������������������������������������取�����������������取����取���取���取��������取�����取�����取���取���取�����取����������取"
2387432,What's on the table?," # assumes only one table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"") # crop would include the table so keep it in the query��������������������������取��������������取���取��������������������������������������取�����取���������������������������������取�����������������������������������������������������取��������取���取�������������取������������取���取������������取������������������������������������������������������取����取��������������������取������取���������������取���取���取�����取����取����������������������取�����取���取"
10534717,What is the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pillow on?"") # crop would include the pillow so keep it in the query���取����������������������������������������������������������������������������������������������������取����������������取�������取���取������������������取��������������������取������取������取������������������������������������������������������������取����������������������取������取�������取����取����������取�����取������取�������取���取���取�����取���������������������������������������������������������������������������������������������������������取��������������������取�����取���取������取��������取����取������������取"
19335685,"What fruits is the container behind of, apples or bananas?"," # assumes one container patch
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""What fruits is the container behind of, apples or bananas?"")
    container_patch = container_patches[0]
    apple_patches = image_patch.find(""apple"")
    banana_patches = image_patch.find(""banana"")
    if len(apple_patches) == 0 and len(banana_patches) == 0:
        # If no apples or bananas are found, query the image directly
        return image_patch.simple_query(""What fruits is the container behind of, apples or bananas?"")
    if len(apple_patches) > 0 and len(banana_patches) > 0:
        # If both apples and bananas are found, query the image directly
        return image_patch.simple_query(""What fruits is the container behind of, apples or bananas?"")
    if len(apple_patches) > 0:
        return ""apples""
    else:
        return ""bananas"" # if no apples, it must be bananas chtě 노출등록������������取���������������������取����������������������������取���取�������取�����������������取�����������������������������������������取�����������������������������������������������������取�����������������������������取������������取"
3127817,The goat is standing in what?," # assumes one goat patch
    image_patch = ImagePatch(image)
    goat_patches = image_patch.find(""goat"")
    if len(goat_patches) == 0:
        # If no goat is found, query the image directly
        return image_patch.simple_query(""The goat is standing in what?"")
    goat_patch = goat_patches[0]
    return goat_patch.simple_query(""The goat is standing in what?"") # crop would include the ground so keep it in the query���������������������������取���������������取�����������取����������������������取�����取��������������������������������取����取������������������������������������������������取�����������������取������取�������������取������取�����������取��取����������������������������������������������������������������取�����������取����取���取���取����取�����取��������取��������取������取������取���������取�����������������取"
1588567,Where does the man that to the right of the mirror sit?," # assumes one mirror patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where does the man that to the right of the mirror sit?"")
    man_patch = man_patches[0]
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes one mirror patch
    if len(mirror_patches) == 0:
        return ""no""
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > man_patch.horizontal_center:
        return man_patch.simple_query(""Where does the man sit?"")
    return man_patch.simple_query(""Where does the man stand?"") # crop would include the man standing so keep it in the query���������取��������取����������������������������������������取������������������取�����取���������������������������取�������������������������������������������������������������取���取�����取���������取������������������������取��������������������������������������������������������������������取�������取�������取������取���������取���取������取��������������������������������取����取"
7399543,What is the floor made of?," # assumes the floor is the bottom part of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the floor made of?"") # crop would include the floor so keep it in the query��������������������������������������取���取����������������������������������������取�����取����������������������取����取����取���取����������������������������������������������������������取�������取�����������������������取�������取������������������������������������������������������������取���������������������������取���������取���取���取������取���取�������取���取�������取"
13741124,What kind of animal is the house behind of?," # assumes one house patch
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""What kind of animal is the house behind of?"")
    house_patch = house_patches[0]
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center > house_patch.horizontal_center:
            return animal_patch.simple_query(""What kind of animal is the house behind of?"")
    return image_patch.simple_query(""What kind of animal is the house behind of?"") # if no animal is behind, query the image directly�����������������取��������������������取����取���取�����������取�����������������������取���取�����取���取�����������������������取�����������������������������������������������取�����取������������������取����取��������������取�������������取������取������������������������������������������������������取������������������������������������取������取�������取���取����������取���������������������������������������������������取"
1174904,Is the cobblestone sidewalk both large and gray?," # returns yes or no
    image_patch = ImagePatch(image)
    cobblestone_patches = image_patch.find(""cobblestone"")
    # Question assumes only one cobblestone patch
    if len(cobblestone_patches) == 0:
        # If no cobblestone is found, query the image directly
        return image_patch.simple_query(""Is the cobblestone sidewalk both large and gray?"")
    cobblestone_patch = cobblestone_patches[0]
    is_large = cobblestone_patch.verify_property(""cobblestone"", ""large"")
    is_gray = cobblestone_patch.verify_property(""cobblestone"", ""gray"")
    return bool_to_yesno(is_large and is_gray) # returns yes or noніцип��取�����������������������������������������������������������取�����取��������������������������������������������取������取����������取���取������������������������������������������������������取��������������������取�����取�����取��������取���������������������������������������������������取����取�������取������取�����取����取����取������取���取�����取����������取���取����取����������取�����������取�������������取��取�����取"
13375231,What is the lettuce on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lettuce on?"") # crop would include the lettuce so keep it in the query������������������取�������取������取����������取�����������������取�������取�������������������������������������������������取���������������取��������������������������������������������������取�����取����取���取����������取���取������取���取���取������������������������������������������������������������������������������������������������������������取�����������������取�����取�����取�������取���取����取���������������������取"
1194027,Which kind of clothing is black?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query
    # If no clothing is black, pick the first clothing
    return clothing_patches[0].simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query�������������取�������������������������������������������������������������取�������������������������取������取����取������������������������������������������������������取����������������取����取�������������取�������������������������������������������������������������取�����取�����取����������取��������取������取���取�����������������取"
9963477,Is the statue wearing a dress?," # assumes only one statue
    image_patch = ImagePatch(image)
    statue_patches = image_patch.find(""statue"")
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch.simple_query(""Is the statue wearing a dress?"")
    return bool_to_yesno(statue_patches[0].verify_property(""statue"", ""dress"")) # crop would include the dress so keep it in the query���取���取���������������������取�����������������������取������������������������取������������������������取��取��������������������������������������������取�������取���������������������������取�������������������������������������������������������������������取���取�����������������取���������取����取������取����取�����������������������������������������������������������������������������������取������������取��取����������取���取���������������取���������取�������������取�����取"
1151995,Which side of the photo is the yellow vase on?," # left or right
    image_patch = ImagePatch(image)
    yellow_vase_patches = image_patch.find(""yellow vase"")
    # Question assumes only one yellow vase patch
    if len(yellow_vase_patches) == 0:
        # If no yellow vase is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the yellow vase on?"")
    if yellow_vase_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������取������������������������取���������������取�����������������������������取��������������������取���取������������������������������������������������������取�������取���取�����������取��������取���������������������������取������������������������������������������������������取���������取����������取����������取�����取���������取�����取�������取�������取��������������取"
712821,What is common to the bear and the belt?," # returns a string
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""What is common to the bear and the belt?"")
    belt_patches = image_patch.find(""belt"")
    # Question assumes only one belt patch
    if len(belt_patches) == 0:
        return image_patch.simple_query(""What is common to the bear and the belt?"")
    return bear_patches[0].best_text_match([belt_patches[0].simple_query(""What is common to the bear and the belt?"")]) # crop would include the belt so keep it in the query��������������取�������������������������取����������������取���取�������������������取�����������������������������������������������������������������������������取�������������取�����取���取���取������取���取�������������取����取������������������������������������������������������������取������������取�����取���取������������取��������������取�������取������取���������取���取"
1757418,What is the vehicle to the right of the car?," # assumes one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What is the vehicle to the right of the car?"")
    car_patch = car_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center > car_patch.horizontal_center:
            return vehicle_patch.simple_query(""What is the vehicle to the right of the car?"")
    return ""no"" # if no vehicle is to the right of the car, return no
���������取������������������������取�����������������取���������������������取���������取��������������������取�������取�����������������������������������取��������取�����取������取�������取���取�����取����取�������取����取������������������������������������������������������������������������取�����取�������������取���取����������������取����������������������������������������取"
7624100,Are the trunks that are gray wet and large?," # returns yes or no
    image_patch = ImagePatch(image)
    trunks_patches = image_patch.find(""trunks"")
    # Question assumes only one trunk patch
    if len(trunks_patches) == 0:
        # If no trunks are found, query the image directly
        return image_patch.simple_query(""Are the trunks that are gray wet and large?"")
    for trunk_patch in trunks_patches:
        if trunk_patch.verify_property(""trunks"", ""gray"") and trunk_patch.verify_property(""trunks"", ""wet"") and trunk_patch.verify_property(""trunks"", ""large""):
            return ""yes""
    return ""no""����������������取������取����������������������������������������������取����取���取���������������������������取���取���取��������������������������������取�����������������取�����取��������������取�������取����取����������取����取�������������������������������������������������������������������������������������取�����取������取��������取����������取���������������������取"
1125474,"On which side of the photo is the iron fence, the right or the left?"," # assumes one iron fence patch
    image_patch = ImagePatch(image)
    iron_fence_patches = image_patch.find(""iron fence"")
    if len(iron_fence_patches) == 0:
        # If no iron fence is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the iron fence, the right or the left?"")
    iron_fence_patch = iron_fence_patches[0]
    if iron_fence_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取�������������������������������������������������������������取���取����������������������取����取����取�������取���������������������������������������������取��������������取���取����取������取����取����取�������������取���������������������������������������������������������������������������������������取������取������取"
1300375,What is the name of the item of furniture that the printer is on?," # assumes one printer patch
    image_patch = ImagePatch(image)
    printer_patches = image_patch.find(""printer"")
    if len(printer_patches) == 0:
        # If no printer is found, query the image directly
        return image_patch.simple_query(""What is the name of the item of furniture that the printer is on?"")
    printer_patch = printer_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.vertical_center > printer_patch.vertical_center:
            return furniture_patch.simple_query(""What is the name of the item of furniture that the printer is on?"")
    return ""no"" # if no furniture is found above the printer, return no
��取������取���������������������������������������取�����������������取�����取��������������������������������������������������������取���取�����取���������������������������������������������������������������������取��������取������取�����取�����取��������������取���取���取�������取���取��������������������������������������������������������������������取������取����������取���取����������取����取���取����取�������取��������������取���取"
5925196,What's the building covered by?," # assumes one building patch
    image_patch = ImagePatch(image)
    building_patches = image_patch.find(""building"")
    if len(building_patches) == 0:
        # If no building is found, query the image directly
        return image_patch.simple_query(""What's the building covered by?"")
    building_patch = building_patches[0]
    cover_patches = image_patch.find(""cover"")
    # Question assumes only one cover patch
    if len(cover_patches) == 0:
        return ""no""
    cover_patch = cover_patches[0]
    if cover_patch.horizontal_center > building_patch.horizontal_center:
        return ""yes""
    return ""no""�������������取����������取�������������取�������������取�����������������������������������������������������取�����������������������������������������������������������取������取��������取����取������������取�����取���������������取���������������������������������������������������������������������������取���取������取�����取����������������取����取����取����取�������������取"
1948055,What watercraft is the white rope tying?," # assumes one watercraft and one rope
    image_patch = ImagePatch(image)
    watercraft_patches = image_patch.find(""watercraft"")
    rope_patches = image_patch.find(""rope"")
    if len(watercraft_patches) == 0 or len(rope_patches) == 0:
        # If no watercraft or rope is found, query the image directly
        return image_patch.simple_query(""What watercraft is the white rope tying?"")
    watercraft_patch = watercraft_patches[0]
    rope_patch = rope_patches[0]
    if rope_patch.horizontal_center > watercraft_patch.horizontal_center:
        return watercraft_patch.simple_query(""What watercraft is the white rope tying?"")
    return watercraft_patch.simple_query(""What watercraft is the white rope tying?"") # crop would include the rope so keep it in the query���取�������������取���������取�������������取��������������取��������������������������取�����取����������������������������取�����������������������������������������������������取�������������������������������������������������������������������������取��������取�����取����取����取�����取���������取����������取"
8540582,What kind of animal is in front of the leafy trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the leafy trees?"") # crop would include the trees so keep it in the query��������������������������取������������取���取�������������������取�������������������������取���取���取���������������������取���取�����������������������������������������������取���取������������取������取���取������������取���取�������取���取����取�����取������取���取���取�������������������������������������������������������������������������������������取������取������取����取����取��������������取�����取���取����取"
3719411,What does the walking woman by the bus wear?," # assumes one woman and one bus
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    bus_patches = image_patch.find(""bus"")
    if len(woman_patches) == 0 or len(bus_patches) == 0:
        # If no woman or bus is found, query the image directly
        return image_patch.simple_query(""What does the walking woman by the bus wear?"")
    woman_patch = woman_patches[0]
    bus_patch = bus_patches[0]
    if woman_patch.horizontal_center < bus_patch.horizontal_center:
        return woman_patch.simple_query(""What does the walking woman by the bus wear?"")
    else:
        return bus_patch.simple_query(""What does the walking woman by the bus wear?"") # crop would include the woman so keep it in the query���取�����取���������������������������������取��取��取�����������取�������������������������������������������������取�����取����������������������������������取�������������取������取����������取��������取�������������������������������������������������������������取���取���取���������取���取��������取�������取�����������取���������取����������������������������������������������������������������取"
1129508,Is the controller to the left of a pillow?," # assumes one controller and one pillow
    image_patch = ImagePatch(image)
    controller_patches = image_patch.find(""controller"")
    pillow_patches = image_patch.find(""pillow"")
    if len(controller_patches) == 0 or len(pillow_patches) == 0:
        return ""no""
    controller_patch = controller_patches[0]
    pillow_patch = pillow_patches[0]
    return bool_to_yesno(controller_patch.horizontal_center < pillow_patch.horizontal_center) # left is less than rightніцип�����取���������������取�����取�������������������������取����������取�����取�����������������������取���������������������������������取����取������������������������������������������������取��������������������������������取�������取����取����取������取����取��������������������取�����������������������������������������������������������取����������������取������取���������取����取���取����取���取����取���������取���������������������取�������取�����������取���取���取�������取����������取"
18664084,Is there any sheep by the fence?," # assumes one fence patch
    image_patch = ImagePatch(image)
    sheep_patches = image_patch.find(""sheep"")
    fence_patches = image_patch.find(""fence"")
    if len(sheep_patches) == 0 or len(fence_patches) == 0:
        return ""no""
    for sheep_patch in sheep_patches:
        for fence_patch in fence_patches:
            if sheep_patch.horizontal_center > fence_patch.horizontal_center:
                return ""yes""
    return ""no""��取��������������������������������取����������������取�����������������������取���������取�������������������������取�����������������������������取����取�������取����������取�������������取���取���������������������������������������������������������取����取���������取���取�����������取����������������取�����������������������������������������������������������������������取������������取������������������������������取������取������取���������������取��������取����取������������取"
6912079,What animal is this?," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this?"") # returns the answer to ""What is this?""ніцип����������������取����������取������������������������取�������������������取���取���������������������������取������������������������取�����������取�����取����������������������������������������������������取���������取�����������取���取���������取�������取����������������������������������������������������������������������������������取�����������������������取�������������取������取�������取�����取����取�����取����取���取����取�������取�������取����������������������������������������������������������������������������取"
3412029,Where is the person?," # returns a string describing the location of the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Where is the person?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif person_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        if person_patch.vertical_center < image_patch.vertical_center:
            return ""bottom""
        else:
            return ""top"" # or ""center"" if necessary pocházet����������������������������取������������取�������������������������������������取��������取������������������������������取��������������������������������������������������������������取���取���取������������������取�����取����取�����取���取��������������������������������������������������������取�������取����������取���取���取���取������������������取����取������������取���������������取"
14161122,What animal is in the water?," # assumes only one animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is in the water?"")
    return animal_patches[0].simple_query(""What animal is in the water?"") # crop would include the water so keep it in the query������������������������取�����取��������取������������������������������������������取����������������������������取����取�������������������������������������������������������取�����取���取���������取����������取�����������������������������������������������������������������������������取����取���取�������������取��������������取�������取���取�����������取"
1781542,What is the item of furniture to the right of the baby the parent is to the left of?," # assumes one parent and one baby
    image_patch = ImagePatch(image)
    parent_patches = image_patch.find(""parent"")
    # Question assumes only one parent patch
    if len(parent_patches) == 0:
        # If no parent is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture to the right of the baby the parent is to the left of?"")
    parent_patch = parent_patches[0]
    baby_patches = image_patch.find(""baby"")
    # Question assumes only one baby patch
    if len(baby_patches) == 0:
        return ""no""
    baby_patch = baby_patches[0]
    if baby_patch.horizontal_center < parent_patch.horizontal_center:
        return image_patch.simple_query(""What is the item of furniture to the right of the baby the parent is to the left of?"")
    else:
        return image_patch.simple_query(""What is the item of furniture to the left of the baby the parent is to the right of?"") # crop would include the baby so keep it in the query��������������取������������������������取������������取��������������������������������������������������������取���������������������������������������取�����������取���取������取�����取����取������取�����取��������������������������������������������������������������������取����������������������取��������取������������取�����取����取"
15699496,What is the cup that looks clean made of?," # assumes only one cup
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""What is the cup that looks clean made of?"")
    return cup_patches[0].simple_query(""What is the cup that looks clean made of?"") # crop would include the cup so keep it in the query���������取����������������取������������取���取������������������������������������取���������������������������������取���������������������������������������������������������取���������������取������������������取������������取�������������������������������������������������������������������取�������������������取�������取����������取���������������������取"
12765451,What animals are to the right of the ladder?," # assumes only one ladder
    image_patch = ImagePatch(image)
    ladder_patches = image_patch.find(""ladder"")
    # Question assumes only one ladder patch
    if len(ladder_patches) == 0:
        # If no ladder is found, query the image directly
        return image_patch.simple_query(""What animals are to the right of the ladder?"")
    for ladder_patch in ladder_patches:
        animal_patches = image_patch.find(""animal"")
        for animal_patch in animal_patches:
            if animal_patch.horizontal_center > ladder_patch.horizontal_center:
                return animal_patch.simple_query(""What animal is to the right of the ladder?"")
    return ""no"" # if no animal is to the right of the ladder, return no
�������������������取��取������������取�������������������取���������������������取������������������������取�����取�����������取�����������������������取��������������������取�����������������取�������取������取��������������������������������������������������������������取���取�������取������������取�������������取����取����取�����取"
191044307,What animal is black?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is black?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""black""):
            return animal_patch.simple_query(""What animal is black?"") # crop would include the color so keep it in the query
    # If no animal is black, pick the first animal
    return animal_patches[0].simple_query(""What animal is black?"") # crop would include the color so keep it in the query��������取������������������取��取��取�����������取�����������������������������������取����������������������������������取����取���������������������������������������������������������取����取������取�����取������取���取�����取���������������取����������������������������������������������������������������取�������取�����取�������取������������取����������取���取�������取��������取�������取����������取"
12639181,Who is wearing shorts?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing shorts?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is wearing shorts?"") # crop would include the shorts so keep it in the query���������取����������������取������������取�������������������取����取��取����������������������取��������������������������������������������������������������������������������������取�����取������取���取�������取���������取�����取��������������取������������������������������������������������������������������������取���取���取�������������取�������������取�������取"
10630949,Is the person that is not male wearing an elbow pad?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person that is not male wearing an elbow pad?"")
    for person_patch in person_patches:
        if not person_patch.verify_property(""person"", ""male""):
            return bool_to_yesno(person_patch.verify_property(""person"", ""elbow pad""))
    return ""no"" # if no person is not male, query the image directly
�������������������取��取�������������取����������������取����������������取������取�������取�������������������取�������取����取���取����������������������������������取���取�����取����取����������取����取����������������取��������������������������������������������������������������������������取������取����������������������������取"
14544602,What is the boy holding?," # assumes one boy patch
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What is the boy holding?"")
    boy_patch = boy_patches[0]
    holding_patches = image_patch.find(""holding"")
    if len(holding_patches) == 0:
        return image_patch.simple_query(""What is the boy holding?"")
    return holding_patches[0].simple_query(""What is the boy holding?"") # crop would include the holding so keep it in the query�������������������������取����取����������取������������������取����������������������取����取���取����取��取�����������������取���������������������������������������������取������������取���取������取������������取������������取������取�������������������������������������������������������������������������������������取������取����������������取����取�����取��������取���取��������取��������取"
2986699,Of what material the dish?," # material of the dish
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what material the dish?"") # crop would include the dish so keep it in the query�����������������������取�����取��������������取���������������取���������������������������������������������������������取�����取���������������������������������������������������������������������取����������取���������������������������������������������������������������������取����������������取�������������������������取���取�����������取���取�����取�������取�����取"
161013513,What kind of animal is on the street?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What kind of animal is on the street?"")
    return animal_patches[0].simple_query(""What kind of animal is on the street?"") # crop would include the street so keep it in the query��������取��������������������������取������取����������������取���取��������������������������������������������������取����������取���������������������������������������������������������取������������取�����������取������取������������������������������������������������������������������取����������������取���取��������������取����取���取������������取������取"
15143936,What animal is before the roof?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is before the roof?"") # crop would include the roof so keep it in the query�������������������������������������取����取���������������������������������������������������������������取��取�������取������������������������������������取��取����������������������取���������取�����取���取�����������������������取����取������������������������������������������������������������������取��取����������取���取�������������������取�����取�������取������取�������取"
1955043,Who is playing with the ball?," # assumes one ball patch
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""ball"")
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch.simple_query(""Who is playing with the ball?"")
    ball_patch = ball_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.horizontal_center > ball_patch.horizontal_center:
            return person_patch.simple_query(""Who is playing with the ball?"")
    return ""no one"" # if no person is found to the right of the ball, return no one
�������������������������������������������取���������������������������取������������������������������取���取�����������������������������������������������取���������取������取�������取�������取���������取�����������取�����取��取�����取��������������������������������������������������取��取���������������取���取���������取��������取�������������������������取��取"
91044150,What is the name of the animals in front of the trees beside the river?," # assumes one river patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"")
    animal_patch = animal_patches[0]
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        return animal_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"")
    tree_patch = tree_patches[0]
    river_patches = image_patch.find(""river"")
    # Question assumes only one river patch
    if len(river_patches) == 0:
        return animal_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"")
    river_patch = river_patches[0]
    if animal_patch.horizontal_center < tree_patch.horizontal_center and tree_patch.horizontal_center < river_patch.horizontal_center:
        return animal_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"")
    return animal_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"") # crop would include the river so keep it in the query�������������������������取���������������������������������取���������������������������������������������取�����������������������������������������������取���������取�������������������取�����取�������取"
13483129,What kind of fruit is hanging?," # assumes one fruit patch
    image_patch = ImagePatch(image)
    fruit_patches = image_patch.find(""fruit"")
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch.simple_query(""What kind of fruit is hanging?"")
    return fruit_patches[0].simple_query(""What kind of fruit is hanging?"") # crop would include the fruit so keep it in the query�������������������������������������取���������������������������������������取���������������������������取�������取������������������������������������������������取�������������取��������取���������取����������������取�������������������������������������������������������������取�������取���取���取�������������取�����取��������������取���取����取�����取�����取"
7317299,What is under the bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the bush?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип������������������������������������������������取�����������������������取�������������������������������������������������������取�����取���取���取������������������������������������������取���������������������取������取������������������������������������������������������������������������������取����取����取����取���������������������取���取���取���取����������取��������取�����取"
17432396,Are there kangaroos or birds in this photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_kangaroo = image_patch.exists(""kangaroo"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_kangaroo or is_bird)����������������取�������������������取��������������������取���������������������取������������������������������取�������取������������������������������������������������取��������取����取�������取�����������������������������������������������������������������������������������������������������取������������������取�������取���������取������������取�������������������取���取"
10457241,What is the color of the trousers?," # returns the color of the trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""What is the color of the trousers?"")
    return trousers_patches[0].simple_query(""What is the color of the trousers?"") # crop would include the trousers so keep it in the query��������������������������������������������������������������������������取����������������取�����������������������������������������������������������������������取�������取���������取����������������取�����取������������������取����取��������������������������������������������������������取���������取�����������������取"
2913850,Is the placemat in the bottom or in the top part?," # assumes only one placemat
    image_patch = ImagePatch(image)
    placemat_patches = image_patch.find(""placemat"")
    if len(placemat_patches) == 0:
        # If no placemat is found, query the image directly
        return image_patch.simple_query(""Is the placemat in the bottom or in the top part?"")
    placemat_patch = placemat_patches[0]
    if placemat_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""����取���取�����取���������������������取��������取����������������������取���取����取������取����������������������取�����取�����������������������������������������取�����取����取�����������取�������取��取���取������������������������������������������������������������������������取�������������������������取�������取�����取��������������������������������������������������������������������������������������取�����������������������������������������������������取"
12788747,What is covered with blanket?," # assumes one blanket patch
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What is covered with blanket?"")
    return blanket_patches[0].simple_query(""What is covered with blanket?"") # crop would include the blanket so keep it in the query��������������取���取������������取���取�������������取��������������取�����������������������������������������������取����������取���取������������������������������������������������取���取���������取�������取�����������������取��������取����������������������������������������������������������������������������取��������������������������取���取��������取����������取�������������取"
7343271,What is the item of furniture that is to the right of the man that is wearing a sweater?," # assumes one man and one sweater
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one man and one sweater patch
    if len(man_patches) == 0 or len(sweater_patches) == 0:
        # If no man or sweater is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture that is to the right of the man that is wearing a sweater?"")
    man_patch = man_patches[0]
    sweater_patch = sweater_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > man_patch.horizontal_center and furniture_patch.horizontal_center < sweater_patch.horizontal_center:
            return furniture_patch.simple_query(""What is the item of furniture that is to the right of the man that is wearing a sweater?"")
    return ""no"" # if no furniture is found, return no
�����������取������取�������������������������������取������������������������取������������������������取����取����取����������������������������������������������取��������取���������取��������������取�����������取���������������������������������������������������������������取������取����取����������������取�����取������取���取������������取"
18673671,"In which part of the picture is the desk drawer, the bottom or the top?"," # assumes only one desk drawer
    image_patch = ImagePatch(image)
    desk_drawer_patches = image_patch.find(""desk drawer"")
    if len(desk_drawer_patches) == 0:
        # If no desk drawer is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the desk drawer, the bottom or the top?"")
    desk_drawer_patch = desk_drawer_patches[0]
    if desk_drawer_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""�����������取�������������������������������������取������������������������������������取����������������������������������������������������������������������取���������������取���������������������������������取������取������������������������������������������取�������取���������取����取���������������取����取��������取���取"
19900141,Are there napkins or tablecloths?," # returns yes or no
    image_patch = ImagePatch(image)
    is_napkin = image_patch.exists(""napkin"")
    is_tablecloth = image_patch.exists(""tablecloth"")
    return bool_to_yesno(is_napkin or is_tablecloth)���取��������������������������������������������������������������������������取���������������������取���������������������������������������取������������取�������������������取��������取�����������������������������������������取�����������������取�������取�����������������������取�������取����������取������������������������������������������������取����������������������������������������取������取�������������������������������������取���������取����取�����取�����������������取�����取�������������������取�����取"
19737232,Is the book on the right of the picture?," # assumes the image is a single picture
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Is the book on the right of the picture?"")
    if book_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""��������取��取��取���������������������������������取��取��取�����������������������������������取�����������������取�����取������取����取���取�����������������������������������������������取�������取�����������������取������取���取�����������������取�������������取�������������������������������������������������������������取���������取������取����������取����������取���������取��������������取"
475064,Who is wearing the glasses?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the glasses?"")
    return person_patches[0].simple_query(""Who is wearing the glasses?"") # crop would include the glasses so keep it in the query��取�������������������������������������取�����������������������������������取�������������������������取������������������������取���������������������取���������取������������������������������������������������������������������取���������取��取�����取���������������取�����取��������������������������������������������������������������������������������取������������������取������取�������������������取�������取������������取�������������������取"
8594579,Is there a woman to the right of the orange object that is to the right of the person?," # assumes only one person and one orange object
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is there a woman to the right of the orange object that is to the right of the person?"")
    person_patch = person_patches[0]
    orange_patches = image_patch.find(""orange object"")
    # Question assumes only one orange object patch
    if len(orange_patches) == 0:
        return ""no""
    orange_patch = orange_patches[0]
    if orange_patch.horizontal_center > person_patch.horizontal_center:
        woman_patches = image_patch.find(""woman"")
        # Question assumes only one woman patch
        if len(woman_patches) == 0:
            return ""no""
        for woman_patch in woman_patches:
            if woman_patch.horizontal_center > orange_patch.horizontal_center:
                return ""yes""
    return ""no""�����取�����取����������������������取���取��取���������取������������������取�������取�������取�������������������������取�������������������������������������������取���������取����取������������������取�������������������������������������������������������取������������������取���取��取���������������������������取���取���������取"
14602992,Which side of the image is the couch on?," # left or right
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the couch on?"")
    if couch_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������������������取������������������取������������������������������取���取�����������������取���取������取��������������������������������������������取����������������取�����取��������取���������������������������������������������������������������������取��������取�����取���������取���������������取�������取��������取�����取"
9944587,How tall is the man that is wearing a shirt?," # returns the height of the man in cm
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""How tall is the man that is wearing a shirt?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""How tall is the man that is wearing a shirt?"") # crop would include the shirt so keep it in the query����������������取��取������取����������������������������取������������������������取��������取����������������������������������������������������������������������������取��取��������������取����取���取���������取���������取����������������������������������������������取��取��取����������������������������取����取���������������取����������取�����取�������������取"
13736712,Are there any giraffes?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"")) # returns a boolean
�������取���������������取����������������������������取����������������������������取���取����������������������������取�������������������������������������取���取�������取��������取������������������取����������������������������������取�����������������������������������������������������������������取�������取���取�����取�������������������������取����������取�������������������������������������������������取����������������������������������������������������������������������������������������������������������������取��取"
6996118,The young girl is wearing what?," # assumes one young girl patch
    image_patch = ImagePatch(image)
    young_girl_patches = image_patch.find(""young girl"")
    if len(young_girl_patches) == 0:
        # If no young girl is found, query the image directly
        return image_patch.simple_query(""The young girl is wearing what?"")
    return young_girl_patches[0].simple_query(""The young girl is wearing what?"") # crop would include the girl so keep it in the query��������取�������������������取���������������������������������取�����取�����������������������������������������������取���取�����取����取����������������������������取������������������������取��������取�����取���������取���取����取���������取�����������������������������������������������������������������������������������取���取�������������������取����取���取�����������������取�����取"
19992576,Is the basket on the floor small and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch.simple_query(""Is the basket on the floor small and brown?"")
    basket_patch = basket_patches[0]
    is_on_floor = basket_patch.simple_query(""Is the basket on the floor?"")
    is_small = basket_patch.simple_query(""Is the basket small?"")
    is_brown = basket_patch.simple_query(""Is the basket brown?"")
    return bool_to_yesno(is_on_floor and is_small and is_brown) # returns yes or noніцип������������取���取�������������������������������������������������取���取��������������������������取����取������������������������������取����取������������������������������������������������������������������������取�������取��������取���取����取���取���取���取�����������������������������������������������������������������������取��������������������������取���取�����取���取������������������������取����������取���取���取"
17332401,What is the boy in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип����取��取�����������取������������取�������������������������取�����取����������������������������取�������������������取����取������取��������������������������������������取����������取�����������������������������������取��������������������������������������������������������������������������������������取�����取���取���取������取����取�����取����������������������取����取����������������������������������������������������������������������������������������������������������������取���取"
15586294,Which side is the leather armchair on?," # left or right
    image_patch = ImagePatch(image)
    armchair_patches = image_patch.find(""armchair"")
    # Question assumes only one armchair patch
    if len(armchair_patches) == 0:
        # If no armchair is found, query the image directly
        return image_patch.simple_query(""Which side is the leather armchair on?"")
    armchair_patch = armchair_patches[0]
    if armchair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������取��������������������������������������������������������取�������������������������取�����取�����取����������������������������������������������������取���取��������取���取������取��������������������取�������������������������������������������������������������取����������取�����取�����������������取���取�������取"
15658324,What is the horse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse in front of?"") # crop would include the horse so keep it in the query�������������������������������������取���取����取���������������取���������������������������取������������������������������������取���������������������������������������������������������取�������������������������������取���取���������������������������������������������������������取���取����������取�����������取����取����取���取��������������������取�������取�������取������取"
18453709,What is the item of furniture that has the same color as the controller the man is holding called?," # assumes one controller and one furniture
    image_patch = ImagePatch(image)
    controller_patches = image_patch.find(""controller"")
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one controller and one furniture patch
    if len(controller_patches) == 0 or len(furniture_patches) == 0:
        # If no controller or furniture is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture that has the same color as the controller the man is holding called?"")
    controller_patch = controller_patches[0]
    furniture_patch = furniture_patches[0]
    if controller_patch.simple_query(""What color is the controller?"") == furniture_patch.simple_query(""What color is the furniture?""):
        return furniture_patch.simple_query(""What is the item of furniture that has the same color as the controller the man is holding called?"")
    return image_patch.simple_query(""What is the item of furniture that has the same color as the controller the man is holding called?"") # if no furniture has the same color as the controller, query the image directly��取������������取��������取��������������取�������������������������������������取�������������������取����取������取���������������������������取�������取����������取����������取����������������������������������取��������取��������取������取���������取��������取���������取"
2531874,Who is playing?," # assumes one person is playing
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is playing?"")
    return person_patches[0].simple_query(""Who is playing?"") # crop would include the person so keep it in the query�����������������取���������������������������������������������������������取�����取��������������取���������������取�������������������������������������������������������������取����取����������取�����������������取���取�������取�����������������������������������������������������������取������������������取���取������������取����������取����������������取�������取�����取����������取"
3112009,Is the plate on the left side?," # assumes one plate
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        return ""no""
    plate_patch = plate_patches[0]
    if plate_patch.left < image_patch.left + image_patch.width / 2:
        return ""yes""
    else:
        return ""no""������取����������������取��������������取�������������取����������������������������������������������������取����������取���������������������������������������������取�������取����取���取����取����������取���取���������������取���������������������������������������������������������������������������������������������取�������取���取���取����������取���取���������取��������取���������������取"
1527613,On which side of the picture is the bag?," # assumes the bag is on the left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������取�������������������������取�������������取����������������������������取���������������������取���������取�����������������������������������������������������取���取�����取�����������取���������������������������������������������������������������������������������������������取�����取����������������取���取��������取�������������取������������������������取"
11781054,Are both the road and the roof the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    road_patches = image_patch.find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch.simple_query(""Are both the road and the roof the same color?"")
    road_color = road_patches[0].simple_query(""What color is the road?"")
    roof_patches = image_patch.find(""roof"")
    # Question assumes only one roof patch
    if len(roof_patches) == 0:
        return ""no""
    roof_color = roof_patches[0].simple_query(""What color is the roof?"")
    return bool_to_yesno(road_color == roof_color) # returns yes or noніцип�������������������取�������������������������取���取���取�������������取��取���取��������������������������取��������������������取����取����������取����取���取������������������������������������������������������取���������取������������������取���������������������������������������������������������������������������取��������取����取����取���������������������取�������取���取�����取������������取����������取������取"
161027384,What is the green rug hanging on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the green rug hanging on?"") # crop would include the rug so keep it in the query��取���������������������������������取�������������������取�������������������������取�����������������������取��取�����取��������取����取��取��������������������������������取���������������������������������������������������������������������������������������取�������������������取����������取����������������������������������������������������������������������������������������������取��������������取�����取��������取������������取���取�����取������取������取����取����������取����取���取��������取���取������取���取���取����取�����取"
14153714,Who is using the laptop?," # assumes one person using the laptop
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is using the laptop?"")
    person_patch = person_patches[0]
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        return ""no""
    laptop_patch = laptop_patches[0]
    if person_patch.horizontal_center > laptop_patch.horizontal_center:
        return person_patch.simple_query(""Who is using the laptop?"")
    else:
        return laptop_patch.simple_query(""Who is using the laptop?"") # crop would include the person so keep it in the query���取�����取���������取��������������������������������������������������������取���������������������������取����������������������������������������������������取�����取����������取��������取����取����取���取�����取��取������������������������������������������������������������取���������取���������取���取������������取��取�����取�����取����取����取����取��������������取�����取"
1969500,Who in the photo is standing?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who in the photo is standing?"")
    return person_patches[0].simple_query(""Who in the photo is standing?"") # crop would include the person so keep it in the query���取�����取��取����������������������������������������������取��������������������������取�����������������������取���取���取������������������������������������������������取�����������������������取�����������������������������������������������������������取���取����取����取������������取���������取������������取�����取���取����取�����������������取����������������������������������������������������������������������������������取������取�����������取����������������取"
693318,Do you see any plates in the photo?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate"")) # returns True or False, which is then converted to yes or no
���������������������������������取������������取�������取�����������������������������������������取�������������������������������������������������������取������取������取���������取����取����取��������������������������������������������������������������������������������取����������������������������������取������取������������取�������������������取�����������������������������������������������������������������������取���������取��取��������������������������������������������������������������������取�������取���取"
19613394,The person on the skateboard is wearing what?," # returns the answer to the question
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""The person on the skateboard is wearing what?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""What is the person wearing?"") # crop would include the person so keep it in the query����������������取�������������取��������取�������������������取������������������������取���������������������������������取����取�������������������������������������������取���取�����������取������取����������取��取���取���取��������������取���������取�����������������������������������������������������������������������������������取���取������取�������取���取������������取�����取������������取"
19927237,Is the blue car in front of the white van?," # assumes one car and one van
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""blue car"")
    van_patches = image_patch.find(""white van"")
    if len(car_patches) == 0 or len(van_patches) == 0:
        return ""no""
    car_patch = car_patches[0]
    van_patch = van_patches[0]
    if car_patch.horizontal_center < van_patch.horizontal_center:
        return ""yes""
    return ""no""���������取������������取����取�����������取���������������������������������������取����������������������������取���������������������������������������������������������取�����������取���取������取���������取������取��������������������取���������������������������������������������������������取����取������取���������������������取���������取�������取���取���取���取"
31054022,What is the box sitting on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box sitting on?"") # crop would include the box so keep it in the query�����������������取��������取�������������取�����取�������������������取����������������取�����取�������������������������������������������������������������������������������取�����������取���取���取�������取������取������������������������取�����������������������������������������������������������������������������取�����������������������取���取����取������������������取����������取���取�������取"
17634413,Does the ground look snowy and brown?," # ground is a common noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the ground look snowy and brown?"") # ground is a common noun, so ask directly���������取����������取������������取����取����������������������������������������������������取�����������������������������取�������������������������������������������������������取�������������������取���取���取��������取���������取�����取�����取����������������������������������������������������������������������������������������取�������������取�����������取��������������取�����取���������������取���取�����取������������取����取�������取"
15185768,Does the sky look blue and clear?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""blue and clear"")) # crop would include the sky so keep it in the query���������取�������������������取������������������������������取�����������������������取�����取������������������������������取����取����取����������取�������������������������������������取����取�������取���取���取����������������取�����取����������取������������������������������������������������������������������������������������取�������������取���������取���������������取�����取���取�����取���������取"
1589160,Does the person that is sitting lean against a fire hydrant?," # assumes one person and one fire hydrant
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    fire_hydrant_patches = image_patch.find(""fire hydrant"")
    if len(person_patches) == 0 or len(fire_hydrant_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    fire_hydrant_patch = fire_hydrant_patches[0]
    return bool_to_yesno(person_patch.verify_property(""person"", ""leaning against"") and fire_hydrant_patch.verify_property(""fire hydrant"", ""being leaned against"")) # crop would include the person and the fire hydrant so keep them in the query��������������取������������取���������������������������������取��������������������������������������������取�����������取������取������������������������������������取�����取��������取���������取������取�����取��������取���������取���������������������������������������������������������������������取���取��������������������取���取�������取���取���取������������取�����取��������取����取�����取�����取"
2142522,Are there any shopping carts or mannequins in this photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_shopping_cart = image_patch.exists(""shopping cart"")
    is_mannequin = image_patch.exists(""mannequin"")
    return bool_to_yesno(is_shopping_cart or is_mannequin)����������������������������������取���������������������取�������������������取��������取������������������������������取�������������������������������������������������������取��������取���取���������取����取���������取���取������取���取���取���������������������������������������������������������������������������������取���������取����取������������取����������取�����������取���取�������取������������取"
17362234,Are there cages or scrub brushes in this picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cage = image_patch.exists(""cage"")
    is_scrub_brush = image_patch.exists(""scrub brush"")
    return bool_to_yesno(is_cage or is_scrub_brush) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎#"
4955854,Is the lamp below the chain?," # assumes one lamp and one chain
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    chain_patches = image_patch.find(""chain"")
    if len(lamp_patches) == 0 or len(chain_patches) == 0:
        return ""no""
    lamp_patch = lamp_patches[0]
    chain_patch = chain_patches[0]
    return bool_to_yesno(lamp_patch.vertical_center > chain_patch.vertical_center) # assumes one lamp and one chain
�������������������取�����������取����������������取���取�����取����������������������������������������取����取���取���������������������������������������������取��������������取���取�������取������������取���������������������������������������������������������������取�������������取���取�������������������������取"
10463545,Is the computer to the right of the other computer silver or black?," # assumes only one computer patch
    image_patch = ImagePatch(image)
    computer_patches = image_patch.find(""computer"")
    if len(computer_patches) == 0:
        # If no computer is found, query the image directly
        return image_patch.simple_query(""Is the computer to the right of the other computer silver or black?"")
    computer_patch = computer_patches[0]
    if computer_patch.horizontal_center > image_patch.horizontal_center:
        return computer_patch.best_text_match([""silver"", ""black""])
    return computer_patch.best_text_match([""black"", ""silver""]) # if no computer is to the right, it must be black or silver, so flip the order of the optionsніцип�������������取��取��取�����取����取�������������������������������������������������������������������取�����������������������������������取�����取���������������������������������������������������������������������������������取���取���取�����取�������������������������������������������������������������������������������������������������������������取���������取����取�����取�������取��������取�����取������取�������取�������取"
2265037,What is the girl wearing?," # returns the answer to ""What is the girl wearing?""
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What is the girl wearing?"")
    return girl_patches[0].simple_query(""What is the girl wearing?"") # crop would include the girl so keep it in the query������������������������取�������������取���取������������������������������������������取�������������������������取�����取���������取������������������������������������������������������取��������������������������������取��������������������������������������������������������取����取����取������取���������������取�������取���取����������������取���������取"
15485146,Are there any blue numbers or letters?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blue_number = image_patch.exists(""blue number"")
    is_blue_letter = image_patch.exists(""blue letter"")
    return bool_to_yesno(is_blue_number or is_blue_letter)����取��取���取������������������������������������取����取�����������������取����取�����������������������取����取����������������������������取���取����取��������取���取������������������取�������������������������������������������取����取��������取������������������取��������取����取������取����取���取�����取��������������取��������������������������������������������������������������������������������取��������������取���取�����取���取�����������取����取�����������取����������取���取�����取���取���������������取����取�����取�����取"
3483992,Is the long bus to the left or to the right of the person with the backpack?," # assumes one person with a backpack
    image_patch = ImagePatch(image)
    long_bus_patches = image_patch.find(""long bus"")
    # Question assumes only one long bus patch
    if len(long_bus_patches) == 0:
        # If no long bus is found, query the image directly
        return image_patch.simple_query(""Is the long bus to the left or to the right of the person with the backpack?"")
    long_bus_patch = long_bus_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is the long bus to the left or to the right of the person with the backpack?"")
    person_patch = person_patches[0]
    if long_bus_patch.horizontal_center < person_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������取�������������取����������������������取��������������������取����������取������������������������������������������������������������������������取�������������取����取���取������取���取���取����取����������������������������������������������������取������������������������取����取������取����取��������������取��������取���取������取�����取��������取���������取�����取"
13598461,What is the device that is not on called?," # device is a placeholder, replace with the actual object
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What is the device that is not on called?"")
    for device_patch in device_patches:
        if not device_patch.verify_property(""device"", ""on""):
            return device_patch.simple_query(""What is the device that is not on called?"")
    # If no device is not on, query the image directly
    return image_patch.simple_query(""What is the device that is not on called?"") # crop would include the on so keep it in the query��取�����������取�������取��取��������������取��������������取����������������取���������取��������������������������������������������������取���取����������取�����取���������取��������������������������������������取����������������������������������取�������������������取����������������������������取�������������������������取���������������������������取��������取���������������取����������取��������取�����取������取"
13885436,The sky has what color?," # returns the color of the sky
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"") # crop would include the sky so keep it in the query��������取��取�������������������取����������取�������������������������������������������������������������������取�����取����取������取��������������������������������������������������������������������取���取�������������取����取�������������������������������������������������������������������������������������取�����������取���取���������������取��������������取������������������取����������������取"
7432467,Is the black container to the left of the man that is on the motorcycle?," # assumes one man and one container
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    container_patches = image_patch.find(""container"")
    if len(man_patches) == 0 or len(container_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    container_patch = container_patches[0]
    if container_patch.horizontal_center < man_patch.horizontal_center:
        return ""yes""
    return ""no""������取�����取�����取�����������������取�������������������取��������������取�����������������������������������取�������取�������取�����������������������������������取������取�������取������取���取������取����������取����取���取������取���������取����������������������������������������������������������������������������������������������取����������取�������取����������������取���取����取����取"
19540096,Is the fire in an oven?," # assumes one fire patch
    image_patch = ImagePatch(image)
    fire_patches = image_patch.find(""fire"")
    if len(fire_patches) == 0:
        # If no fire is found, query the image directly
        return image_patch.simple_query(""Is the fire in an oven?"")
    return bool_to_yesno(fire_patches[0].verify_property(""fire"", ""oven"")) # crop would include the oven so keep it in the query���������������������������������������������������������取���������������������取���取�����������������������������������取�����取�����������������������������取���������������������取���取������取����取���取���������������取��������取����取�������������������������������������������������������������������������������取���取�����������取����取�������������取��������取���������取"
18291107,The horse is where?," # assumes one horse patch
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""The horse is where?"")
    return horse_patches[0].simple_query(""The horse is where?"") # crop would include the horse so keep it in the query����������������������������取�������������取��������������������取�����������������������取���������������������������取�����取�����������������������������������������������������������取�������取�������������������������������������������������������������������������������������������取�����������取����取��������������取������取�����������取"
5435474,Is the man that is to the left of the motorbike wearing a hat?," # assumes one man and one motorbike
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    motorbike_patches = image_patch.find(""motorbike"")
    # Question assumes only one man and one motorbike patch
    if len(man_patches) == 0 or len(motorbike_patches) == 0:
        # If no man or motorbike is found, query the image directly
        return image_patch.simple_query(""Is the man that is to the left of the motorbike wearing a hat?"")
    man_patch = man_patches[0]
    motorbike_patch = motorbike_patches[0]
    if man_patch.horizontal_center < motorbike_patch.horizontal_center:
        return bool_to_yesno(man_patch.verify_property(""man"", ""hat""))
    return ""no"" # man is not to the left of the motorbike, so he is not wearing a hatERCHANTABILITY: This function is not yet complete and may not provide the expected results.
�����������取�����������������������取�����������������取�����������取����������取��������取���������������������������取�������������������������������取��������取�������取���取�����取��������������取�������取������取�����������������������������������������������������������������取����取�������������������������取���������取���取�����取��������取����������取�����取����������取"
226307,Are there any tables in the photo?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table"")) # returns a boolean
�����������取���������取��������������取����������������������������������������取������取�������取��取��取������������������取�����������������������������������������取���������取��������取������取��������������������������������������������������������������������������������������取��������������������������取���取�����������取���取���取����取�����取���取��������取�����取���������取��������取"
1944826,Who is reflected in the mirror?," # assumes one mirror patch
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Who is reflected in the mirror?"")
    mirror_patch = mirror_patches[0]
    return mirror_patch.simple_query(""Who is reflected in the mirror?"") # crop would include the reflection so keep it in the query�����取���������������������������������取��取�����������������取�������������������取�������������������������������取�������取��������������������������������取������取��������取���������取�����������取����取���取����取���������������������������������������������������������������������取����������取��������取���������取�����取���取�������取���取���������取���取�����取����取�����������������������������������������������������������������������������������������������������������取"
6199650,What is the cooking utensil on top of the stove that is to the right of the woman called?," # assumes one woman and one cooking utensil
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"")
    woman_patch = woman_patches[0]
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    if len(cooking_utensil_patches) == 0:
        return image_patch.simple_query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"")
    cooking_utensil_patch = cooking_utensil_patches[0]
    if cooking_utensil_patch.horizontal_center > woman_patch.horizontal_center:
        return cooking_utensil_patch.simple_query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"")
    return cooking_utensil_patch.simple_query(""What is the cooking utensil on top of the stove that is to the left of the woman called?"") # crop would include the stove so keep it in the query�������������取������������取������������������������������取�������������������取����取���取�������������������������������取������������������������������������������取��������取��������������������取����取��������取"
18435846,What is the color of the balloon that is to the right of the backpack?," # assumes one backpack and one balloon
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""What is the color of the balloon that is to the right of the backpack?"")
    for backpack_patch in backpack_patches:
        balloon_patches = image_patch.find(""balloon"")
        for balloon_patch in balloon_patches:
            if balloon_patch.horizontal_center > backpack_patch.horizontal_center:
                return balloon_patch.simple_query(""What is the color of the balloon?"")
    return ""no"" # if no balloon is to the right of the backpack, return no
��取���������������取�����取����������������������������������������������������取�������������������取�������������������������������取����������取����取���������������取�����取����������������������������������������������取�������取�������������取���取���取�����取���取��������取�������������取����������������取����������������������������������������������取�����取��������������取�����������������取���取���取������������取���取����取"
8390894,Is the woman to the right of the man sitting on a sofa?," # assumes one man and one woman
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one man and one woman patch
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the right of the man sitting on a sofa?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    sofa_patches = image_patch.find(""sofa"")
    # Question assumes only one sofa patch
    if len(sofa_patches) == 0:
        return ""no""
    sofa_patch = sofa_patches[0]
    if woman_patch.horizontal_center > man_patch.horizontal_center and woman_patch.vertical_center > sofa_patch.vertical_center:
        return ""yes""
    return ""no""����取�����取�����������������������取�����������������������������������取���取�������������������������取�����������������������������������������������取���取�������取���取�����������������������������������������������������������������������������������取�����取����取�����������取�����取���������������取������取��取���������取"
18896007,Which side of the image is the pot on?," # left or right
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the pot on?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����取��������������������������取���取�����������������取����������������������������������������������取������取���取�����取��������������������������������取��������取����取����取�������取����取����取���取������������取������取������������������������������������������������������������������������取���������������������������������取���取���取���取����������取�����取����取"
19323898,Is that pillow on a couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that pillow on a couch?"") # crop would include the couch so keep it in the query��������������取�����������������取���������取���������������������������������������取������������������������������������������������������������������������������������������取�������取���������������������������������������������������������������������������������取��取����������������取������取�����������������取�����取�������取�����取������取���������������������������������������������������������������������������������������������������������������������������������������������������������������取"
1281034,Where are the trees?," # returns the location of the trees
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""Where are the trees?"")
    return tree_patches[0].simple_query(""Where are the trees?"") # crop would include the tree so keep it in the query���������������取���������������取�������取��������取�������������取��������������������取����取�����取����������������������取������取��������������������������������������������������������取����������取������取��������取������取����������取�������取����取������取���������������������������������������������������������������取�����取�����取�����������取��������取�������取���取���取�����取���取������取���取�����取����取���取"
13515147,What is on the cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cow?"") # crop would include the cow so keep it in the query���取������������������������取����������取������������������取�����取����������������������取������������������������������������������������������������������������取������������������������������取�������������������������������������������������������取��������������取�������������取���取�������取����取�����������取������������������������������������������������������������������������������取�����������������������������������取��取��������������������������取��������取���������������取�����取"
91036716,What is the skater doing?," # assumes one skater patch
    image_patch = ImagePatch(image)
    skater_patches = image_patch.find(""skater"")
    if len(skater_patches) == 0:
        # If no skater is found, query the image directly
        return image_patch.simple_query(""What is the skater doing?"")
    return skater_patches[0].simple_query(""What is the skater doing?"") # crop would include the action so keep it in the query���������������取���������������������取�����������������������取������������������取��������取����������������������������������取���������������������������������������取����������������������取�����取��������取��������������������������������������������������������������������������������取���������取������������取�������取����取���取�����������取����取�����������取����������������������������取"
17791510,What is the person to the left of the boy carrying?," # assumes one person and one boy
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    boy_patches = image_patch.find(""boy"")
    if len(person_patches) == 0 or len(boy_patches) == 0:
        # If no person or boy is found, query the image directly
        return image_patch.simple_query(""What is the person to the left of the boy carrying?"")
    person_patch = person_patches[0]
    boy_patch = boy_patches[0]
    if person_patch.horizontal_center < boy_patch.horizontal_center:
        return person_patch.simple_query(""What is the person to the left of the boy carrying?"")
    return boy_patch.simple_query(""What is the person to the left of the boy carrying?"") # crop would include the boy so keep it in the query�����������������������������������������������������������������������������取���������������������取��取�����������������取������������������������������������������������������������������������������������取��������������������������������������������������取�����取�����取�������������������������取"
13152020,Is the ground wet or dry?," # assumes the ground is at the bottom of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground wet or dry?"") # crop would include the ground so keep it in the query�����������������取�����������取����������取����取������取�������������������������������取���取�����������������������������取���������取�������������������������������������������������������取�����������取����������������������������������������������������������������������������������������������������取���������������取���取�����������������取����������取�������取����取��������������取�����取"
19312096,"On which side is the purse, the left or the right?"," # assumes one purse
    image_patch = ImagePatch(image)
    purse_patches = image_patch.find(""purse"")
    if len(purse_patches) == 0:
        return image_patch.simple_query(""On which side is the purse, the left or the right?"")
    purse_patch = purse_patches[0]
    if purse_patch.left < image_patch.left + (image_patch.right - image_patch.left) / 2:
        return ""left""
    else:
        return ""right""�������������取�������取����取�����������取�������������������������������������������������������������������取���������������������������������������������������������取�����������取������取���������取��取���������������������������������������������������������������������������取�������������������取������������������������������取"
71002343,Are there breads in this photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bread"")) # returns True or False, which is then converted to yes or no
���������������������������������������������������取��������������������取�����������������������������������取��������������������������������������������取�����取��������取���������取������������������������������������������������������������������������������������取���取�����取������������������取�������������取�������������������������������������������������������������������������������������������������������取�������取��取��取����������������������������������������取����取�������取��������������������取���取�������取���取"
9113663,Do you see either any snow or sand that are white?," # returns yes or no
    image_patch = ImagePatch(image)
    is_snow = image_patch.exists(""snow"") and image_patch.verify_property(""snow"", ""white"")
    is_sand = image_patch.exists(""sand"") and image_patch.verify_property(""sand"", ""white"")
    return bool_to_yesno(is_snow or is_sand)����取���������������������������������������������取����������������������������取����������������������取��������取���������������������������������������取�������取���������取������取�����������取����������取���������������������������������������������������������取����取�������取���取��������������������取�������取����取�������取���取����取���取�����������������������������������������������������������������������������������������取������取���������������������������������������������������������取"
10243612,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����������取�����������������������取����������������取������������������������������������������������取������取���������������������������������������������取��������取�������取�����取����取�������������������������������������������������������������������������取��取����������������������������取�����������������取�����取���������������������������取�����������������������������������������������������������������������������������������������������������取����取���取���������������������������������������������������������取"
555062,What vegetable is to the left of the napkin?," # assumes only one napkin patch
    image_patch = ImagePatch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch.simple_query(""What vegetable is to the left of the napkin?"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.horizontal_center < image_patch.find(""napkin"")[0].horizontal_center:
            return vegetable_patch.simple_query(""What vegetable is to the left of the napkin?"")
    return vegetable_patches[0].simple_query(""What vegetable is to the left of the napkin?"") # if no vegetable is to the left, return the first vegetable patchніцип������������������������������������������������������������取���������������������������取���取��������������������������������������取��������������������������������������������������������������取�����取��������������取���取������取���取������������������������������������������������������������������������取����取�����������取�������取���取������������取�������取���������������取"
15599523,Is the dog on the right side?," # assumes one dog patch
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Is the dog on the right side?"")
    dog_patch = dog_patches[0]
    if dog_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""������������取�����������取��������������������������取������取���������������������������������������������取���取�����取�����������������������������������������取���������取����������取�����������取�������������������������������������������������������������������������������取����������������������������������������取���������������������������取"
101019673,What is the man wearing?," # returns the answer to ""What is the man wearing?""
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man wearing?"")
    return man_patches[0].simple_query(""What is the man wearing?"") # crop would include the man so keep it in the query���������取����������������������������取�����取����������������取�����������������������取��������������������������������取����取�����取�����������������������������������������������������������取������������取��������������取�����取����取��������������������������������������������������������������������������������取����取����取��������������������������取��取������取"
333047,Do you see any men to the right of the orange tent?," # assumes one orange tent
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Do you see any men to the right of the orange tent?"")
    for man_patch in man_patches:
        orange_tent_patches = image_patch.find(""orange tent"")
        for orange_tent_patch in orange_tent_patches:
            if orange_tent_patch.horizontal_center < man_patch.horizontal_center:
                return ""yes""
    return ""no""�����������������������������������������������取����������������������取��������取������������������取�����取������������������������������������������取����������取���取����������取�������取���取���取�����取�����������������������������������������������������������������������������取������取���������������������取�����取"
13907796,Is the shirt striped and green?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt striped and green?"")
    shirt_patch = shirt_patches[0]
    is_striped = shirt_patch.verify_property(""shirt"", ""striped"")
    is_green = shirt_patch.verify_property(""shirt"", ""green"")
    return bool_to_yesno(is_striped and is_green) # returns yes or noніцип���������������������取��取��������������������������取���取��取���������������取����取���取��������������������������������������������������取���取���取�������取������������������������������������������������������取���取�������������������取���取����������取�����������取���取�������������������������������������������������������������取�����取��������取�������取�������取���取����������������取���取����������������取�����取��������取��������取��������取"
17207604,Are there either bottles or shelves?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_bottle or is_shelf)�������������取�������������取����������������������������取�������������������取��������取�����取������������������������������取�����取��������������������������������������������������取����取���取�������取��������取����取������取�����取����������取������������������������������������������������������������������������������������������������取�����取���������������������取���������������������取���取"
1890653,What vehicle is to the right of the train on the left of the photo?," # assumes one train patch
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""What vehicle is to the right of the train on the left of the photo?"")
    train_patch = train_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center > train_patch.horizontal_center:
            return vehicle_patch.simple_query(""What vehicle is to the right of the train on the left of the photo?"")
    return ""no"" # if no vehicle is to the right of the train, return no
������������������取��������������������������������取���������������������������������������������取���取�������������取�����������������������������������取������������������������取������取�����取�������������������������������������������������������������������������������取��������取���������������������������������取"
7165131,Is that train engine small or large?," # returns ""small"" or ""large""
    image_patch = ImagePatch(image)
    train_engine_patches = image_patch.find(""train engine"")
    # Question assumes only one train engine patch
    if len(train_engine_patches) == 0:
        # If no train engine is found, query the image directly
        return image_patch.simple_query(""Is that train engine small or large?"")
    return train_engine_patches[0].best_text_match([""small"", ""large""]) # crop would include the engine so keep it in the query��������������������������取�������������取���取���取�������������取�������������������取���������������������������������取��������������������������������������取������������取��取����取��������������取��������取������取�����������������取����������������������������������������������������������������������������������������取����������������������取����取���������取������取"
21049362,Where are the railroad tracks?," # assumes one railroad track
    image_patch = ImagePatch(image)
    railroad_patches = image_patch.find(""railroad track"")
    if len(railroad_patches) == 0:
        return image_patch.simple_query(""Where are the railroad tracks?"")
    return railroad_patches[0].simple_query(""Where are the railroad tracks?"") # crop would include the railroad track so keep it in the query���������������取���������������取�������取�����取���������������������������������取������������������������������������������������������������������������������取�������������������取���������取�����������取�������������取���������������������������������������������������������取�����������取��������������������取���取������取�������������取��������取������取���取��������������������取"
6224352,What is the animal looking at?," # assumes one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the animal looking at?"")
    animal_patch = animal_patches[0]
    return animal_patch.simple_query(""What is the animal looking at?"") # crop would include the object so keep it in the query�����������������������取���取�������������������������������������������������取����取�����������������������������取����取�����取������������������������������������������������取������取������取��������������取��������������取�����取������������������������������������������������������������取����取������������������������������取�����取����取����������取��������取�����������取��取��������取"
14367593,What are the children playing?," # assumes only one child
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""What are the children playing?"")
    return child_patches[0].simple_query(""What are the children playing?"") # crop would include the child so keep it in the query�����������������取����������取���������������取���������������取�������������������取�����取���取�����取�����������������������取����取���取�����������������������������������������取����������取������取�����取���取������取����取���取���取���取���取��������������取����取���������������������������������������������������������������������������取���取���������������������取��������取���������取�������������取"
598297,Are there combs or figurines in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_comb = image_patch.exists(""comb"")
    is_figurine = image_patch.exists(""figurine"")
    return bool_to_yesno(is_comb or is_figurine)������取������������������取���������������取���������������取���取���取���������������取���取�����������������������������������取�������取������������������������������������������������������������������取����取�����������取�����取����取����取���������������������������������������������������������������������������������取�������������������������取���������������取��������取�����������取�����������取��取"
16409127,What is the wire on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wire on?"") # crop would include the object so keep it in the query�������������取������������������取����������取������������������取�����������������������取���������取������������������������取�����取�������������������������������������������������������������取���������取���������取������取��������取����������������������������������������������������������������������取��取����������������取������取���取�������������取�����������������������取��������������取��������������取����取����取�����取�����取"
5841062,Is the tunnel small or large?," # assumes one tunnel patch
    image_patch = ImagePatch(image)
    tunnel_patches = image_patch.find(""tunnel"")
    if len(tunnel_patches) == 0:
        # If no tunnel is found, query the image directly
        return image_patch.simple_query(""Is the tunnel small or large?"")
    tunnel_patch = tunnel_patches[0]
    return tunnel_patch.simple_query(""Is the tunnel small or large?"") # crop would include the tunnel so keep it in the query�����������������取�������������������取��������������������������������������������������������������������������取���取��������������������������������������取���取��������������取���������取�����������取�����������������������������������������������������������������取����������������������������取�������������������取����取���取������取����取"
17560468,Do you see trains or windows?," # returns yes or no
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_train or is_window)����������������������取���取������������取������������������取����������������������取�����������������������������取��������������������������������������������������������������取����取�����取�����取��������������������取�����������������������������������������������������������������������取�������取������������������������������取����取�����取����������取���������������������取"
9321809,What is the person near the man wearing?," # assumes one person and one man
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    man_patches = image_patch.find(""man"")
    if len(person_patches) == 0 or len(man_patches) == 0:
        return image_patch.simple_query(""What is the person near the man wearing?"")
    person_patch = person_patches[0]
    man_patch = man_patches[0]
    if person_patch.horizontal_center > man_patch.horizontal_center:
        return person_patch.simple_query(""What is the person wearing?"")
    else:
        return man_patch.simple_query(""What is the person wearing?"") # crop would include the person so keep it in the query�������������取�����������������������取���取��������������取���������取�������������������取�����������������������������取�����������������������������������������������������������取�����������������取���取���取���取��������������������取��������������������������������������������������������������������取�������取����取������取��������������取�����取���取�����取���取����取���取����取��取������取����取"
12352375,Is the vehicle that is sitting down black or blue?," # vehicle is sitting down
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Is the vehicle that is sitting down black or blue?"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.verify_property(""vehicle"", ""sitting down""):
            return vehicle_patch.best_text_match([""black"", ""blue""])
    # If no vehicle is sitting down, query the image directly
    return image_patch.simple_query(""Is the vehicle that is sitting down black or blue?"") # crop would include the sitting down so keep it in the query������������取���取��取��������������������取���取��������������取������取���取��������������取�����������������������������������取�����������������������������������������������取������������取���取���取��������取�������取��������������取�������取��������������������������������������������������取�����取����������������取��������取�������取���取������取����������取����取���取���������������取�������取"
7949280,Is the metal trash can to the left or to the right of the white thing near the shower curtain?," # assumes one trash can and one white thing
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""metal trash can"")
    white_thing_patches = image_patch.find(""white thing"")
    # Question assumes only one trash can and one white thing patch
    if len(trash_can_patches) == 0 or len(white_thing_patches) == 0:
        # If no trash can or white thing is found, query the image directly
        return image_patch.simple_query(""Is the metal trash can to the left or to the right of the white thing near the shower curtain?"")
    trash_can_patch = trash_can_patches[0]
    white_thing_patch = white_thing_patches[0]
    if trash_can_patch.horizontal_center < white_thing_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������������������������������������������取�������������������取��������������������������������������取�������������������������������������������������取�������������������������������������取�������������������������������������������������取����������������取�����������取"
5800248,Is it outdoors?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""outdoor"", ""outdoor"")) # assumes the property is ""outdoor"" and the object is ""outdoor""ніцип���取����������������������������������取�����������������取�����取������������������������取��������������������������取�����������������������������������������取��������������取��������取���取���取�������取���取���取�����取���取����������������������������������������取������������������������取������取������������取���取��������取����������取��������取������������������������������������������������������������������������������������������������������������������������������������������取��取"
4604785,Does the pizza slice to the left of the pizza have large size?," # assumes only one pizza patch
    image_patch = ImagePatch(image)
    pizza_patches = image_patch.find(""pizza"")
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch.simple_query(""Does the pizza slice to the left of the pizza have large size?"")
    pizza_patch = pizza_patches[0]
    pizza_slice_patches = pizza_patch.find(""pizza slice"")
    # Question assumes only one pizza slice patch
    if len(pizza_slice_patches) == 0:
        return ""no""
    pizza_slice_patch = pizza_slice_patches[0]
    return bool_to_yesno(pizza_slice_patch.verify_property(""pizza slice"", ""large"")) # crop would include the pizza slice so keep it in the query���������������������������������������������������取����������������������取�����取�����取�����取�������������������������取���取���取�������������������������������������������������取�����������������取����取����������取���取����取�������������������������������������������������������取������������取����������取������取����������取�������������取�����取�������������取�����取"
15185845,What's the man wearing?," # returns the answer to ""What's the man wearing?""
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What's the man wearing?"")
    return man_patches[0].simple_query(""What's the man wearing?"") # crop would include the man so keep it in the query��������������取�������������取��������������取�������������������取����������������取���取������取������������������������������������������������������������������������������取���取�����������������取�����取���取�������������取��������取���取�����������������������������������������������������������������������取����取����������取��������取���取������������取��������取���取����取�������取���取�����取����取"
2282232,Where is the snow?," # assumes the image is of a single scene
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the snow?"") # assumes the image is of a single sceneніцип�����取��������������取���取��取���������取���取��取�����������取����������������取�����������������������������取�������������������������������取����取�������取���������取������������������������������������������������������������������������取�����取�������������������取���取�������������������������������������������������������������������������������������������������������������������������������取��������取�������取������取�������取�������取�������������������������������������������������������������������取"
7889197,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, query the image directly
    return image_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query����������������������������������取���������������������������������������������������������������取������取�����取�������������������������������������取����取������������������取���取���������������������������������������������������������������������取�������������������������取����取��������������取����������取"
11292587,Are there either any blankets or pictures in the photograph?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blanket = image_patch.exists(""blanket"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_blanket or is_picture)����取�������������������取��取����������取��������������������������������������取������������������������������取��������������������������������������取���取��������取��������������������������������������������������������������������������������������取��������������������������������������取������取�����取��������������������������������������������������������������������������������������������������������������������������������������取����������取����������取���������取�����取��������取������������取"
154682,Where does the bird stand on?," # assumes one bird patch
    image_patch = ImagePatch(image)
    bird_patches = image_patch.find(""bird"")
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch.simple_query(""Where does the bird stand on?"")
    bird_patch = bird_patches[0]
    return bird_patch.simple_query(""Where does the bird stand on?"") # crop would include the object so keep it in the query��取�����������������������取�������������������������取��������������������������������������������������取��������������������������取�������������������������������������������������������������取��取�����取����������取����取�����取��取�������������������取���取����取���取�����取������取���������取����取��������������������������������������������������������������������取���取�������������取�����取����取����取����������取����取����������取����取�����������取����取���������取������取��������取�����取�����取�����取"
10435315,Is the man holding a racket?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man holding a racket?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return ""no""
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no""������取��������取��取������取��������������������������������������������������取����取������������������������取�������取���������������������������������������������取����取�������取������取���取�������取����取���取�������取��������������取�������������������������������������������������������������������������������������������取����取����取���取���取���取���������取������������取�������������������������������������������������取"
121035887,Do the man shorts have white color?," # returns a boolean
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the man shorts have white color?""))
    man_patch = man_patches[0]
    return man_patch.verify_property(""man shorts"", ""white"") # crop would include the shorts so keep it in the query�����取���������������������取����取��取�������取�����取��取������������取��������������������������������������������������������取���取������������������������������������������取��������������取���取���取�������取���������������������������取������������������������������������������������������������������取�������������取���取�������������取��������取����������取���������取"
10770422,What kind of vehicle is to the left of the man that is to the left of the cows?," # assumes one man and one cow
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"")
    man_patch = man_patches[0]
    cow_patches = image_patch.find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        return image_patch.simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"")
    cow_patch = cow_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < man_patch.horizontal_center and man_patch.horizontal_center < cow_patch.horizontal_center:
            return vehicle_patch.simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"")
    return image_patch.simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"") # if no vehicle is found, query the image directlyніцип��取�������取������������取����取������������取�����取��������������������取������������������取������������������������������������������������������������������������������取�����取�����取���������������取��������取���������������������������������������������取������������������取�����取"
19659501,What is the color of the umbrella the bird is on?," # assumes one umbrella and one bird
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    bird_patches = image_patch.find(""bird"")
    if len(umbrella_patches) == 0 or len(bird_patches) == 0:
        # If no umbrella or bird is found, query the image directly
        return image_patch.simple_query(""What is the color of the umbrella the bird is on?"")
    umbrella_patch = umbrella_patches[0]
    bird_patch = bird_patches[0]
    if umbrella_patch.horizontal_center > bird_patch.horizontal_center:
        return umbrella_patch.simple_query(""What is the color of the umbrella the bird is on?"")
    else:
        return bird_patch.simple_query(""What is the color of the umbrella the bird is on?"") # crop would include the umbrella so keep it in the query�������������������������取����取���������取����取���������������取����������������取�����取����取�����������������������取���取������取����取�����������������������������������取������������取���取��������取��������取����取��������取������������取�����������������������������������������������������������������������������取��������������取��������������取�����取������取�������������取���������取�������������取����取"
10595217,Where is the grass?," # returns the position of the grass
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Where is the grass?"")
    return grass_patches[0].simple_query(""Where is the grass?"") # crop would include the grass so keep it in the query�������������������������取�������������取������������������取���������������������取��������取���取��������������������������取�������������������������������������������������������取�����取���������取������������������取�����取��������������������������������������������������������������取�����取���������取���������������取�������取���������取��������取�������取����取�����取���取"
14803743,Which kind of clothing is black?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query
    # If no clothing is black, pick the first clothing
    return clothing_patches[0].simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query�������������取���������������������������������������������������������������������������������������������取������������������������������������������������������������������取����取�������取�������������������������������������������������������������取�����������取�����取����取����������������������������������取��������取����取"
19743238,Is the man on the right side?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    if man_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""������取�����取����������������������������������������取������������������������取������������������������������������������������������������������������������������取���������������������取����取�������������������������������������������������������������������������������������取���取�������������������取�������取�������������取��������������取�������取����������������������������������������������������������������取"
3965204,Are the mountains covered with snow?," # returns a boolean
    image_patch = ImagePatch(image)
    mountain_patches = image_patch.find(""mountain"")
    # Question assumes only one mountain patch
    if len(mountain_patches) == 0:
        # If no mountain is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Are the mountains covered with snow?""))
    return bool_to_yesno(mountain_patches[0].verify_property(""mountain"", ""snow"")) # crop would include the snow so keep it in the query��������������取��������������取���������������取���������������取�����������������取���取�����取���������������������������������������������������������������������������取���������取���取�������取����取��������������取����������������取���������������������������������������������������������������取����取��������������������������取�����取�����取��������取"
141024710,Are there both windows and cars in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window and is_car)����取�����取��������������������������取����������������取��������������������取����取������������������������取�����取�����取����������������������������������������������取���取���取������取���取��������取����������取��������������������������������������������������������������������������取���������������取��������取������������取���取�����取������取�������取��������������取������取�������������������������������������������������������������������������������������������������������������������������取���������取�����������������取"
6481635,What color do you think the shirt is?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What color do you think the shirt is?"")
    return shirt_patches[0].simple_query(""What color do you think the shirt is?"") # crop would include the shirt so keep it in the query�����������������取�����������������������取���������������������������������������������������������������������������������������������������������取���取����取���取��������������������������������������������������������������������������������取�����������取����取���������������������������������取����取��������������������������������取��������取"
3623367,What's he doing?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What's he doing?"")
    return person_patches[0].simple_query(""What's he doing?"") # crop would include the person so keep it in the query�������������������������取��������������������������������������������������������������������������������取��������������������������������������������������取��������������������������������������取�������������������������������������������������������取����������������取������取������������������������取��������取"
15634950,Where is the giraffe in front of the hay eating from?," # assumes one giraffe and one hay patch
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    hay_patches = image_patch.find(""hay"")
    if len(giraffe_patches) == 0 or len(hay_patches) == 0:
        # If no giraffe or hay is found, query the image directly
        return image_patch.simple_query(""Where is the giraffe in front of the hay eating from?"")
    giraffe_patch = giraffe_patches[0]
    hay_patch = hay_patches[0]
    if giraffe_patch.horizontal_center > hay_patch.horizontal_center:
        return ""right""
    else:
        return ""left"" # assuming the giraffe is in front of the hay, so left is the only other optionніцип��取�������������������������取�����������������������������������取����取����������������������������������������������取���取������取��取�������取���取�������������������������������������取��������取��������取�����取����������取���������取������取��������������������������������������������取����������������������取��������取������取��������取�����������取����取������取"
16644500,What animal is the log pulled by?," # assumes one log and one animal
    image_patch = ImagePatch(image)
    log_patches = image_patch.find(""log"")
    animal_patches = image_patch.find(""animal"")
    if len(log_patches) == 0 or len(animal_patches) == 0:
        return image_patch.simple_query(""What animal is the log pulled by?"")
    log_patch = log_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center < log_patch.horizontal_center:
        return animal_patch.simple_query(""What animal is the log pulled by?"")
    return log_patch.simple_query(""What animal is the log pulled by?"") # crop would include the log so keep it in the query���������取��取�����������������取�������������������������������������������������取������取������������������������取�����������������������������������取���������������������������������������������取�����������取����取�������取���������取������������������������������������������������������������取�������取����取�������������������取���取����取����取����取����取�������取���取��������取"
3202108,Which side is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取����������������������取�������������取�������取��������������������取��������������������������������������������������������������������������取������������取��������取�������取���������取��������取�����������������������������������������������������������������������取������取����������取�������取����������取������取���取�����取�������取�����取����������取"
10137201,Are the papers in the bottom part of the picture?," # papers are not a specific object, so query directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the papers in the bottom part of the picture?"")) # papers are not a specific object, so query directly���������取�������取����取������������取��取��取����������������������������������������取���������取���������������������������取���������取�����取�������������������������������������������������������������取���取������取������取���取���取���������取������������������������������������������������������������������������������������������������������取�����������������������取���������取���������������取����������������������������取"
5325670,Is the boy to the left or to the right of the person that is on the left?," # assumes one person patch
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Is the boy to the left or to the right of the person that is on the left?"")
    boy_patch = boy_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is the boy to the left or to the right of the person that is on the left?"")
    person_patch = person_patches[0]
    if boy_patch.horizontal_center < person_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������取�����取��������������������������������������������取������������������������取���取����取�������取����������������������������������������取������取��������取����������������������������������������������������������������������������������取����������取�������������取�����������取����������取�����������������������取"
8438091,The picture is what color?," # returns the color of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the picture?"") # crop would include the image so keep it in the query��������取����������������取����取��������������取�������������������������������������取�������������������������������取���取������取����取��������������������������������������������������������取�����取���取�����取�����取���取���������取�����取���������������������������������������������������������������������������������������������������������������取����������取���取����������������取����取�����取�������������������������取"
4325939,On which side of the photo is the banana?," # left or right
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the banana?"")
    if banana_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������取�������������������������������������������取����������������������取��������取�����取���������������������取�������������取�������������������������������取�������取������������取������取���������取����������������������������������������������������������������������������������������������������取���������������取�������������取�������������取������取"
1425189,What is the name of the brown piece of furniture?," # returns the name of the object
    image_patch = ImagePatch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch.simple_query(""What is the name of the brown piece of furniture?"")
    brown_patch = brown_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        return brown_patch.simple_query(""What is the name of the brown piece of furniture?"")
    furniture_patch = furniture_patches[0]
    return furniture_patch.simple_query(""What is the name of the brown piece of furniture?"") # crop would include the brown so keep it in the query��������������������������取��������������取�������������������������������取�������取���取�������取�����������������������������������������������������������������������������取�����取���取��������取���������取���������取����������������������������������������������������������������������������取���������������取�����������取�����取�����������取����取������������取����取���������������������取"
5119962,Is the man to the right of glasses?," # assumes only one man and one glasses patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    glasses_patches = image_patch.find(""glasses"")
    if len(man_patches) == 0 or len(glasses_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    glasses_patch = glasses_patches[0]
    if man_patch.horizontal_center > glasses_patch.horizontal_center:
        return ""yes""
    return ""no""�������������取�������取���取�����������������������������取��������������������取���取�����取���������������������������取����取���取��������������������������取�����������取�������������取�����������������取�����取������������������������������������������������������������������������������������������取������������������取������取������取����取������取���取����取���取�����������取"
16523418,Is the toilet lid down or up?," # assumes one toilet patch
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Is the toilet lid down or up?"")
    toilet_patch = toilet_patches[0]
    return bool_to_yesno(toilet_patch.verify_property(""toilet"", ""lid down"")) # crop would include the lid so keep it in the query�����取�����������取����������������������������������取���取������取�������������������取�������取���取���������������������������������������������������������������������取����取������取������取�����取��������取������取�����取�������������取��取��取����取����������������������������������������������取��������������������取�����������取�������取�����������取��������取���取������取"
6522554,Which kind of device does the man hold?," # returns the name of the device
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which kind of device does the man hold?"")
    man_patch = man_patches[0]
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        return image_patch.simple_query(""Which kind of device does the man hold?"")
    device_patch = device_patches[0]
    return device_patch.simple_query(""Which kind of device does the man hold?"") # crop would include the device so keep it in the query����������������取��取������取���������������取������������������取������������������取������取������������������������������取��������������������������������������������取����取����取����������������������取�������������取��������������������������������������������������������������取������������������取���取������������取����取����������取����������取��������取�����取������取"
870619,What is the device to the left of the person that is to the left of the television?," # assumes one person and one television
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"")
    person_patch = person_patches[0]
    television_patches = image_patch.find(""television"")
    # Question assumes only one television patch
    if len(television_patches) == 0:
        return image_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"")
    television_patch = television_patches[0]
    if person_patch.horizontal_center < television_patch.horizontal_center:
        device_patches = image_patch.find(""device"")
        # Question assumes only one device patch
        if len(device_patches) == 0:
            return image_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"")
        device_patch = device_patches[0]
        if device_patch.horizontal_center < person_patch.horizontal_center:
            return device_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"")
    return image_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"") # default case, returns the answer to the question if no device is found to the left of the person to the left of the television・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
12713794,Does the woman to the left of the man wear a necklace?," # assumes one man and one woman
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes one man and one woman patch
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch.simple_query(""Does the woman to the left of the man wear a necklace?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < man_patch.horizontal_center:
        return bool_to_yesno(woman_patch.verify_property(""woman"", ""necklace""))
    return ""no"" # woman is not to the left of the man, so she doesn't wear a necklaceERCHANTABILITY overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting�������������������取���取����������������取����������������������������������������������取��������������取�����������������取�����取���������取�����取"
824070,What is the man doing?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man doing?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""What is the man doing?"") # crop would include the man so keep it in the query����������������������取���取���取����������取����取������取��������������取������������������取��������取���������������������������������������������������������������������������取����������取������������取�����取�������������������取���取���������������������������������������������������������������������������������������������������������������取���������������������������������������取"
11593733,Which kind of furniture is right to the pillow?," # assumes one pillow patch
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is right to the pillow?"")
    pillow_patch = pillow_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > pillow_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is right to the pillow?"")
    return ""no"" # if no furniture is right to the pillow, return no
��取������������������������������取�����������������������������������取������������������������取����取�������������������������������取����������取�������������������������������������������������������������取�������������取������������取��������取�������取���取�����取������������������������取���取���取��������������������������������������������������������������取�����取������������������取������������取���取�����取��取���������取"
3357821,Does the dog to the left of the other dog look small or large?," # assumes only one dog patch
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Does the dog to the left of the other dog look small or large?"")
    left_dog_patch = dog_patches[0]
    right_dog_patches = image_patch.find(""dog"")
    # Question assumes only one right dog patch
    if len(right_dog_patches) == 0:
        return ""no""
    right_dog_patch = right_dog_patches[0]
    if left_dog_patch.horizontal_center < right_dog_patch.horizontal_center:
        return left_dog_patch.simple_query(""Does the dog look small or large?"")
    else:
        return right_dog_patch.simple_query(""Does the dog look small or large?"") # crop would include the other dog so keep it in the query���������取����取���取�����������取����������������������������取���������������������������������������������������取�������������������������������������������������������取������取���取����取����取���取����取�����取���������������������������������������������������������������������������取������������取���取�������取���取��������取���������������取����取������取"
338026,Are the white candles short or tall?," # returns yes or no
    image_patch = ImagePatch(image)
    white_candle_patches = image_patch.find(""white candle"")
    # Question assumes only one white candle patch
    if len(white_candle_patches) == 0:
        # If no white candle is found, query the image directly
        return image_patch.simple_query(""Are the white candles short or tall?"")
    white_candle_patch = white_candle_patches[0]
    is_short = white_candle_patch.simple_query(""Is the white candle short?"")
    is_tall = white_candle_patch.simple_query(""Is the white candle tall?"")
    return bool_to_yesno(is_short and not is_tall) # if both are no, return no, else yesніцип��������取���������������取��������取�������������������取��取�����������取��������������������������������������������������取�������取����取����������������������������������������������������取�������取�������取���取������������取������取������������������������������������������������������������������取���取����取������������取������������������������������取����取����取��������取"
15346232,What kind of fruit is the girl holding?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What kind of fruit is the girl holding?"")
    girl_patch = girl_patches[0]
    fruit_patches = image_patch.find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        return image_patch.simple_query(""What kind of fruit is the girl holding?"")
    fruit_patch = fruit_patches[0]
    return fruit_patch.best_text_match([""apple"", ""banana"", ""orange""]) # crop would include the fruit so keep it in the query��������������取���取����������������������取�����取�������������取�������������������������取����取�����������������������取������������������������������������������������取������取���取���������取�������取����取����������������������������������取�������������������������������������������������������取���取����取�����������������������取����取���取���取���������取�����������������������取�����������取"
13553098,"On which side of the photo is the yellow vehicle, the right or the left?"," # assumes one yellow vehicle
    image_patch = ImagePatch(image)
    yellow_vehicle_patches = image_patch.find(""yellow vehicle"")
    if len(yellow_vehicle_patches) == 0:
        return image_patch.simple_query(""On which side of the photo is the yellow vehicle, the right or the left?"")
    yellow_vehicle_patch = yellow_vehicle_patches[0]
    if yellow_vehicle_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""������������取����������������������取������������������取������������������������������������������取����取�����取���取��������������������������������������������取�����取�����取����取������������������取����������取�����������������������������������������������������������取��������取����取�����������������������������取���������������取"
81030271,Is the gray car to the right or to the left of the cart?," # assumes one gray car and one cart
    image_patch = ImagePatch(image)
    gray_car_patch = image_patch.find(""gray car"")[0]
    cart_patch = image_patch.find(""cart"")[0]
    if gray_car_patch.horizontal_center > cart_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����取����������������������������取������������������������������������取����取������������������������������取����������������������������������������������取����取�����取�����������取����取��������������������������������������������������������������������������������取������取�����取��������取���取��������������取����取���������取���������取�������������������������取�������������������������������������������������������������������������������������取"
1827581,What do you think is the cooking utensil that is to the right of the canister made of chrome?," # assumes only one canister
    image_patch = ImagePatch(image)
    canister_patches = image_patch.find(""canister"")
    # Question assumes only one canister patch
    if len(canister_patches) == 0:
        # If no canister is found, query the image directly
        return image_patch.simple_query(""What do you think is the cooking utensil that is to the right of the canister made of chrome?"")
    canister_patch = canister_patches[0]
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    for cooking_utensil_patch in cooking_utensil_patches:
        if cooking_utensil_patch.horizontal_center > canister_patch.horizontal_center:
            return cooking_utensil_patch.simple_query(""What do you think is the cooking utensil that is to the right of the canister made of chrome?"")
    return ""no cooking utensil to the right of the canister made of chrome"" # if no cooking utensil is found, return this string
�������������������取������������取����������������取�����取����������������������取����������������������������������取����������������������������������取���������取����取���������取����������������取�����取���������������������������������������������������������������������������取�������取�����������取"
8240699,What animal is in front of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the bird?"") # crop would include the bird so keep it in the query���取��������取������������������取����取��������取���������������取��取���������������������������������������������������取������取����������������������������������������������������取����取�������������������������������������������������������������������������取������������������取��������取����取�������取������取��������取�����取��������������������������������������������������������������������������������������������������������������取�������取������������������取�����取�������取���������������取������取"
10105081,Is the fence white or green?," # returns yes or no
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the fence white or green?"")
    return fence_patches[0].best_text_match([""white"", ""green""]) # crop would include the fence so keep it in the query�����������������取����������取����������������������������取��������������������取����取��������������������������������取�����取�������������������������������������������取����取����取���取��������������取����取��������取���取��������取���������������������������������������������������������������������������取�����������������������取�����取�������取����取������取������取���取"
13613689,Is there a train or a fence in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_train or is_fence)�����������������������������������������������������������������������������取�����������������������������取������取��������������������������������取��取�������������������������取������取��������取����取������取��������������取���������������������������������������������������������������������������取����������取������取�����������取���取��������������取��������取"
10662521,What is the bottle made of?," # bottle is the object, made of is the property
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""What is the bottle made of?"")
    return bottle_patches[0].best_text_match([""glass"", ""plastic"", ""metal""]) # crop would include the material so keep it in the query��������������取������������取����取����������������������������������������������������取����取��������������������������取����������������������������������������������������取��������取�����取�����取�������取���������取�����取���������������取������������������������������������������������������������������������取�����取�������������取��������������������取���������������取"
1152309,Which kind of fruit is on the plate?," # assumes one plate
    image_patch = ImagePatch(image)
    fruit_patches = image_patch.find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch.simple_query(""Which kind of fruit is on the plate?"")
    return fruit_patches[0].simple_query(""Which kind of fruit is on the plate?"") # crop would include the plate so keep it in the query�������������������������取������������取����取���������������取�����取���������������������取���取�����������������������������������取����������������������������������������������������取������取����取������取���������������������������������������������������������������������������������������取�������取����取���������取��������������������������取�����������取"
16701575,What device is to the right of the cake?," # assumes only one cake patch
    image_patch = ImagePatch(image)
    cake_patches = image_patch.find(""cake"")
    if len(cake_patches) == 0:
        # If no cake is found, query the image directly
        return image_patch.simple_query(""What device is to the right of the cake?"")
    cake_patch = cake_patches[0]
    device_patches = image_patch.find(""device"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > cake_patch.horizontal_center:
            return device_patch.simple_query(""What device is to the right of the cake?"")
    return ""no"" # if no device is to the right of the cake, return no
���������������������������取�������������������取����������������������取���������������取�����������取�����������������取��������������������������取������取����取�������取���取������取������������取���取���取���取���������������������������������������������������������������������������取����������������������取���取���取���取"
6572516,What material is the ceiling?," # ceiling is not a property of the image, but of the room
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the ceiling?"") # ceiling is not a property of the image, but of the roomніцип����������������������������������������������������������取���取���������取�����取��取������������������取�������������������������������取�����取���������������������������������������������������������������������������取����取����取������取���取����取���������������������������������������������������������������������������������������取�����������������������取��������取�����取���取�����������取�����������取��������取��������取����取����������������取���������������������������������������取�������������������������取"
11213633,Are there both magazines and umbrellas?," # returns yes or no
    image_patch = ImagePatch(image)
    is_magazine = image_patch.exists(""magazine"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_magazine and is_umbrella) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes"
8606777,What is the color of the egg in the middle of the picture?," # assumes one egg patch
    image_patch = ImagePatch(image)
    egg_patches = image_patch.find(""egg"")
    if len(egg_patches) == 0:
        # If no egg is found, query the image directly
        return image_patch.simple_query(""What is the color of the egg in the middle of the picture?"")
    egg_patch = egg_patches[0]
    return egg_patch.simple_query(""What is the color of the egg?"") # crop would include the egg so keep it in the query���������取�������������������取�����������取���������������������������������������取����取�����������������������������取���取�����取��������������������������������������������������取����取�������取�����取��������取����������取�����������取���������������������������������������������������������������������取���取�������������������取���取�����������������������������������������������������������������取"
14371534,Are the gold pans on the right part or on the left?," # assumes only one gold pan
    image_patch = ImagePatch(image)
    gold_pan_patches = image_patch.find(""gold pan"")
    # Question assumes only one gold pan patch
    if len(gold_pan_patches) == 0:
        # If no gold pan is found, query the image directly
        return image_patch.simple_query(""Are the gold pans on the right part or on the left?"")
    gold_pan_patch = gold_pan_patches[0]
    if gold_pan_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����������取����取��������取�������������取���������������取����取������������������取��������取���取�����������������取�������取�����������������������������������������取����取�����取����取����取�������取����取���取�������取���取���取��������取�������������������������������������������������������������������������取��������������������������取���������取"
16538076,What does the man that is not tall wear?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What does the man that is not tall wear?"")
    man_patch = man_patches[0]
    if not man_patch.verify_property(""man"", ""tall""):
        return man_patch.simple_query(""What does the man wear?"")
    return man_patch.simple_query(""What does the man that is not tall wear?"") # crop would include the man that is not tall so keep it in the query���取����������������������取���取���������取����������������������������������������取�������������������������������������������������������������������������������������取������取������取����������������������������������������������������������取��取�������������������取���取���取�������取�������取�����取"
5483644,"On which side is the woman, the left or the right?"," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side is the woman, the left or the right?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������取�����取�����������������������������������取�����������������������������������������������取������������������������������������取�������������取�����取�������取�����������取������取�������������取����������������������������������������������������������取��������������������取����取����������取�������取�������取�����取"
181041779,What is the animal in this photograph?," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in this photograph?"") # crop would include the animal so keep it in the query���������������取������������������������������������������������������������������取����������取�������������������取������取������������������������������������������������������������取����取�����������������������������������取�����������������������������������������������������������取���取���取�����������������取�������������取�����������������取���取����������取�����取��������取����取"
1290926,Are there either any life vests or flags?," # returns yes or no
    image_patch = ImagePatch(image)
    is_life_vest = image_patch.exists(""life vest"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_life_vest or is_flag)������������取���取���������取�����取����������取���������������取����取����������������取����取������������������������取����������取��������������������������������������������������取���取���取��������取���取������取��������取������取�����取�����������������������������������������������������������������������������������������������������������������取������������取������取���取������������取����取���取���取������取"
18273738,Do you see a cup?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cup"")) # returns True or False, which is then converted to yes or no
����������取�������������������������取��������������取���������������������������������取��������������取����������������取�������������������������������������������������������取����取���取������取�����������������������������������������������������������������取��取�������������������������取����������取������������取�������������取���取���取���取���������取�������取"
4211922,Who is sitting on the table?," # assumes one table patch
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Who is sitting on the table?"")
    table_patch = table_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.vertical_center > table_patch.vertical_center:
            return person_patch.simple_query(""Who is sitting on the table?"")
    return ""no one"" # if no one is sitting on the table, return ""no one"" chtě 노출등록�������������������取����������������������������取�����������������取��������������������������取�����������������������������取�����������取�������取������������取����������������������������������������������������取�����������取���取�������取���取����取����取���������������������������������������������������������������������������������������取��������取������������取�������取�������������������������������取�����取���������取����取"
6587526,What is the color of the girl to the left of the other girl?," # assumes only one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What is the color of the girl to the left of the other girl?"")
    left_girl_patch = girl_patches[0]
    right_girl_patches = image_patch.find(""girl"")
    # Question assumes only one right girl patch
    if len(right_girl_patches) == 0:
        return ""no""
    right_girl_patch = right_girl_patches[0]
    if left_girl_patch.horizontal_center < right_girl_patch.horizontal_center:
        return left_girl_patch.simple_query(""What is the color of the girl to the left of the other girl?"")
    return right_girl_patch.simple_query(""What is the color of the girl to the left of the other girl?"") # crop would include the other girl so keep it in the query������取���������取�������������取��������������������������取������������������取�������������取���取���������������������取������������������������������������������取����������������������取�����取���取����取�������������������������������������������������������������������������������������������������������取�����取�������取���取���取���取"
6599090,What is the person to the right of the car holding?," # assumes one person and one car
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    car_patches = image_patch.find(""car"")
    if len(person_patches) == 0 or len(car_patches) == 0:
        # If no person or car is found, query the image directly
        return image_patch.simple_query(""What is the person to the right of the car holding?"")
    person_patch = person_patches[0]
    car_patch = car_patches[0]
    if person_patch.horizontal_center > car_patch.horizontal_center:
        return person_patch.simple_query(""What is the person to the right of the car holding?"")
    return car_patch.simple_query(""What is the person to the right of the car holding?"") # crop would include the car so keep it in the query��������������取���取�����������������������������������������������������������取�������������������������������������������������������������������������������������取������取����������取�������取������取��������取���������取�������������������������������������������������取���取������取��������取��������取����������������取����取�������取�����������取���取����取����取����取�����������取"
1174895,What is the vehicle in the parking lot?," # assumes one vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    if len(vehicle_patches) == 0:
        return image_patch.simple_query(""What is the vehicle in the parking lot?"")
    return vehicle_patches[0].simple_query(""What is the vehicle in the parking lot?"") # crop would include the parking lot so keep it in the query����������������取�����������取�������������取������������取����������取��取�������������������������������������������取����������������������������������������������取�����取�������取���取�����取�������取����取�������������取��������������������������������������������������������������������������������取������������������������������取����取��������取���取������取���������������取����取���取���取"
14755158,Who is the woman in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the woman in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип�����������取���������������取��������������������������������������������������������������������������������������������������取����取���取�����������取������������������������������������������������取�����取���������取��������������取������取���������������������������������������������������������������取������������������������������������������取����取��������������取�����������������������取"
18349161,Where does the cow that is standing stand?," # assumes only one cow
    image_patch = ImagePatch(image)
    cow_patches = image_patch.find(""cow"")
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch.simple_query(""Where does the cow that is standing stand?"")
    cow_patch = cow_patches[0]
    return cow_patch.simple_query(""Where does the cow that is standing stand?"") # crop would include the standing so keep it in the query������������������������取�����������������取�����������������取������������������������取���������������������������取����取�����������������������������������������������取�������������取�������取�����取������������取����������������取���������������������������������������������������������������取���取�����取��������取���取�������������������取�����������取"
7472884,On which side is the tap?," # assumes one tap patch
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""On which side is the tap?"")
    tap_patch = tap_patches[0]
    if tap_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�������������取������������������������������������������������������������������������������������取������取�����������������������������������������取����取�����取��������取�����������������取�������取������������������������������������������������������������������������������取������������������取���������取����������取��������取���������取�����取����������������������������������������������������������������������������������������取"
111051831,On which side of the image is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��������取������������取�����������������������������取����������������������������取����������������������������������������������������������������������������������取���������取������取������取������取����������������������������������������������������������������������取���������取��������取���������取��������取���取���������取������取��������取����取�������取�������取"
3590007,On which side of the image is the fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fork?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������������������������������取�����������������取���������������������取�������������取���������������������������取�������������������������������������取���取��������取����������������取��������������������������������������������������������������������������取����取���取�����取������������取�����������取�������������取����取��������取�������������������取���������������������������������������������������������������������������取"
2409726,Do you see men to the right of the bag the person is carrying?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Do you see men to the right of the bag the person is carrying?"")
    person_patch = person_patches[0]
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        return ""no""
    bag_patch = bag_patches[0]
    man_patches = image_patch.find(""man"")
    for man_patch in man_patches:
        if man_patch.horizontal_center > bag_patch.horizontal_center:
            return ""yes""
    return ""no""���������������������������������取������������������取����取���������������������������������������取����取����取�����取��������取���������������������������������取���������取���取���������取���取���������取����������������������������������������������������������������������取������������取�����������取�������取����取����������������取�������取������取����取�������取��取"
577862,Are the artwork and the computer desk made of the same material?," # returns yes or no
    image_patch = ImagePatch(image)
    artwork_patches = image_patch.find(""artwork"")
    # Question assumes only one artwork patch
    if len(artwork_patches) == 0:
        # If no artwork is found, query the image directly
        return image_patch.simple_query(""Are the artwork and the computer desk made of the same material?"")
    artwork_patch = artwork_patches[0]
    computer_desk_patches = image_patch.find(""computer desk"")
    # Question assumes only one computer desk patch
    if len(computer_desk_patches) == 0:
        return ""no""
    computer_desk_patch = computer_desk_patches[0]
    return bool_to_yesno(artwork_patch.verify_property(""artwork"", ""same material as computer desk"")) # crop would include the computer desk so keep it in the query������������������������������������������������������取�����取������������������取����取������取�������取������������������取���������������������������������������������������������������取����取������������������������������������������������������������������������������������������������������取���������取���������取"
14298125,Who is playing Wii?," # assumes one person is playing Wii
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is playing Wii?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is playing Wii?"") # crop would include the Wii so keep it in the query�����������������取�������������������������������������������������������������取���取����������������������取����取����取���取���取������������������������������������������取��������取����取����取�����取�����取����取������取������取���取���������取���取����������������������������������������������������������������������������������������������������取���取����取���取���取���取�����取������取����取����取������������取"
9382689,What's the floor made of?," # returns the answer to ""What's the floor made of?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the floor made of?"") # returns the answer to ""What's the floor made of?""�������������������������������������取������������������������取�����������������������取��������取�����������������������������取����������������������������������������������������������取������取�����������������������取������取�����������������������������������������������������������������取���������������������������������������������������������取�����������������取���取��������������������������������������������������������������取"
12889614,Who is wearing the dress?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the dress?"")
    return person_patches[0].simple_query(""Who is wearing the dress?"") # crop would include the dress so keep it in the query���������取���������取��������取�������������������������������������������������������取����取�������������������������取���取�������取����取�����������������������������������取����������������取���������取����取����������取���取�����取���取�����取����取���取����������������������������������������������������������������������������������取������取���取���取���������取���取����取���取���取��������取������取"
15127108,Does the tea pot above the receipt look short and white?," # returns a boolean
    image_patch = ImagePatch(image)
    tea_pot_patches = image_patch.find(""tea pot"")
    # Question assumes only one tea pot patch
    if len(tea_pot_patches) == 0:
        # If no tea pot is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the tea pot above the receipt look short and white?""))
    tea_pot_patch = tea_pot_patches[0]
    receipt_patches = image_patch.find(""receipt"")
    # Question assumes only one receipt patch
    if len(receipt_patches) == 0:
        return bool_to_yesno(tea_pot_patch.verify_property(""tea pot"", ""short"") and tea_pot_patch.verify_property(""tea pot"", ""white""))
    receipt_patch = receipt_patches[0]
    if receipt_patch.vertical_center < tea_pot_patch.vertical_center:
        return bool_to_yesno(tea_pot_patch.verify_property(""tea pot"", ""short"") and tea_pot_patch.verify_property(""tea pot"", ""white""))
    else:
        return bool_to_yesno(not tea_pot_patch.verify_property(""tea pot"", ""short"") and tea_pot_patch.verify_property(""tea pot"", ""white"")) # if the tea pot is not short, it must be tall, so the answer is no if the receipt is above the tea pot and yes if the receipt is below the tea potніцип���������������取����取������������取�������������取������������������������������������取����取�����������������������������取��������������������������������������������取��������������取������取����取����������������取"
15632653,Which room is it?," # room is a property of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"") # crop would include the room so keep it in the query��������取���������取�����������������������������������������取�������������������������������������������������取������������������������������������������������������������取����取���������������取������取����������������取���������������������������������������������������������������取������取�����������������������������取�����������������������取����������������取����取���������������������������取����������取"
485962,Which kind of clothing is black?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query
    # If no clothing is black, pick the first clothing
    return clothing_patches[0].simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query�������������取��������������取�������������������������取����取����������������������������������������取�������������取������������������������������������������������取���������取��������������取��������取����取���������������������������������������������������������������������取�������������取���取�����取���取������取�����������������������取����取����取"
490992,Is the fence on the left side or on the right of the picture?," # image is the original image
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the fence on the left side or on the right of the picture?"")
    if fence_patches[0].left < image_patch.left:
        return ""left""
    else:
        return ""right"" ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the original image ‎# image is the overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
17133284,Do the mountains look rocky?," # returns a boolean
    image_patch = ImagePatch(image)
    mountain_patches = image_patch.find(""mountain"")
    # Question assumes only one mountain patch
    if len(mountain_patches) == 0:
        # If no mountain is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the mountains look rocky?""))
    return bool_to_yesno(mountain_patches[0].verify_property(""mountain"", ""rocky"")) # crop would include the mountain so keep it in the query���������取�������������������取�������������取������������������������������������取�����������������������������取���取���取���取�������取�������������������������������取��������������������������������������取����������������取�����������������������������������������������������������������������������������取�����������������取��������取�������������取����取�������取"
17573742,Is the woman to the right of the camera wearing a coat?," # assumes one camera and one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one woman and one camera patch
    if len(woman_patches) == 0 or len(camera_patches) == 0:
        # If no woman or camera is found, query the image directly
        return image_patch.simple_query(""Is the woman to the right of the camera wearing a coat?"")
    woman_patch = woman_patches[0]
    camera_patch = camera_patches[0]
    if woman_patch.horizontal_center > camera_patch.horizontal_center:
        return bool_to_yesno(woman_patch.verify_property(""woman"", ""coat""))
    return ""no"" # woman is not to the right of the camera, so she is not wearing a coatроничес���取���取�����������取����������������取����取�������������取������取�����������取������取����取����������������������������取�����取��������������������取���������������������取���取������取����取���取����������取��������������������������������������������������������������������取�������取���取����������������取����取�����取����取"
3395780,Is the vehicle to the left of the parking meter covered in rain?," # assumes one vehicle and one parking meter
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    parking_meter_patches = image_patch.find(""parking meter"")
    if len(vehicle_patches) == 0 or len(parking_meter_patches) == 0:
        return ""no""
    vehicle_patch = vehicle_patches[0]
    parking_meter_patch = parking_meter_patches[0]
    if vehicle_patch.horizontal_center < parking_meter_patch.horizontal_center:
        return bool_to_yesno(vehicle_patch.verify_property(""vehicle"", ""rain""))
    return ""no""������������取����������取���������������取��������������取��������������������������取���������������������������������������������������������������������������取�������取���������取���取������取������������������取��������������������������������������������������������������������������������取�������������取��������取�����取�������������������������取����取��������取"
1542668,Is there a black laptop or desk?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_laptop = image_patch.exists(""black laptop"")
    is_desk = image_patch.exists(""desk"")
    return bool_to_yesno(is_black_laptop or is_desk) # returns yes or noніцип������������取���������取������������取���取�����������������取��取�����������������������������������取�����取������������������������取����取�����取�������取����取��取��������取��������������������������������������������������取��������取����������取���取�����取���取����������������������������������������������������������������������������������������������取��������取���取��������取������取��������������取��������取�����取�������取������������取����取�����取�����取������取��������������������取�����������������������������������������������������取"
1655442,What type of food is to the right of the waffles that are to the right of the person?," # assumes only one person and one waffle
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What type of food is to the right of the waffles that are to the right of the person?"")
    person_patch = person_patches[0]
    waffle_patches = image_patch.find(""waffle"")
    # Question assumes only one waffle patch
    if len(waffle_patches) == 0:
        return image_patch.simple_query(""What type of food is to the right of the waffles that are to the right of the person?"")
    waffle_patch = waffle_patches[0]
    food_patches = image_patch.find(""food"")
    for food_patch in food_patches:
        if food_patch.horizontal_center > waffle_patch.horizontal_center and waffle_patch.horizontal_center > person_patch.horizontal_center:
            return food_patch.simple_query(""What type of food is to the right of the waffles that are to the right of the person?"")
    return image_patch.simple_query(""What type of food is to the right of the waffles that are to the right of the person?"") # if no food is found, query the image directly����������������������取�����取�����������取����������������������������������������取����取���������������������������������取������������������������������������������取�����取�����取�����取�������取��取�����������取��取�����������������������取"
395290,How large is the bag?," # returns the size of the bag
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""How large is the bag?"")
    return bag_patches[0].simple_query(""How large is the bag?"") # crop would include the bag so keep it in the query���������取������取���������������������取����取�������������取�������取�������������������取�������������������������������取��������������������������������������������������取���取��������������取������������取��取��������取����������������������������������������������������������������������取������������������������取����取���������������取���取���取�������������取����取���������取"
16138893,Are there both motorcycles and cars in this scene?," # returns yes or no
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_motorcycle and is_car) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes"
1462176,Who is wearing shorts?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing shorts?"")
    for person_patch in person_patches:
        is_wearing_shorts = (person_patch.simple_query(""Is the person wearing shorts?"") == ""yes"")
        if is_wearing_shorts:
            return person_patch.simple_query(""Who is wearing shorts?"") # crop would include the shorts so keep it in the query
    # If no person is wearing shorts, query the image directly
    return image_patch.simple_query(""Who is wearing shorts?"") # crop would include the shorts so keep it in the query�����������������������取�������������取�������������取�����取����取������������������取������取������������������������������取�����������������������������取������������������取�������取��������取�������取����取������取������取��������������������������������������������������������������������������������取������取��������取����取������取�����取��������取���������取���取�����取�����取�����取���������������������������取"
171032184,What hangs from the windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs from the windows?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly��������取�������������������取���������������������������������取�������������������取��������������������������������������取���取�������������������������������������������������������取�������取������取���������取���取�������������取���������������������������������������������������������������������������������取�����取�����������������取���取�������������取������取"
15962394,Are there both spoons and plates in the image?," # returns a boolean
    image_patch = ImagePatch(image)
    is_spoon = image_patch.exists(""spoon"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_spoon and is_plate)�������������取����������������������取�����取���取���������������������������������取������������������������������取�������������������������������������������������������������������取�������取������������������������������������������������������������������������������������取���������������������取�����取���取���取���������������������������取��������������������������������取"
16184773,What is in front of the giraffe that the tree is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the giraffe that the tree is behind of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly���������������取����取����������������������取�����取������������������������������取�������取��������������������������取���取���������取�������������������������������������取�����取���取���取�����取���取�����������取�����取�����取������取�������取���������������������������������������������������������������������������������������������取���取���取������������取��������取������取�����取������取"
8197176,What color is the jacket that the man wears?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color is the jacket that the man wears?"")
    man_patch = man_patches[0]
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        return ""no jacket""
    jacket_patch = jacket_patches[0]
    return jacket_patch.simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query����������������������取�����取������������取�������������取��������取���������������������取����取��������������������������������������������������������������取�������������取���取���取�����������������取����取����������������������������������������������������������������������������取����取������������取�������取����取�����������取����取��取��������取���取�������取�����取����取"
3440931,What are that pieces of furniture called?," # assumes only one piece of furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What are that pieces of furniture called?"")
    return furniture_patches[0].simple_query(""What are that pieces of furniture called?"") # crop would include the furniture so keep it in the query���������������������������取�����������取������������取�������取����������������������������取������������������������取����取������������������������������������������������取�������取������������取���取������取�����取������取���������������������������������������������������������������������������取������取���取��������������取��������取����������取������取����取����取�����取"
337924,What is the fruit that is to the left of the chair?," # assumes one chair and one fruit
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    fruit_patches = image_patch.find(""fruit"")
    if len(chair_patches) == 0 or len(fruit_patches) == 0:
        # If no chair or fruit is found, query the image directly
        return image_patch.simple_query(""What is the fruit that is to the left of the chair?"")
    chair_patch = chair_patches[0]
    fruit_patch = fruit_patches[0]
    if fruit_patch.horizontal_center < chair_patch.horizontal_center:
        return fruit_patch.simple_query(""What is the fruit that is to the left of the chair?"")
    return fruit_patch.simple_query(""What is the fruit that is to the right of the chair?"") # crop would include the chair so keep it in the query��������������取�����������取�����������取����取����取����������取����取���取��������������������取�������������������������������������取��������������������������������������取�����取����������������������取�����取����取��取������取�������������������������������������������������������������������������������取�������������������������取����取������取���取���������取�������取�����取�������取���������取"
16208211,What do you think are the bowls on?," # assumes one bowl patch
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""What do you think are the bowls on?"")
    return bowl_patches[0].simple_query(""What do you think are the bowls on?"") # crop would include the object so keep it in the query�����������������取������取��������������取���取����������������������取������������������取���������������������������������������������������������������������������������取���取�������取����取���取���取�����取������取����取����取�������取����取�����取������取�������������������������������������������������������������������������������������������取���������取������取��������取"
18330260,Is the sky above the trees open and clear?," # assumes one sky patch and one tree patch
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    tree_patches = image_patch.find(""tree"")
    if len(sky_patches) == 0 or len(tree_patches) == 0:
        # If no sky or tree is found, query the image directly
        return image_patch.simple_query(""Is the sky above the trees open and clear?"")
    sky_patch = sky_patches[0]
    tree_patch = tree_patches[0]
    if sky_patch.vertical_center < tree_patch.vertical_center:
        return bool_to_yesno(sky_patch.verify_property(""sky"", ""open and clear""))
    else:
        return ""no"" # sky is not above the trees, so the question doesn't make sense индивиду индивиду индивиду�������取�������取�����������取�������������������������������������������取���取����取����������������������������取������������������������������������������取����取������������取��������������取�����������������������������������������������������������取���������取������������取����������取����������������������������������������������������������������������������������������取"
14119691,Does the squirrel to the right of the stuffed dog look white?," # assumes one squirrel and one stuffed dog
    image_patch = ImagePatch(image)
    squirrel_patches = image_patch.find(""squirrel"")
    stuffed_dog_patches = image_patch.find(""stuffed dog"")
    # Question assumes only one squirrel and one stuffed dog patch
    if len(squirrel_patches) == 0 or len(stuffed_dog_patches) == 0:
        # If no squirrel or stuffed dog is found, query the image directly
        return image_patch.simple_query(""Does the squirrel to the right of the stuffed dog look white?"")
    squirrel_patch = squirrel_patches[0]
    stuffed_dog_patch = stuffed_dog_patches[0]
    if squirrel_patch.horizontal_center > stuffed_dog_patch.horizontal_center:
        return bool_to_yesno(squirrel_patch.verify_property(""squirrel"", ""white""))
    else:
        return ""no"" # squirrel is not to the right of the stuffed dog, so it cannot be whiteERCHANTABILITYIGNORED:initComponentsERCHANTABILITYIGNOREDMETHOD:initComponents������������������������������取�������������取�������取������������������������������������������取������������取��������������������������������取����������取�������取����取����������取�����������������������������������������������������������������������取������取���取����������������取����������取"
18437694,Does the clock to the right of the statue have gold color and tiny size?," # clock and statue are assumed to be in the image
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Does the clock to the right of the statue have gold color and tiny size?"")
    for clock_patch in clock_patches:
        if clock_patch.horizontal_center > image_patch.find(""statue"")[0].horizontal_center:
            return bool_to_yesno(clock_patch.verify_property(""clock"", ""gold"") and clock_patch.verify_property(""clock"", ""tiny""))
    return ""no"" # if no clock is to the right of the statue, return no
��取��������������������������������取���������������取���������������������取�������������������取�������������������������������������取�������取���取���取���������取���取����取���取�����������������������������������取�����取��������取�������������������取���取�����������取������取����取����取�������������������������������������������������������������取���������������������������取�������������取������取����取�����������取����取���取"
1252960,Where was the photo taken?," # returns a string describing the location
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the photo taken?"") # assumes the image contains a location-related object or scene udál��������取�����������������������������������������������取���������������������������������������������������取���������������������取�������������������������������取�������取����取���取����������������取�����������������取���取���������������������������������������������������������������������������������������������取���取����取���取����取���取�����取���取����取���取���取�������取������取����������������取�������������������������取�������取"
17454895,Is there a frisbee on the grass?," # assumes one frisbee and one grass patch
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    grass_patches = image_patch.find(""grass"")
    if len(frisbee_patches) == 0 or len(grass_patches) == 0:
        return ""no""
    frisbee_patch = frisbee_patches[0]
    grass_patch = grass_patches[0]
    if frisbee_patch.upper > grass_patch.lower:
        return ""yes""
    return ""no""����������������������������������取���取���取���������������取������������������������������取���������������������������������������������������������������������取��������������取����������取����取����������������������������取�������������������������������������������������取����取����������������������取������取����������取������������取���������取���������取"
13180513,Are there either cakes or containers in the photo?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_container = image_patch.exists(""container"")
    return bool_to_yesno(is_cake or is_container)��������������取����������取����取����������取�������������取�������取����������������取�������取��取�����������������������������取��������������������������������������������������取����������取����������取�����������������������������������������������������������������������������������������������������������������������������取����取���取����取����取����������取����取���取��������������取��������������������������������������������������取����������取��取"
479962,Are there black cars or motorcycles?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_car = image_patch.exists(""black car"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_black_car or is_motorcycle)�����������������������取�������������取�������������������取��������������������取���取������������������������������������������������������������������������������������������������取�������������������������取������取������������������������������������������������������取���������取���������������取������������������������取������������������取���取���取������������������������������������������������������������������������������������������������������������������������������������������������取��取"
19927240,Is the blue car behind or in front of the vehicle to the left of the police officer?," # assumes one police officer and one blue car
    image_patch = ImagePatch(image)
    police_officer_patches = image_patch.find(""police officer"")
    blue_car_patches = image_patch.find(""blue car"")
    # Question assumes only one police officer and one blue car patch
    if len(police_officer_patches) == 0 or len(blue_car_patches) == 0:
        # If no police officer or blue car is found, query the image directly
        return image_patch.simple_query(""Is the blue car behind or in front of the vehicle to the left of the police officer?"")
    police_officer_patch = police_officer_patches[0]
    blue_car_patch = blue_car_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        return image_patch.simple_query(""Is the blue car behind or in front of the vehicle to the left of the police officer?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < police_officer_patch.horizontal_center:
        if blue_car_patch.horizontal_center > vehicle_patch.horizontal_center:
            return ""behind""
        else:
            return ""in front of""
    else:
        if blue_car_patch.horizontal_center > vehicle_patch.horizontal_center:
            return ""in front of""
        else:
            return ""behind""�����取�������取��������������������������������取�������������������取�����取�������取����������������������取���取����取���取�������������������������������取�������取�������取��������������取���������������取�������取"
5785831,What is in the glass?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass?"") # crop would include the glass so keep it in the query��取�����取�����������������������������������������������取�������������������������������������取����������取�����������������������取�����取���������取����������������取���������������������������������������������取�������������取����取��������������取���������������取�������取�������������������取��������������������������������������������������������������取������������取�����������取���������取�������取�������取������������������������取���������������取"
19246241,Are there any brown benches or buckets?," # returns yes or no
    image_patch = ImagePatch(image)
    is_brown_bench = image_patch.exists(""brown bench"")
    is_bucket = image_patch.exists(""bucket"")
    return bool_to_yesno(is_brown_bench or is_bucket) ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or no ‎# returns yes or overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting ‎# overposting"
3243803,"Where in the picture is the spoon, on the right or on the left?"," # assumes one spoon patch
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""Where in the picture is the spoon, on the right or on the left?"")
    spoon_patch = spoon_patches[0]
    if spoon_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������取���������取���取������������������������������������������������取���取���取����取������������������������取����取�����������������������������������������������取�����������取������取������������取����������������取�����取����取����������������������������������������������������������取�����������取�����������取�������������取����取����������取�����������������取����取�������������������������取��������������������������取"
6952486,Does the shirt look white?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does the shirt look white?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""white"")) # crop would include the shirt so keep it in the query�����������������������取������������取���取���取��������������������取��������������������取���������������������������������取������取��������������������������������������取�����������������取�������取���取����取��������取�������取����������������取������������������������������������������������������������取���取������������������取���������取�����������取�����取����取"
17401425,Is there a bag that is not brown?," # returns yes or no
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Is there a bag that is not brown?"")
    for bag_patch in bag_patches:
        if not bag_patch.verify_property(""bag"", ""brown""):
            return ""yes""
    return ""no""�������������������取���取�����������������������������������取��������������取������取���������������������������取����取���取������������������������������������取�������取���������取�������取�����取������������取���取����������������������������������������������������������������������������������������������������取�����取������取������������������������取��取"
481240,"Which kind of furniture is large, the shelf or the cupboard?"," # assumes only one shelf and one cupboard
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    cupboard_patches = image_patch.find(""cupboard"")
    if len(shelf_patches) == 0 or len(cupboard_patches) == 0:
        # If no shelf or cupboard is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is large, the shelf or the cupboard?"")
    shelf_patch = shelf_patches[0]
    cupboard_patch = cupboard_patches[0]
    if shelf_patch.width > cupboard_patch.width:
        return ""shelf""
    else:
        return ""cupboard""�������������取���������取����������������������������取��������������������������取�������������������������取����取��������������������������������������������取���取���������取��������取�����取������������取������取�����取��取����取�����取�����取�������������������������������������������������������������������������������取���取������取���取�����取���������������������取���取����取"
8531943,Are there any screens or bags?," # returns yes or no
    image_patch = ImagePatch(image)
    is_screen = image_patch.exists(""screen"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_screen or is_bag)�����������������������取����������������取����������������������������������������取���������������������������������������������������������������������������������取���取������������取���取�������������������������������������������������������������������������������取��������取���取��������������取���������取�������取���������取�����取��������取"
1969545,What is she wearing?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What is she wearing?"")
    return person_patches[0].simple_query(""What is she wearing?"") # crop would include the person so keep it in the query�������������������������取�����������取�����������������������取������������������取�����取����������������������������取����取�����取���取������������������������������������������取��������取����取���取�������������取�����取��������������������������������������������������������������������������������取����取��������������������������������取�����取"
91045271,"Which appliance is not white, the freezer or the ice maker?"," # freezer or ice maker
    image_patch = ImagePatch(image)
    freezer_patches = image_patch.find(""freezer"")
    ice_maker_patches = image_patch.find(""ice maker"")
    # Question assumes only one freezer and one ice maker patch
    if len(freezer_patches) == 0 or len(ice_maker_patches) == 0:
        # If no freezer or ice maker is found, query the image directly
        return image_patch.simple_query(""Which appliance is not white, the freezer or the ice maker?"")
    freezer_patch = freezer_patches[0]
    ice_maker_patch = ice_maker_patches[0]
    if freezer_patch.verify_property(""freezer"", ""white""):
        return ice_maker_patch.simple_query(""Which appliance is not white, the freezer or the ice maker?"")
    else:
        return freezer_patch.simple_query(""Which appliance is not white, the freezer or the ice maker?"") # crop would include the freezer so keep it in the query������������������������������������取����取���取���������������取������������������������取������取������������������������取���取�����取����取��������������������������������������������取���������取���取�����取������取�������������取������������取��������������������������������������������������������������取�����取������取���取��������������取���取��������取�������������取"
1051870,Are there chairs or tables that are not green?," # returns yes or no
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_table = image_patch.exists(""table"")
    if is_chair or is_table:
        chairs_patches = image_patch.find(""chair"")
        tables_patches = image_patch.find(""table"")
        for chair_patch in chairs_patches:
            if not chair_patch.verify_property(""chair"", ""green""):
                return ""yes""
        for table_patch in tables_patches:
            if not table_patch.verify_property(""table"", ""green""):
                return ""yes""
    return ""no"" # if no chairs or tables are found, or all are green, return no
�����������取��������取��������������取����������������������������������取������������������������������取�����取�����������������������������������������������取�������取����������取�������取������取���取����������取��������������������������������������������������������������������������������������������取�����������取����取�������取"
1366363,Does the taxi have a different color than the truck?," # returns yes or no
    image_patch = ImagePatch(image)
    taxi_patches = image_patch.find(""taxi"")
    # Question assumes only one taxi patch
    if len(taxi_patches) == 0:
        # If no taxi is found, query the image directly
        return image_patch.simple_query(""Does the taxi have a different color than the truck?"")
    taxi_color = taxi_patches[0].simple_query(""What color is the taxi?"")
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        return ""no""
    truck_color = truck_patches[0].simple_query(""What color is the truck?"")
    return bool_to_yesno(taxi_color!= truck_color) # returns yes or noніцип������������取�������取�������������取��������������取����������������取���������������������������取���取���取��������取�����������������取����取���取����取���������取����������������������������������������������������取����������取����������取������取������取������������取������������������������������������������������������������������������������������������������取���取������取��������取�������取���������取����取"
5460839,In which part of the image is the dog?," # returns the part of the image where the dog is
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the dog?"")
    return ""left"" if dog_patches[0].horizontal_center < image_patch.horizontal_center else ""right"" # left or right
������������������������������������������������������������取�������取�����������取������������������������������������������������������������取��取�����取���取��������取�����取���取�������取��������取�����������������������������������������������������������������取�����取��������取������取������������������取������取���取���取���取���取�����取"
18899476,What type of vegetable is to the right of the rice that is on the plate?," # assumes one rice patch and one vegetable patch
    image_patch = ImagePatch(image)
    rice_patches = image_patch.find(""rice"")
    vegetable_patches = image_patch.find(""vegetable"")
    if len(rice_patches) == 0 or len(vegetable_patches) == 0:
        # If no rice or vegetable is found, query the image directly
        return image_patch.simple_query(""What type of vegetable is to the right of the rice that is on the plate?"")
    rice_patch = rice_patches[0]
    vegetable_patch = vegetable_patches[0]
    if vegetable_patch.horizontal_center > rice_patch.horizontal_center:
        return vegetable_patch.simple_query(""What type of vegetable is to the right of the rice that is on the plate?"")
    return rice_patch.simple_query(""What type of vegetable is to the right of the rice that is on the plate?"") # crop would include the rice so keep it in the query�����������������取���������取���取����������取����取�������������取������������������������取���������������������������������������������������������������������������取����������取���取������������������取�������取����取��������������������������������������������������������������������取�����������������取�����取����取�����������取���取�����取����取����取������取���取����取������取�����取"
8606903,What food item is not wide?," # assumes only one food item
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch.simple_query(""What food item is not wide?"")
    for food_patch in food_patches:
        if not food_patch.verify_property(""food"", ""wide""):
            return food_patch.simple_query(""What food item is not wide?"")
    # If no food is not wide, query the image directly
    return image_patch.simple_query(""What food item is not wide?"") # crop would include the food so keep it in the query��取����������������������取�����������������������������取���取��������������������取������������������������取�������������������������������������������取���������取�������������������������������������������������������������������取����������取�������������取����取��������取����取��������������������������������������������������������������������������取��������取�������取�����������������取����取���取����取������������取"
18394861,Are there any folding chairs or skateboards?," # returns yes or no
    image_patch = ImagePatch(image)
    is_folding_chair = image_patch.exists(""folding chair"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_folding_chair or is_skateboard)������取�����取����取����������������������������������������取��������������取����������������������������������������取�����������������������������������������������������取���取�����取���������取����������取���取����取���������������������������������������������������������������������������������取�����������������������取����������取���取���取������取������取�������取����取�����取���������取���取���取�������������取"
2327600,Is there an elephant near the pond?," # assumes one pond patch
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    if len(elephant_patches) == 0:
        return ""no""
    for elephant_patch in elephant_patches:
        if elephant_patch.simple_query(""Is the elephant near the pond?"") == ""yes"":
            return ""yes""
    return ""no""����������������������取�������������������������������取������������������������取��������������������������取���取�����取�����������������������������������������������������取��������取�����������������������������������������������������������������������������������������取�������取���取����������������������取�����������������������������������取"
1575941,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����取��������取��取��������取�������������������������取���������������取������取���取��������������������������取���������取������取������������������������������������取�������取�����取���������取�����������取��������������������������������������������������������������������������取������取�����取���取���取�����������取��������取������������������������������������������������������������������������������������������������������������������������������取������������取������������取�����������取���取�����取���取�����取�����取���取����������������������取����������取"
9725865,What is the color of the floor that the desk is on top of?," # assumes one desk and one floor
    image_patch = ImagePatch(image)
    desk_patches = image_patch.find(""desk"")
    floor_patches = image_patch.find(""floor"")
    if len(desk_patches) == 0 or len(floor_patches) == 0:
        # If no desk or floor is found, query the image directly
        return image_patch.simple_query(""What is the color of the floor that the desk is on top of?"")
    desk_patch = desk_patches[0]
    floor_patch = floor_patches[0]
    if desk_patch.vertical_center > floor_patch.vertical_center:
        return floor_patch.simple_query(""What is the color of the floor that the desk is on top of?"")
    else:
        return desk_patch.simple_query(""What is the color of the floor that the desk is on top of?"") # crop would include the floor so keep it in the query�������������������������������������������������������������������取���������取���取�������取���������������������������取���取�����������������������������������������取��取�����取���������取����������取�������������取���取�����取�����������������������������������������������������取��������������������取���取����������������取������取�������取�����������������取���������取"
16654241,Is the TV on the left or on the right?," # assumes one TV patch
    image_patch = ImagePatch(image)
    tv_patches = image_patch.find(""TV"")
    if len(tv_patches) == 0:
        # If no TV is found, query the image directly
        return image_patch.simple_query(""Is the TV on the left or on the right?"")
    tv_patch = tv_patches[0]
    if tv_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������������������������取��������������������������������������取���������������取��取������取�����取���取�����取���取�������������������������������������取���取����取������������取�����������取������������取������������������������������������������������������������������������������������������������取����取���取�������������������������������取"
18685233,Which kind of vehicle is to the left of the flags?," # assumes only one flag patch
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which kind of vehicle is to the left of the flags?"")
    for vehicle_patch in vehicle_patches:
        flag_patches = image_patch.find(""flag"")
        for flag_patch in flag_patches:
            if flag_patch.horizontal_center > vehicle_patch.horizontal_center:
                return vehicle_patch.simple_query(""Which kind of vehicle is to the left of the flags?"")
    return vehicle_patch.simple_query(""Which kind of vehicle is to the left of the flags?"") # if no flag is found, query the image directlyніцип������������������取������������取���取�������������取��取������������取������������������������������取������������������������取�������������������取��取�������������������������������������������������������取������取������取��������������取�����取�������取�����������������������������������������������������������������取�����取����取�����取���������取������������取����取���取����取�����取������������������������取"
9796068,Are there both a fence and a sheep in the picture?," # returns a boolean
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_sheep = image_patch.exists(""sheep"")
    return bool_to_yesno(is_fence and is_sheep) ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎# returns a boolean ‎#"
181002473,Do you see any blue blanket or towel?," # returns yes or no
    image_patch = ImagePatch(image)
    blue_patches = image_patch.find(""blue"")
    # Question assumes only one blue patch
    if len(blue_patches) == 0:
        # If no blue is found, query the image directly
        return image_patch.simple_query(""Do you see any blue blanket or towel?"")
    for blue_patch in blue_patches:
        if blue_patch.verify_property(""blue"", ""blanket"") or blue_patch.verify_property(""blue"", ""towel""):
            return ""yes""
    return ""no""�������������取���������������������������������������������������������������取��������������������������������������������������������������������������������������������������������������������������取���������������������������������取�����������取���������取�������������取���������取�����������取�����取����������������������������������取����取"
1110330,Is the pillow to the left of the frog cream colored or green?," # returns yes or no
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the left of the frog cream colored or green?"")
    for pillow_patch in pillow_patches:
        frog_patches = image_patch.find(""frog"")
        for frog_patch in frog_patches:
            if frog_patch.horizontal_center > pillow_patch.horizontal_center:
                return pillow_patch.best_text_match([""cream colored"", ""green""])
    return ""no"" # if no pillow is to the left of a frog, return no
����������取�����������取����������������������������取��������������取����������������������������������取�����取������������������������������������������取�����������取�����取�����取���取������������取�����������������������������������������������������������������������������取������取����������������取����取�����������取�����取������������������������������������������取"
511507,Is the antenna on the aircraft?," # assumes one antenna and one aircraft
    image_patch = ImagePatch(image)
    antenna_patches = image_patch.find(""antenna"")
    aircraft_patches = image_patch.find(""aircraft"")
    if len(antenna_patches) == 0 or len(aircraft_patches) == 0:
        return ""no""
    antenna_patch = antenna_patches[0]
    aircraft_patch = aircraft_patches[0]
    return bool_to_yesno(antenna_patch.horizontal_center > aircraft_patch.horizontal_center) # antenna is on the aircraft if it is to the right of itERCHANTABILITY: This function is not yet implemented and needs to be completed.
:-------------</��������取����取������������������������������������������取������������������������取���取����������取�������������������������������取����取�������取�����������������������������������������������������������������取���������������取�������������取����������取����������������������������������������������������������������取�������������������������取��������取�����������取���取�����取���取����取"
10464417,"In which part is the tent, the top or the bottom?"," # assumes only one tent patch
    image_patch = ImagePatch(image)
    tent_patches = image_patch.find(""tent"")
    if len(tent_patches) == 0:
        # If no tent is found, query the image directly
        return image_patch.simple_query(""In which part is the tent, the top or the bottom?"")
    if tent_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""����取�����取������������������������������������������������������������������������������������取�����取������������取���������������������������������取����������������取�������������������������������������������������������������������������������取�������取������取������取����取����������������取������������������������������������������������������������������������������取���取�������������������������������������������������取������取"
10816730,Is the tree in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree in front of the building?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�������������������������取�������������取�������������������取���取���取������������������������������������������������取����������取����������������������������������������������取�����取�����取�����取������取��������取�������������取���取�������������������������������������������������������������������取������������取���������������������取��������取���取���取�������取���取���取���取���取����取������取���������������取"
18766115,Who is walking?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is walking?"")
    return person_patches[0].simple_query(""Who is walking?"") # crop would include the person so keep it in the query���������������取�������������取�������������取�����������������������������������取������������������������������取���������������������������������������������������������������������������������取���取���������������������������������������������������������������������������������������取��������������取������������������������取"
10625851,Are there either any fruits or plates in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fruit = image_patch.exists(""fruit"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_fruit or is_plate)�����������������取����������取��������������������������取���������������������������������������������������������������������������������������������取�������������取�������������取���取���������������������������������������������������������������������������取���取�����取���取�������������������取��������������������������取�������取��������������取�����取�����取������������������������������������������������������������������������������������������������������������������������������������取"
71018537,Is the person wearing a coat?," # returns yes or no
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person wearing a coat?"")
    return bool_to_yesno(person_patches[0].verify_property(""person"", ""coat"")) # crop would include the coat so keep it in the query�����取�������������������������������取�������������取��取�����������������������������取������取����������������������取�����������������������������������������取���取����取���取�����取������������取������取�����取������������������������������������������������������������������������������������������������取������取�����取����取���������取��������取�������取"
4194722,Is the man wearing a helmet?," # returns a boolean
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Is the man wearing a helmet?""))
    return man_patches[0].verify_property(""man"", ""wearing a helmet"") # crop would include the helmet so keep it in the query���������������取������������������������������������������取���������������������取���������������������������������取���取�����������������������������������������取������������取����取����取�����������������取�����取����������������������������������������������������������������������������取����取������������������������取������������取"
414248,"What animal are the women near the ocean riding, a pig or a horse?"," # assumes one woman and one animal
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one woman and one animal patch
    if len(woman_patches) == 0 or len(animal_patches) == 0:
        # If no woman or animal is found, query the image directly
        return image_patch.simple_query(""What animal are the women near the ocean riding, a pig or a horse?"")
    woman_patch = woman_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > woman_patch.horizontal_center:
        return animal_patch.best_text_match([""pig"", ""horse""])
    else:
        return animal_patch.best_text_match([""horse"", ""pig""]) # assumes one animal patch, so keep it in the queryніцип��������������������������������取������������取������取����������������������������������������取���������������������������取���������取��������取�����������������������������������������������������取������取���取�����取������取����取�����������取��������������������������������������������������������������取�����������取�����取������取�������������������������取������取���������取����取�������取"
683094,Who is wearing the shirt?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing the shirt?"")
    return person_patches[0].simple_query(""Who is wearing the shirt?"") # crop would include the shirt so keep it in the query�������������������������������������������������������取��������������������������取���������取��������������取����������取����������������������������������������������取������取���取��������������������取���������������������������������������������������������������������取�����������������������取�����������取����������取���������取����取"
12140603,What device is to the left of the headphones?," # assumes only one device and one headphones patch
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    headphones_patches = image_patch.find(""headphones"")
    if len(device_patches) == 0 or len(headphones_patches) == 0:
        # If no device or headphones are found, query the image directly
        return image_patch.simple_query(""What device is to the left of the headphones?"")
    device_patch = device_patches[0]
    headphones_patch = headphones_patches[0]
    if device_patch.horizontal_center < headphones_patch.horizontal_center:
        return device_patch.simple_query(""What device is to the left of the headphones?"")
    return headphones_patch.simple_query(""What device is to the left of the headphones?"") # crop would include the headphones so keep it in the query����取�������������������取��������������取�������������������������������取�������取������������������������取��������取�������������������������������������������������取���取�������������取��取���������������������������������������������������������������������取����取����������������������取���取"
5575209,The flowers are where?," # assumes only one flower patch
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""The flowers are where?"")
    flower_patch = flower_patches[0]
    return flower_patch.simple_query(""The flowers are where?"") # crop would include the flowers so keep it in the query��������������������������������������取��������������取�����取�����取��������������������取�������������������������������������������������������������������������������取�����取��取�����取������取�������取���取�����取�����������������������������������������������������������������������取��������������������取���取���������取�����������取����取"
8773829,Which kind of furniture is made of wood?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is made of wood?"")
    furniture_patch = furniture_patches[0]
    return furniture_patch.simple_query(""Which kind of furniture is made of wood?"") # crop would include the wood so keep it in the query�������������������������取��������������取������������������取��������������������取����取���取�����取������取�����������������取�����取��������������������������������������������������������取��������取�����取�����������取���������������取����取�����取�����������������������������������������������������������������������������������取�������取������取����取��������取�������取�������������取������������������取���������������������取"
12636428,Which kind of animal is black?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Which kind of animal is black?"")
    return animal_patches[0].simple_query(""Which kind of animal is black?"") # crop would include the color so keep it in the query�����取������取��������������������������������������������������������������取����取��������取���������������������取�������������������������������������������������取����������������������������������������������������������������������������������������������������������取�������������������取������取�����������取"
1020584,What animals is the car behind of?," # assumes only one car patch
    image_patch = ImagePatch(image)
    car_patch = image_patch.find(""car"")[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animals is the car behind of?"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center > car_patch.horizontal_center:
            return animal_patch.simple_query(""What animals is the car behind of?"")
    return ""no"" # if no animal is behind the car, return no
��������������������取������������取����������������取����取����取��������������取�����取����������������������取����������取�����取������������������������������������取��������取�������取���取�������取��������������取������������������������������������������������������������������取���������取����取����������������取����������取�����取"
11879418,The man is standing on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is standing on what?"") # crop would include the man so keep it in the query���取��取�����������取����������取�������������������������取����取����������������取���取��������������������取�������取�������取�����������������������������������取������������������������������������������������������������������������取���取�����取����������������取����������取����取���取����取���取������������������������������������������������������������������������������������������取���������取����������������������取�������������������取�����取��������取����取����������取���取�������取�����������������取������������������������取��������取������取�����取"
12334288,What device is to the left of the cabinet?," # assumes one device and one cabinet
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    cabinet_patches = image_patch.find(""cabinet"")
    if len(device_patches) == 0 or len(cabinet_patches) == 0:
        # If no device or cabinet is found, query the image directly
        return image_patch.simple_query(""What device is to the left of the cabinet?"")
    device_patch = device_patches[0]
    cabinet_patch = cabinet_patches[0]
    if device_patch.horizontal_center < cabinet_patch.horizontal_center:
        return device_patch.simple_query(""What device is to the left of the cabinet?"")
    return cabinet_patch.simple_query(""What device is to the left of the cabinet?"") # crop would include the device so keep it in the query����������������������取����������������取���������������取�����������������������������������������������取������������取��������������������������������������������取���取���取�����������取���取���������������取��取�����������������������������������������������������������������取����取����取����取������取�����������取���������取��������取������取���取"
691610,Is the monitor to the left of a book?," # assumes only one monitor and one book
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    book_patches = image_patch.find(""book"")
    if len(monitor_patches) == 0 or len(book_patches) == 0:
        return ""no""
    monitor_patch = monitor_patches[0]
    book_patch = book_patches[0]
    return bool_to_yesno(monitor_patch.horizontal_center < book_patch.horizontal_center) # left is less than right, so less than means to the left ofніцип�������取�����������������������取�������������取����������������取����取������������������������������������������������������取����������取�������������������������������������������������������取�����������取���������������取��������取���取������取������取��������������������������������������������������������������������������������取����取���������������取����取���������取���取���取�����取����取������取�����取�����取�����取�����������取���取����取������������������取����取��取"
7552714,Is the color of the jacket black?," # returns a boolean
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Is the color of the jacket black?"")
    return jacket_patches[0].verify_property(""jacket"", ""black"") # crop would include the jacket so keep it in the query���������������������������������������取�������������������������������������������������������������������������取�������������������������������������������������������取�������取���������������������������������������������������������������������������������取�����取��������取�����取������������������取����取�������取����������取"
8492422,Is the man to the left of a boy?," # assumes one man and one boy
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    boy_patches = image_patch.find(""boy"")
    if len(man_patches) == 0 or len(boy_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    boy_patch = boy_patches[0]
    return bool_to_yesno(man_patch.horizontal_center < boy_patch.horizontal_center) # left is less than right, so less than means to the left ofturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
13248061,What type of device is to the left of the keyboard in the bottom of the image?," # assumes only one device and one keyboard
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one device and one keyboard patch
    if len(device_patches) == 0 or len(keyboard_patches) == 0:
        # If no device or keyboard is found, query the image directly
        return image_patch.simple_query(""What type of device is to the left of the keyboard in the bottom of the image?"")
    device_patch = device_patches[0]
    keyboard_patch = keyboard_patches[0]
    if device_patch.horizontal_center < keyboard_patch.horizontal_center and device_patch.vertical_center > image_patch.vertical_center:
        return device_patch.simple_query(""What type of device is to the left of the keyboard in the bottom of the image?"")
    return ""no"" # if no device is to the left of the keyboard in the bottom of the image, return noreibungreibungreibungreibungreibungerusform�������������取����������������������取���取���������������取�������������������������������������������取���取�������取�������������������������������������������取�������取���������取���取���������������取������取����������������������������������������������������取������取�����取���取��������取���取���取���取���取���取��������取����������取����取���取�����取�����取���取����������取����取"
18252454,What is common to the roof and the sky?," # returns a string
    image_patch = ImagePatch(image)
    roof_patches = image_patch.find(""roof"")
    # Question assumes only one roof patch
    if len(roof_patches) == 0:
        # If no roof is found, query the image directly
        return image_patch.simple_query(""What is common to the roof and the sky?"")
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        return image_patch.simple_query(""What is common to the roof and the sky?"")
    return roof_patches[0].best_text_match([""color"", ""shape"", ""material""]) # crop would include the roof and the sky, so keep it in the query���������取���������������������������取����取����������������取������������������������取����取�����������������������������取������取�������������������������������������取��������������������������取��������取�������������������取�����������������������������������������������������������������取�������取��������������取�������取����取��取����取������������取���������������取���取���取������取���������������取"
14443687,What do the cat and the book have in common?," # assumes only one cat and one book
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    book_patches = image_patch.find(""book"")
    # Question assumes only one cat and one book patch
    if len(cat_patches) == 0 or len(book_patches) == 0:
        # If no cat or book is found, query the image directly
        return image_patch.simple_query(""What do the cat and the book have in common?"")
    cat_patch = cat_patches[0]
    book_patch = book_patches[0]
    return cat_patch.simple_query(""What do the cat and the book have in common?"") # crop would include the book so keep it in the query������������������������������������取��������������取����取�������取����������������取���取����取�������������������������取���取��������取������取������������������������������取����取��������������取�����������������取�����取�������取�������������取�����取���������������������������������������������������������������������������取����取�������取����取�����������取�������取��������取����取����取�������取"
14571335,Who is wearing trousers?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing trousers?"")
    return person_patches[0].simple_query(""Who is wearing trousers?"") # crop would include the trousers so keep it in the query���������������取�������������取��������取����取�������������������取����取�������������������取������������������������取���������取���������������������������������������取���������������取���取��������取����取������取����取���������取������������取���������������������������������������������������������������������������取��������������取����取���取����取���取����������取���������取"
474885,Who wears a cap?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who wears a cap?"")
    person_patch = person_patches[0]
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        return ""no""
    cap_patch = cap_patches[0]
    return person_patch.simple_query(""Who wears a cap?"") # crop would include the cap so keep it in the query������������取���������������������������������������取���������������������取���取����取��������取������������������������取����取������������������������������������������������取���取����取�����取��������������������取���������取����取�������������取�������取���������������������������������������������������������������������������������取��������取�����������������取�������取����取���取�����取"
141013015,"What color is the toilet, brown or white?"," # assumes only one toilet patch
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""What color is the toilet, brown or white?"")
    return toilet_patches[0].best_text_match([""brown"", ""white""]) # crop would include the color so keep it in the query��取�������取���������������取����取������取�������������������取�����������������������������������������取�����取���取��������������������������取�������������取���取����������������������������������������������������取��������������������取���取������取�����������������取���取���取������������取�����������������������������������������������������������������������������取������������取���������取������取����取����取��������取�����取������������取����������取�����取��������������取���取������������取���取��������取"
5515816,On which side of the image is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""������������取��������������������������������������������������������取���取������������������������取�����������取����������������������������������������������������取����������������������������������������������������������������������������������������������������取�������������取������取����������������������������������������������������������������������������������������������������������������������������������������取����取"
16774696,What is the surfer wearing?," # returns the answer to ""What is the surfer wearing?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the surfer wearing?"") # crop would include the surfer so keep it in the query��������������取����������������取�����������取���取�����������������������������������������������������������������取�����������������������������������������������������������������取����取������取������取����取������������取����取����������������������������������������������������������������������������������取���取�����������������������������取���取����������取���取�����取������������取���取"
13701956,Is there any grass or sand that is not dry?," # returns yes or no
    image_patch = ImagePatch(image)
    is_grass = image_patch.exists(""grass"")
    is_sand = image_patch.exists(""sand"")
    if is_grass or is_sand:
        grass_patches = image_patch.find(""grass"")
        sand_patches = image_patch.find(""sand"")
        for grass_patch in grass_patches:
            if not grass_patch.verify_property(""grass"", ""dry""):
                return ""yes""
        for sand_patch in sand_patches:
            if not sand_patch.verify_property(""sand"", ""dry""):
                return ""yes""
    return ""no""������������������������������������������������������������������������取��取���������������取��取����������������取��������������������������������������������������取������取��������������������������������������������������������������������������������������取���取�������取��������������������������取���取"
11606870,Is there a cow or a zebra in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cow = image_patch.exists(""cow"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_cow or is_zebra)������取����������取��������取���取���������������������������取�����������������������取�����������取���������������������������取����������������������������������������������取��������������取��������取���������取�����取��������������������������������������������������������������������������������������������������������取��������������������取��������取����取����取������取�����������取�������取"
1589297,Does the fire hydrant look modern?," # returns yes or no
    image_patch = ImagePatch(image)
    fire_hydrant_patches = image_patch.find(""fire hydrant"")
    # Question assumes only one fire hydrant patch
    if len(fire_hydrant_patches) == 0:
        # If no fire hydrant is found, query the image directly
        return image_patch.simple_query(""Does the fire hydrant look modern?"")
    return bool_to_yesno(fire_hydrant_patches[0].verify_property(""fire hydrant"", ""modern"")) # crop would include the fire hydrant so keep it in the query�������������取������������取��������������取������������������取���取���������������������������������������������������������������������������������������������取���������������取����������取�������取���取�����取������取������取����取����������������������������������������������������������������������������取���取���������������取�������取���取���������取���取���取"
942308,Is the cup empty or full?," # returns yes or no
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""Is the cup empty or full?"")
    return bool_to_yesno(cup_patches[0].verify_property(""cup"", ""empty"")) # crop would include the cup so keep it in the query�������������������������������������取������������������取���取���取�����取���������������������������������������������取���取���取�����取��������������������������������������������������取���取����������取����取����������取������������������������������������������������������������������������������取����������������������������取"
15815976,Is the woman wearing a scarf?," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman wearing a scarf?"")
    woman_patch = woman_patches[0]
    return bool_to_yesno(woman_patch.verify_property(""woman"", ""scarf"")) # crop would include the scarf so keep it in the query���取����取�������������������取���������������������������取����取�����取����������������取���������取���取�����������������������取���������取���������������������������������取��������取������取��������取�����取�������取����取�����取�������������������������������������������������������������������������取������������取���取��������取����取���取���取����取�����取�����取��������������取����取�����������������������������������������������������取���������������������取������取"
3193231,Do you see either parking meters or brooms in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_parking_meter = image_patch.exists(""parking meter"")
    is_broom = image_patch.exists(""broom"")
    return bool_to_yesno(is_parking_meter or is_broom)��������取���取�������������取�����������������������������取���������������������取���������������������������取��取������取�����������������������������������������������������������������取���取���取���取���取�����取������取�������取���������������������������������������������������������������������������������������������取����������取����������������������取�����������取���������������取��������取�����取�������������������取"
314218,Is the sign in front of the bridge small and white?," # returns yes or no
    image_patch = ImagePatch(image)
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch.simple_query(""Is the sign in front of the bridge small and white?"")
    sign_patch = sign_patches[0]
    is_small = sign_patch.simple_query(""Is the sign small?"")
    is_white = sign_patch.simple_query(""Is the sign white?"")
    return bool_to_yesno(is_small and is_white) # returns yes or noніцип��取���������������取������������������������������������������������������������取������取���取��������������������������取�������������������取����������������������������������������������������������������������������������取����������������������������������������������������������������取�����取���取�������取������取�����������取���������取����������取���取"
18130465,Does the umbrella that is not dry look orange and open?," # assumes one umbrella patch
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""Does the umbrella that is not dry look orange and open?"")
    umbrella_patch = umbrella_patches[0]
    is_not_dry = umbrella_patch.simple_query(""Is the umbrella not dry?"")
    is_orange = umbrella_patch.simple_query(""Does the umbrella look orange?"")
    is_open = umbrella_patch.simple_query(""Is the umbrella open?"")
    return bool_to_yesno(is_not_dry and is_orange and is_open) # crop would include the umbrella so keep it in the query�������������������������取������������取����取�������������������取����������������取������������������������������取�����取���������取�������������������������������������取���������������取���取������取��������取�����������������取�����������������������������������������������������������������取�����������������������������取������取���取�����取����������取����������������������������������取"
7920817,What's in the paper?," # paper is a container
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the paper?"") # paper is a container, so ask directlyніцип����������取��������������������取���取���������������取����取�������������取�������取����������������������取����������������������������取����������取�������������������������������������������������������������取������������取����取����������������取����取������������������������������������������������������������������������������������取�����������取���取���������取��������取���取��������取���取�����������取������取�����取���取�����������取����取��������������������取"
18167292,What is on the bun in the top?," # assumes only one bun
    image_patch = ImagePatch(image)
    bun_patches = image_patch.find(""bun"")
    # Question assumes only one bun patch
    if len(bun_patches) == 0:
        # If no bun is found, query the image directly
        return image_patch.simple_query(""What is on the bun in the top?"")
    return bun_patches[0].simple_query(""What is on the bun in the top?"") # crop would include the bun so keep it in the query�����������������������取�������������������������������������������������������取���取��������������������������取���取����取�����取������������������������������������������取���取����取������������取�������取�����取����取������取���������取���������������������������������������������������������������������取����取���取���������������������取������取�����取���取�������取����������������取����取"
16929928,What is the fence made of?," # assumes one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What is the fence made of?"")
    return fence_patches[0].simple_query(""What is the fence made of?"") # crop would include the fence so keep it in the query�������������������������������������������������������取���������������������取�������������������������取�����������������取���������������������������������������取�����取���取�����������取����������������取�������取�������������������������������������������������������������取�����������������取��������������������取�������������������取����取����取��������取�����������������������������������������������������������������������������������取��取"
14113312,Is the woman to the left or to the right of the lady?," # assumes one woman and one lady
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    lady_patches = image_patch.find(""lady"")
    if len(woman_patches) == 0 or len(lady_patches) == 0:
        # If no woman or lady is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the lady?"")
    woman_patch = woman_patches[0]
    lady_patch = lady_patches[0]
    if woman_patch.horizontal_center < lady_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������取��������������������������������������������������取���取���取���������������������������取����取���������������������������������������������������取���取����取�����取���取��������取��������������������取����取�����取�����������������������������������������������������������������������取�������取����取���取���取������取����取���������������������������取���������取"
17993299,Is the horse to the left of a car?," # assumes one horse and one car
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    car_patches = image_patch.find(""car"")
    if len(horse_patches) == 0 or len(car_patches) == 0:
        return ""no""
    horse_patch = horse_patches[0]
    car_patch = car_patches[0]
    return bool_to_yesno(horse_patch.horizontal_center < car_patch.horizontal_center) # assumes one horse and one carturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
8717022,Is the small animal to the left of the vehicle that looks silver?," # assumes one vehicle patch
    image_patch = ImagePatch(image)
    small_animal_patches = image_patch.find(""small animal"")
    # Question assumes only one small animal patch
    if len(small_animal_patches) == 0:
        # If no small animal is found, query the image directly
        return image_patch.simple_query(""Is the small animal to the left of the vehicle that looks silver?"")
    for small_animal_patch in small_animal_patches:
        vehicle_patches = image_patch.find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch.simple_query(""Does the vehicle look silver?"") == ""yes"":
                if small_animal_patch.horizontal_center < vehicle_patch.horizontal_center:
                    return ""yes""
    return ""no""����取�����取������������取���取��������取����取�������������取��������������������取�������取�����������������������取�����取�����取������������������������������������������取�������取����������取�������取����取�����������������������取��������������������������������������������������������������������取�����取����������取����������取�����������取"
2998707,Which color is the chair that is on the right?," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which color is the chair that is on the right?"")
    chair_patch = chair_patches[0]
    return chair_patch.simple_query(""Which color is the chair that is on the right?"") # crop would include the chair so keep it in the query�����������������������取������取���������取�������������������取�����������������������������������������������������������取�����������������������������������������������取��取�����取�����������������取����取��������������������取��������������������������������������������������������������取����取���取�������������������取�������取�����取����������取"
171017786,Do you see any cups to the left of the monitor?," # assumes one monitor patch
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch.simple_query(""Do you see any cups to the left of the monitor?"")
    monitor_patch = monitor_patches[0]
    cup_patches = image_patch.find(""cup"")
    for cup_patch in cup_patches:
        if cup_patch.horizontal_center < monitor_patch.horizontal_center:
            return ""yes""
    return ""no""���������������������������������取����������������取����取�����������������������������������������取�����取��������������������������������������������取��������取������取��������取������取�������取����������������������������������������������������������������取������������取���取���取���取����������������������������取�����取��������取"
2220068,Is the girl to the right or to the left of the glasses the man is wearing?," # assumes one man and one girl
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the girl to the right or to the left of the glasses the man is wearing?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        return ""no""
    girl_patch = girl_patches[0]
    if girl_patch.horizontal_center > man_patch.horizontal_center and girl_patch.horizontal_center > glasses_patch.horizontal_center:
        return ""right""
    elif girl_patch.horizontal_center < man_patch.horizontal_center and girl_patch.horizontal_center < glasses_patch.horizontal_center:
        return ""left""
    else:
        return ""no"" # girl is in the same horizontal position as the man or the glasses, so it's not to the right or left of the glasses the man is wearingERCHANTABILITY: this function is not yet implementedERCHANTABILITYERCHANTABILITY�������������取���取���������������������������������������取�������������������取����取���取�����取���取���取��取��取��取����������������������������������������������������������取����������取�������������取���取���取��������������������取��取"
1941568,What animal is in the water?," # assumes only one animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is in the water?"")
    return animal_patches[0].simple_query(""What animal is in the water?"") # crop would include the water so keep it in the query�����������������������取����������������������������������取����取��������������������������������������������取������取��������������������������������������������������������������������取��������取���取�������取��������������������������������������������������������取�������取����������������取����������取��������取�����取���取������取����取������取"
17577787,Does the man's hair look short and white?," # returns a boolean
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the man's hair look short and white?""))
    man_patch = man_patches[0]
    return bool_to_yesno(man_patch.verify_property(""man"", ""short white hair"")) # crop would include the hair so keep it in the query���������取��取�����取�������������������������������������������取����������������������������取��������������������������取������取����������������������������������������������������取��������取��������������取�����取�������取������取�����取���������������������������������������������������������������������������������������������取�������������������取��������取���������取"
6711650,Are there chairs to the left of the bottle the toilet is to the right of?," # bottle and toilet are assumed to be in the same image
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Are there chairs to the left of the bottle the toilet is to the right of?"")
    bottle_patch = bottle_patches[0]
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        return ""no""
    toilet_patch = toilet_patches[0]
    chair_patches = image_patch.find(""chair"")
    for chair_patch in chair_patches:
        if chair_patch.horizontal_center < bottle_patch.horizontal_center and toilet_patch.horizontal_center < chair_patch.horizontal_center:
            return ""yes""
    return ""no""�����取��������取�����������������������������������取���������������������������������������������取�����取���取���取�������������������������������������������取������取������取�����������取������取���������取��������������������������������������������������������������取������取���取�����������取��������������取���取������取�����取�������取����取�����取�����������������取��������取"
9825336,Which kind of furniture is the mat lying on?," # mat is a type of furniture
    image_patch = ImagePatch(image)
    mat_patches = image_patch.find(""mat"")
    # Question assumes only one mat patch
    if len(mat_patches) == 0:
        # If no mat is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is the mat lying on?"")
    return mat_patches[0].simple_query(""Which kind of furniture is the mat lying on?"") # crop would include the mat so keep it in the query��������������取������������������������取���取�����������������取����������������������取���������������������������������������������������������������������������取��取����������������取��������取����取���取����取���取���������������������������������������������������������������������������������取����取������������取���������������������������取����取�����取�����������������������������������取�����取"
11222427,Do you see fences or elephants?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence or is_elephant)����取�����取������取�����������������������������������取����������������������取���取��������������������取�������取����取���������������������������������������������������取�����取���取��������������取�����������������������������������������������������������������������������������取��������������������取�������取���取����取�����������取���������������������������������������������������������������������������������������������������������������������������������������������取�������取���������������������������取"
1233009,"What kind of furniture is not white, the entertainment center or the bed?"," # assumes only one entertainment center and one bed
    image_patch = ImagePatch(image)
    entertainment_center_patches = image_patch.find(""entertainment center"")
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one entertainment center and one bed patch
    if len(entertainment_center_patches) == 0 or len(bed_patches) == 0:
        # If no entertainment center or bed is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is not white, the entertainment center or the bed?"")
    entertainment_center_patch = entertainment_center_patches[0]
    bed_patch = bed_patches[0]
    if entertainment_center_patch.verify_property(""entertainment center"", ""white"") and bed_patch.verify_property(""bed"", ""white""):
        return image_patch.simple_query(""What kind of furniture is not white, the entertainment center or the bed?"")
    return image_patch.simple_query(""What kind of furniture is not white, the entertainment center or the bed?"") # crop would include the color so keep it in the query����������������������取���取���������������取������������������取��������������������取�������取���������������������������取��取�������取����������������������������������������取����取���取������������取���������������������������������������������������������������������������������取������������������取�����取����取���取���取�����取�������取�����取���取�����取"
1152020,Do you see either any plate or tomato that are red?," # returns yes or no
    image_patch = ImagePatch(image)
    is_plate_red = image_patch.exists(""plate"") and image_patch.verify_property(""plate"", ""red"")
    is_tomato_red = image_patch.exists(""tomato"") and image_patch.verify_property(""tomato"", ""red"")
    return bool_to_yesno(is_plate_red or is_tomato_red) # returns yes or noніцип�����������取���������取���取���������������������������������������������������������������取�����取����������取��������������������取�������取�������取�����取�������������������������������������������������������取������������������������������取�����取�����������取���������������������������������������������������������������������������������������������������取������������������������������������取����取������取����取����������������取����������取"
8961520,Who is surfing?," # assumes one person is surfing
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is surfing?"")
    person_patch = person_patches[0]
    return person_patch.simple_query(""Who is surfing?"") # crop would include the person so keep it in the query��������������������������取������������取�������������取��������取������������������取��������������������������������取����取����取���������������������������������������������取������������取������取����取����取����取�����取����������������取����������������������������������������������������������������������������������取������取������取��������������取����取��������取������取�����取�������������取"
18106780,Which room is it?," # room is a property of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"") # room is a property of the image, so ask directlyніцип����������取��取����������取��������������取����������取����取�������������取��������取����取����������������取�������取�������������������������������取����������������������������取�������������取��取�������������������������������������������取������取���取�������������取����������������������������������������������������������������������������������������取�����������������������取����取��������������������取�������取���取���������������取������������取���������取����������取������������������������������������������取����取����取������取����取"
1892692,What color do you think the bowl that is to the right of the person is?," # assumes one person and one bowl
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What color do you think the bowl that is to the right of the person is?"")
    person_patch = person_patches[0]
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        return ""no""
    for bowl_patch in bowl_patches:
        if bowl_patch.horizontal_center > person_patch.horizontal_center:
            return bowl_patch.simple_query(""What color is the bowl?"")
    return ""no"" # if no bowl is to the right of the person, return no
���������取�����取�����取������������取�������������取�����取��������������取���取���取�����取���取�������������������������������������������������������������������������取���取�����������取���������取��������������������������������������������������������������������������������������取���取�������������������������取������������取����取�����������������������取����取����取"
6952082,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query���������取����������������取��������������取�����取��取����������������������������������取������取�������������������������������������取�����������������������������������������取������������������������取������取��������取���������������取�������������������������������������������������������������取�������������������取������取������取���取�����������取����取"
3768067,What color is the pot the statue is to the right of?," # assumes one pot and one statue
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    statue_patches = image_patch.find(""statue"")
    if len(pot_patches) == 0 or len(statue_patches) == 0:
        # If no pot or statue is found, query the image directly
        return image_patch.simple_query(""What color is the pot the statue is to the right of?"")
    pot_patch = pot_patches[0]
    statue_patch = statue_patches[0]
    if statue_patch.horizontal_center > pot_patch.horizontal_center:
        return pot_patch.simple_query(""What color is the pot?"")
    else:
        return pot_patch.simple_query(""What color is the pot?"") # crop would include the statue so keep it in the query����������������������������取����������取�����������������取���取��������������������取�������������������������������������������������������������������������������取������取������取����取���������取����������������������������������������������������������������������������������取�����取������������取���取���取����取�������取��������取���取"
17866761,Is the clear glass on the shelf of the table?," # assumes one table and one shelf
    image_patch = ImagePatch(image)
    clear_glass_patches = image_patch.find(""clear glass"")
    # Question assumes only one clear glass patch
    if len(clear_glass_patches) == 0:
        # If no clear glass is found, query the image directly
        return image_patch.simple_query(""Is the clear glass on the shelf of the table?"")
    clear_glass_patch = clear_glass_patches[0]
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        return ""no""
    shelf_patch = shelf_patches[0]
    return bool_to_yesno(clear_glass_patch.left >= shelf_patch.left and clear_glass_patch.right <= shelf_patch.right) # crop would include the shelf so keep it in the query������取�����������������������������������������������取������������������������取�����取���取��������������������������������������������������������������������������������������������取������������������������������取������������������������������������������������������������取��������������取����������������取�����取����������������������取"
798020,Does the skirt look black or yellow?," # returns yes or no
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Does the skirt look black or yellow?"")
    return skirt_patches[0].best_text_match([""black"", ""yellow""]) # crop would include the color so keep it in the query���������取���������������������������取������������������������取���������������������取���取����取����������������������取���������������������������������������������取����������������������取�������取���取���������������������取������取������������������������������������������������������������������取�����������取�����取�������������取����������取���������������取��取������取���取"
828981,How old is he?," # assumes the person is the only person in the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""How old is he?"")
    return person_patches[0].simple_query(""How old is he?"") # crop would include the person so keep it in the query�����������������取������取��������������取�����取�������������������取����������������取����������取������������������������������取������������������������������������������取������取���取���取������取���������取����取�������取��������������������������������������������������������������������������������������取���取���取������������������取�����取�������������������������������取"
7236463,Of what color is the book?," # returns the color of the book
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Of what color is the book?"")
    return book_patches[0].simple_query(""Of what color is the book?"") # crop would include the book so keep it in the query�����������������������取�������取��������取���取������取��取������������取��������������������取���取������取���������������������取������取�������取�����������������������������������������������������取��������取����取������������������������取���������������������������������������������������������������������������取������取���������������取�������取��������取���取���取��������取����取"
6376684,What color is the car to the left of the train car?," # assumes one train car patch
    image_patch = ImagePatch(image)
    train_car_patches = image_patch.find(""train car"")
    if len(train_car_patches) == 0:
        # If no train car is found, query the image directly
        return image_patch.simple_query(""What color is the car to the left of the train car?"")
    train_car_patch = train_car_patches[0]
    car_patches = image_patch.find(""car"")
    for car_patch in car_patches:
        if car_patch.horizontal_center < train_car_patch.horizontal_center:
            return car_patch.simple_query(""What color is the car to the left of the train car?"")
    return ""no"" # if no car is to the left of the train car, return no
�������取������������取���取�������������������������������������������������������������������������取������������������������������������������������������取����������取������取��������取���取��������取����������取��������������������������������������������������������������取����取�������取������������取���取������取�������取������取�����取�����取������取����取�������取"
786798,Is this a photo of a beach?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is this a photo of a beach?"")) # query directly since it's a property of the image as a whole, not a specific object in the imageturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
19836753,What vehicles are to the left of the fence?," # assumes only one fence patch
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What vehicles are to the left of the fence?"")
    fence_patch = fence_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < fence_patch.horizontal_center:
            return vehicle_patch.simple_query(""What vehicle is to the left of the fence?"")
    return ""no"" # if no vehicle is to the left of the fence, return no
�������������������取��������������取����取����������取������������������������������������������������取������取�������������������������������������取�����取������取���取����取����取�����取�������������取���������������������������������������������������������������取�������取���取�����取���������������������������取���取����������������������������������������������取"
15284615,Who is playing?," # assumes one person is playing
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is playing?"")
    return person_patches[0].simple_query(""Who is playing?"") # crop would include the person so keep it in the query��������取��������������������������������取������������������������������������取����取�������取���������������������取����取������������������������������������������������������������取������������������������������取��������取��������������������������������������������������������������取����������������������������取���取��������������������取������取���取���取�����取"
16785170,Is the man that is walking holding a remote control?," # assumes one man and one remote control
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    remote_control_patches = image_patch.find(""remote control"")
    if len(man_patches) == 0 or len(remote_control_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    remote_control_patch = remote_control_patches[0]
    return bool_to_yesno(man_patch.horizontal_center < remote_control_patch.horizontal_center) # assumes man is walking to the right of the remote controlніцип������������������������������取������������取���取�������取��取��������������取�������������������������取���取����������������������������取����取�����取������取�������������������������������������������������取���取������������������������取����取����������取������������������������������������������������������������������������������取������������取�����取����������������取��������������������取������������������取������取��������������取������取"
17746396,What's the boy wearing?," # returns the answer to ""What's the boy wearing?""
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What's the boy wearing?"")
    return boy_patches[0].simple_query(""What's the boy wearing?"") # crop would include the clothing so keep it in the query��取���取����������������取������������取������������������������������������取�������������������取�����������������������������������取����取���������取���取���������������������������������������������������取������������������取���取�������������取����������������������������������������������������������������������������������������取��������������取��������������取����������������取���取����������取���������取���取��取���取�������取��������取���取����取����取��������取����取�����取"
3625764,Is there a mug to the right of the bottle which is to the right of the tap?," # assumes only one tap, bottle, and mug
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""Is there a mug to the right of the bottle which is to the right of the tap?"")
    tap_patch = tap_patches[0]
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        return ""no""
    bottle_patch = bottle_patches[0]
    if bottle_patch.horizontal_center > tap_patch.horizontal_center:
        mug_patches = image_patch.find(""mug"")
        # Question assumes only one mug patch
        if len(mug_patches) == 0:
            return ""no""
        for mug_patch in mug_patches:
            if mug_patch.horizontal_center > bottle_patch.horizontal_center:
                return ""yes""
    return ""no""����������取���������������������������������������������������取�����取������������取��取�����������������������取����取���取������������取���������������������������������取���取���������取����������������取������������������������������������������������������������������������取�������取��������������������������取���取�������取�������������取"
13826837,What color is the door?," # returns the color of the door
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""What color is the door?"")
    return door_patches[0].simple_query(""What color is the door?"") # crop would include the door so keep it in the query���取�����������������������取�����������������������������取���������������������取����取���取���取���取�������������������������取���������������������������������������取����������������取�����取������������������������������������������������������������������������������������取��������������������������������������������������������������������������������������������������������������������������取���取��取����������������取���������������������������取"
19249907,Are there any horses in the field?," # field is a placeholder
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse"")) # field is a placeholder
�������������������取��������������������������������������������������取����取�������取���������������������������取��������������������������������������取����������取�����取���������������取����������������������������������������������������������������������������������������取��������取������������取������取�������取������������������������取�����������������������������������������������������������������������������������������������������������取���取��������������������������������������������������������取�������取���取"
2964690,What is in front of the mountains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the mountains?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly�����������������������取���取���取���������������������������取���取��������������������������������������������������取������取���������������������������������������������������取�����������������取��������������������取�����������������������������������������������������������������������取�����������������������������取���������������取��������取�����取�����取�����取�������������������������������������������������������取"
13396373,Are there vehicles to the right of the truck?," # assumes one truck patch
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""Are there vehicles to the right of the truck?"")
    truck_patch = truck_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center > truck_patch.horizontal_center:
            return ""yes""
    return ""no""���取����取�������取�������������������取�����������������������������������取�������取�����������������������取���取���取���取�����取����������������������������取���������取������取�������取���取���取�������取��������������取�����������������������������������������������������������������取���取����������取�������取������取���取�������取��������������������������������������������������������������������������������������������������������������������������取������������取"
493755,Does the scarf made of wool seem to be long and blue?," # returns a boolean
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the scarf made of wool seem to be long and blue?""))
    scarf_patch = scarf_patches[0]
    is_long = scarf_patch.verify_property(""scarf"", ""long"")
    is_blue = scarf_patch.verify_property(""scarf"", ""blue"")
    return bool_to_yesno(is_long and is_blue) # returns a boolean
�������������������������������������������������������������������������������������������������取���������������������������������������������������取�������������取���������取�������取�������������������������������������������������������������取���������取�����������������取�����取���取����取����������������������������取"
1189986,Is the man behind the elephant holding a surfboard?," # assumes one man and one elephant
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    elephant_patches = image_patch.find(""elephant"")
    if len(man_patches) == 0 or len(elephant_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    elephant_patch = elephant_patches[0]
    if man_patch.horizontal_center < elephant_patch.horizontal_center:
        return ""yes""
    return ""no""������取������������������������������取��������������������������������������取�������������������������������取�����������取�������������������������������������������取���������取�����取�������取������������取����������������������������������������������������������������������������取������取�������������������取���取���������取�������取����取���取��������������������������������������������������������������取"
8792466,Which color is the closed window?," # returns the color of the closed window
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""Which color is the closed window?"")
    window_patch = window_patches[0]
    return window_patch.simple_query(""What color is the window?"") # crop would include the window so keep it in the query��取����������������������取�����������取���������������取�����������������取�������取��������������������取�����取������������������������������取�����������取���������取��������������������������������������������������������������������������������取��取�������������������取�����取����取�����������������������������������������������������������������������������取���取����取���取����取���取��取�����取�����取�����取����取���������取�������取����取������取�����取����取������取�������取���取����取���取�����取"
10188423,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query����取�����������取���������������������取������������取����������������������取��������取�����������������取������取������取���取���������������������������������取���取�����取������取��������������取���������������������������������������������������������������������������������取����取���������取�������������取���取"
8965417,What kind of vegetable is to the right of the girl?," # assumes one girl patch
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What kind of vegetable is to the right of the girl?"")
    girl_patch = girl_patches[0]
    vegetable_patches = image_patch.find(""vegetable"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.horizontal_center > girl_patch.horizontal_center:
            return vegetable_patch.simple_query(""What kind of vegetable is to the right of the girl?"")
    return image_patch.simple_query(""What kind of vegetable is to the right of the girl?"") # if no vegetable is to the right, query the image directly�����������������取�������取�����取����������取����取������������取���取��������������������取���取������取�����������������������������������������������������������������������������取������������取����取���取������取����取��������������������������������������������������������������������������������������取��������取����������取�����取����取�����������取����取��������������取�����取���������取"
4929965,Is there a black racket or clock in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_racket = image_patch.exists(""black racket"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_black_racket or is_clock) # returns yes or noніцип������������取�������������������������������������取��������������取��������������������������������������������������������取�����取������取����������取�������������������������������������������������������������取���取���取����������取�����取���取��������������������������������������������������������������������取������������取����������取�������������������������������取��������取����������������取��������取��������取����取"
4782038,What kind of animal is white?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What kind of animal is white?"")
    return animal_patches[0].best_text_match([""dog"", ""cat"", ""horse""]) # crop would include the color so keep it in the query������������������������取�����取���������������取������������������取�������取����������������取����������������������������取������������������������������������������������������������������取����������������取��������������������������������������������������������������������取��������取������取��������������取������取����取��������取������取���������取��������取"
14658201,Is the sheep that looks white and brown made of plastic?," # assumes one sheep patch
    image_patch = ImagePatch(image)
    sheep_patches = image_patch.find(""sheep"")
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch.simple_query(""Is the sheep that looks white and brown made of plastic?"")
    sheep_patch = sheep_patches[0]
    is_white = sheep_patch.simple_query(""Is the sheep white?"")
    is_brown = sheep_patch.simple_query(""Is the sheep brown?"")
    return bool_to_yesno(is_white and is_brown) # crop would include the color so keep it in the query・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
1441865,Do you see any boxes on the table under the grill?," # grill is a relation, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boxes on the table under the grill?"") # grill is a relation, so ask directly���������取���������取�����������������������������������������取�������������������������������������������取����������������取�������������������������������������������������������������������取�������取�������������������������������������������������������������取��取����������������������������取���取�������取������取������������������������������取��������������������������������取���������������������������������������������取"
1424926,What is the tag on?," # tag is a relational verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tag on?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly���������取��取������取������������������������������������������取������������������������取�������������������������������取����取�������������取����������������������������������������取����������������取����������������取���������������������取�������������������������������������������������������������������������������取������������������������取�������取������取���������������������������������������取"
5543521,What is the piece of furniture that is to the right of the person who is working on a laptop?," # assumes one person and one laptop
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one person and one laptop patch
    if len(person_patches) == 0 or len(laptop_patches) == 0:
        # If no person or laptop is found, query the image directly
        return image_patch.simple_query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"")
    person_patch = person_patches[0]
    laptop_patch = laptop_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > person_patch.horizontal_center and furniture_patch.horizontal_center < laptop_patch.horizontal_center:
            return furniture_patch.simple_query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"")
    return ""no"" # if no furniture is found, query the image directly
�����������������������������取����取�������������取�����取������������取������取����取�������������������������������取������������������������������������������取����取�����取�����取�����������������������������������������������������������������������������������������������������取����取���取���������取������取"
3635257,Is there any freezer in this photo?," # freezer is a specific type of fridge
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""freezer"")) # freezer is a specific type of fridge, so check for freezer directlyніцип�����������取���������取�������取�����������������������取��������������������������������������取��取����取���������������������������������取�������������������������������取������������������������������������������������������取����������取��������取��������取��取�������������������������������������������������������������������������������������������������������取���取���取��������取������取������取����取�����取������取���取���取�������取���取���取�����取�����取���取����������取���取���������������������������������������������������取������取"
8821026,Are there either any bags or chairs?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_bag or is_chair)������取�����取������������取�������������取�������������������取���������������������������������������������������������������������������������������������������������������������取���取����������取�������取����取���取��������������������������������������������������������������������������������������������������������������������������取�������������������������取���������������������������取������������������������������������������������������������取"
13669952,In what vehicle is the bus driver?," # assumes one bus driver
    image_patch = ImagePatch(image)
    bus_driver_patches = image_patch.find(""bus driver"")
    if len(bus_driver_patches) == 0:
        return image_patch.simple_query(""In what vehicle is the bus driver?"")
    bus_driver_patch = bus_driver_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center > bus_driver_patch.horizontal_center:
            return vehicle_patch.simple_query(""In what vehicle is the bus driver?"")
    return bus_driver_patch.simple_query(""In what vehicle is the bus driver?"") # if no vehicle is found, query the image directlyніцип������������������取������������取������������取���������������������������������������������取������������������������取���取��������������取������������������������������������������������������取����取�����取�����������取�������取����������������取�������������������������������������������������������取����������取����取���取���取���取�����取���取�������������������取����取����取�������取����取����取�����取������������取���取�����������������取����������取�����取"
17204662,What is that man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип���������������������������������取�����������取������������������������������������������取����������������������������������������取�����������取��������������������������������������������取�������取������取�������取�������取����取�����������取������������������������������������������������������������������������取���取������取����������取������������取��������取���取���取����取���取������������取"
380866,Are there any girls or radios?," # returns yes or no
    image_patch = ImagePatch(image)
    is_girl = image_patch.exists(""girl"")
    is_radio = image_patch.exists(""radio"")
    return bool_to_yesno(is_girl or is_radio)������取���������取���������������������取����������������取��������������������������������������������������������取�������������������������������������������������������取��取���������取����������取�������取����取����������������������������������������������������������������������������������������������������取����������������取�������������������������取"
13775896,The girl is sitting on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The girl is sitting on what?"") # crop would include the girl so keep it in the query������������������取���������������������取���取���取���取�����������������������������������������取���������������������������取�������������������������������������������������������������取�����������������������������������������������������������������������������������������������取�����������取����������取������������取������取��������������取������取���取"
18798369,Is the white lamp to the left or to the right of the pillow that is in the center?," # assumes one pillow patch
    image_patch = ImagePatch(image)
    white_lamp_patches = image_patch.find(""white lamp"")
    # Question assumes only one white lamp patch
    if len(white_lamp_patches) == 0:
        # If no white lamp is found, query the image directly
        return image_patch.simple_query(""Is the white lamp to the left or to the right of the pillow that is in the center?"")
    white_lamp_patch = white_lamp_patches[0]
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the white lamp to the left or to the right of the pillow that is in the center?"")
    pillow_patch = pillow_patches[0]
    if white_lamp_patch.horizontal_center < pillow_patch.horizontal_center:
        return ""left""
    else:
        return ""right""��取������取���������������������������������������������������������������������������������������������取��取��������������������取���������������������取������������������������������������������������������������取����������取���取�����取�����������取�����取�����������������������������������������������������������������������取"
16545552,What color do you think is the vehicle the girl is washing?," # returns the color of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What color do you think is the vehicle the girl is washing?"")
    return vehicle_patches[0].simple_query(""What color is the vehicle?"") # crop would include the vehicle so keep it in the query���������取�������������������取������������取����������������取��������������������������������������������������������取������������������������������������������������������������取������取�����������取�������������������取����取�������������������������������������������������������������取��������������取�����取���取�������������取����������������������������取"
16719872,Are there motorcycles to the left of the man who is wearing a hat?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there motorcycles to the left of the man who is wearing a hat?"")
    man_patch = man_patches[0]
    hat_patches = image_patch.find(""hat"")
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""Are there motorcycles to the left of the man who is wearing a hat?"")
    hat_patch = hat_patches[0]
    if hat_patch.horizontal_center > man_patch.horizontal_center:
        return ""no""
    motorcycle_patches = image_patch.find(""motorcycle"")
    for motorcycle_patch in motorcycle_patches:
        if motorcycle_patch.horizontal_center < man_patch.horizontal_center:
            return ""yes""
    return ""no""�����������取���取�������������������������������������������������������取����取�����������������������取�������取��������������������������������������������取���取���取������取��������取�������������取������取����������������������������������������������������取��������������������取�����取���取�����取���取������取�������取���������取����取������取��������������������取"
2954090,Is the garbage can to the right or to the left of the person that is pushing the stroller?," # assumes one person and one garbage can
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the garbage can to the right or to the left of the person that is pushing the stroller?"")
    person_patch = person_patches[0]
    garbage_can_patches = image_patch.find(""garbage can"")
    # Question assumes only one garbage can patch
    if len(garbage_can_patches) == 0:
        return ""no""
    garbage_can_patch = garbage_can_patches[0]
    if garbage_can_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����取�������取�����������取����������取���������������取���取�����������������取����取���取���取��������������������������取������取���取���������������������������������������取����������取���取�������取���取���取��取��������取��������取�������������������������������������������������������������������取��������取����������取���������������取�������取����取�����取��取����取������������������������取"
13711589,What do the truck and the street sign have in common?," # assumes only one truck and one street sign
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    street_sign_patches = image_patch.find(""street sign"")
    # Question assumes only one truck and one street sign patch
    if len(truck_patches) == 0 or len(street_sign_patches) == 0:
        # If no truck or street sign is found, query the image directly
        return image_patch.simple_query(""What do the truck and the street sign have in common?"")
    truck_patch = truck_patches[0]
    street_sign_patch = street_sign_patches[0]
    return truck_patch.best_text_match([street_sign_patch.simple_query(""What is the street sign?"")]) # crop would include the street sign so keep it in the query������������������������取�������������������������������������������������������������������������������取���取��������������取������������������������������������������取���取�������取������������������������取��取��������������������������������������������������������取����取���取����取���取���������取����取��������取���������������取�����取�����取��������������取����取�������取�������取"
10227573,Who is wearing a shirt?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a shirt?"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch.simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query
    # If no person is wearing a shirt, query the image directly
    return image_patch.simple_query(""Who is wearing a shirt?"") # crop would include the shirt so keep it in the query��������取�����������������取����������������������������取��������������������������取�������������������取�����取�������取�����������������������������������取������������������取���取������取�����取�����������取������取������������������������������������������������������������������取�����������������������������������取���取�����取���取��������取�����取�����取������取��������取"
161071156,What animal is the man leading?," # assumes one man and one animal
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    animal_patches = image_patch.find(""animal"")
    if len(man_patches) == 0 or len(animal_patches) == 0:
        # If no man or animal is found, query the image directly
        return image_patch.simple_query(""What animal is the man leading?"")
    man_patch = man_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.horizontal_center > man_patch.horizontal_center:
        return animal_patch.simple_query(""What animal is the man leading?"")
    return man_patch.simple_query(""What animal is the man leading?"") # crop would include the man so keep it in the query��������取������������������������������取������������������������������������取������取������������������������������取������取�������������������������������������������������������取���取�����取������������取�������取����取�����取�����������������������������������������������������������������������取����取�������������取���������取�������取�����取����取����取����������取���取����取����取"
161036781,What is the piece of furniture to the right of the curtain the dresser is in front of?," # assumes one curtain and one dresser
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""What is the piece of furniture to the right of the curtain the dresser is in front of?"")
    curtain_patch = curtain_patches[0]
    dresser_patches = image_patch.find(""dresser"")
    # Question assumes only one dresser patch
    if len(dresser_patches) == 0:
        return ""no""
    dresser_patch = dresser_patches[0]
    if dresser_patch.horizontal_center > curtain_patch.horizontal_center:
        return image_patch.simple_query(""What is the piece of furniture to the right of the curtain the dresser is in front of?"")
    return image_patch.simple_query(""What is the piece of furniture to the left of the curtain the dresser is in front of?"") # crop would include the dresser so keep it in the query��������取����������������取������������������������������������������������取����取����取������������������������取�����取�������取����������������������������������取��������取�������������������取���取���取�������������������������������������������������������������������������������������������取�����取������取������取������取������取����取�����取"
7190226,Does the puddle look large?," # returns a boolean
    image_patch = ImagePatch(image)
    puddle_patches = image_patch.find(""puddle"")
    # Question assumes only one puddle patch
    if len(puddle_patches) == 0:
        # If no puddle is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Does the puddle look large?""))
    return bool_to_yesno(puddle_patches[0].verify_property(""puddle"", ""large"")) # crop would include the puddle so keep it in the query�����������������取�������取����取�����������������������������������������������取�����取�����������������������������取���������������������������取����������������������������取�����取���取�����取��������������������������������������������������������������������������������������������������取����取���取���取���������������取���取��������取"
11675152,Who throws the frisbee?," # assumes one frisbee patch
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""Who throws the frisbee?"")
    frisbee_patch = frisbee_patches[0]
    person_patches = image_patch.find(""person"")
    for person_patch in person_patches:
        if person_patch.horizontal_center > frisbee_patch.horizontal_center:
            return person_patch.simple_query(""Who throws the frisbee?"")
    return ""no one"" # if no person is found to the right of the frisbee, no one is throwing itERCHANTABILITY: This function is not yet implemented and will return ""no one"" for now.
:-------------</����������������������������取������������������取���������取���取����取���取��������������������取���取���取������������������������������������取���������取����取���������������������������������������������取�������������������取����取�����������������取��������取������������������������������������������������������������������������������������������������������������������取����取���取"
8723676,Which kind of animal is the water on?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Which kind of animal is the water on?"")
    return animal_patches[0].simple_query(""Which kind of animal is the water on?"") # crop would include the water so keep it in the query�����������������取��������取������������取����������������������取���������������������������������������������������取�����取��������������������������������������������取����������取���取������取�������取����取������取�����������������������������������������������������������������������������������取�����取���取����������������取��������取������取�����取"
61046657,Do you think that traffic light is tall?," # returns a boolean
    image_patch = ImagePatch(image)
    traffic_light_patches = image_patch.find(""traffic light"")
    # Question assumes only one traffic light patch
    if len(traffic_light_patches) == 0:
        # If no traffic light is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do you think that traffic light is tall?""))
    return bool_to_yesno(traffic_light_patches[0].verify_property(""traffic light"", ""tall"")) # crop would include the traffic light so keep it in the query����������������������������取�������������取���取�����������������取����������������取���������������������������������取���取���取���取�����������������������������������������������取��������������取�����������������取�����������取�����������������������������������������������������������������取��������������������������������取����������取������取����取������取����取���������������������������������������������������取�������取"
9581034,On which side is the wine glass?," # assumes one wine glass patch
    image_patch = ImagePatch(image)
    wine_glass_patches = image_patch.find(""wine glass"")
    if len(wine_glass_patches) == 0:
        # If no wine glass is found, query the image directly
        return image_patch.simple_query(""On which side is the wine glass?"")
    wine_glass_patch = wine_glass_patches[0]
    if wine_glass_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����������������取�����取���������������取�������������������������������������������������������������������取�������������������������������������取�����������取�����������取���取������取���取�������取�������������������取��������������������������������������������������������������������������������取�������取����������������取������取�������������������取"
181002374,Is the napkin to the right or to the left of the pizza that is shown in the image?," # assumes one pizza patch
    image_patch = ImagePatch(image)
    pizza_patches = image_patch.find(""pizza"")
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch.simple_query(""Is the napkin to the right or to the left of the pizza that is shown in the image?"")
    pizza_patch = pizza_patches[0]
    napkin_patches = image_patch.find(""napkin"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        return ""no""
    for napkin_patch in napkin_patches:
        if napkin_patch.horizontal_center > pizza_patch.horizontal_center:
            return ""right""
    return ""left"" # if no napkin is to the right of the pizza, it must be to the leftERCHANTABILITY: This function is not yet implemented and returns a placeholder value.
�������������������取��取������������取��������������������取������������������������������������������������������取����取�������������������������������������取����������取��������������������取�������������������������������������������������������������取�������取�����取����取����取�����取����������������取������取"
18535266,Is the face mask made of the same material as the mask?," # assumes one face mask and one mask
    image_patch = ImagePatch(image)
    face_mask_patches = image_patch.find(""face mask"")
    mask_patches = image_patch.find(""mask"")
    if len(face_mask_patches) == 0 or len(mask_patches) == 0:
        # If no face mask or mask is found, query the image directly
        return image_patch.simple_query(""Is the face mask made of the same material as the mask?"")
    face_mask_patch = face_mask_patches[0]
    mask_patch = mask_patches[0]
    return bool_to_yesno(face_mask_patch.verify_property(""face mask"", ""same material as mask"") and mask_patch.verify_property(""mask"", ""same material as face mask"")) # crop would include the mask so keep it in the query��取��������取���������������取����取�����������������������������������������������������������������取����取�����取���取���������������������取�����取��������������������������取����取�����������������������������������������������������取���取��������������������取���取����取���取��������取��������取����������������������������������������������取��������������������������������取�������取������������������取"
11254215,What is the tan item of furniture?," # assumes only one tan item of furniture
    image_patch = ImagePatch(image)
    tan_furniture_patches = image_patch.find(""tan furniture"")
    if len(tan_furniture_patches) == 0:
        # If no tan furniture is found, query the image directly
        return image_patch.simple_query(""What is the tan item of furniture?"")
    return tan_furniture_patches[0].simple_query(""What is the tan item of furniture?"") # crop would include the tan furniture so keep it in the query��������������取������������取����取����������取�����������取������������������������������取������取�������������������������取��������������������������������������取�������������取�����������取�����������取������������������������������������取�������������������������������������������������������������取����������������������取"
1852010,How is the device to the right of the device on the desk called?," # assumes only one device on the desk
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""How is the device to the right of the device on the desk called?"")
    device_patch = device_patches[0]
    right_device_patches = image_patch.find(""device"")
    # Question assumes only one right device patch
    if len(right_device_patches) == 0:
        return ""no""
    right_device_patch = right_device_patches[0]
    if right_device_patch.horizontal_center > device_patch.horizontal_center:
        return right_device_patch.simple_query(""How is the device to the right of the device on the desk called?"")
    return device_patch.simple_query(""How is the device to the right of the device on the desk called?"") # crop would include the right device so keep it in the query���取��取��取������������������������取�������������������������������������������������������取�����取���������������������������取���取������������取���������������������������������������������������取����取����取����取����取���������取�����������取���取"
1587534,Is the device on the floor black and large?," # device is a placeholder for a specific object
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Is the device on the floor black and large?"")
    device_patch = device_patches[0]
    is_on_floor = device_patch.simple_query(""Is the device on the floor?"")
    is_black = device_patch.simple_query(""Is the device black?"")
    is_large = device_patch.simple_query(""Is the device large?"")
    return bool_to_yesno(is_on_floor and is_black and is_large) # crop would include the floor, so keep it in the query��������取��������取���������取������������������取��取���������������������������������取���������������������������������取�����������取�������������������������������������������取�����������������取���取���取����������取������������取������������取������������������������������������������������������取������取��������������取����取�������取�������������取����取����取�����取����取����取"
8470757,Are there any surfboards?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""surfboard"")) # returns a boolean
����������������������������������取��������������取������������������������取���������������取�������������取�������������������������������������������������������������������取���取���������取����������������������������������������������������������������������������������������取�������取���������������������取�������取�������������������������������������取�����������������������������������������������������������������������������������������������������取��取����������������������������������������������取����������取"
11273949,Is the shirt white?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt white?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""white"")) # crop would include the shirt so keep it in the query�������������������������������������取������������������������������������������������������������������������取������取����������������������������������������取����������取���������取��������取������������������������������������������������������������������������������取����������������������取���取���取�����取�������取���取���取��������取�������������取��取"
7475238,What's the airplane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the airplane in front of?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directlyніцип�����取���取���������������������������������取�������������������取����取���取����������������������取�������������������������取���取���取����取������������������取������������������������������������������������������取���������取��������������������������������������������������������������������������������������������������取������������取�������������������取�����������取����������������取��取��取"
16685900,Where does the horse to the right of the hose run?," # assumes one horse and one hose
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    hose_patches = image_patch.find(""hose"")
    # Question assumes only one horse and one hose patch
    if len(horse_patches) == 0 or len(hose_patches) == 0:
        # If no horse or hose is found, query the image directly
        return image_patch.simple_query(""Where does the horse to the right of the hose run?"")
    horse_patch = horse_patches[0]
    hose_patch = hose_patches[0]
    if horse_patch.horizontal_center > hose_patch.horizontal_center:
        return horse_patch.simple_query(""Where does the horse run?"")
    return hose_patch.simple_query(""Where does the hose run?"") # crop would include the hose so keep it in the query������取�������������������取��取��取��取���������取����������������取��������������������������取�����取�������������������取����������取����������������������������������������������������取������取����������������取���取���������������取�������取����取����取������������������������������������������������取����������������取���������������������取�����取���取��取��������������取�������取�����取����取"
3932624,Are there either any gray chairs or laptops?," # returns yes or no
    image_patch = ImagePatch(image)
    is_gray_chair = image_patch.exists(""gray chair"")
    is_laptop = image_patch.exists(""laptop"")
    return bool_to_yesno(is_gray_chair or is_laptop)�����������������������取��������������取�������������������取����取������������������取���取�������������������������������取����取����������������������������取�����取����������������������取������取���取��������������取������������������������������������������������������������������������������������������������取���取���取������������取�����取���取�������取������取�����������取������������������取�����取"
10584099,Is the water brown or blue?," # returns ""brown"" or ""blue""
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""Is the water brown or blue?"")
    return water_patches[0].best_text_match([""brown"", ""blue""]) # crop would include the water so keep it in the query�����������������������取����������������取�����������������������������������取�������取����������������������������取�����������取������������������������������������取����取����取������������������取����取��������取���������取�������������������������������������������������������������������������取�����取����������������取��������取��������取���取����取�������取�������取"
9256263,Which kind of furniture is brown?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is brown?"")
    return furniture_patches[0].simple_query(""Which kind of furniture is brown?"") # crop would include the color so keep it in the query��取���������������������取����取��������������������������������������������取�����取�������������������取����取���取����取����������������������������取������������取��������取����������������������������������������������������������������������������������取��������������取����������������������������������������������������������������������������������取�����������取�����取������取�������������取����������取����取���������取�����取�������取�������取����取��������取��������取�����取"
18719769,Is the man wearing glasses?," # returns yes or no
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man wearing glasses?"")
    return bool_to_yesno(man_patches[0].verify_property(""man"", ""glasses"")) # crop would include the glasses so keep it in the query���������������������������������������取��������������取����������取�������������取����������������������������������取��������������������������������������������取������������取��������取������������������取�����������������������������������������������������������������������取������取�����取�������取������取����取���取�����取���取���������取����������取���取����取����������取"
18342439,What animal is white?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What animal is white?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""white""):
            return animal_patch.simple_query(""What animal is white?"") # crop would include the color so keep it in the query
    # If no animal is white, pick the first animal
    return animal_patches[0].simple_query(""What animal is white?"") # crop would include the color so keep it in the query����������������������取��������������������������������������������������������������������������������������������������������������������������������取���取����取���取������������取���取�������������取����取�����取��������取����取����取�������������������������������������������取������取�����������������取���取��������������取�����取����取����取������取������取�����取������取����取���������取"
8665725,Who is wearing a coat?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who is wearing a coat?"")
    for person_patch in person_patches:
        is_wearing_coat = (person_patch.simple_query(""Is the person wearing a coat?"") == ""yes"")
        if is_wearing_coat:
            return person_patch.simple_query(""Who is wearing a coat?"") # crop would include the coat so keep it in the query
    # If no person is wearing a coat, query the image directly
    return image_patch.simple_query(""Who is wearing a coat?"") # crop would include the coat so keep it in the query������������取���������������������������������������取����������������������������������������������取������������������������������������������������取������������取��������取����������取����取������取���取����������������������������������������������������������������取����取��������������取��������取��������取���������取�����取��������取��������取����������������取"
5440407,What vehicle isn't black?," # returns the name of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What vehicle isn't black?"")
    for vehicle_patch in vehicle_patches:
        if not vehicle_patch.verify_property(""vehicle"", ""black""):
            return vehicle_patch.simple_query(""What vehicle isn't black?"")
    # If no vehicle is not black, query the image directly
    return image_patch.simple_query(""What vehicle isn't black?"") # crop would include the color so keep it in the query�����������������������取����取���������������取�������������取����取���取�����������������取����取���取���取���取���取��取�����������������������������������������������������取����取������������������取�������������取����������������������取����取����取������������������������������������������������������������������������������取�������取������取�����取��������取����取������������取������取"
4104707,On which side of the picture is the oven?," # assumes the oven is on the left or right
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the oven?"")
    if oven_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right""���������������������������������������������������取����������������������������������取����������取��取����������取����������������������������������������取�����取�����取���取������取���取������取����取����������取���������������取����������������������������������������������������������������������������������取�������������取���取���取������取����取"
3126763,What is common to the logo and the letter?," # returns a string
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""What is common to the logo and the letter?"")
    letter_patches = image_patch.find(""letter"")
    # Question assumes only one letter patch
    if len(letter_patches) == 0:
        return image_patch.simple_query(""What is common to the logo and the letter?"")
    logo_patch = logo_patches[0]
    letter_patch = letter_patches[0]
    common = logo_patch.simple_query(""What is common to the logo and the letter?"")
    return common # crop would include the letter so keep it in the query������取����������取��������������������������������������取��������������������������取���������������������������取����������������������������������������������������取���取���取����取���������取�����������取����取����取������������������������������������������������������������������取���取���������取���取���������取���������������������取����取��������取�����取�����������取���������取����取������取"
18640925,What animal is in the water the man is walking through?," # assumes one man and one animal
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    animal_patches = image_patch.find(""animal"")
    if len(man_patches) == 0 or len(animal_patches) == 0:
        # If no man or animal is found, query the image directly
        return image_patch.simple_query(""What animal is in the water the man is walking through?"")
    man_patch = man_patches[0]
    animal_patch = animal_patches[0]
    if animal_patch.vertical_center < man_patch.vertical_center:
        return animal_patch.simple_query(""What animal is in the water the man is walking through?"")
    else:
        return man_patch.simple_query(""What animal is in the water the man is walking through?"") # crop would include the animal so keep it in the query�������������取������������取���取��取���取��取��取����������������������������������������取������取�����������������������取����取���取���取����������取���������������������������������������������取�����������取���取����取���取���������取�����取�������取�������������取������������������������������������������������������������取�����������������取����取�����取����取���取�����取���取����取���取������取�����取���取����取�������取����取"
125488,What is the man wearing?," # returns the answer to ""What is the man wearing?""
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man wearing?"")
    return man_patches[0].simple_query(""What is the man wearing?"") # crop would include the man so keep it in the query�������������取���取�������������������������������������������取�����������������取������������取�������������������������������������������������������������������取��取��������取�����取������取�����取�����������取�����取�����取��������取�������������������取�������������������������������������������������������������������������������取����取����取������������取"
5925435,What is the sidewalk made of?," # assumes one sidewalk patch
    image_patch = ImagePatch(image)
    sidewalk_patches = image_patch.find(""sidewalk"")
    if len(sidewalk_patches) == 0:
        # If no sidewalk is found, query the image directly
        return image_patch.simple_query(""What is the sidewalk made of?"")
    return sidewalk_patches[0].simple_query(""What is the sidewalk made of?"") # crop would include the sidewalk so keep it in the query��取������������������������������������������������������������������取��������������������取������取�����������������������������取����������取���取��取�����取����取�������取����取���取����������������������������������������������������取�������������������取�������������������������取�������������取���取����取�����������������������������������������������������������������������取����取���取��������������������取������取������取����取������取������取�����取���取��������取������取�����取"
17563472,What is the pattern of the coat?," # returns the pattern of the coat
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What is the pattern of the coat?"")
    return coat_patches[0].simple_query(""What is the pattern of the coat?"") # crop would include the pattern so keep it in the query�����������������������������������取���取���������������������取�������������������取�������������������������取�������取������������������������������������������取��������取���取���������取�����取������取����������������������������������������������������������������取��取������������������取��取��取������������������������取���取���取����������������取��������取����取"
4819547,What kind of furniture is white?," # returns the name of the furniture
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is white?"")
    return furniture_patches[0].simple_query(""What kind of furniture is white?"") # crop would include the color so keep it in the query�������������������������取��������������������������������取�����������������������������������������������������取���������取������������取�������������������������������取������取��������������取�������������������������������������������������������������������������������取���������������取����������������������取���取����取�����取"
14263174,What color do you think the chair that is to the right of the other chair is?," # assumes only one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What color do you think the chair that is to the right of the other chair is?"")
    chair_patch = chair_patches[0]
    other_chair_patches = image_patch.find(""chair"")
    for other_chair_patch in other_chair_patches:
        if other_chair_patch.horizontal_center < chair_patch.horizontal_center:
            return chair_patch.simple_query(""What color do you think the chair that is to the right of the other chair is?"")
    return chair_patch.simple_query(""What color do you think the chair that is to the right of the other chair is?"") # crop would include the other chair so keep it in the query�����������������取������取���取����取����������取���取�����������������������������取�����取��������������������������取������取���������������������������������������������������������取����������������取������������������取������������������������������������������������������������取���取������取�����������取�������取����取����������������取���取���取�����取����取���������取����取����取���������取"
7515210,Is the man that is to the left of the person riding the green train in front of the fence?," # assumes one man and one person
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    person_patches = image_patch.find(""person"")
    # Question assumes only one man and one person patch
    if len(man_patches) == 0 or len(person_patches) == 0:
        # If no man or person is found, query the image directly
        return image_patch.simple_query(""Is the man that is to the left of the person riding the green train in front of the fence?"")
    man_patch = man_patches[0]
    person_patch = person_patches[0]
    if man_patch.horizontal_center < person_patch.horizontal_center:
        train_patches = image_patch.find(""train"")
        # Question assumes only one train patch
        if len(train_patches) == 0:
            return ""no""
        train_patch = train_patches[0]
        if train_patch.simple_query(""Is the train green?"") == ""yes"":
            fence_patches = image_patch.find(""fence"")
            # Question assumes only one fence patch
            if len(fence_patches) == 0:
                return ""no""
            fence_patch = fence_patches[0]
            if fence_patch.simple_query(""Is the fence in front of the man?"") == ""yes"":
                return ""yes""
    return ""no""������������取�����������������������取���������������������������������������������������������������取�����������取������取������������������������������取����������������取�����������取���取����取�������取�����������������取"
9239936,Do the cows near the trees have white color?," # assumes only one cow and one tree
    image_patch = ImagePatch(image)
    cow_patches = image_patch.find(""cow"")
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one cow and one tree patch
    if len(cow_patches) == 0 or len(tree_patches) == 0:
        # If no cow or tree is found, query the image directly
        return image_patch.simple_query(""Do the cows near the trees have white color?"")
    cow_patch = cow_patches[0]
    tree_patch = tree_patches[0]
    if cow_patch.horizontal_center > tree_patch.horizontal_center:
        return bool_to_yesno(cow_patch.verify_property(""cow"", ""white""))
    else:
        return bool_to_yesno(tree_patch.verify_property(""tree"", ""white"")) # crop would include the tree so keep it in the query�����取����������取������取�����取����取����������取������������������取�����������������������取������������������������取���取���������������������������������������������������������取���取�����取����取��������取������取��������������������������������������������������������������������������取������������取���取���取����取��������取�������取�����取����取�������取����取����取����������������取"
1885178,"In which part of the image is the remote control, the bottom or the top?"," # assumes only one remote control
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the remote control, the bottom or the top?"")
    if remote_control_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top""��������取������������取��������������取�������������������取����������������取����取���������取���取�������������������取�����取�������取�����取����������������������������取�����������取�������������取������取���取���������取����取������������������������������取����������������������������������������������������������取���取���������������������������������取"
12341631,Which color is the bag in the top part?," # top part is the upper half of the image
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Which color is the bag in the top part?"")
    if bag_patches[0].upper < image_patch.upper / 2:
        return bag_patches[0].simple_query(""Which color is the bag in the top part?"")
    else:
        return bag_patches[0].simple_query(""Which color is the bag in the bottom part?"") # bottom part is the lower half of the image������������������������取������������取�������������������取����������������������������取������������������������取���取�����取������������������������������取���������取������取���取���������������取�����������取��������������������������������������������������������������������取������������������������取��������取����取������������取���������������取�����������取"
5532909,"What is the weather like, cloudless or maybe rainy?"," # cloudless or maybe rainy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the weather like, cloudless or maybe rainy?"") # cloudless or maybe rainyніцип���������������������������取���������������������������取����取������������������取������������������������������取�������������������������������������取���取����取������取���������取���取���取������������������������������������������������������取���取�������取������取����取�������������取�����������������������������������取���������������������������取���������������������������������������������取�����������������������取����������������取���������取�������取����取��������������������������取������������������������取���取"
2618222,What is connected to the open laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is connected to the open laptop?"") # crop would include the laptop so keep it in the query�������������������������������������取������������������取���������������������������取�������������������������������取�������取���������������������������������������������������取���取��������������取����������������取���������������������������������������������������������������������取����取���取������取������取���取�������取����取�����取�������取���取����������取�������������取������取�������������取�����取"
3252220,Of which color is the shirt the man wears?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Of which color is the shirt the man wears?"")
    man_patch = man_patches[0]
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return ""no shirt""
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""Of which color is the shirt the man wears?"") # crop would include the shirt so keep it in the query�����������������取������取���������������������������������取�����������������������取������������������������取������取�������������������������������取����������������取����������取�������取�������取�������取������取�����������������������������������������������������������������������取������������取����取���取�������取�����取�������取�����������取������取����取"
8947801,What is in the vase?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the vase?"") # crop would include the vase so keep it in the query�����������������取��������取�������取������取���取���取�����取�����������取���取���取������������������������取������取����������������������������取���取�����������������������������������������������������������取�������取�����取����取�����取����取�����取���取����取���取���取������������������������������������������������������������������������������������������������������������������取���取����������取����取�����取��������取�����取���取����取������取����取����������取"
10841562,Is the color of the pants the same as the shorts?," # returns yes or no
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Is the color of the pants the same as the shorts?"")
    pants_color = pants_patches[0].simple_query(""What color are the pants?"")
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one shorts patch
    if len(shorts_patches) == 0:
        return ""no""
    shorts_color = shorts_patches[0].simple_query(""What color are the shorts?"")
    return bool_to_yesno(pants_color == shorts_color) # returns yes or noніцип�������������������取�������������取���取��������������取�����������������取������������������������������������������������������取�����取������取��������������������取��取����������������������������������取���取�������取���取������取�����取�������取����取������取����取��������������������������������������������������������������������取����������取���取��������������取���取������������取����取�������������取���取"
15511838,What kind of furniture is to the left of the bucket?," # assumes one bucket patch
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is to the left of the bucket?"")
    bucket_patch = bucket_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center < bucket_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is to the left of the bucket?"")
    return ""no"" # if no furniture is to the left of the bucket, return no
���取������取�����������取�������������取���������������������������������取��������取���������������������取����取����������取����������������������������������取���取������取���������取���取���取���取�����取�������������取�����������������������������������������������������������������������取��������������������取����取������������������������������������������������������������������������������������������取"
14495306,Is there any racket to the right of the person that the woman is to the left of?," # assumes one person and one woman
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one person and one woman patch
    if len(person_patches) == 0 or len(woman_patches) == 0:
        # If no person or woman is found, query the image directly
        return image_patch.simple_query(""Is there any racket to the right of the person that the woman is to the left of?"")
    person_patch = person_patches[0]
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < person_patch.horizontal_center:
        racket_patches = image_patch.find(""racket"")
        for racket_patch in racket_patches:
            if racket_patch.horizontal_center > person_patch.horizontal_center:
                return ""yes""
    return ""no""��������������������取���������������������������取��������取�������������取�������������������������������取������������������������������������������������取���取������取��������取�������取�����取���������取����������������������������������������������������取������取�������取��������取�����取���取�������取���取������取��������取���取�����取���取����������取����取����������������取"
14841932,Do the tiles have square shape and black color?," # returns a boolean
    image_patch = ImagePatch(image)
    tiles_patches = image_patch.find(""tile"")
    # Question assumes only one tile patch
    if len(tiles_patches) == 0:
        # If no tile is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do the tiles have square shape and black color?""))
    return tiles_patches[0].verify_property(""tile"", ""square"") and tiles_patches[0].verify_property(""tile"", ""black"") # crop would include the shape and color so keep it in the query��������������������������取������������������������������取�������������������取�������取���取���取����������������������取����������取���������������������������������������取��取����������������取�����取�������������取�������取���������������������������������������������������������������������������取����取���������������取���������������取���������取�����������������取�����������������������取"
41029381,What is the vehicle that is the same color as the shirt called?," # assumes one shirt and one vehicle
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one shirt and one vehicle patch
    if len(shirt_patches) == 0 or len(vehicle_patches) == 0:
        # If no shirt or vehicle is found, query the image directly
        return image_patch.simple_query(""What is the vehicle that is the same color as the shirt called?"")
    shirt_patch = shirt_patches[0]
    vehicle_patch = vehicle_patches[0]
    if shirt_patch.simple_query(""What color is the shirt?"") == vehicle_patch.simple_query(""What color is the vehicle?""):
        return vehicle_patch.simple_query(""What is the vehicle called?"")
    return ""unknown"" # if no vehicle is the same color as the shirt, return unknown
���������������������������������取���������������取��������������取��������������������������������取���������������������������������������������取����取��������������取���取�����取������取��������取����取�����������������������������������������������������������������取�������取�����取���������������取�����������������取����取����������������取"
161027428,Are there both windows and doors in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)��������取������取��������������������������������������������取���������������������������������������������取������������������������������������������������������取����取����取�����取��������取��������取���取����取�������������������������������������������������������������������取���������������������������������������取���取�����取���取���取����������������取�����������取�����取���取����取����������������������������������取"
16478246,Does the pillow to the right of the man have green color and large size?," # returns yes or no
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the pillow to the right of the man have green color and large size?"")
    man_patch = man_patches[0]
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        return ""no""
    for pillow_patch in pillow_patches:
        if pillow_patch.horizontal_center > man_patch.horizontal_center:
            if pillow_patch.verify_property(""pillow"", ""green"") and pillow_patch.verify_property(""pillow"", ""large""):
                return ""yes""
    return ""no""���������������������取�������������取��������������������������������取����取�����������������������������������取���取�������������������������������������������取�����取��������取�������������取����取��������������取��������������������������������������������������取������取��取��������������取���取�������取������������取����取��������取��������取���取����取"
9450308,Is the happy person wearing a hat?," # returns yes or no
    image_patch = ImagePatch(image)
    happy_patches = image_patch.find(""happy"")
    # Question assumes only one happy patch
    if len(happy_patches) == 0:
        # If no happy is found, query the image directly
        return image_patch.simple_query(""Is the happy person wearing a hat?"")
    for happy_patch in happy_patches:
        is_wearing_hat = (happy_patch.simple_query(""Is the person wearing a hat?"") == ""yes"")
        if is_wearing_hat:
            return ""yes""
    return ""no"" # If no happy is wearing a hat, return noніцип��取���������������������������取�������������取�����������������������取������������取���������取����取����������������������取�������������������������������������������������������取���取��������������取������������取���取�����������������������������������������������������������取�������取������������取������取������取����取����������取����������������������������������������������������������������������������������������������取"
11850389,What place is this?," # returns a string describing the place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"") # assumes the image is of a placeERCHANTABILITY: This function is not yet implementedERCHANTABILITYERCHANTABILITYERCHANTABILITY���������取��取������取�����������取�������������������������������������������������������������������������������取�����取�����������取��取������������������������取��������������������������������������������������������������������������������������������������������������������������������������������取���取�������取����取����取�����取����取���取����取���������取��������������������������������������������������取"
17250452,What kind of appliance is on the right of the drawer?," # assumes one drawer and one appliance
    image_patch = ImagePatch(image)
    drawer_patches = image_patch.find(""drawer"")
    appliance_patches = image_patch.find(""appliance"")
    if len(drawer_patches) == 0 or len(appliance_patches) == 0:
        # If no drawer or appliance is found, query the image directly
        return image_patch.simple_query(""What kind of appliance is on the right of the drawer?"")
    drawer_patch = drawer_patches[0]
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center > drawer_patch.horizontal_center:
        return appliance_patch.simple_query(""What kind of appliance is on the right of the drawer?"")
    return drawer_patch.simple_query(""What kind of appliance is on the right of the drawer?"") # crop would include the drawer so keep it in the query�����������������������������������������������������取������������������������取����取��������取������������������������取����取�����������������������������������������������取���������取�����取������������取������������取����������������������������������������������������������������取���������取�����������取����取��������������取�������取����取�����取"
14857961,Is the lady to the right of a woman?," # assumes one woman and one lady
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    lady_patches = image_patch.find(""lady"")
    if len(woman_patches) == 0 or len(lady_patches) == 0:
        return ""no""
    woman_patch = woman_patches[0]
    lady_patch = lady_patches[0]
    if lady_patch.horizontal_center > woman_patch.horizontal_center:
        return ""yes""
    return ""no""������������取���取��������������������取����������������取�����������������������取������������������������������取����取����������������������������������������取���������取���取�����������取�������取�����取������取����取�����取��������������������������������������������������������������������������������������������取���取���取���取���取��������取������取����取������取���������取"
132385,What cooking utensils are to the left of the pan on the right side?," # assumes one pan patch
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch.simple_query(""What cooking utensils are to the left of the pan on the right side?"")
    pan_patch = pan_patches[0]
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    for cooking_utensil_patch in cooking_utensil_patches:
        if cooking_utensil_patch.horizontal_center < pan_patch.horizontal_center:
            return cooking_utensil_patch.simple_query(""What cooking utensil is to the left of the pan on the right side?"")
    return ""no"" # if no cooking utensil is to the left of the pan on the right side, return no
����������取���������������������取������������������取������������������������������������������������取������取������������������������������������������取�����取���取���������取����取���取�������取�������������取�������������������������������������������������取���取������取���取��������取��������������������������取�����������取��������取����取��������������取���������������取"
9745131,Which color is the truck that is to the left of the lamps?," # assumes one truck and one lamp
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one truck and one lamp patch
    if len(truck_patches) == 0 or len(lamp_patches) == 0:
        # If no truck or lamp is found, query the image directly
        return image_patch.simple_query(""Which color is the truck that is to the left of the lamps?"")
    truck_patch = truck_patches[0]
    lamp_patch = lamp_patches[0]
    if truck_patch.horizontal_center < lamp_patch.horizontal_center:
        return truck_patch.simple_query(""What color is the truck?"")
    else:
        return lamp_patch.simple_query(""What color is the lamp?"") # crop would include the lamp so keep it in the query��������取�������������������������������������������������������������������������������������������������������������������������取��������������������������取���取�����������������取�����������������������������取�������������������������������������������取�������������������������������������������������取����取���取���������������������������取"
5546009,What type of bird is the same color as the motorcycle in the bottom of the image?," # assumes one motorcycle and one bird
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one motorcycle and one bird patch
    if len(motorcycle_patches) == 0 or len(bird_patches) == 0:
        # If no motorcycle or bird is found, query the image directly
        return image_patch.simple_query(""What type of bird is the same color as the motorcycle in the bottom of the image?"")
    motorcycle_patch = motorcycle_patches[0]
    bird_patch = bird_patches[0]
    if motorcycle_patch.lower > bird_patch.lower:
        return bird_patch.best_text_match([""red"", ""blue"", ""green"", ""yellow""])
    else:
        return bird_patch.best_text_match([""red"", ""blue"", ""green"", ""yellow""]) # crop would include the motorcycle so keep it in the query�������������取���������������������������取�����������������取�����������������������取������������������������取������取��������取���取��������������������������������������������取���������������取�����������取�������������取��取������������������������������������������������������取�������������������������取���取�������������取�������取���������取�����取����������取"
867818,Is the man on the skateboard?," # assumes one man and one skateboard
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    skateboard_patches = image_patch.find(""skateboard"")
    if len(man_patches) == 0 or len(skateboard_patches) == 0:
        return ""no""
    man_patch = man_patches[0]
    skateboard_patch = skateboard_patches[0]
    if man_patch.horizontal_center > skateboard_patch.horizontal_center:
        return ""yes""
    return ""no""������取�������������������������������取�������������取�����������������������取������������������������������������取�����������������������������������������取���取���取�������取�������取�����������取�����取����������������取����������������������������������������������������������������������������������������取��������取�������取���取���������取���取��������取������取���取����������取��取��取"
13896221,What is on the table?," # assumes only one table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"") # crop would include the table so keep it in the query��������取������������������������������������������������������������������������������������������������取�����取�������������������������������������������������������取���取������������������取�����取����������������������������������������������������������������取��������������取����取������������������������取���������������������������取����取����取���������������取�����取���取�������������������������取�������取"
1964517,What is the food that is above the white paper?," # assumes one food patch and one white paper patch
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    white_paper_patches = image_patch.find(""white paper"")
    if len(food_patches) == 0 or len(white_paper_patches) == 0:
        # If no food or white paper is found, query the image directly
        return image_patch.simple_query(""What is the food that is above the white paper?"")
    food_patch = food_patches[0]
    white_paper_patch = white_paper_patches[0]
    if food_patch.vertical_center < white_paper_patch.vertical_center:
        return food_patch.simple_query(""What is the food that is above the white paper?"")
    else:
        return food_patch.simple_query(""What is the food that is below the white paper?"") # crop would include the white paper so keep it in the query������������������������������������取���取�����������������取����取���������������������取������������������������取���取�������������取������������������������取��������������������取������取�������������取������取���������������������������������������������������������������������取������������������取�������������取�����������������������取����取����取"
15705231,Is the shelf to the left of a cabinet?," # assumes one shelf and one cabinet
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    cabinet_patches = image_patch.find(""cabinet"")
    if len(shelf_patches) == 0 or len(cabinet_patches) == 0:
        return ""no""
    shelf_patch = shelf_patches[0]
    cabinet_patch = cabinet_patches[0]
    return bool_to_yesno(shelf_patch.horizontal_center < cabinet_patch.horizontal_center) # left if less than, right if greater than overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting��������������������������������������������������������取��������������������������������取���取���取����������������������������������������取���取�����取����取�������������取��������取������������������������������������������������������������取�������������取��������������取�����取����取���取����������取"
15693846,Is the motorcycle parked on the grass?," # returns yes or no
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Is the motorcycle parked on the grass?"")
    for motorcycle_patch in motorcycle_patches:
        is_parked_on_grass = motorcycle_patch.verify_property(""motorcycle"", ""parked on grass"")
        return bool_to_yesno(is_parked_on_grass) # returns yes or noніцип�����������取���������������取���������取�����������取���取����������������取���������取��������������������������������取���������������取�������取�����取�������������������������������������������������������取�����������������������������取���取������取�����������������������������������������������������������������������������������取�����������取���取��������������取���取����取���取�����取���取���取����取���取���取����取����取������������取�����������取���取����取�����������������取"
13872995,Who is jumping?," # assumes one person is jumping
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who is jumping?"")
    return person_patches[0].simple_query(""Who is jumping?"") # crop would include the person so keep it in the query�����������������������������������������������������取����取�����������������������取���取����������取��������������������取���取����������������取������������������������������������������取�������取�����取�����取�����������������������������������������������������������������������������������取�������取����取���������取���������������������������������取������取���������取������������������������������������������������������������������������������������������������������取��取"
4502830,Is this a dog or a cat?," # returns ""dog"" or ""cat""
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""dog"", ""cat""]) # returns the string that best matches the image・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━・━"
12584623,What is the person with the bag wearing?," # assumes one person and one bag
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    bag_patches = image_patch.find(""bag"")
    if len(person_patches) == 0 or len(bag_patches) == 0:
        # If no person or bag is found, query the image directly
        return image_patch.simple_query(""What is the person with the bag wearing?"")
    person_patch = person_patches[0]
    bag_patch = bag_patches[0]
    if person_patch.horizontal_center > bag_patch.horizontal_center:
        return person_patch.simple_query(""What is the person with the bag wearing?"")
    else:
        return bag_patch.simple_query(""What is the person with the bag wearing?"") # crop would include the person so keep it in the query������取�����������取�������������������取���������������取�����������������������������取�������������������������取���取���取����������������������������������������������取������������������������取��������取��������取��取����������������取�������������������������������������������������������取�����������������取������取����取������取�������取�������取����取���取����取�������取����取�����取����������取"
7202064,"What is this, a bus or a truck?"," # returns the answer to ""What is this?""
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a bus or a truck?"") # crop would include the object so keep it in the query��������������取������������������������取���������������������������������������取���取����取�������取�����������������������������������������������������������������������������������取���取�����������取��������������������取���������������������������������������������������������������������������取����������������������取���取�����������取�����取�������取���取�����取���取���取�����������取����������取����取"
16542208,Do you see either any beds or blankets there?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_blanket = image_patch.exists(""blanket"")
    return bool_to_yesno(is_bed or is_blanket)����������������取����������������������������������取������������������������������取�������������������������取�������������������������������������������������������������取��������������������取����������������������������������������������������取�������������������取�����������������������取�����取������������������������取���取���取���������取�����������������������������������������������������������������������������������������������������取"
11700224,Do you see both lettuce and salad?," # returns yes or no
    image_patch = ImagePatch(image)
    is_lettuce = image_patch.exists(""lettuce"")
    is_salad = image_patch.exists(""salad"")
    return bool_to_yesno(is_lettuce and is_salad) # returns yes or noніцип������������取����������取�������������取������������取��������取������������取�����������������������取���取����������������������������取��������取�������取����������������������������������������������������取����取�������������������取������������取�����������取��������������������������������������������������������������������������������������������������取��������������取����取�����取�������取���取������������取����取��������取������取��������������������������������取"
1067136,Is the ball on the tree?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball on the tree?"") # crop would include the tree so keep it in the query�����������������������������取��������取����取�����取��������������取���������������������取��������取�������������������������取������取����������������������������������������������������������������取���������取����������������取�����������取��������������������������������������������������������������������������取����取�������������������������取���������取����取����取���������������������������取�����取"
364079,What kind of furniture is to the right of the blanket?," # assumes only one blanket patch
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is to the right of the blanket?"")
    blanket_patch = blanket_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > blanket_patch.horizontal_center:
            return furniture_patch.simple_query(""What kind of furniture is to the right of the blanket?"")
    return image_patch.simple_query(""What kind of furniture is to the right of the blanket?"") # if no furniture is to the right, query the image directly������������������������取����取��������取�����取��取���������������������������������取���������������������������������取������������取��������������������取���������������������������取���������������取�������取���������取����取�������取��������������������������������������������������������������������取��������取����取������取��������取�����取�����取���������取�����取�����取����取"
2533062,How large is the ground the zebra is standing on?," # returns the size of the ground
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch.simple_query(""How large is the ground the zebra is standing on?"")
    zebra_patch = zebra_patches[0]
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        return ""no""
    ground_patch = ground_patches[0]
    if zebra_patch.lower > ground_patch.lower:
        return ""small""
    else:
        return ""large"" # crop would include the zebra so keep it in the query�������������取����������������取���������取����������������取����取��������������������取���取��������������������������取������������������������������������������������取��������取���������取������取����取��������取�����取�������������������取���������������������������������������������������取����������������������������取���取���������取���取�����取�������取������取�����������������取���取�������取"
19683710,The clock is inside what?," # contains a relation (inside, on, under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The clock is inside what?"") # crop would include the clock so keep it in the query���取����������取����������������������������取����������取�����取���������������������������取����取��������������������������������������������������������������������������取�����取����������取���������取�������������������������������������������������������������������������������������取����取���������取���取���取����取����取����������������������������������������������������������������������������������������取���������������������������������������������取���取�������取��������������������������������取���取��������取"
15674863,Is the racket in the top part?," # assumes one racket patch
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Is the racket in the top part?"")
    racket_patch = racket_patches[0]
    if racket_patch.vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no""��取�������������������������������取���取���������������取�����取�������������������������取���������������������������������������������取����������������取�������取�������取����取���取���取��������取��������������取�����������������������������������������������������������取������������������������取����取������������������������������������������������������������取���������������������取���������������取������取�����������������取����������取��������取�����������取��������取������取���取���取"
4860320,Do you see any skateboards to the right of the person that is wearing a shirt?," # assumes one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Do you see any skateboards to the right of the person that is wearing a shirt?"")
    person_patch = person_patches[0]
    skateboard_patches = image_patch.find(""skateboard"")
    for skateboard_patch in skateboard_patches:
        if skateboard_patch.horizontal_center > person_patch.horizontal_center:
            return ""yes""
    return ""no""�������������������取������������������������������取����������������������取��������������������������������取���取�����������������������������������������������取���取����取��������������取���取��������取������取���取���取���取�������取�����������������������������������������������������������取��������������取��������������������������������������������������取"
2292637,What is the color of the shirt that the passenger is wearing?," # assumes one shirt and one passenger
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    passenger_patches = image_patch.find(""passenger"")
    if len(shirt_patches) == 0 or len(passenger_patches) == 0:
        # If no shirt or passenger is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt that the passenger is wearing?"")
    shirt_patch = shirt_patches[0]
    passenger_patch = passenger_patches[0]
    if shirt_patch.horizontal_center > passenger_patch.horizontal_center:
        return shirt_patch.simple_query(""What is the color of the shirt that the passenger is wearing?"")
    else:
        return passenger_patch.simple_query(""What is the color of the shirt that the passenger is wearing?"") # crop would include the shirt so keep it in the query��������取���������取���������������������取����������������取����������������������������取���取�������������������������������������������������������������������������������取�����������������������取��������������������������取����������������������������������������������������������取������取�����取����������取��������������������������������取����取����取��������取"
9175259,What is the chair made of?," # returns the material of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What is the chair made of?"")
    return chair_patches[0].simple_query(""What is the chair made of?"") # crop would include the chair so keep it in the query��取��������取���������������取����取�������������������������取�����������������取�����取��������������������������������������������������取���取������取����取�������取����取���取�����取������������������������������������������������������������������������������������取��������取������������������������������������������������������������������������������������取��������������������取���������取���������取�����取�����������取����������取���������取����取�����取��������������取������取"
8714882,How big is the carrot in the top of the picture?," # returns the size of the carrot
    image_patch = ImagePatch(image)
    carrot_patches = image_patch.find(""carrot"")
    # Question assumes only one carrot patch
    if len(carrot_patches) == 0:
        # If no carrot is found, query the image directly
        return image_patch.simple_query(""How big is the carrot in the top of the picture?"")
    carrot_patch = carrot_patches[0]
    return carrot_patch.simple_query(""How big is the carrot in the top of the picture?"") # crop would include the carrot so keep it in the query�������������������������取����取���������������������������������������������取����取������取��������������������������取������取���������������������������������������������取�����取������取������取������������������������取����取����取�����������������������������������������������������������������������������������取��������������������������������������取"
1638685,What is the name of the vegetable that is on the yellow food?," # assumes only one yellow food patch
    image_patch = ImagePatch(image)
    yellow_food_patches = image_patch.find(""yellow food"")
    if len(yellow_food_patches) == 0:
        # If no yellow food is found, query the image directly
        return image_patch.simple_query(""What is the name of the vegetable that is on the yellow food?"")
    yellow_food_patch = yellow_food_patches[0]
    vegetable_patches = image_patch.find(""vegetable"")
    for vegetable_patch in vegetable_patches:
        if vegetable_patch.upper > yellow_food_patch.upper:
            return vegetable_patch.simple_query(""What is the name of the vegetable that is on the yellow food?"")
    return ""no vegetable is on the yellow food"" # if no vegetable is on the yellow food, return this messageERCHANTABILITY: handle this case more elegantly overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting overposting"
5828256,Is the clock on a tower?," # assumes one clock and one tower
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    tower_patches = image_patch.find(""tower"")
    if len(clock_patches) == 0 or len(tower_patches) == 0:
        return ""no""
    clock_patch = clock_patches[0]
    tower_patch = tower_patches[0]
    return bool_to_yesno(clock_patch.horizontal_center > tower_patch.horizontal_center) # assumes clock is on the right of the towerERCHANTABILITY: This function assumes there is exactly one clock and one tower, which may not always be the case. It's best to handle cases where multiple objects are found.ERCHANTABILITY:initComponentserusform���取��������������������取������������取��������������取��取���取������������������取�����取����取�������������������������取�������������������������������������取������������������������������������������������������������������取����������取������取���取������������取�����������取�����������������������������������������������������������������������������������取��������������取�����取�����������取�����取���取����取�������取����������取"
18937563,What kind of animal is orange?," # returns the name of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What kind of animal is orange?"")
    return animal_patches[0].simple_query(""What kind of animal is orange?"") # crop would include the color so keep it in the query����������������������取������取������������取����取�����������������取��������������取���取�����������������������������������取��������������������������������������������������取���取�����������取�����取�������取����取����取��������������������������������������������������������������������������������取����取����������������取���取������������������������取�����取����取����取��������取������������������取"
14360113,What is the smiling woman holding?," # assumes one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What is the smiling woman holding?"")
    woman_patch = woman_patches[0]
    object_patches = image_patch.find(""object"")
    # Question assumes only one object patch
    if len(object_patches) == 0:
        return image_patch.simple_query(""What is the smiling woman holding?"")
    object_patch = object_patches[0]
    if object_patch.horizontal_center > woman_patch.horizontal_center:
        return object_patch.simple_query(""What is the smiling woman holding?"")
    return woman_patch.simple_query(""What is the smiling woman holding?"") # crop would include the object so keep it in the query������������取����������������取��取������������取������������取����取�������������������取�����取�����������������������������取�����������������������������������������取�������������取�����������取�������取�������取����取����取�����取��������取������取�������������������������������������������������取�����������������������������取���取������取����取������������������取�����������取��������������取"
593188,Is the hair short?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the hair short?"")
    return bool_to_yesno(person_patches[0].verify_property(""hair"", ""short"")) # crop would include the hair so keep it in the query�����取��������������������������������������������������������������������取���取�������������������������������取�����������������������������������������取������取�����������������取�������取�����取���������������������取�������������������������������������������������������������������������������取�����取�����������取������取�������������������������������������������������������������������������������������������������������取�������取"
10824666,Are there ladies to the left of the man that is wearing shorts?," # assumes one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there ladies to the left of the man that is wearing shorts?"")
    man_patch = man_patches[0]
    is_wearing_shorts = man_patch.simple_query(""Is the man wearing shorts?"") == ""yes""
    if not is_wearing_shorts:
        return ""no""
    lady_patches = image_patch.find(""lady"")
    for lady_patch in lady_patches:
        if lady_patch.horizontal_center < man_patch.horizontal_center:
            return ""yes""
    return ""no""������������取����������取��������������������������������������������取���取�����������������������������������������������������������取�������������取�������取�����取����取������取����取���������取����������������取������取����取��������������������������������������������������������取���取����取����取���������������������取������������取���取��������������取"
1890604,Is the gray car to the left or to the right of the garbage bin?," # assumes one garbage bin and one gray car
    image_patch = ImagePatch(image)
    gray_car_patches = image_patch.find(""gray car"")
    garbage_bin_patches = image_patch.find(""garbage bin"")
    if len(gray_car_patches) == 0 or len(garbage_bin_patches) == 0:
        return image_patch.simple_query(""Is the gray car to the left or to the right of the garbage bin?"")
    gray_car_patch = gray_car_patches[0]
    garbage_bin_patch = garbage_bin_patches[0]
    if gray_car_patch.horizontal_center < garbage_bin_patch.horizontal_center:
        return ""left""
    else:
        return ""right""����������������取����������������������������������取�����������������������������������������������取����取�������������������������������������������������取����取�������������������取��������������������������������������������������������������取���������取��������取���������������取�������������取����取������取����������������������������������取�����取"
7574939,Is there any table or plate that is white?," # returns yes or no
    image_patch = ImagePatch(image)
    is_table = image_patch.exists(""table"")
    is_plate = image_patch.exists(""plate"")
    if is_table or is_plate:
        return ""yes""
    return ""no""�����取��������������������������������取������������取���取��������取����������������������������������������������������取��������������������������������取�����������取�������������取���取�����取�������取�����������取���取�������������������������������������������������������������������������������������������������取��������取�����取������取������������取���取���取���取�����取"
12252101,Is it outdoors?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""outdoor"", ""outdoor"")) # assumes the property is ""outdoor"" and the object is ""outdoor""���取����������������������������取������取������������������������������������������取���取���取�������������������������������取������取���������������������������������������������������取�����取����取������取������������������������������������������������������������������������������������取�����取�������������取������������������������������������������������������������������������������������������������������������������������������������取���������取������取����取������取������������������������������取"
6943442,What cooking utensil is on the oven?," # assumes only one oven patch
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""What cooking utensil is on the oven?"")
    oven_patch = oven_patches[0]
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    for cooking_utensil_patch in cooking_utensil_patches:
        if cooking_utensil_patch.vertical_center == oven_patch.vertical_center:
            return cooking_utensil_patch.simple_query(""What cooking utensil is on the oven?"")
    return ""no cooking utensil is on the oven"" # if no cooking utensil is on the oven, return this messageERCHANTABILITY: return ""no cooking utensil is on the oven"" # if no cooking utensil is on the oven, return this messageERCHANTABILITYERCHANTABILITY�������������������������取�����������取���取�����������������取����取�����������������取������������������������������������������取�����������������������������取���取���������������������取�������取�������取��������������������取����取�����������������������������������������������������取������取�����取��������������������������取�����取�����������取�������������������取"
2977077,The propeller that looks red is what pattern?," # assumes one propeller patch
    image_patch = ImagePatch(image)
    propeller_patches = image_patch.find(""propeller"")
    if len(propeller_patches) == 0:
        # If no propeller is found, query the image directly
        return image_patch.simple_query(""The propeller that looks red is what pattern?"")
    propeller_patch = propeller_patches[0]
    return propeller_patch.best_text_match([""stripes"", ""dots"", ""solid""]) # crop would include the pattern so keep it in the query��������������������������取�����������取��������������������������������������取������取�������������������������������取���取����取���取��������������������������������������������取����取������取������取�������������������������������������������������������������������������������取���������������������取������取�����������������取��������取����取"
11190306,Which kind of animal is to the left of the train?," # assumes one train patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center < image_patch.find(""train"")[0].horizontal_center:
            return animal_patch.simple_query(""What kind of animal is to the left of the train?"")
    return ""no animal to the left of the train"" # if no animal is found, query the image directly
����������������取������������������取����������������取���取����取��������������������取������������������������取�������取��������取�������������������������������������取���取������取��������������������������������������������������������������������������������������������������取������������������������取���取���取���取���取����取���取��������������取�������取"
5107190,Do you see both an airplane and a truck?," # returns yes or no
    image_patch = ImagePatch(image)
    is_airplane = image_patch.exists(""airplane"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_airplane and is_truck)������取����������取��取������取������������������������������取���取���������������������取�������������������������������取�����取������取���取������������������������������������������取���������取�����取�����������取�����取������取����取���取����取����取���������������������������������������������������������������������������������������������������取�����取��������������取�����������取����取"
4360982,How old is the child?," # returns the age of the child
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""How old is the child?"")
    return child_patches[0].simple_query(""How old is the child?"") # crop would include the child so keep it in the query������������������������取����������������取����������������取��������������������������������������������������取�������������������������������������������������������取�������取���取��������������取���������������������������������������������������������������取�������取�������������������取�����取���取������������取��������取��������������取����取�������������取"
12536783,What kind of animal is in front of the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the pole?"") # crop would include the pole so keep it in the query���取������������������取�������������������������������������取�������������������������������������������������取���������������������取�������������������������������取����取����取��������取�����取����取����取��������������������������������������������������������������������取��取�����������������取�������取�����取���取�����取������取���������取���取�����取�������������������������������������������������������������������������������取�������������������������取"
443846,Are the glasses to the right or to the left of the man that is wearing a t-shirt?," # assumes one man and one pair of glasses
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the glasses to the right or to the left of the man that is wearing a t-shirt?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left""����������������������������������������������取����取�����������������������取���������������������取������取����取����取���取�����������������������������������������取��������取���������取�����������取��������������������������������������������������������������������������取��取��取�����取���取����������������������取������取����取����������������取��取����取"
18655269,Which room is it?," # room is a property of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"") # room is a property of the image, so ask directlyніцип�����取��������������������������������������取���取���取����������������������������������������取����������取�������������������取�������������取����取�������������������������������������������������������������取��������取��������������取�����������取�����������������������������������������������������������������������������������������������������������������取�����取����取�����取���取�����取����取�������������������取�����������������取�������������������取"
7405860,Is it indoors?," # assumes the image is a single image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""scene"", ""indoors"")) # scene is a property of the image, not the objects in the image
����取����取����������������������������������取����������������������取������取���取���������������������������������������������������������������取��������取�������������������������������������������������������������������������������������������取���取���取�������取�������取���取�������������取����取����取�������������������������������������������������������������������������������������������������������������������取���������取�������������������取����取����取����取���取�������取���取������取������取�����取����取����取����������取�������取���取"
1705569,Does the pot on top of the stove look black?," # assumes one pot and one stove
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    stove_patches = image_patch.find(""stove"")
    # Question assumes only one pot and one stove patch
    if len(pot_patches) == 0 or len(stove_patches) == 0:
        # If no pot or stove is found, query the image directly
        return image_patch.simple_query(""Does the pot on top of the stove look black?"")
    pot_patch = pot_patches[0]
    stove_patch = stove_patches[0]
    if pot_patch.vertical_center < stove_patch.vertical_center:
        return bool_to_yesno(pot_patch.verify_property(""pot"", ""black""))
    else:
        return ""no"" # pot is not on top of the stove, so it cannot be blackERCHANTABILITYERCHANTABILITY��������������������������������������取�������������取����������������������������取���取�������������������取��取��取��������取�����取������������������������������������������������������������������������取��������������������������������������������������������������������取�������������������取������取���取"
1028569,Are there both a cyclist and a helmet in the photo?," # returns a boolean
    image_patch = ImagePatch(image)
    is_cyclist = image_patch.exists(""cyclist"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_cyclist and is_helmet)��������取������取����������������������������������������取����������������������取�������������������������取�������取��������������������������������������������取����������取����取�����取�������取��������������取�����������������������������������������������������������������������������������������������������取�������取�������取���������取����取���取��������取����取��������取�����取��������取�����取"
13954115,Are there any men to the left of the person in the crowd?," # assumes one person in the crowd
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Are there any men to the left of the person in the crowd?"")
    person_patch = person_patches[0]
    man_patches = image_patch.find(""man"")
    for man_patch in man_patches:
        if man_patch.horizontal_center < person_patch.horizontal_center:
            return ""yes""
    return ""no""�������������������取�����������������取��������������取������������������������取����������������������������������取������������������������������������������取����取�����������取��������取�������取�����������取����������������������������������������������������取���������������取���取����������取���������������取�����取���������������������取"
12436797,What kind of device is to the left of the keyboard?," # assumes only one device and one keyboard
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    keyboard_patches = image_patch.find(""keyboard"")
    if len(device_patches) == 0 or len(keyboard_patches) == 0:
        # If no device or keyboard is found, query the image directly
        return image_patch.simple_query(""What kind of device is to the left of the keyboard?"")
    device_patch = device_patches[0]
    keyboard_patch = keyboard_patches[0]
    if device_patch.horizontal_center < keyboard_patch.horizontal_center:
        return device_patch.simple_query(""What kind of device is to the left of the keyboard?"")
    return device_patch.simple_query(""What kind of device is to the right of the keyboard?"") # crop would include the keyboard so keep it in the query����������������取���������������������取�����������������������������������������取�������������������������取���取���取��������������������������������������������������取���������取����取��������取���取�������取������������������������������������������������������������取���������取����������取����取�����������������取������取�����取����取������取����取�������取"
1017626,Who is inside the train?," # assumes one train patch
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""Who is inside the train?"")
    train_patch = train_patches[0]
    person_patches = train_patch.find(""person"")
    if len(person_patches) == 0:
        return ""no one""
    return person_patches[0].simple_query(""Who is inside the train?"") # crop would include the person so keep it in the query���������取��取������������������取��������������取��取��取�����������取����������������������取���取�����取��������������������取���取����������������������������������������������������������取�������������������取�������取���取���取�������取�����取�����取�����������������������������������������������������������������������������������取���取�������取����取�������取����取�������������������取���������取����取"
7650014,Which place is it?," # assumes only one place
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"") # assumes only one place
����������取������������������������取������������������������������������取���������������������������取��������取�����������������������������������������������������������取�������取���������取����������������������������������������������������������������������取����取�����取����取���取���������取���取���取������取����������������取������������取���������������������������取������������������������������������������������������������������������������������������������������������������������������������������������取��取�����������取"
15889871,What is the person to the left of the car doing?," # assumes one person and one car
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    car_patches = image_patch.find(""car"")
    if len(person_patches) == 0 or len(car_patches) == 0:
        # If no person or car is found, query the image directly
        return image_patch.simple_query(""What is the person to the left of the car doing?"")
    person_patch = person_patches[0]
    car_patch = car_patches[0]
    if person_patch.horizontal_center < car_patch.horizontal_center:
        return person_patch.simple_query(""What is the person to the left of the car doing?"")
    return person_patch.simple_query(""What is the person to the right of the car doing?"") # crop would include the car so keep it in the query�������������������������������������取������������������������������������取������取����������������取�����������������������取���������������������������������������取����������取����������取�����������������取���取�����取������取�����取�����������������������������������������������取����取���取�����������������取����������取����取������取����取�����取�����取����取�������取�����取���取"
1310985,Is the yellow vehicle to the left of a lamp?," # assumes only one lamp and one yellow vehicle
    image_patch = ImagePatch(image)
    yellow_vehicle_patches = image_patch.find(""yellow vehicle"")
    lamp_patches = image_patch.find(""lamp"")
    if len(yellow_vehicle_patches) == 0 or len(lamp_patches) == 0:
        return ""no""
    yellow_vehicle_patch = yellow_vehicle_patches[0]
    lamp_patch = lamp_patches[0]
    return bool_to_yesno(yellow_vehicle_patch.horizontal_center < lamp_patch.horizontal_center) # left if less than, right if greater thanturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstileturnstile"
646935,Which room is it?," # room is a property of the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"") # room is a property of the image, so ask directlyніцип�����������取�����������取�������������取����������������������������取���������取���������������取������取����������������������������������������取�������������������������������������������������������������取����������取����取����������取����������������������������������������������������������������������������������������������取������取�����������取���取������������������取�������取����������取����取�����取�����取����取����取������取��������������������取�������������������������������������������������������取"
9495263,Is the woman to the left or to the right of the man that wears a cap?," # assumes one man and one woman
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one man and one woman patch
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the man that wears a cap?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < man_patch.horizontal_center:
        return ""left""
    else:
        return ""right""�����取����������������取��������������������������取���取��������������������取���������������������������取�����取����������������������������取������������������取�������������������������取���取�����������������������������������������������������������������取�������������������取�����取����取����������取���取���取����������������������取���取"
946016,Do you think the animal that is sitting-down is small or large?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Do you think the animal that is sitting-down is small or large?"")
    animal_patch = animal_patches[0]
    return animal_patch.simple_query(""Do you think the animal that is sitting-down is small or large?"") # crop would include the sitting-down so keep it in the query���������������������������取������������取�������������������������������������取���������������������������������取��������������������������������������������������取�����������取������取����取�����取���取���������取����取�����取������取����������������������������������������������������������������������取������������������取���取���取�����取����������取���������取�������取"
9617920,Do the garbage can and the pan have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    garbage_can_patches = image_patch.find(""garbage can"")
    # Question assumes only one garbage can patch
    if len(garbage_can_patches) == 0:
        # If no garbage can is found, query the image directly
        return image_patch.simple_query(""Do the garbage can and the pan have the same color?"")
    garbage_can_patch = garbage_can_patches[0]
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        return ""no""
    pan_patch = pan_patches[0]
    return bool_to_yesno(garbage_can_patch.verify_property(""garbage can"", ""color"") == pan_patch.verify_property(""pan"", ""color"")) # crop would include the color so keep it in the query��������������������������������������取������������������取����������������������取�����取����取���������������������������取�������取���������取����������������������������������������取��取��取�������取��������������������������������������������������������������������������������������������������取�������������取����取���取��������取������取���������������������取�������取"
3578781,Which kind of clothing is black?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query
    # If no clothing is black, pick the first clothing
    return clothing_patches[0].simple_query(""Which kind of clothing is black?"") # crop would include the black so keep it in the query��������取����������������取���取�����������������������������������������������取���������取������������������������取����������������������������������������������������������������取������取����取�������������������取���取���取���������������������������������������������������������������������取����取���取������取����取���������取����取�������取��������������������取��������取"
4695656,What is the lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lamp on?"") # crop would include the object so keep it in the query������取�����������������取����取��������������取���取�����������������取���取��������������������取���������������������������取����取����取���������取��������������������������������������������取����������������取�������取��������取����取������������取�����取����取����������������������������������������������������������������������������������������������������������取����������取���取��������������取��������取�����取���取�������������取����取"
13696926,The homes that are to the left of the people have what color?," # assumes only one home and one person
    image_patch = ImagePatch(image)
    home_patches = image_patch.find(""home"")
    person_patches = image_patch.find(""person"")
    # Question assumes only one home and one person patch
    if len(home_patches) == 0 or len(person_patches) == 0:
        # If no home or person is found, query the image directly
        return image_patch.simple_query(""The homes that are to the left of the people have what color?"")
    home_patch = home_patches[0]
    person_patch = person_patches[0]
    if home_patch.horizontal_center < person_patch.horizontal_center:
        return home_patch.simple_query(""What color is the home?"")
    else:
        return ""no"" # home is not to the left of the person, so no color is returnedERCHANTABILITYIGNORED
������取����������取����������������������������取�����������������取���������取���������������������取������取���������取��������������������������������������������������取��������取�������������取�����������������取����������������������������������������������������取����取�����������取����取����取�������������取���取����������取�����������取�����������������������������取"
16946079,What is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"") # crop would include the wall so keep it in the query���������������取�����������������������������取�����������取���������������������������取����取�����������������������������������取������������������������������������������������������������取���取��������������������取�������������取���������������������������������������������������������取�����������取���������������取����������取���取����取����取����������取���取����������������������������取"
18986542,Is the napkin on the right side?," # assumes one napkin patch
    image_patch = ImagePatch(image)
    napkin_patches = image_patch.find(""napkin"")
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch.simple_query(""Is the napkin on the right side?"")
    napkin_patch = napkin_patches[0]
    if napkin_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no""��������取��������������������������������������������取�����������������������取����取����取���������������������������������������������������������������������������������������取�����取���取���取�����取���取��������取�����������������������������������������������������������������������������取��������������取����������取���取��������取��������取�����取�������������������������������������取������取"
11513897,What appliance is the label on?," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What appliance is the label on?"")
    return appliance_patches[0].simple_query(""What appliance is the label on?"") # crop would include the label so keep it in the query�������������������������取�������������������������������取��������������������取�����������取�������������������������取����������������������������������������������取���������取�����取�������取��������取���������������取�������������取������������������������������������������������������������取�������������������取�������取����������������取�������������取�����取"
8240644,What is the color of the bird's tail?," # returns the color of the bird's tail
    image_patch = ImagePatch(image)
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch.simple_query(""What is the color of the bird's tail?"")
    return bird_patches[0].simple_query(""What is the color of the bird's tail?"") # crop would include the tail so keep it in the query�����������������������������������������������������取��������������������������取���取������取����������������������取������������������������������������������������������取�������取���������������������������������������������������������������������������������������������������取���取�����������������取"
5245080,Is he to the right or to the left of the camera?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is he to the right or to the left of the camera?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left""�����������取���������������������������������������取�������������������������取�����������取�����������������取��������������������������������������������������取���取���������������取�������取����取�����������������������������������������������������������������������������������取��取������������������取��������取�����������取����取�����������������������取"
17800894,Are there both a window and a door in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)����������������������取��������������������������������取�����������������������������������������������������取������取�����������������������������������������������取�����������取����取����������取����取������������������������������������������������������������������取������������������取�����取���取�����������取��������������取����������取�������������取���取���取�����取��������������取"
191027873,Where is the snowboard?," # returns the position of the snowboard
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""Where is the snowboard?"")
    return snowboard_patches[0].simple_query(""Where is the snowboard?"") # crop would include the snowboard so keep it in the query���������������������取���取��������������取������������������取���取��������������������������取�����������������������取������������取���������������������������������������取�������取����������取��������取����取����取�����取��������取����������������������������������������������������������������������������取���取���������������������������������取�����取������取"
1964079,Are the box and the paper the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Are the box and the paper the same color?"")
    box_patch = box_patches[0]
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        return ""no""
    paper_patch = paper_patches[0]
    return bool_to_yesno(box_patch.verify_property(""box"", ""color"") == paper_patch.verify_property(""paper"", ""color"")) # crop would include the color so keep it in the query��������������取���取��取��������取������������取���取���������������取�������������������取����������������������������取�������取�������������������������������������������取��������取��������取���取�����取���取������取������������取���取������������取���������������������������������������������������������������������������������取�������取�������取����取��������������������������取��������������取"
