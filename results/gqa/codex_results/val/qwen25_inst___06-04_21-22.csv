sample_id,query,generated_code
13151559,Is the large hair both white and soft?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the large hair both white and soft?"", ""no"")
    for hair_patch in hair_patches:
        is_white = hair_patch简单 query(""Is the hair white?"", ""yes"")
        is_soft = hair_patch简单 query(""Is the hair soft?"", ""yes"")
        if is_white and is_soft:
            return hair_patch简单 query(""Is the hair white?"", ""yes"")
    return ""no"""
18370956,Who is eating the cupcake?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Who is eating the cupcake?"", ""Is the cupcake eaten by the man?"")"
6436809,What is the guy wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the guy wearing?"", "" what"")
    for person_patch in person_patches:
        what patch = person_patch简单 query(""What is the guy wearing?"", "" what"")
        if what_patch == "" what"":
            return person_patch简单 query(""What is the guy wearing?"", "" what"")
    # If no person is wearing what, pick the first person
    return person_patches[0].simple query(""What is the guy wearing?"", "" what"")"
117037,Which kind of food is to the right of the cabbage?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""Which kind of food is to the right of the cabbage?"", ""cabbage"")
    for food_patch in food_patches:
        if food_patch horizontal_center > image_patch horizontal_center:
            return food_patch简单 query(""Which kind of food is to the right of the cabbage?"", ""cabbage"")
    return ""no"""
758936,Who wears the cap?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cap_patches = image_patch find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch_simple_query(""Who wears the cap?"", ""cap"")
    for cap_patch in cap_patches:
        who_wears_cap = (cap_patch简单 query(""Who wears the cap?"") == ""yes"")
        if who_wears_cap:
            return cap_patch简单 query(""Who wears the cap?"") # crop would include the cap so keep it in the query
    # If no cap is wearing a cap, pick the first cap
    return cap_patches[0].simple query(""Who wears the cap?"")"
111046440,Who is pointing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is pointing?"", ""pointing"")
    for person_patch in person_patches:
        is_pointing = (person_patch_simple_query(""Is the person pointing?"", ""pointing"") == ""yes"")
        if is_pointing:
            return person_patch_simple_query(""Who is pointing?"", ""pointing"") # crop would include the pointing so keep it in the query
    # If no person is pointing, pick the first person
    return person_patches[0].simple query(""Who is pointing?"", ""pointing"")"
15804389,Is the woman's hair short or long?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the woman's hair short or long?"", ""short"")
    for hair_patch in hair_patches:
        is_short = hair_patch_simple_query(""Is the hair short?"", ""short"")
        if is_short:
            return hair_patch_simple_query(""Is the hair short?"", ""short"")
    # If no hair is short, pick the first hair
    return hair_patches[0].simple query(""Is the hair short?"", ""short"")"
11445636,The women are watching who?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    women_patches = image_patch find(""women"")
    # Question assumes only one women patch
    if len(women_patches) == 0:
        # If no women is found, query the image directly
        return image_patch_simple_query(""The women are watching who?"", ""are watching"")"
17736165,Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?," # assumes only one gas stove and one dishwasher
    image_patch = Image Patch(image)
    gas_stove_patches = image_patch.find(""gas stove"")
    if len(gas_stove_patches) == 0:
        # If no gas stove is found, query the image directly
        return image_patch_simple_query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"", "" gas stove"")
    gas_stove_patch = gas_stove_patches[0]
    dishwasher_patches = image_patch find(""dishwasher"")
    if len(dishwasher_patches) == 0:
        return image_patch_simple query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"", "" dishwasher"")
    for dishwasher_patch in dishwasher_patches:
        if gas_stove_patch horizontal_center < dishwasher_patch horizontal_center:
            return ""yes""
    return ""no"""
1594898,What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?," # assumes only one piece of furniture and one baby
    image_patch = Image Patch(image)
    baby_patches = image_patch.find(""baby"")
    # Question assumes only one baby patch
    if len(baby_patches) == 0:
        # If no baby is found, query the image directly
        return image_patch_simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"", ""baby"")
    baby_patch = baby_patches[0]
    bed_sheet_color = image_patch simple query(""What is the color of the bed sheet?"", ""baby"")
    for piece_of_furniture in image_patch find(""piece of furniture""):
        if piece_of_furniture horizontal_center > baby_patch horizontal_center and piece_of_furniture color == bed_sheet_color:
            return piece_of_furniture name
    return ""no"""
758958,Is there either any red pillow or snowboard?," # red pillow or snowboard
    image_patch = Image Patch(image)
    red_pillow_patches = image_patch.find(""red pillow"")
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one red pillow patch and one snowboard patch
    if len(red_pillow_patches) == 0 and len(snowboard_patches) == 0:
        # If no red pillow or snowboard is found, query the image directly
        return image_patch_simple_query(""Is there either any red pillow or snowboard?"", ""red pillow or snowboard"")
    red_pillow_patch = red_pillow_patches[0]
    snowboard_patch = snowboard_patches[0]
    if red_pillow_patch horizontal_center < snowboard_patch horizontal_center:
        return ""red pillow""
    else:
        return ""snowboard"""
143816,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
13741513,Which side is the knife on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    knife_patches = image_patch find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch_simple_query(""Which side is the knife on?"", ""left"")
    for knife_patch in knife_patches:
        side = ""left"" if knife_patch horizontal_center < image_patch horizontal_center else ""right""
        return ""left"" if side == ""left"" else ""right"""
17829769,What is the computer mouse in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    mouse_patches = image_patch find(""mouse"")
    # Question assumes only one mouse patch
    if len(mouse_patches) == 0:
        # If no mouse is found, query the image directly
        return image_patch_simple_query(""What is the computer mouse in front of?"", ""no"")
    for mouse_patch in mouse_patches:
        is_in_front = mouse_patch simple query(""Is the mouse in front of?"") == ""yes""
        if is_in_front:
            return mouse_patch simple query(""What is the computer mouse in front of?"")"
17233738,What is the toddler holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toddler_patches = image_patch find(""toddler"")
    # Question assumes only one toddler patch
    if len(toddler_patches) == 0:
        # If no toddler is found, query the image directly
        return image_patch_simple_query(""What is the toddler holding?"", ""toddler"")
    for toddler_patch in toddler_patches:
        is_holding = (toddler_patch_simple_query(""Is the toddler holding?"") == ""yes"")
        if is_holding:
            return toddler_patch_simple_query(""What is the toddler holding?"", ""toddler"")
    # If no toddler is holding, return ""toddler""
    return ""toddler"""
2951242,Is the gray shirt sleeveless or short sleeved?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    gray_shirt_patches = image_patch.find(""gray shirt"")
    # Question assumes only one gray shirt patch
    if len(gray_shirt_patches) == 0:
        # If no gray shirt is found, query the image directly
        return image_patch_simple_query(""Is the gray shirt sleeveless or short sleeves"")
    for gray_shirt_patch in gray_shirt_patches:
        is_sleeved = (gray_shirt_patch简单 query(""Is the gray shirt sleeveless or short sleeves"") == ""short sleeves"")
        if is_sleeved:
            return gray_shirt_patch简单 query(""Is the gray shirt sleeveless or short sleeves"") # crop would include the sleeves so keep it in the query
    # If no gray shirt is short sleeves, pick the first gray shirt
    return gray_shirt_patches[0].simple query(""Is the gray shirt sleeveless or short sleeves"")"
15241795,Is the tank top red?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tank_patches = image_patch.find(""tank"")
    # Question assumes only one tank patch
    if len(tank_patches) == 0:
        # If no tank is found, query the image directly
        return image_patch_simple_query(""Is the tank top red?"", ""red"")
    for tank_patch in tank_patches:
        is_top_red = (tank_patch简单 query(""Is the tank top red?"") == ""red"")
        if is_top_red:
            return tank_patch简单 query(""Is the tank top red?"") # crop would include the top so keep it in the query
    # If no tank top is red, return ""no""
    return ""no"""
13885234,Which kind of animal is in front of the rocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of animal is in front of the rocks?"", ""Is there a fish in front of the rocks?"")"
19335715,Do you see any grapes?," # returns ""yes"" if any grapes are found, ""no"" otherwise
    image_patch = Image Patch(image)
    return image_patch_exists(""grapes"")"
6455591,What type of furniture is white?," # returns ""white"" if white furniture is found, otherwise ""no""
    image_patch = Image Patch(image)
    white_patches = image_patch find(""white"")
    # Question assumes only one white patch
    if len(white_patches) == 0:
        return ""no""
    return ""white"""
1033761,What is the blue clothing item?," # assumes only one blue clothing item
    image_patch = Image Patch(image)
    blue_clothing_patches = image_patch.find(""blue clothing"")
    if len(blue_clothing_patches) == 0:
        # If no blue clothing is found, query the image directly
        return image_patch_simple_query(""What is the blue clothing item?"", ""blue clothing"")
    return blue_clothing_patches[0].simple_query(""What is the blue clothing item?"", ""blue clothing"")"
17726504,Who is wearing the glasses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the glasses?"", ""no"")
    for person_patch in person_patches:
        is_wearing_glasses = (person_patch_simple_query(""Is the person wearing glasses?"") == ""yes"")
        if is_wearing_glasses:
            return person_patch_simple_query(""Who is wearing the glasses?"", ""yes"")
    # If no person is wearing glasses, pick the first person
    return person_patches[0].simple_query(""Who is wearing the glasses?"", ""no"")"
13112902,Is the woman wearing a bracelet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman wearing a bracelet?"", ""no"")
    for woman_patch in woman_patches:
        is_wearing_bracelet = (woman_patch_simple_query(""Is the woman wearing a bracelet?"", ""yes"")
        if is_wearing_bracelet:
            return woman_patch_simple_query(""Is the woman wearing a bracelet?"", ""yes"")
    # If no woman is wearing a bracelet, pick the first woman
    return woman_patches[0].simple_query(""Is the woman wearing a bracelet?"", ""no"")"
698766,What is the food that is not white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What is the food that is not white?"", ""white"")
    for food_patch in food_patches:
        is_white = (food_patch简单 query(""Is the food white?"") == ""yes"")
        if not is_white:
            return food_patch简单 query(""What is the food that is not white?"", ""white"")"
1332276,Are there both a cup and a bottle in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    cup_patches = image_patch find(""cup"")
    bottle_patches = image_patch find(""bottle"")
    # Question assumes only one cup patch and one bottle patch
    if len(cup_patches) == 0 or len(bottle_patches) == 0:
        # If no cup or bottle is found, query the image directly
        return image_patch_simple_query(""Are there both a cup and a bottle in the picture?"", ""no"")
    return ""yes"""
12633088,What color is that glove?," # color is a property of the glove
    image_patch = Image Patch(image)
    glove_patches = image_patch find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch_simple_query(""What color is that glove?"", ""color"")
    return glove_patches[0].verify_property(""glove"", ""color"")"
18103787,Who is holding the helmet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is holding the helmet?"", ""person"")
    for person_patch in person_patches:
        is_holding_helmet = (person_patch_simple_query(""Is the person holding the helmet?"", ""person"") == ""yes"")
        if is_holding_helmet:
            return person_patch_simple_query(""Who is holding the helmet?"", ""person"")
    # If no person is holding a helmet, pick the first person
    return person_patches[0].simple_query(""Who is holding the helmet?"", ""person"")"
2143247,What is the name of the food to the left of the donut that looks little?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What is the name of the food to the left of the donut that looks little?"", ""no"")
    for food_patch in food_patches:
        if food_patch horizontal_center < image_patch horizontal_center:
            return food_patch简单 query(""What is the name of the food to the left of the donut that looks little?"", ""no"")
    # If no food is to the left of the donut, return ""no""
    return ""no"""
3767951,Is the clock to the right or to the left of the man on the left?," # clock is to the right of the man on the left
    image_patch = Image Patch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_query(""Is the clock to the right or to the left of the man on the left?"", "" clock to the right of the man on the left"")
    clock_patch = clock_patches[0]
    man_patches = image_patch finds(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        return ""no""
    for man_patch in man_patches:
        if man_patch horizontal center < clock_patch horizontal center:
            return ""no""
    return ""yes"""
17655180,What's the sticker on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sticker_patches = image_patch find(""sticker"")
    # Question assumes only one sticker patch
    if len(sticker_patches) == 0:
        # If no sticker is found, query the image directly
        return image_patch_simple_query(""What's the sticker on?"", ""sticker"")
    for sticker_patch in sticker_patches:
        return sticker_patch简单 query(""What's the sticker on?"")"
3468831,In front of what is this table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    table_patches = image_patch find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch_simple_query(""In front of what is this table?"", "" table"")
    for table_patch in table_patches:
        return table_patch简单 query(""In front of what is this table?"")"
5888523,Do you see people to the right of the still car?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""Do you see people to the right of the still car?"", ""no"")
    for people_patch in people_patches:
        if people_patch horizontal_center > image_patch horizontal_center:
            return ""yes""
    return ""no"""
7188981,Does the giraffe look adult?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch_simple_query(""Does the giraffe look adult?"", ""no"")
    for giraffe_patch in giraffe_patches:
        adult_patches = image_patch find(""adult"")
        for adult_patch in adult_patches:
            if adult_patch horizontal_center > giraffe_patch horizontal_center:
                return ""yes""
    return ""no"""
16852802,Of what color are the pants?," # color of pants is not specified so need to check if it is red or blue
    image_patch = Image Patch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch_simple_query(""Of what color are the pants?"", ""red or blue"")
    if pants_patches[0].simple_query(""Is the pants red?"") == ""yes"":
        return ""red""
    else:
        return ""blue"""
9619158,What kind of watercraft is full of men?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    watercraft_patches = image_patch.find(""watercraft"")
    # Question assumes only one watercraft patch
    if len(watercraft_patches) == 0:
        # If no watercraft is found, query the image directly
        return image_patch_simple_query(""What kind of watercraft is full of men?"", ""watercraft"")
    for watercraft_patch in watercraft_patches:
        is_full_of_men = watercraft_patch simple query(""Is the watercraft full of men?"") == ""yes""
        if is_full_of_men:
            return watercraft_patch简单 query(""What kind of watercraft is full of men?"", ""watercraft"")
    # If no watercraft is full of men, return ""no""
    return ""no"""
3625225,On which side of the picture are the boats?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    boats_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boats_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch_simple_query(""On which side of the picture are the boats?"", ""left"")
    if boats_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
7126345,Does the elephant to the left of the other elephant have large size?," # assumes only one elephant patch
    image_patch = Image Patch(image)
    elephant_patches = image_patch.find(""elephant"")
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch_simple_query(""Does the elephant to the left of the other elephant have large size?"", ""no"")
    for elephant_patch in elephant_patches:
        if elephant_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
19834124,What is the girl holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What is the girl holding?"", "" what"")
    for girl_patch in girl_patches:
        what_patch = girl_patch简单 query(""What is the girl holding?"", "" what"")
        if what_patch == "" what"":
            return girl_patch简单 query(""What is the girl holding?"", "" what"")
    # If no girl is holding anything, return ""no""
    return ""no"""
4617704,Does the toilet seat that is not down appear to be white and open?," # assumes only one toilet seat patch
    image_patch = Image Patch(image)
    toilet_seat_patch = image_patch find(""toilet seat"")
    if len(toilet_seat_patch) == 0:
        # If no toilet seat is found, query the image directly
        return image_patch_simple_query(""Does the toilet seat that is not down appear to be white and open?"", ""no"")
    if toilet_seat_patch[0]. simple_query(""Is the toilet seat white?"") == ""yes"" and toilet_seat_patch[0]. simple_query(""Is the toilet seat open?"") == ""yes"":
        return ""yes""
    return ""no"""
5899539,Are there any bottles or mugs that are not purple?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    non_purple_patches = image_patch.find(""non_purple"")
    # Question assumes only one non_purple patch
    if len(non_purple_patches) == 0:
        # If no non_purple is found, query the image directly
        return image_patch_simple_query(""Are there any bottles or mugs that are not purple?"", ""non_purple"")
    for non_purple_patch in non_purple_patches:
        is_bottle = non_purple_patch simple query(""Is the object a bottle?"", ""bottle"")
        is_mug = non_purple_patch simple query(""Is the object a mug?"", ""mug"")
        if is_bottle or is_mug:
            return non_purple_patch simple query(""Are there any bottles or mugs that are not purple?"", ""non_purple"")
    # If no non_purple object is a bottle or a mug, return ""no""
    return ""no"""
2631593,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
12228864,Do you see any men to the right of the person that is in the living room?," # assumes only one person in the living room
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Do you see any men to the right of the person that is in the living room?"", ""no"")
    for person_patch in person_patches:
        if person_patchhorizontal_center < image_patch horizontal_center:
            return ""no""
    return ""yes"""
111054378,Is the small couch to the right or to the left of the bottle?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch_simple_query(""Is the small couch to the right or to the left of the bottle?"", ""right"")
    for couch_patch in couch_patches:
        is_to_right = (couch_patch horizontal_center > image_patch horizontal_center)
        if is_to_right:
            return ""right""
    return ""left"""
9392411,Is the bottle to the right or to the left of the appliance on the left?," # assumes only one bottle patch
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Is the bottle to the right or to the left of the appliance on the left?"", ""left"")
    for bottle_patch in bottle_patches:
        appliance_patches = image_patch find(""appliance"")
        for appliance_patch in appliance_patches:
            if appliance_patch horizontal_center < bottle_patch horizontal_center:
                return ""left""
    return ""right"""
16753829,What type of animal is sitting in the container in the bottom of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What type of animal is sitting in the container in the bottom of the photo?"", "" bottom"")
    for animal_patch in animal_patches:
        if animal_patch vertical_center < image_patch_vertical_center:
            return ""bottom""
    return ""top"""
1345482,What is that train in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    train_patches = image_patch find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""What is that train in front of?"", "" train"")
    for train_patch in train_patches:
        train_patch简单 query(""What is that train in front of?"", "" train"")"
1527449,Are there cars to the right of the palm trees which are to the right of the girl?," # assumes only one girl patch
    image_patch = Image Patch(image)
    girl_patches = image_patch find(""girl"")
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""Are there cars to the right of the palm trees which are to the right of the girl?"", ""no"")
    girl_patch = girl_patches[0]
    palm_trees_patches = image_patch find(""palm trees"")
    if len(palm_trees_patches) == 0:
        return image_patch_simple_query(""Are there cars to the right of the palm trees which are to the right of the girl?"", ""no"")
    for palm_trees_patch in palm_trees_patches:
        if palm_trees_patch horizontal_center > girl_patch horizontal_center:
            cars_patches = image_patch find(""cars"")
            if len(cars_patches) == 0:
                return image_patch_simple query(""Are there cars to the right of the palm trees which are to the right of the girl?"", ""no"")
            for cars_patch in cars_patches:
                if cars_patch horizontal_center > palm_trees_patch horizontal_center:
                    return ""yes""
    return ""no"""
459445,In which part is the silver device?," # assumes only one silver device
    image_patch = Image Patch(image)
    silver_patches = image_patch.find(""silver"")
    if len(silver_patches) == 0:
        # If no silver is found, query the image directly
        return image_patch_simple_query(""In which part is the silver device?"", ""top"")
    if silver_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
11786203,What is the man on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man on?"", ""right"")
    for man_patch in man_patches:
        is_on_right = man_patch simple query(""Is the man on the right?"")
        if is_on_right:
            return man_patch simple query(""What is the man on?"")"
5200013,Is there a brown door or chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch_simple_query(""Is there a brown door or chair?"", ""brown"")
    for brown_patch in brown_patches:
        is_door = brown_patch simple query(""Is the brown patch a door?"", ""door"")
        is_chair = brown_patch simple query(""Is the brown patch a chair?"", ""chair"")
        if is_door or is_chair:
            return brown_patch simple query(""Is there a brown door or chair?"", ""brown"")
    # If no brown patch is a door or chair, return ""no""
    return ""no"""
131031372,What is the napkin in?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    napkin_patches = image_patch.find(""napkin"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch_simple_query(""What is the napkin in?"", ""in front of"")
    for napkin_patch in napkin_patches:
        return napkin_patch简单 query(""What is the napkin in?"", ""in front of"")"
1241681,Are there any people behind the white dessert?," # assumes only one white dessert patch
    image_patch = Image Patch(image)
    white_dessert_patches = image_patch.find(""white dessert"")
    if len(white_dessert_patches) == 0:
        # If no white dessert is found, query the image directly
        return image_patch_simple_query(""Are there any people behind the white dessert?"", ""no"")
    for white_dessert_patch in white_dessert_patches:
        people_patches = image_patch.find(""people"")
        for people_patch in people_patches:
            if people_patch_horizontal_center > white_dessert_patch_horizontal_center:
                return ""yes""
    return ""no"""
8730954,What type of animal do you think is in front of the curtain which is to the right of the radiator?," # returns ""no"" if no animal is found
    image_patch = Image Patch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch_simple_query(""What type of animal do you think is in front of the curtain which is to the right of the radiator?"", ""no"")
    for curtain_patch in curtain_patches:
        radiator_patches = image_patch find(""radiator"")
        for radiator_patch in radiator_patches:
            if radiator_patch horizontal_center < curtain_patch horizontal_center:
                animal_patches = image_patch find(""animal"")
                # Question assumes only one animal patch
                if len(animal_patches) == 0:
                    return image_patch简单 query(""What type of animal do you think is in front of the curtain which is to the right of the radiator?"", ""no"")
                for animal_patch in animal_patches:
                    if animal_patch horizontal_center > curtain_patch horizontal_center:
                        return ""yes""
    return ""no"""
8553578,What is the Pikachu doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the Pikachu doing?"", ""are"")"
16711804,"On which side is the car, the left or the right?","    
    image_patch = Image Patch(image)
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""On which side is the car, the left or the right?"", ""left"")
    if car_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
5546271,What is on the large mountains?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    large_mountain_patches = image_patch.find(""large mountain"")
    # Question assumes only one large mountain patch
    if len(large_mountain_patches) == 0:
        # If no large mountain is found, query the image directly
        return image_patch_simple_query(""What is on the large mountains?"", ""large mountain"")
    for large_mountain_patch in large_mountain_patches:
        return large_mountain_patch简单 query(""What is on the large mountains?"", ""large mountain"")"
5107295,What is in the sky?," return image_patch简单 query(""What is in the sky?"")"
123768,What kind of watercraft is the fruit on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fruit_patches = image_patch.find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch_simple_query(""What kind of watercraft is the fruit on?"", "" fruit"")
    for fruit_patch in fruit_patches:
        watercraft_patches = image_patch find(""watercraft"")
        for watercraft_patch in watercraft_patches:
            if watercraft_patch horizontal center > fruit_patch horizontal center:
                return watercraft_patch simple query(""What kind of watercraft is the fruit on?"", "" fruit"")
    # If no watercraft is found, return ""no""
    return ""no"""
1827218,Is the bottle in the bottom of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Is the bottle in the bottom of the image?"", ""bottom"")
    for bottle_patch in bottle_patches:
        if bottle_patch_vertical_center < image_patch_vertical_center:
            return ""no""
    return ""yes"""
10938155,What color is the sky?," return image_patch简单 query(""What color is the sky?"")"
4893512,Does the sail look white or red?,"    
    image_patch = Image Patch(image)
    sail_patches = image_patch find(""sail"")
    # Question assumes only one sail patch
    if len(sail_patches) == 0:
        # If no sail is found, query the image directly
        return image_patch_simple_query(""Does the sail look white or red?"", ""white red"")
    if sail_patches[0].best_text_match(['white', ""red""]) == ""white"":
        return ""white""
    else:
        return ""red"""
3662784,Do you see either any traffic lights or cars?," # returns ""yes"" if either traffic light or car is found
    image_patch = Image Patch(image)
    traffic_light_patches = image_patch.find(""traffic light"")
    cars_patches = image_patch.find(""car"")
    if len(traffic_light_patches) > 0 or len(cars_patches) > 0:
        return ""yes""
    return ""no"""
15515711,Are there any girls to the right of the yellow helmet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    yellow_helmet_patches = image_patch.find(""yellow helmet"")
    # Question assumes only one yellow helmet patch
    if len(yellow_helmet_patches) == 0:
        # If no yellow helmet is found, query the image directly
        return image_patch_simple_query(""Are there any girls to the right of the yellow helmet?"", ""yellow helmet"")
    for yellow_helmet_patch in yellow_helmet_patches:
        girls_patches = image_patch.find(""girl"")
        for girl_patch in girls_patches:
            if girl_patch horizontal_center > yellow_helmet_patch horizontal_center:
                return ""yes""
    return ""no"""
6315316,Which kind of furniture is in front of the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which kind of furniture is in front of the window?"", "" window"")"
17736488,What appliance is to the left of the faucet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch_simple_query(""What appliance is to the left of the faucet?"", ""left"")
    for appliance_patch in appliance_patches:
        if appliance_patch horizontal_center < image_patch horizontal_center:
            return appliance_patch简单 query(""What appliance is to the left of the faucet?"", ""left"")
    # If no appliance is to the left of the faucet, return ""no""
    return ""no"""
41050828,What is the color of the jacket?," # color of the jacket is red
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the color of the jacket?"")"
610914,Is the green boat to the right or to the left of the wood house?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    boat_patches = image_patch.find(""boat"")
    wood_house_patches = image_patch.find(""wood house"")
    # Question assumes only one boat patch and one wood house patch
    if len(boat_patches) == 0 or len(wood_house_patches) == 0:
        # If no boat or wood house is found, query the image directly
        return image_patch_simple_query(""Is the green boat to the right or to the left of the wood house?"", ""left"")
    for boat_patch in boat_patches:
        for wood_house_patch in wood_house_patches:
            if wood_house_patch horizontal_center > boat_patch horizontal_center:
                return ""left""
    return ""right"""
13158346,Is the woman in the bottom part of the picture?," return image_patch简单 query(""Is the woman in the bottom part of the picture?"")"
16318707,Are there either any colorful bikes or skateboards?," # assumes only one bike and one skateboard
    image_patch = Image Patch(image)
    is_bike = image_patch.exists(""bike"")
    is_skateboard = image_patch.exists(""skateboard"")
    return ""yes"" if is_bike or is_skateboard else ""no"""
2805654,Is the bag to the right or to the left of the bench?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""Is the bag to the right or to the left of the bench?"", ""right"")
    for bag_patch in bag_patches:
        bench_patches = image_patch find(""bench"")
        for bench_patch in bench_patches:
            if bag_patch horizontal_center > bench_patch horizontal_center:
                return ""right""
    return ""left"""
15315607,What do you think is in the sky?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What do you think is in the sky?"")"
2995829,What color is the truck near the gas station?," # color is a property of the object
    image_patch = Image Patch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch_simple_query(""What color is the truck near the gas station?"", ""color"")
    for truck_patch in truck_patches:
        return truck_patch verify_property(""truck"", ""color"")"
12140940,"What are the headphones on, a sofa or a desk?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    headsets_patches = image_patch.find(""headphones"")
    # Question assumes only one headphone patch
    if len(headsets_patches) == 0:
        # If no headphone is found, query the image directly
        return image_patch_simple_query(""What are the headphones on, a sofa or a desk?"", ""headphones"")
    for headphone_patch in headsets_patches:
        is_on_sofa = (headphone_patch simple query(""Is the headphone on a sofa?"") == ""yes"")
        if is_on_sofa:
            return ""sofa""
        is_on_desk = (headphone_patch simple query(""Is the headphone on a desk?"") == ""yes"")
        if is_on_desk:
            return ""desk""
    return ""no"""
727533,Does the bun look brown and toasted?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bun_patches = image_patch find(""bun"")
    # Question assumes only one bun patch
    if len(bun_patches) == 0:
        # If no bun is found, query the image directly
        return image_patch_simple_query(""Does the bun look brown and toasted?"", ""no"")
    for bun_patch in bun_patches:
        is_brown = (bun_patch_simple_query(""Is the bun brown?"") == ""yes"")
        is_toasted = (bun_patch_simple_query(""Is the bun toasted?"") == ""yes"")
        if is_brown and is_toasted:
            return ""yes""
    return ""no"""
61044602,What is in the brown basket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch_simple_query(""What is in the brown basket?"", ""brown"")
    for basket_patch in basket_patches:
        if basket_patch简单 query(""Is the basket brown?"") == ""yes"":
            return basket_patch简单 query(""What is in the brown basket?"", ""brown"")
    # If no basket is brown, return ""no""
    return ""no"""
16827204,Is the marker different in color than the paper?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    marker_patches = image_patch.find(""marker"")
    # Question assumes only one marker patch
    if len(marker_patches) == 0:
        # If no marker is found, query the image directly
        return image_patch_simple_query(""Is the marker different in color than the paper?"", "" different"")
    for marker_patch in marker_patches:
        is_different_color = ( marker_patch简单 query(""Is the marker different in color than the paper?"") == ""yes"")
        if is_different_color:
            return marker_patch简单 query(""Is the marker different in color than the paper?"") # crop would include the marker so keep it in the query
    # If no marker is different in color, return ""no""
    return ""no"""
1284539,Is there a racket to the right of the man on the right side?," # assumes only one man patch on the right side
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is there a racket to the right of the man on the right side?"", ""no"")
    man_patch = man_patches[0]
    racket_patches = image_patch find(""racket"")
    if len(racket_patches) == 0:
        return ""no""
    for racket_patch in racket_patches:
        if racket_patch horizontal center > man_patch horizontal center:
            return ""yes""
    return ""no"""
1257391,What place is this?," # returns ""the city of New York""
    image_patch = Image Patch(image)
    return image_patch简单 query(""What place is this?"")"
16223517,What do you think is the color of the large device?," # color of the large device is red
    image_patch = Image Patch(image)
    large_device_patches = image_patch.find(""large device"")
    # Question assumes only one large device patch
    if len(large_device_patches) == 0:
        # If no large device is found, query the image directly
        return image_patch_simple_query(""What do you think is the color of the large device?"", ""red"")
    return ""red"""
1024280,Does the shirt look long sleeved or sleeveless?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Does the shirt look long sleeves or sleeveless?"", ""long sleeves"")
    for shirt_patch in shirt_patches:
        is_long_sleeved = (shirt_patch简单 query(""Is the shirt long sleeves?"") == ""yes"")
        if is_long_sleeved:
            return ""long sleeves""
    # If no shirt is long sleeves, return sleeveless
    return ""sleeveless"""
2769463,Which kind of animal is lying in the chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Which kind of animal is lying in the chair?"", ""lying"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal lying in the chair?"", ""lying"") == ""yes"":
            return animal_patch简单 query(""Which kind of animal is lying in the chair?"", ""lying"")
    # If no animal is lying in the chair, return ""no""
    return ""no"""
18503776,Is the white box to the right of the crate the chair is to the right of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_box_patches = image_patch.find(""white box"")
    # Question assumes only one white box patch
    if len(white_box_patches) == 0:
        # If no white box is found, query the image directly
        return image_patch_simple_query(""Is the white box to the right of the crate the chair is to the right of?"", ""no"")
    for white_box_patch in white_box_patches:
        crate_patches = image_patch.find(""crate"")
        for crate_patch in crate_patches:
            if white_box_patch_horizontal_center > crate_patch_horizontal_center:
                chair_patches = image_patch find(""chair"")
                for chair_patch in chair_patches:
                    if chair_patch_horizontal_center > white_box_patch_horizontal_center:
                        return ""yes""
    return ""no"""
3434581,Are there both a coffee table and a lamp?," # assumes only one coffee table and one lamp
    image_patch = Image Patch(image)
    coffee_table_patches = image_patch.find(""coffee table"")
    lamp_patches = image_patch.find(""lamp"")
    if len(coffee_table_patches) == 0 or len(lamp_patches) == 0:
        # If no coffee table or lamp is found, query the image directly
        return image_patch_simple_query(""Are there both a coffee table and a lamp?"", ""no"")
    return ""yes"""
19201196,Is that flower pot made of clay?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch_simple_query(""Is that flower pot made of clay?"", ""no"")
    for flower_patch in flower_patches:
        is_made_of_clay = flower_patch simple query(""Is the flower pot made of clay?"")"
191006281,Does the sky look clear and gray?," # returns ""yes"" if clear and ""no"" if gray
    image_patch = Image Patch(image)
    return image_patch simple query(""Does the sky look clear and gray?"")"
681336,Do you see hats or gloves that are white?," # assumes only one hat patch and one glove patch
    image_patch = Image Patch(image)
    hat_patches = image_patch.find(""hat"")
    glove_patches = image_patch.find(""glove"")
    if len(hat_patches) == 0 or len(glove_patches) == 0:
        # If no hat or glove is found, query the image directly
        return image_patch simple query(""Do you see hats or gloves that are white?"", ""white"")
    for hat_patch in hat_patches:
        if hat_patch simple query(""Is the hat white?"") == ""yes"":
            return ""yes""
    for glove_patch in glove_patches:
        if glove_patch simple query(""Is the glove white?"") == ""yes"":
            return ""yes""
    return ""no"""
1300368,What is on the cabinet that is to the right of the keyboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch_simple_query(""What is on the cabinet that is to the right of the keyboard?"", ""cabinet"")
    for cabinet_patch in cabinet_patches:
        is_to_right_of_keyboard = (cabinet_patch horizontal_center > image_patch horizontal_center)
        if is_to_right_of_keyboard:
            return cabinet_patch简单 query(""What is on the cabinet that is to the right of the keyboard?"", ""cabinet"")
    # If no cabinet is to the right of the keyboard, return ""no""
    return ""no"""
172394,What is the animal to the left of the tap called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What is the animal to the left of the tap called?"", ""left"")
    for animal_patch in animal_patches:
        if animal_patch horizontal_center < image_patch horizontal_center:
            return animal_patch简单 query(""What is the animal to the left of the tap called?"", ""left"")
    # If no animal is to the left of the tap, return ""no""
    return ""no"""
738176,Is the chair on the right?," return image_patch简单 query(""Is the chair on the right?"")"
4194919,Is the child on the right of the picture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""Is the child on the right of the picture?"", ""no"")
    for child_patch in child_patches:
        is_on_right = child_patch simple query(""Is the child on the right of the picture?"", ""yes"")
        if is_on_right:
            return child_patch简单 query(""Is the child on the right of the picture?"", ""yes"")
    # If no child is on the right, return ""no""
    return ""no"""
3585327,Who is on the surfboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    surfer_patches = image_patch.find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        # If no surfer is found, query the image directly
        return image_patch_simple_query(""Who is on the surfboard?"", "" surfer"")
    surfer_patch = surfer_patches[0]
    surfer_patches = image_patch find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        return surfer_patch简单 query(""Who is on the surfboard?"", "" surfer"")
    surfer_patch = surfer_patches[0]
    surfer_patches = image_patch find(""surfer"")
    surfer_patches = surfer_patches[0]
    surfer_patches = surfer_patches[0]
    surfer_patches sur sur Patch sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur"
1711172,What size are the packages the candle is on top of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    candle_patches = image_patch find(""candle"")
    # Question assumes only one candle patch
    if len(candle_patches) == 0:
        # If no candle is found, query the image directly
        return image_patch_simple_query(""What size are the packages the candle is on top of?"", ""small"")
    for candle_patch in candle_patches:
        size_patches = image_patch find(""size"")
        for size_patch in size_patches:
            if size_patch horizontal_center > candle_patch horizontal_center:
                return ""small""
    # If no candle is on top of a small package, pick the first package
    return candle_patches[0].simple_query(""What size are the packages the candle is on top of?"", ""small"")"
4353895,Who is on the snowboard on the right?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    snowboard_patches = image_patch find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch_simple_query(""Who is on the snowboard on the right?"", "" snowboard"")
    for snowboard_patch in snowboard_patches:
        is_on_right = (snowboard_patch简单 query(""Is the snowboard on the right?"") == ""yes"")
        if is_on_right:
            return snowboard_patch简单 query(""Who is on the snowboard on the right?"")"
17929304,What is the vehicle that is on the road?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""What is the vehicle that is on the road?"", "" vehicle"")
    for vehicle_patch in vehicle_patches:
        return vehicle_patch简单 query(""What is the vehicle that is on the road?"", "" vehicle"")"
1363574,What color is the crust?," # color is a property
    image_patch = Image Patch(image)
    return image_patch verify_property(""crust"", ""color"")"
5672474,Is the plate to the left or to the right of the beer on the left?," # assumes only one beer patch
    image_patch = Image Patch(image)
    beer_patches = image_patch.find(""beer"")
    if len(beer_patches) == 0:
        # If no beer is found, query the image directly
        return image_patch_simple_query(""Is the plate to the left or to the right of the beer on the left?"", ""left"")
    for beer_patch in beer_patches:
        if beer_patch horizontal_center < image_patch horizontal_center:
            return ""left""
        else:
            return ""right"""
11341284,What is the pattern of the mattress on the street?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pattern_patches = image_patch.find(""pattern"")
    # Question assumes only one pattern patch
    if len(pattern_patches) == 0:
        # If no pattern is found, query the image directly
        return image_patch_simple_query(""What is the pattern of the Mattress on the street?"", "" pattern"")
    for pattern_patch in pattern_patches:
        pattern = pattern_patch简单 query(""What is the pattern of the Mattress on the street?"", "" pattern"")
        if pattern != "" pattern"":
            return pattern
    return "" pattern"""
14192693,Are there any boys behind the fence?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""Are there any boys behind the fence?"", ""no"")
    for boy_patch in boy_patches:
        if boy_patch horizontal_center > image_patch horizontal_center:
            return ""yes""
    return ""no"""
19203395,Is the white toilet paper to the right or to the left of the toilet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch_simple_query(""Is the white toilet paper to the right or to the left of the toilet?"", ""left"")
    for toilet_patch in toilet_patches:
        is_to the right = (toilet_patch简单 query(""Is the white toilet paper to the right of the toilet?"") == ""yes"")
        if is_to the right:
            return toilet_patch简单 query(""Is the white toilet paper to the right or to the left of the toilet?"", ""left"")
    # If no toilet is to the right, return ""left""
    return ""left"""
1194938,Are there any airplanes in front of the building?,"    
    image_patch = Image Patch(image)
    airplanes_patches = image_patch find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplanes_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch_simple_query(""Are there any airplanes in front of the building?"", ""no"")
    if airplanes_patches[0].horizontal_center < image_patch_horizontal_center:
        return ""yes""
    return ""no"""
5350205,How clean is the road that the car is on the side of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    road_patches = image_patch find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch_simple_query(""How clean is the road that the car is on the side of?"", ""clean"")
    for road_patch in road_patches:
        is_clean = (road_patch simple query(""Is the road clean?"") == ""yes"")
        if is_clean:
            return road_patch simple query(""How clean is the road that the car is on the side of?"", ""clean"")
    # If no road is clean, return ""not clean""
    return ""not clean"""
4256016,"In which part of the picture is the black van, the bottom or the top?"," # returns ""top"" because the black van is on top of the red car
    image_patch = Image Patch(image)
    black_van_patches = image_patch.find(""black van"")
    # Question assumes only one black van patch
    if len(black_van_patches) == 0:
        # If no black van is found, query the image directly
        return image_patch simple query(""In which part of the picture is the black van, the bottom or the top?"",)
    if black_van_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
9179602,What is the person to the right of the fence doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person to the right of the fence doing?"", ""right"")
    for person_patch in person_patches:
        is_doing_right = (person_patch_simple_query(""Is the person doing right?"") == ""right"")
        if is_doing_right:
            return person_patch_simple_query(""What is the person doing right?"", ""right"")
    # If no person is doing right, pick the first person
    return person_patches[0].simple_query(""What is the person doing right?"", ""right"")"
16471124,Does the horse have a different color than the boot?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    horse_patches = image_patch find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch_simple_query(""Does the horse have a different color than the boot?"", "" different color than the boot"")
    for horse_patch in horse_patches:
        boot_patches = image_patch find("" boot"")
        for boot_patch in boot_patches:
            if horse_patch horizontal_center != boot_patch horizontal_center:
                return ""yes""
    return ""no"""
958247,Is the mouse to the right of a chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    mouse_patches = image_patch.find(""mouse"")
    # Question assumes only one mouse patch
    if len(mouse_patches) == 0:
        # If no mouse is found, query the image directly
        return image_patch_simple_query(""Is the mouse to the right of a chair?"", ""no"")
    for mouse_patch in mouse_patches:
        chair_patches = image_patch find(""chair"")
        for chair_patch in chair_patches:
            if mouse_patch horizontal_center > chair_patch horizontal_center:
                return ""yes""
    return ""no"""
11179512,The basket made of plastic is what color?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch_simple_query(""The basket made of plastic is what color?"", "" what color"")
    for basket_patch in basket_patches:
        color_patches = image_patch find(""color"")
        for color_patch in color_patches:
            if color_patch horizontal center > basket_patch horizontal center:
                return color_patch simple query(""The basket made of plastic is what color?"", "" what color"")
    # If no basket is found, return ""no""
    return ""no"""
8816272,Do you see any elephant to the left of the bird?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only one elephant patch
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch_simple_query(""Do you see any elephant to the left of the bird?"", ""no"")
    for elephant_patch in elephant_patches:
        bird_patches = image_patch.find(""bird"")
        for bird_patch in bird_patches:
            if bird_patch horizontal_center > elephant_patch horizontal_center:
                return ""yes""
    return ""no"""
11168592,What is the animal in front of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What is the animal in front of the lamp?"")"
3568717,Who is wearing the jacket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the jacket?"", ""person"")
    for person_patch in person_patches:
        is_wearing_jacket = (person_patch_simple_query(""Is the person wearing a jacket?"", ""person"") == ""yes"")
        if is_wearing_jacket:
            return person_patch_simple_query(""Who is wearing the jacket?"", ""person"")
    # If no person is wearing a jacket, pick the first person
    return person_patches[0].simple_query(""Who is wearing the jacket?"", ""person"")"
7398502,What is the food to the left of the girl in the bottom of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What is the food to the left of the girl in the bottom of the photo?"", ""left"")
    for food_patch in food_patches:
        if food_patch_vertical_center < image_patch_vertical_center:
            return food_patch简单 query(""What is the food to the left of the girl in the bottom of the photo?"", ""left"")
    # If no food is found, return ""no""
    return ""no"""
5145864,What is the device that the camera is in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    camera_patches = image_patch find(""camera"")
    # Question assumes only one camera patch
    if len camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch_simple_query(""What is the device that the camera is in front of?"", ""camera"")
    for camera_patch in camera_patches:
        return camera_patch简单 query(""What is the device that the camera is in front of?"")"
788143,Is the man on the surfboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man on the surfboard?"", ""no"")
    for man_patch in man_patches:
        is_on_surfboard = (man_patch简单 query(""Is the man on the surfboard?"") == ""yes"")
        if is_on_surfboard:
            return man_patch简单 query(""Is the man on the surfboard?"") # crop would include the surfboard so keep it in the query
    # If no man is on the surfboard, return ""no""
    return ""no"""
15854501,What device has the same color as the device in the box?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch_simple_query(""What device has the same color as the device in the box?"", ""box"")
    for box_patch in box_patches:
        color = box_patch simple query(""What color is the box?"", ""box"")
        for device_patch in box_patch find(""device""):
            if device_patch简单 query(""What color is the device?"", ""device"") == color:
                return device_patch simple query(""What color is the device?"", ""device"")"
3228067,What is the child wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    child_patches = image_patch find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""What is the child wearing?"", "" what"")
    for child_patch in child_patches:
        child patch simple query(""What is the child wearing?"", "" what"")"
6817336,Is the blue sky behind a cathedral?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blue_sky_patches = image_patch.find(""blue sky"")
    # Question assumes only one blue sky patch
    if len(blue_sky_patches) == 0:
        # If no blue sky is found, query the image directly
        return image_patch_simple_query(""Is the blue sky behind a cathedral?"", ""blue sky"")
    for blue_sky_patch in blue_sky_patches:
        cathedral_patches = image_patch find(""cathedral"")
        for cathedral_patch in cathedral_patches:
            if blue_sky_patch horizontal center > cathedral_patch horizontal center:
                return ""yes""
    return ""no"""
6347271,"In which part of the image is the yellow pepper, the bottom or the top?"," # returns ""top"" because the yellow pepper is on top of the image
    image_patch = Image Patch(image)
    yellow_pepper_patches = image_patch.find(""yellow pepper"")
    # Question assumes only one yellow pepper patch
    if len(yellow_pepper_patches) == 0:
        # If no yellow pepper is found, query the image directly
        return image_patch simple query(""In which part of the image is the yellow pepper, the bottom or the top?"",)
    if yellow_pepper_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
296230,What animal is the woman feeding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is the woman feeding?"", "" what animal is the woman feeding?"")"
3427727,On which side is the bucket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bucket_patches = image_patch find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch_simple_query(""On which side is the bucket?"", ""left"")
    for bucket_patch in bucket_patches:
        side = ""left"" if bucket_patch horizontal_center < image_patch horizontal_center else ""right""
        return side"
31050314,Is the small chimney in the bottom part of the picture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    chimney_patches = image_patch.find(""chimney"")
    # Question assumes only one chimney patch
    if len(chimney_patches) == 0:
        # If no chimney is found, query the image directly
        return image_patch_simple_query(""Is the small chimney in the bottom part of the picture?"", ""no"")
    for chimney_patch in chimney_patches:
        is_bottom = (chimney_patch_vertical_center < image_patch_vertical_center)
        if is_bottom:
            return ""yes""
    return ""no"""
3503396,Are the pants purple?," # assumes only one pair of pants
    image_patch = Image Patch(image)
    pants_patches = image_patch find(""pants"")
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch_simple_query(""Are the pants purple?"", ""no"")
    for pants_patch in pants_patches:
        return pants_patch verify_property(""pants"", ""purple"")"
11742862,Which kind of furniture is to the right of the paper towels?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    paper_towels_patches = image_patch.find(""paper towels"")
    # Question assumes only one paper towel patch
    if len(paper_towels_patches) == 0:
        # If no paper towels are found, query the image directly
        return image_patch_simple_query(""Which kind of furniture is to the right of the paper towels?"", ""paper towels"")
    for paper_towel_patch in paper_towels_patches:
        furniture_patches = image_patch find(""furniture"")
        for furniture_patch in furniture_patches:
            if furniture_patch horizontal center > paper_towel_patch horizontal center:
                return furniture_patch简单 query(""Which kind of furniture is to the right of the paper towels?"", ""paper towels"")
    # If no furniture is found to the right of the paper towels, return ""no""
    return ""no"""
5891809,What kind of furniture is gray?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is gray?"", ""furniture"")
    for furniture_patch in furniture_patches:
        is_gray = (furniture_patch简单 query(""Is the furniture gray?"") == ""yes"")
        if is_gray:
            return furniture_patch简单 query(""What kind of furniture is gray?"", ""furniture"")
    # If no furniture is gray, return ""no""
    return ""no"""
5370528,Is the hair white and long?," # assumes only one hair patch
    image_patch = Image Patch(image)
    hair_patches = image_patch find(""hair"")
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the hair white and long?"", ""white and long"")
    if hair_patches[0].verify_property(""hair"", ""white and long""):
        return ""yes""
    return ""no"""
781153,Do you see trains near the lamp post that looks white?," # returns ""yes"" if there is a train near the lamp post that looks white
    image_patch = Image Patch(image)
    lamp_post_patches = image_patch.find(""lamp post"")
    # Question assumes only one lamp post patch
    if len(lamp_post_patches) == 0:
        # If no lamp post is found, query the image directly
        return image_patch_simple_query(""Do you see trains near the lamp post that looks white?"", ""no"")
    for lamp_post_patch in lamp_post_patches:
        train_patches = image_patch.find(""train"")
        for train_patch in train_patches:
            if train_patch horizontal_center > lamp_post_patch horizontal_center:
                return ""yes""
    return ""no"""
5543456,Is the container to the left of the person that wears bracelets?," # assumes only one container patch and one person patch
    image_patch = Image Patch(image)
    container_patches = image_patch.find(""container"")
    person_patches = image_patch find(""person"")
    if len(container_patches) == 0 or len(person_patches) == 0:
        # If no container or person is found, query the image directly
        return image_patch_simple_query(""Is the container to the left of the person that wears bracelets?"", ""no"")
    for container_patch in container_patches:
        for person_patch in person_patches:
            if container_patch horizontal_center < person_patch horizontal_center:
                return ""yes""
    return ""no"""
163134,What do you think is on the roof?," # returns ""the cat is on the roof""
    image_patch = Image Patch(image)
    return image_patch简单 query(""What do you think is on the roof?"")"
5603075,Is the shoe white or brown?," # assumes only one shoe patch
    image_patch = Image Patch(image)
    shoe_patches = image_patch find(""shoe"")
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch_simple_query(""Is the shoe white or brown?"", ""white"")
    return shoe_patches[0].best_text_match [""white"", ""brown""]"
5511395,What is wrapped in paper?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    object_patches = image_patch.find("" object"")
    # Question assumes only one object patch
    if len(object_patches) == 0:
        # If no object is found, query the image directly
        return image_patch_simple_query(""What is wrapped in paper?"", object_patches)
    for object_patch in object_patches:
        is_wrapped_in_paper = object_patch简单 query(""Is the object wrapped in paper?"")
        if is_wrapped_in_paper:
            return object_patch简单 query(""What is wrapped in paper?"") # crop would include the paper so keep it in the query
    # If no object is wrapped in paper, pick the first object
    return object_patches[0].simple query(""What is wrapped in paper?"")"
5611256,Are there any couches in the picture?," return image_patch simple query(""Are there any couches in the picture?"")"
1162826,The man is in what?," # returns ""in front of the tree""
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""The man is in what?"")"
81020685,Which color is the small house?," # color of the house
    image_patch = Image Patch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch_simple_query(""Which color is the small house?"", ""red"")
    for house_patch in house_patches:
        color = house_patch简单 query(""What color is the house?"", ""red"")
        if color == ""red"":
            return ""red""
    return ""red"""
19640724,Who is in the bathroom?," # assumes only one person in the bathroom
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is in the bathroom?"", ""no"")
    return person_patches[0].simple_query(""Who is in the bathroom?"", ""no"")"
289960,Do you see a racket to the right of the boy that is looking at the tie?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""Do you see a racket to the right of the boy that is looking at the tie?"", ""no"")
    boy_patch = boy_patches[0]
    racket_patches = image_patch find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return ""no""
    for racket_patch in racket_patches:
        if racket_patch horizontal center > boy_patch horizontal center:
            return ""yes""
    return ""no"""
9957748,Does the hair appear to be long and brown?," # assumes only one hair patch
    image_patch = Image Patch(image)
    hair_patches = image_patch find(""hair"")
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Does the hair appear to be long and brown?"", ""no"")
    hair_patch = hair_patches[0]
    return hair_patch verify_property(""hair"", ""long brown"")"
21031610,What is the shoe that looks black and white resting on?," # black and white resting on what?
    image_patch = Image Patch(image)
    black_white_patches = image_patch.find(""black and white"")
    # Question assumes only one black and white patch
    if len(black_white_patches) == 0:
        # If no black and white patch is found, query the image directly
        return image_patch_simple_query(""What is the shoe that looks black and white resting on?"", ""black and white"")
    black_white_patch = black_white_patches[0]
    shoe_patches = image_patch find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        return black_white_patch简单 query(""What is the shoe that looks black and white resting on?"", ""black and white"")
    for shoe_patch in shoe_patches:
        if shoe_patch horizontal center > black_white_patch horizontal center:
            return black_white_patch simple query(""What is the shoe that looks black and white resting on?"", ""black and white"")
    return black_white_patch simple query(""What is the shoe that looks black and white resting on?"", ""black and white"")"
12801921,What is the glass on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    glass_patches = image_patch find(""glass"")
    # Question assumes only one glass patch
    if len(glass_patches) == 0:
        # If no glass is found, query the image directly
        return image_patch_simple_query(""What is the glass on?"", "" object"")
    for glass_patch in glass_patches:
        return glass_patch简单 query(""What is the glass on?"")"
16243948,Is the white pillow under the black animal?," # assumes only one black animal patch
    image_patch = Image Patch(image)
    black_animal_patches = image_patch find(""black animal"")
    if len(black_animal_patches) == 0:
        # If no black animal is found, query the image directly
        return image_patch_simple_query(""Is the white pillow under the black animal?"", ""black animal"")
    black_animal_patch = black_animal_patches[0]
    white_pillow_patches = image_patch find(""white pillow"")
    if len(white_pillow_patches) == 0:
        return ""no""
    for white_pillow_patch in white_pillow_patches:
        if white_pillow_patch_vertical_center < black_animal_patch_vertical_center:
            return ""yes""
    return ""no"""
457770,What kind of clothing is striped?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch_simple_query(""What kind of clothing is striped?"", "" what kind of clothing is striped"")
    for clothing_patch in clothing_patches:
        is_striped = (clothing_patch_simple_query(""Is the clothing striped?"", "" what kind of clothing is striped"") == ""yes"")
        if is_striped:
            return clothing_patch_simple_query(""What kind of clothing is striped?"", "" what kind of clothing is striped"")
    # If no clothing is striped, return ""no""
    return ""no"""
12603153,Are the child's eyes blue and open?," # assumes only one child patch
    image_patch = Image Patch(image)
    child_patches = image_patch find(""child"")
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""Are the child's eyes blue and open?"", ""blue open"")
    child_patch = child_patches[0]
    return child_patch verify_property(""child"", ""blue open"")"
9480973,What is located on top of the tub?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is located on top of the tub?"", ""top"")"
8399764,Is the fork to the right or to the left of the white plate?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    plate_patches = image_patch.find(""white plate"")
    # Question assumes only one white plate patch
    if len(plate_patches) == 0:
        # If no white plate is found, query the image directly
        return image_patch_simple_query(""Is the fork to the right or to the left of the white plate?"", ""white plate"")
    for plate_patch in plate_patches:
        is_white = (plate_patch简单 query(""Is the plate white?"") == ""yes"")
        if is_white:
            return plate_patch简单 query(""Is the fork to the right or to the left of the white plate?"", ""white plate"")
    # If no white plate is found, return ""no""
    return ""no"""
13420253,On which side of the photo is the chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    chair_patches = image_patch find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""On which side of the photo is the chair?"", ""left"")
    for chair_patch in chair_patches:
        side = chair_patch horizontal_center < image_patch horizontal_center
        if side:
            return ""left""
    return ""right"""
4747006,What is the label on?," # assumes only one object
    image_patch = Image Patch(image)
    object_patches = image_patch.find("" object"")
    if len(object_patches) == 0:
        # If no object is found, query the image directly
        return image_patch_simple_query(""What is the label on?"")"
3322787,What bird is to the left of the person that is wearing a shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What bird is to the left of the person that is wearing a shirt?"", ""left"")
    for person_patch in person_patches:
        bird_patches = image_patch.find(""bird"")
        for bird_patch in bird_patches:
            if bird_patch horizontal_center < person_patch horizontal_center:
                return bird_patch简单 query(""What bird is to the left of the person that is wearing a shirt?"", ""left"")
    return ""no"""
6399594,On which side is the man?," # assumes only one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""On which side is the man?"", ""left right"")
    return ""left"""
6930120,Is the glass bowl on the right or on the left?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    glass_bowl_patches = image_patch find(""glass bowl"")
    # Question assumes only one glass bowl patch
    if len(glass_bowl_patches) == 0:
        # If no glass bowl is found, query the image directly
        return image_patch_simple_query(""Is the glass bowl on the right or on the left?"", ""right"")
    for glass_bowl_patch in glass_bowl_patches:
        is_on_right = (glass_bowl_patch简单 query(""Is the glass bowl on the right?"") == ""yes"")
        if is_on_right:
            return glass_bowl_patch简单 query(""Is the glass bowl on the right?"") # crop would include the glass bowl so keep it in the query
    # If no glass bowl is on the right, it must be on the left
    return glass_bowl_patch simple query(""Is the glass bowl on the right?"")"
12619961,What vehicles are to the left of the taxi?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicles_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicles_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""What vehicles are to the left of the taxi?"", ""no"")
    for vehicle_patch in vehicles_patches:
        if vehicle_patch horizontal_center < image_patch horizontal_center:
            return ""no""
    return ""yes"""
13362315,Is the basket on the shelf black and empty?," # black and empty is a relational property
    image_patch = Image Patch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch_simple_query(""Is the basket on the shelf black and empty?"", ""black and empty"")
    if basket_patches[0].verify_property(""basket"", ""black and empty""):
        return ""yes""
    return ""no"""
3830854,What is the animal that is standing next to the donkey that is standing in the hay?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    donkey_patches = image_patch.find(""donkey"")
    # Question assumes only one donkey patch
    if len(donkey_patches) == 0:
        # If no donkey is found, query the image directly
        return image_patch_simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"", ""donkey"")
    for donkey_patch in donkey_patches:
        hay_patches = image_patch.find(""hay"")
        for hay_patch in hay_patches:
            if hay_patch horizontal_center > donkey_patch horizontal_center:
                return donkey_patch简单 query(""What is the animal that is standing next to the donkey that is standing in the hay?"", ""donkey"")
    # If no donkey is found, query the image directly
    return image_patch简单 query(""What is the animal that is standing next to the donkey that is standing in the hay?"", ""donkey"")"
18382324,Is this a bed or a table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_bed = image_patch.exists(""bed"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_bed or is_table)"
18104571,"Which animal is that, a bird or a cat?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Which animal is that, a bird or a cat?"", ""binary"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal a bird?"", ""binary"") == ""yes"":
            return ""bird""
        elif animal_patch simple query(""Is the animal a cat?"", ""binary"") == ""yes"":
            return ""cat""
    return ""no"""
2913379,Do you see any fence or pot?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Do you see any fence or pot?"", ""fence"")
    for fence_patch in fence_patches:
        is_fencing = (fence_patch简单 query(""Is there any fencing?"") == ""yes"")
        if is_fencing:
            return fence_patch简单 query(""Do you see any fence or pot?"", ""fence"")
    # If no fence is found, check for pot
    if image_patch simple query(""Is there any pot?"") == ""yes"":
        return ""yes""
    return ""no"""
9294271,What is in front of the fence the zebra is kept in?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch_simple_query(""What is in front of the fence the zebra is kept in?"", ""zebra"")
    for zebra_patch in zebra_patches:
        is_in_front_of_fence = (zebra_patch简单 query(""Is the zebra in front of the fence?"") == ""yes"")
        if is_in_front_of_fence:
            return zebra_patch简单 query(""What is in front of the fence the zebra is kept in?"", ""zebra"")
    # If no zebra is in front of the fence, return ""no""
    return ""no"""
10741434,What is the vegetable that is on top of the plate called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""What is the vegetable that is on top of the plate called?"", ""top"")
    for vegetable_patch in vegetable_patches:
        is_on_top = (vegetable_patch简单 query(""Is the vegetable on top of the plate?"") == ""yes"")
        if is_on_top:
            return vegetable_patch简单 query(""What is the vegetable that is on top of the plate called?"", ""top"")
    # If no vegetable is on top, pick the first vegetable
    return vegetable_patches[0].simple query(""What is the vegetable that is on top of the plate called?"", ""top"")"
765962,Where is the car?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""Where is the car?"", ""left or right"")
    if car_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
12399262,Is there either a yellow truck or airplane?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch_simple_query(""Is there either a yellow truck or airplane?"", ""yellow truck"")
    for truck_patch in truck_patches:
        if truck_patch_simple_query(""Is the truck yellow?"", ""yellow truck"") == ""yes"":
            return ""yellow truck""
    airplane_patches = image_patch finds(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        return ""airplane""
    for airplane_patch in airplane_patches:
        if airplane_patch_simple query(""Is the airplane yellow?"", ""yellow truck"") == ""no"":
            return ""airplane""
    return ""airplane"""
13964213,Is the man on the left of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man on the left of the photo?"", ""left"")
    for man_patch in man_patches:
        if man_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
16171369,What is covered in the snow?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is covered in the snow?"")"
181055844,On which side is the plastic bottle?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    plastic_patches = image_patch find(""plastic bottle"")
    # Question assumes only one plastic patch
    if len(plastic_patches) == 0:
        # If no plastic bottle is found, query the image directly
        return image_patch_simple_query(""On which side is the plastic bottle?"", ""left"")
    for plastic_patch in plastic_patches:
        side = plastic_patch simple query(""On which side is the plastic bottle?"", ""left"")
        if side == ""left"":
            return ""left""
        elif side == ""right"":
            return ""right""
    return ""left"""
5858491,Do you see any ropes on the fence that is on the left of the picture?,"    
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Do you see any ropes on the fence that is on the left of the picture?"", ""left"")
    for fence_patch in fence_patches:
        if fence_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
17834539,Are there any lamps in the scene?," return image_patch simple query(""Are there any lamps in the scene?"")"
15658176,Who is wearing a helmet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing a helmet?"", ""no"")
    for person_patch in person_patches:
        is_wearing_helmet = (person_patch_simple_query(""Is the person wearing a helmet?"") == ""yes"")
        if is_wearing_helmet:
            return person_patch_simple_query(""Who is wearing a helmet?"", ""yes"")
    # If no person is wearing a helmet, pick the first person
    return person_patches[0].simple_query(""Who is wearing a helmet?"", ""no"")"
14372400,Does that coat have red color?," return image_patch simple query(""Does that coat have red color?"")"
411886,Are there any curtains or blankets in this scene?," # returns ""yes"" if there are curtains or blankets in the image
    image_patch = Image Patch(image)
    curtains_patches = image_patch find(""curtain"")
    blankets_patches = image_patch find(""blanket"")
    if len(curtains_patches) > 0 or len(blankets_patches) > 0:
        return ""yes""
    return ""no"""
16921850,What is the item of furniture to the left of the remote that the man is holding called?," # assumes only one remote patch
    image_patch = Image Patch(image)
    remote_patch = image_patch find("" remote"")
    if len(remote_patch) == 0:
        # If no remote is found, query the image directly
        return image_patch_simple_query(""What is the item of furniture to the left of the remote that the man is holding called?"", "" remote"")
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        return ""no""
    for man_patch in man_patches:
        if man_patch horizontal center < remote_patch horizontal center:
            return "" table""
        else:
            return "" cot""
    return ""no"""
51039491,Is the fence black or red?," # assumes only one fence patch
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Is the fence black or red?"", ""black red"")
    return fence_patches[0].best_text_match(""black red"")"
7425912,What animal is standing in the field?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is standing in the field?"", ""no"")
    for animal_patch in animal_patches:
        is_standing = (animal_patch simple query(""Is the animal standing?"") == ""yes"")
        if is_standing:
            return animal_patch简单 query(""What animal is standing?"") # crop would include the animal so keep it in the query
    # If no animal is standing, pick the first animal
    return animal_patches[0].simple query(""What animal is standing?"")"
13136338,What animal is in front of the dog which is to the right of the bird?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch_simple_query(""What animal is in front of the dog which is to the right of the bird?"", ""bird"")
    for bird_patch in bird_patches:
        dog_patches = image_patch.find(""dog"")
        # Question assumes only one dog patch
        if len(dog_patches) == 0:
            return image_patch_simple_query(""What animal is in front of the dog which is to the right of the bird?"", ""dog"")
        for dog_patch in dog_patches:
            if dog_patch horizontal_center > bird_patch horizontal_center:
                return image_patch_simple query(""What animal is in front of the dog which is to the right of the bird?"", ""dog"")
    return ""no"""
3775066,Which color are the cabinets in the bottom of the picture?," # color of cabinets in the bottom of the picture
    image_patch = Image Patch(image)
    bottom_patches = image_patch find(""bottom"")
    # Question assumes only one bottom patch
    if len(bottom_patches) == 0:
        # If no bottom is found, query the image directly
        return image_patch_simple_query(""Which color are the cabinets in the bottom of the picture?"", ""blue"")
    for bottom_patch in bottom_patches:
        return bottom_patch simple query(""Which color are the cabinets in the bottom of the picture?"", ""blue"")"
17206239,Is the happy girl to the right of a player?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    happy_girl_patches = image_patch.find(""happy girl"")
    # Question assumes only one happy girl patch
    if len(happy_girl_patches) == 0:
        # If no happy girl is found, query the image directly
        return image_patch_simple_query(""Is the happy girl to the right of a player?"", ""no"")
    for happy_girl_patch in happy_girl_patches:
        player_patches = image_patch find(""player"")
        for player_patch in player_patches:
            if player_patch horizontal center > happy_girl_patch horizontal center:
                return ""yes""
    return ""no"""
2992517,"What piece of furniture is not wooden, the table or the chair?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    table_patches = image_patch.find(""table"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one table patch and one chair patch
    if len(table_patches) == 0 or len(chair_patches) == 0:
        # If no table or chair is found, query the image directly
        return image_patch_simple_query(""What piece of furniture is not wooden, the table or the chair?"", ""not wooden"")
    if table_patches[0].verify_property(""table"", ""wooden"") and chair_patches[0].verify_property(""chair"", ""wooden""):
        return ""no""
    else:
        return ""yes"""
1827558,Which side of the image is the kettle on?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Which side of the image is the kettle on?"")"
2785208,Where is the man?," # returns the coordinates of the man
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Where is the man?"", ""coordinates"")
    return man_patches[0].horizontal_center, man_patches[0].vertical_center"
6623967,Is the baby near the countertop chewing a computer mouses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    baby_patches = image_patch.find(""baby"")
    # Question assumes only one baby patch
    if len(baby_patches) == 0:
        # If no baby is found, query the image directly
        return image_patch_simple_query(""Is the baby near the countertop chewing a computer mouses?"", ""no"")
    for baby_patch in baby_patches:
        is_chewing_computer_mice = (baby_patch_simple_query(""Is the baby chewing a computer mouses?"", ""yes"")
        if is_chewing_computer_mice:
            return baby_patch_simple_query(""Is the baby near the counterfeit mouses?"", ""no"")
    # If no baby is chewing a computer mouses, pick the first baby
    return baby_patch_simple query(""Is the baby near the counter top chewing a computer mouses?"", ""no"")"
12804807,Is the small bottle open or closed?," # assumes only one bottle patch
    image_patch = Image Patch(image)
    bottle_patches = image_patch find(""bottle"")
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Is the small bottle open or closed?"", ""no"")
    for bottle_patch in bottle_patches:
        is_open = bottle_patch simple query(""Is the bottle open or closed?"", ""open"")
        if is_open:
            return ""yes""
    return ""no"""
18437691,Is the clock small or large?," # assumes only one clock patch
    image_patch = Image Patch(image)
    clock_patches = image_patch find(""clock"")
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_query(""Is the clock small or large?"", "" clock"")
    clock_patch = clock_patches[0]
    return clock_patch verify_property(""clock"", ""small"")"
9482318,Are there either any glasses or bottles in this photo?," # returns ""yes"" if either glasses or bottles are found, ""no"" otherwise
    image_patch = Image Patch(image)
    glasses_patches = image_patch.find(""glasses"")
    bottles_patches = image_patch.find(""bottles"")
    # Question assumes only one glasses patch and one bottle patch
    if len(glasses_patches) == 0 and len(bottles_patches) == 0:
        return image_patch_simple_query(""Are there either any glasses or bottles in this photo?"", ""no"")
    if len(glasses_patches) > 0 and len(bottles_patches) > 0:
        return image_patch_simple_qa(""Are there either any glasses or bottles in this photo?"", ""yes"")
    if len(glasses_patches) > 0:
        return image_patch_simple_qa(""Are there either any glasses or bottles in this photo?"", ""yes"")
    if len(bottles_patches) > 0:
        return image_patch_simple_qa(""Are there either any glasses or bottles in this photo?"", ""yes"")
    return ""no"""
12362819,Is the sky blue or dark?," return image_patch简单 query(""Is the sky blue or dark?"", ""blue"")"
171054254,What is the piece of furniture to the right of the shelf the cup is on called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch_simple_query(""What is the piece of furniture to the right of the shelf the cup is on called?"", ""cup"")
    for cup_patch in cup_patches:
        piece_of_furniture_patches = image_patch find(""piece of furniture"")
        for piece_of_furniture_patch in piece_of_furniture_patches:
            if piece_of_furniture_patch horizontal center > cup_patch horizontal center:
                return piece_of_furniture_patch simple query(""What is the piece of furniture to the right of the shelf the cup is on called?"", ""cup"")
    # If no piece of furniture is found, return ""no""
    return ""no"""
1416636,Are there both bridges and chandeliers in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    bridges_patches = image_patch.find(""bridge"")
    chandeliers_patches = image_patch.find(""chandelier"")
    # Question assumes only one bridge patch and one chandelier patch
    if len(bridges_patches) == 0 or len(chandeliers_patches) == 0:
        # If no bridge or chandelier is found, query the image directly
        return image_patch_simple_query(""Are there both bridges and chandeliers in this photograph?"", ""no"")
    return ""yes"""
1997041,"Which side is the car on, the left or the right?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""Which side is the car on, the left or the right?"", ""left"")
    for car_patch in car_patches:
        side = car_patch simple query(""Which side is the car on, the left or the right?"", ""left"")
        if side == ""left"":
            return car_patch simple query(""Which side is the car on, the left or the right?"", ""left"")
    # If no car is on the left, it must be on the right
    return ""right"""
6110985,Is there any plate or orange in the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_plate = image_patch.exists(""plate"")
    is_orange = image_patch.exists(""orange"")
    return bool_to_yesno(is_plate or is_orange)"
612894,Do you see any doors?," # returns ""yes"" if any doors are found, ""no"" otherwise
    image_patch = Image Patch(image)
    return image_patch_exists(""door"")"
13562221,What's the bear on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bear_patches = image_patch find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch_simple_query(""What's the bear on?"", ""the tree"")
    for bear_patch in bear_patches:
        is_on_tree = (bear_patch_simple_query(""Is the bear on the tree?"") == ""yes"")
        if is_on_tree:
            return bear_patch_simple_query(""What's the bear on?"", ""the tree"")
    # If no bear is on the tree, pick the first bear
    return bear_patches[0].simple_query(""What's the bear on?"", ""the tree"")"
9536851,Is the woman in front of the trees holding scissors?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman in front of the trees holding scissors?"", ""no"")
    for woman_patch in woman_patches:
        is_holding_scissors = (woman_patch_simple_query(""Is the woman holding scissors?"", ""yes""))
        if is_holding_scissors:
            return woman_patch_simple_query(""Is the woman holding scissors?"", ""yes"")
    # If no woman is holding scissors, pick the first woman
    return woman_patches[0].simple_query(""Is the woman holding scissors?"", ""no"")"
9682405,What is on the machine?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    machine_patches = image_patch.find(""machine"")
    # Question assumes only one machine patch
    if len(machine_patches) == 0:
        # If no machine is found, query the image directly
        return image_patch_simple_query(""What is on the machine?"", "" what"")
    for machine_patch in machine_patches:
        return machine_patch简单 query(""What is on the machine?"", "" what"")"
8649435,What is on the white wall?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_wall_patches = image_patch.find(""white wall"")
    # Question assumes only one white wall patch
    if len(white_wall_patches) == 0:
        # If no white wall is found, query the image directly
        return image_patch_simple_query(""What is on the white wall?"", ""white wall"")
    for white_wall_patch in white_wall_patches:
        return white_wall_patch简单 query(""What is on the white wall?"", ""white wall"")"
12487033,Does the logo look red?," # red is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Does the logo look red?"", image_patch)"
14301289,What type of vehicle is to the left of the white vehicle?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_vehicle_patches = image_patch.find(""white vehicle"")
    # Question assumes only one white vehicle patch
    if len(white_vehicle_patches) == 0:
        # If no white vehicle is found, query the image directly
        return image_patch_simple_query(""What type of vehicle is to the left of the white vehicle?"", ""white vehicle"")
    for white_vehicle_patch in white_vehicle_patches:
        vehicle_patches = image_patch.find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch horizontal_center < white_vehicle_patch horizontal_center:
                return vehicle_patch简单 query(""What type of vehicle is to the left of the white vehicle?"", ""white vehicle"")
    # If no white vehicle is found, return ""no""
    return ""no"""
523976,Which kind of vehicle is large?," # returns ""car"" or ""truck""
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""Which kind of vehicle is large?"", ""car"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center > image_patch_horizontal_center:
            return ""car""
    return ""truck"""
3423213,Who is in front of the trees?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""Who is in front of the trees?"", ""people"")
    for person_patch in people_patches:
        is_in_front_of_trees = (person_patch_simple_query(""Is the person in front of the trees?"") == ""yes"")
        if is_in_front_of_trees:
            return person_patch_simple_query(""Who is in front of the trees?"", ""people"")
    # If no person is in front of the trees, pick the first person
    return people_patches[0].simple_query(""Who is in front of the trees?"", ""people"")"
18107197,Is the ottoman to the right or to the left of the brown chair?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    brown_chairs = image_patch.find(""brown chair"")
    # Question assumes only one brown chair patch
    if len(brown_chairs) == 0:
        # If no brown chair is found, query the image directly
        return image_patch_simple_query(""Is theottoman to the right or to the left of the brown chair?"", ""left"")
    brown_chair = brown_chairs[0]
   ottoman_patches = image_patch find(""ottoman"")
    # Question assumes only oneottoman patch
    if len(ottoman_patches) == 0:
        return ""left""
    forottoman_patch inottoman_patches:
        ifottoman_patch horizontal_center < brown_chair horizontal_center:
            return ""left""
    return ""right"""
5716578,Is there a laptop on the bed near the magazines?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        # If no laptop is found, query the image directly
        return image_patch_simple_query(""Is there a laptop on the bed near the magazines?"", ""no"")
    for laptop_patch in laptop_patches:
        is_near_magazines = (laptop_patch simple query(""Is the laptop near the magazines?"") == ""yes"")
        if is_near_magazines:
            return laptop_patch简单 query(""Is there a laptop on the bed near the magazines?"", ""yes"")
    # If no laptop is near the magazines, return ""no""
    return ""no"""
8215791,Is the porcelain toilet to the left or to the right of the small trash can?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    porcelain_toilet_patches = image_patch.find(""porcelain toilet"")
    # Question assumes only one porcelain toilet patch
    if len(porcelain_toilet_patches) == 0:
        # If no porcelain toilet is found, query the image directly
        return image_patch_simple_query(""Is the porcelain toilet to the left or to the right of the small trash can?"", ""left"")
    for porcelain_toilet_patch in porcelain_toilet_patches:
        trash_can_patches = image_patch finds(""small trash can"")
        for trash_can_patch in trash_can_patches:
            if trash_can_patch horizontal center < porcelain_toilet_patch horizontal center:
                return ""left""
    return ""right"""
17528455,What is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What is in front of the wall?"", ""')"
4896890,Do the goggles and the gloves have a different colors?," # assumes only one glove and one pair of goggles
    image_patch = Image Patch(image)
    glove_patches = image_patch find(""glove"")
    goggles_patches = image_patch find(""goggles"")
    if len(glove_patches) == 0 or len(goggles_patches) == 0:
        # If no glove or no gloves are found, query the image directly
        return image_patch_simple_query(""Do the goggles and the gloves have a different colors?"", ""glove"")
    return ""no"""
947724,Is there any purple pillow or kite in this photograph?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_purple_pillow = image_patch.exists(""purple pillow"")
    is_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_purple_pillow or is_kite)"
5679522,"What are the people to the right of the man doing, standing or sitting?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What are the people to the right of the man doing, standing or sitting?"", ""man"")
    for man_patch in man_patches:
        people_patches = image_patch find(""people"")
        # Question assumes only one people patch
        if len(people_patches) == 0:
            return image_patch_simple query(""What are the people to the right of the man doing, standing or sitting?"", ""man"")
        for people_patch in people_patches:
            if people_patch horizontal center > man_patch horizontal center:
                return people_patch simple query(""What are the people to the right of the man doing, standing or sitting?"", ""man"")
    return ""no"""
15492262,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch简单 query(""Which kind of furniture is white?"")"
151032547,Is the bear on the right side?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bear_patches = image_patch find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch_simple_query(""Is the bear on the right side?"", ""no"")
    for bear_patch in bear_patches:
        is_on_right = (bear_patch horizontal_center > image_patch horizontal_center)
        if is_on_right:
            return ""yes""
    return ""no"""
5698674,Are there either any planters or benches?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    planters_patches = image_patch.find(""planters"")
    benches_patches = image_patch.find(""benches"")
    # Question assumes only one planters patch and one bench patch
    if len(planters_patches) == 0 and len(benches_patches) == 0:
        # If no planters or benches are found, query the image directly
        return image_patch_simple_query(""Are there either any planters or benches?"", ""no"")
    if len(planters_patches) == 0:
        return image_patch_simple query(""Are there either any planters or benches?"", ""yes"")
    if len(benches_patches) == 0:
        return image_patch_simple query(""Are there either any planters or benches?"", ""yes"")
    return ""yes"""
19397103,What is the person that is standing staring at?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person that is standing staring at?"", ""person"")
    for person_patch in person_patches:
        is_staring_at = (person_patch_simple_query(""Is the person looking at someone?"", ""person"") == ""yes"")
        if is_staring_at:
            return person_patch_simple_query(""What is the person that is standing staring at?"", ""person"")
    # If no person is looking at someone, pick the first person
    return person_patches[0].simple_query(""What is the person that is standing staring at?"", ""person"")"
11630681,What is the color of the necklace?," # color of the necklace is red
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the color of the necklace?"")"
248245,Is the table to the left or to the right of the fence?,"    
    image_patch = Image Patch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch_simple_query(""Is the table to the left or to the right of the fence?"", ""left or right"")
    for table_patch in table_patches:
        fence_patches = image_patch.find(""fence"")
        for fence_patch in fence_patches:
            if table_patch horizontal_center < fence_patch horizontal_center:
                return ""left""
            else:
                return ""right"""
837033,Are there round windows or doors?," # returns ""yes"" if there are round windows or doors
    image_patch = Image Patch(image)
    round_windows_patches = image_patch.find(""round window"")
    round_doors_patches = image_patch.find(""round door"")
    # Question assumes only one round window patch and one round door patch
    if len(round_windows_patches) == 0 and len(round_doors_patches) == 0:
        # If no round window or door is found, query the image directly
        return image_patch_simple_query(""Are there round windows or doors?"", ""round"")
    if len(round_windows_patches) > 0:
        return ""round window""
    if len(round_doors_patches) > 0:
        return ""round door"""
5249150,Are there any bears or napkins in the picture?," # returns ""yes"" if there is a bear or a napkin in the picture
    image_patch = Image Patch(image)
    is_bear = image_patch_exists(""bear"")
    is_napkin = image_patch_exists(""napkin"")
    return ""yes"" if is_bear or is_napkin else ""no"""
13908598,What kind of vehicle is to the left of the person?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What kind of vehicle is to the left of the person?"", ""no"")
    for person_patch in person_patches:
        vehicle_patches = image_patch find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch horizontal_center < person_patch horizontal_center:
                return vehicle_patch simple query(""What kind of vehicle is to the left of the person?"", ""no"")
    # If no vehicle is to the left of the person, return ""no""
    return ""no"""
61006749,Who is dressed in pink?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is dressed in pink?"", ""person"")
    for person_patch in person_patches:
        is_dressed_in_pink = (person_patch_simple_query(""Is the person dressed in pink?"", ""person"") == ""yes"")
        if is_dressed_in_pink:
            return person_patch_simple_query(""Who is dressed in pink?"", ""person"")
    # If no person is dressed in pink, return ""no""
    return ""no"""
6122955,Does the pillow have yellow color?," # assumes only one pillow patch
    image_patch = Image Patch(image)
    pillow_patches = image_patch find(""pillow"")
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch_simple_query(""Does the pillow have yellow color?"", ""yellow"")
    return image_patch verifies_property(""pillow"", ""yellow"")"
6861738,Is the old woman to the right or to the left of the faucet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    old_woman_patches = image_patch.find(""old woman"")
    # Question assumes only one old woman patch
    if len(old_woman_patches) == 0:
        # If no old woman is found, query the image directly
        return image_patch_simple_query(""Is the old woman to the right or to the left of the faucet?"", ""old woman"")
    for old_woman_patch in old_woman_patches:
        faucet_patches = image_patch find(""faucet"")
        for faucet_patch in faucet_patches:
            if old_woman_patch horizontal_center > faucet_patch horizontal center:
                return ""right""
            elif old_woman_patch horizontal center < faucet_patch horizontal center:
                return ""left""
    return ""no"""
15833048,Which kind of animal is on the road?," # returns ""car""
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Which kind of animal is on the road?"", ""car"")
    if animal_patches[0].verify_property(""animal"", ""car""):
        return ""car""
    return ""no"""
9524339,What animal is large?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is large?"", ""large"")
    for animal_patch in animal_patches:
        if animal_patch verify_property(""animal"", ""large""):
            return animal_patch简单 query(""What animal is large?"", ""large"")
    # If no animal is large, return ""no""
    return ""no"""
18255749,How clean are the sheets the pillow is to the right of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sheets_patches = image_patch.find(""sheets"")
    # Question assumes only one sheets patch
    if len(sheets_patches) == 0:
        # If no sheets is found, query the image directly
        return image_patch_simple_query(""How clean are the sheets the pillow is to the right of?"", ""clean"")
    for sheets_patch in sheets_patches:
        is_clean = sheets_patch simple query(""Is the sheet clean?"", ""clean"")
        if is_clean:
            return sheets_patch简单 query(""How clean are the sheets the pillow is to the right of?"", ""clean"")
    # If no sheet is clean, return ""not clean""
    return ""not clean"""
19797097,What's the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What's the man wearing?"", "" what"")
    for man_patch in man_patches:
        what patch = man_patch简单 query(""What's the man wearing?"", "" what"")
        if what_patch == "" what"":
            return man_patch简单 query(""What's the man wearing?"", "" what"")
    # If no man is wearing a what, pick the first what patch
    return man_patches[0].simple query(""What's the man wearing?"", "" what"")"
6899090,Is the man to the right or to the left of the appliance that looks white?," # assumes only one appliance that looks white
    image_patch = Image Patch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch_simple_query(""Is the man to the right or to the left of the appliance that looks white?"", ""white"")
    for appliance_patch in appliance_patches:
        if appliance_patch简单 query(""Is the appliance white?"", ""white""):
            if appliance_patch horizontal center > man_patch horizontal center:
                return ""right""
            else:
                return ""left""
    return ""no"""
3357701,Does the dog to the right of the other dog have white color?," # assumes only one dog patch
    image_patch = Image Patch(image)
    dog_patches = image_patch.find(""dog"")
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch_simple_query(""Does the dog to the right of the other dog have white color?"", ""no"")
    for dog_patch in dog_patches:
        if dog_patch horizontal_center > other_dog_patch horizontal_center:
            return ""yes""
    return ""no"""
2829418,What's the girl holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What's the girl holding?"", "" what"")
    for girl_patch in girl_patches:
        what_patch = girl_patch简单 query(""What's the girl holding?"", "" what"")
        if what_patch == "" what"":
            return girl_patch简单 query(""What's the girl holding?"", "" what"")
    # If no girl is holding anything, return ""no""
    return ""no"""
15930109,Which kind of vehicle is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of vehicle is blue?"", ""blue"")"
1525382,What type of vegetable is on the food with the cheese?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What type of vegetable is on the food with the cheese?"", ""cheese"")
    for food_patch in food_patches:
        if food_patch简单 query(""Is the food with the cheese a vegetable?"", ""cheese"") == ""yes"":
            return food_patch简单 query(""What type of vegetable is on the food with the cheese?"", ""cheese"")"
8548980,Are there either players or hand soaps?," # assumes only one player and one hand soap
    image_patch = Image Patch(image)
    players_patches = image_patch.find(""player"")
    hand_soaps_patches = image_patch.find(""hand soap"")
    if len(players_patches) == 0 and len(hand_soaps_patches) == 0:
        return image_patch_simple_query(""Are there either players or hand soaps?"", ""no"")
    if len(players_patches) == 0:
        return image_patch_simple_query(""Are there either players or hand soaps?"", ""yes"")
    if len(hand_soaps_patches) == 0:
        return image_patch_simple_qa(""Are there either players or hand soaps?"", ""yes"")
    return image_patch_simple_qa(""Are there either players or hand soaps?"", ""yes"")"
4438348,"Which kind of food is not made, the sandwich or the croissant?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""Which kind of food is not made, the sandwich or the croissant?"", ""not made"")
    for food_patch in food_patches:
        if food_patch简单 query(""Is the food made?"") == ""not made"":
            return food_patch简单 query(""Which kind of food is not made, the sandwich or the croissant?"", ""not made"")
    # If no food is not made, pick the first food
    return food_patches[0].simple query(""Which kind of food is not made, the sandwich or the croissant?"", ""not made"")"
6423906,Which kind of food is on the plate?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""Which kind of food is on the plate?"", ""no"")
    for food_patch in food_patches:
        is_on_plate = (food_patch_simple_query(""Is the food on the plate?"") == ""yes"")
        if is_on_plate:
            return food_patch_simple_query(""Which kind of food is on the plate?"", ""no"")
    # If no food is on the plate, return ""no""
    return ""no"""
1993231,Are the animals in the image of different types?," # assumes only one type of animal per image
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Are the animals in the image of different types?"", ""no"")
    if len(animal_patches) > 1:
        return ""yes""
    return ""no"""
13949656,Are there any people to the left of the tray?,"    
    image_patch = Image Patch(image)
    people_patches = image_patch find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""Are there any people to the left of the tray?"", ""no"")
    for person_patch in people_patches:
        if person_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
184032,Does the fresh pineapple appear to be ripe?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pineapple_patches = image_patch.find(""pineapple"")
    # Question assumes only one pineapple patch
    if len(pineapple_patches) == 0:
        # If no pineapple is found, query the image directly
        return image_patch_simple_query(""Does the fresh pineapple appear to be ripe?"", ""no"")
    for pineapple_patch in pineapple_patches:
        is_ripe = (pineapple_patch_simple_query(""Is the pineapple ripe?"", ""no"") == ""yes"")
        if is_ripe:
            return ""yes""
    # If no pineapple is ripe, return ""no""
    return ""no"""
9392591,Are there chairs or smoothies?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    chairs_patches = image_patch find(""chairs"")
    # Question assumes only one chair patch
    if len(chairs_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""Are there chairs or smoothies?"", ""chairs"")
    for chair_patch in chairs_patches:
        is_smoothie = (chair_patch简单 query(""Is there a smoothie on the table?"") == ""yes"")
        if is_smoothie:
            return chair_patch简单 query(""Are there chairs or smoothies?"", ""chairs"")
    # If no chair is wearing a shirt, pick the first chair
    return chairs_patches[0].simple query(""Are there chairs or smoothies?"", ""chairs"")"
4285170,Which kind of animal is to the right of the sheep?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    sheep_patches = image_patch.find(""sheep"")
    # Question assumes only one sheep patch
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch_simple_query(""Which kind of animal is to the right of the sheep?"", ""sheep"")
    for sheep_patch in sheep_patches:
        other_animals_patches = image_patch find(""other animals"")
        for other_animals_patch in other_animals_patches:
            if other_animals_patch horizontal_center > sheep_patch horizontal_center:
                return other_animals_patch简单 query(""Which kind of animal is to the right of the sheep?"", ""sheep"")
    return ""no"""
9896138,Are there any boxes to the left of the screen in the picture?,"    
    image_patch = Image Patch(image)
    boxes_patches = image_patch find(""box"")
    # Question assumes only one box patch
    if len(boxes_patches) == 0:
        # If no box is found, query the image directly
        return image_patch_simple_query(""Are there any boxes to the left of the screen in the picture?"", ""left"")
    for box_patch in boxes_patches:
        if box_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
1400333,What do you think is the man on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What do you think is the man on?"", ""man"")
    for man_patch in man_patches:
        return man_patch简单 query(""What do you think is the man on?"", ""man"")"
13105327,Is the boot white or orange?," # assumes only one boot patch
    image_patch = Image Patch(image)
    boot_patches = image_patch find(""boot"")
    if len( boot_patches) == 0:
        # If no boot is found, query the image directly
        return image_patch_simple_query(""Is the boot white or orange?"", ""white"", ""orange"")
    return boot_patches[0].best_text_match [""white"", ""orange""]"
3659880,Does the wood boat have silver color?,"    
    image_patch = Image Patch(image)
    wood_patches = image_patch find(""wood"")
    # Question assumes only one wood patch
    if len(wood_patches) == 0:
        # If no wood is found, query the image directly
        return image_patch_simple_query(""Does the wood boat have silver color?"", ""wood"")
    wood_patch = wood_patches[0]
    silver_patches = image_patch find(""silver"")
    # Question assumes only one silver patch
    if len(silver_patches) == 0:
        return ""no""
    for silver_patch in silver_patches:
        if silver_patch horizontal_center > wood_patch horizontal_center:
            return ""yes""
    return ""no"""
1827802,Is the red pot on the appliance to the right of the mixer?," # assumes only one red pot and one mixer
    image_patch = Image Patch(image)
    red_pot_patches = image_patch.find(""red pot"")
    mixer_patches = image_patch.find(""mixer"")
    if len(red_pot_patches) == 0 or len(mixer_patches) == 0:
        # If no red pot or mixer is found, query the image directly
        return image_patch_simple_query(""Is the red pot on the appliance to the right of the mixer?"", ""red pot on the appliance to the right of the mixer"")
    red_pot_patch = red_pot_patches[0]
    mixer_patch = mixer_patches[0]
    if red_pot_patch horizontal_center > mixer_patch horizontal center:
        return ""yes""
    return ""no"""
14809102,The phone that is in front of the camera is of what color?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    phone_patches = image_patch find(""phone"")
    # Question assumes only one phone patch
    if len(phone_patches) == 0:
        # If no phone is found, query the image directly
        return image_patch_simple_query(""The phone that is in front of the camera is of what color?"", ""blue"")
    for phone_patch in phone_patches:
        color = phone_patch简单 query(""What color is the phone?"", ""blue"")
        if color == ""blue"":
            return phone_patch简单 query(""The phone that is in front of the camera is of what color?"", ""blue"")
    # If no phone is blue, return ""blue""
    return ""blue"""
61001545,What type of food is to the left of the silver spoon?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What type of food is to the left of the silver spoon?"", ""left"")
    for food_patch in food_patches:
        is_to_left_of_silver_spoon = (food_patch简单 query(""Is the food to the left of the silver spoon?"") == ""yes"")
        if is_to_left_of_silver_spoon:
            return food_patch简单 query(""What type of food is to the left of the silver spoon?"")"
799463,Are there both a window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    window_patches = image_patch find(""window"")
    door_patches = image_patch find(""door"")
    return ""yes"" if len(window_patches) > 0 and len(door_patches) > 0 else ""no"""
11260725,Does the water have small size and white color?," # returns ""yes"" if water is small and white, ""no"" otherwise
    image_patch = Image Patch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch simple query(""Does the water have small size and white color?"", ""no"")
    water_patch = water_patches[0]
    return water_patch verify_property(""water"", ""small size and white color"")"
2397653,Are there any fences that are white?," # returns ""yes"" if there is at least one white fence, ""no"" otherwise
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Are there any fences that are white?"", ""no"")
    for fence_patch in fence_patches:
        if fence_patch simple query(""Is the fence white?"") == ""yes"":
            return ""yes""
    return ""no"""
1554603,Who is holding the animal?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Who is holding the animal?"", ""is holding"")
    for animal_patch in animal_patches:
        is_holding = (animal_patch_simple_query(""Is the animal holding?"", ""is holding"") == ""yes"")
        if is_holding:
            return animal_patch_simple_query(""Who is holding the animal?"", ""is holding"")
    # If no animal is holding, pick the first animal
    return animal_patches[0].simple_query(""Who is holding the animal?"", ""is holding"")"
11606818,Is the man to the right or to the left of the people the stroller is to the right of?," # assumes only one man patch and one stroller patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    stroller_patches = image_patch.find(""stroller"")
    if len(man_patches) == 0 or len(stroller_patches) == 0:
        # If no man or stroller is found, query the image directly
        return image_patch_simple_query(""Is the man to the right or to the left of the people the stroller is to the right of?"", ""no"")
    man_patch = man_patches[0]
    stroller_patch = stroller_patches[0]
    if man_patch horizontal center > stroller_patch horizontal center:
        return ""right""
    else:
        return ""left"""
8988476,What kind of furniture is presented in this photo?," # returns ""furniture""
    image_patch = Image Patch(image)
    return image_patch简单 query(""What kind of furniture is presented in this photo?"")"
10695214,What is the man with the backpack holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man with the backpack holding?"", ""man"")
    for man_patch in man_patches:
        backpack_patches = image_patch find(""backpack"")
        # Question assumes one backpack patch
        if len(backpack_patches) == 0:
            return ""no""
        for backpack_patch in backpack_patches:
            if backpack_patch horizontal center > man_patch horizontal center:
                return ""yes""
    return ""no"""
91058050,Are there both mouse pads and computer mice in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    mouse_pads_patches = image_patch.find(""mouse pad"")
    computer_mice_patches = image_patch.find(""computer mouse"")
    # Question assumes only one mouse pad patch and one computer mouse patch
    if len(mouse_pads_patches) == 0 or len(computer_mice_patches) == 0:
        # If no mouse pad or computer mouse is found, query the image directly
        return image_patch_simple_query(""Are there both mouse pads and computer mice in the photograph?"", ""no"")
    return ""yes"""
1972064,Is the person in front of the tree wearing jeans?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the person in front of the tree wearing jeans?"", ""no"")
    for person_patch in person_patches:
        is_wearing_jeans = (person_patch_simple_query(""Is the person wearing jeans?"") == ""yes"")
        if is_wearing_jeans:
            return person_patch_simple_query(""Is the person wearing jeans?"", ""yes"")
    # If no person is wearing jeans, return ""no""
    return ""no"""
167162,Is there a bike to the right of the purse that is to the right of the woman?," # complex relational question
    image_patch = Image Patch(image)
    purse_patches = image_patch.find(""purse"")
    # Question assumes only one purse patch
    if len(purse_patches) == 0:
        # If no purse is found, query the image directly
        return image_patch_simple_query(""Is there a bike to the right of the purse that is to the right of the woman?"", ""no"")
    for purse_patch in purse_patches:
        bike_patches = image_patch find(""bike"")
        # Question assumes only one bike patch
        if len(bike_patches) == 0:
            return ""no""
        for bike_patch in bike_patches:
            if bike_patch horizontal center > purse_patch horizontal center:
                return ""yes""
    return ""no"""
1695388,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
10960149,Is the woman to the left or to the right of the man in the bottom?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the woman to the left or to the right of the man in the bottom?"", ""left"")
    for man_patch in man_patches:
        woman_patches = image_patch find(""woman"")
        # Question assumes only one woman patch
        if len(woman_patches) == 0:
            return image_patch简单 query(""Is the woman to the left or to the right of the man in the bottom?"", ""left"")
        for woman_patch in woman_patches:
            if woman_patch horizontal center < man_patch horizontal center:
                return ""left""
            else:
                return ""right"""
16921984,What is the bent man to the right of the other men doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    men_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(men_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the bent man to the right of the other men doing?"", ""other men"")
    for man_patch in men_patches:
        other_men_patches = image_patch find(""other men"")
        for other_man_patch in other_men_patches:
            if other_man_patch horizontal_center > man_patch horizontal center:
                return man_patch简单 query(""What is the bent man to the right of the other men doing?"", ""other men"")
    return ""no"""
12175564,What animal are the men to the right of the girl leading?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    men_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(men_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What animal are the men to the right of the girl leading?"", ""man"")
    for man_patch in men_patches:
        is_to_the_right = (man_patch simple query(""Is the man to the right of the girl leading?"") == ""yes"")
        if is_to_the_right:
            return man_patch简单 query(""What animal are the men to the right of the girl leading?"")"
1219606,On which side of the image is the house?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the house?"", ""left"")
    if house_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
1770499,Is the black suitcase to the right or to the left of the person on the left?," # black suit case is to the right of the person on the left
    image_patch = Image Patch(image)
    black_suitcase_patches = image_patch.find(""black suitcase"")
    # Question assumes only one black suitcase patch
    if len(black_suitcase_patches) == 0:
        # If no black suitcase is found, query the image directly
        return image_patch_simple_query(""Is the black suitcase to the right or to the left of the person on the left?"", ""right"")
    for black_suitcase_patch in black_suitcase_patches:
        person_patches = image_patch find(""person"")
        for person_patch in person_patches:
            if black_suitcase_patch horizontal_center > person_patch horizontal_center:
                return ""right""
    return ""left"""
5282406,Is the pot to the left of a chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch_simple_query(""Is the pot to the left of a chair?"", ""no"")
    for pot_patch in pot_patches:
        chair_patches = image_patch find(""chair"")
        for chair_patch in chair_patches:
            if chair_patch horizontal_center < pot_patch horizontal_center:
                return ""yes""
    return ""no"""
10914401,Where are the people?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    people_patches = image_patch find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""Where are the people?"", ""left or right"")
    if people_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
1919722,What animal is eating the grass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is eating the grass?"", ""no"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal eating the grass?"") == ""yes"":
            return animal_patch简单 query(""What animal is eating the grass?"")"
9681008,Who is wearing a helmet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing a helmet?"", ""no"")
    for person_patch in person_patches:
        is_wearing_helmet = (person_patch_simple_query(""Is the person wearing a helmet?"") == ""yes"")
        if is_wearing_helmet:
            return person_patch_simple_query(""Who is wearing a helmet?"", ""yes"")
    # If no person is wearing a helmet, pick the first person
    return person_patches[0].simple_query(""Who is wearing a helmet?"", ""no"")"
16861675,Who is on the surfboard in the middle of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    surfer_patches = image_patch.find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        # If no surfer is found, query the image directly
        return image_patch_simple_query(""Who is on the surfboard in the middle of the photo?"", ""surfer"")
    surfer_patch = surfer_patches[0]
    surfer_position = surfer_patch horizontal_center
    surfer_patches = image_patch find(""surfer"")
    surfer_position = surfer_patches[0]
    surfer_position = surfer_patches[0]
    surfer position sur sur Patch Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch sur sur Patch"
10947426,What is the color of the lizard beside the banana?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""What is the color of the lizard beside the banana?"", "" what is the color of the lizard beside the banana"")
    for banana_patch in banana_patches:
        lizard_patches = image_patch find(""lizard"")
        for lizard_patch in lizard_patches:
            if lizard_patch horizontal_center > banana_patch horizontal_center:
                return lizard_patch simple query(""What is the color of the lizard beside the banana?"", "" what is the color of the lizard beside the banana"")
    return ""no"""
18200684,Is the wine glass in the top or in the bottom part?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the wine glass in the top or in the bottom part?"")"
3882988,What kind of vehicle is to the left of the people that are in the middle of the picture?," # assumes only one person in the middle
    image_patch = Image Patch(image)
    people_patches = image_patch.find(""people"")
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"", ""left"")
    for person_patch in people_patches:
        if person_patch horizontal_center < image_patch horizontal_center:
            return image_patch简单 query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"", ""left"")
    return ""no"""
171012637,Is the teddy bear to the right of a suitcase?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    teddy_bear_patches = image_patch.find(""teddy bear"")
    # Question assumes only one teddy bear patch
    if len(teddy_bear_patches) == 0:
        # If no teddy bear is found, query the image directly
        return image_patch_simple_query(""Is the teddy bear to the right of a suitcase?"", ""no"")
    for teddy_bear_patch in teddy_bear_patches:
        suitcase_patches = image_patch find(""suitcase"")
        for suitcase_patch in suitcase_patches:
            if suitcase_patch horizontal_center > teddy_bear_patch horizontal_center:
                return ""yes""
    return ""no"""
19861372,Is the woman's hair long or short?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the woman's hair long or short?"", ""long"")
    for hair_patch in hair_patches:
        is_long = hair_patch_simple_query(""Is the hair long?"", ""long"")
        if is_long:
            return hair_patch_simple_query(""Is the hair long or short?"", ""long"")
    # If no hair is long, pick the first hair
    return hair_patches[0].simple query(""Is the hair long or short?"", ""long"")"
623889,Are both the television and the armchair the same color?," # assumes only one television and one armchair
    image_patch = Image Patch(image)
    television_patches = image_patch.find(""television"")
    if len(television_patches) == 0:
        # If no television is found, query the image directly
        return image_patch_simple_query(""Are both the television and the armchair the same color?"", ""no"")
    television_patch = television_patches[0]
    armchair_patches = image_patch find(""armchair"")
    if len(armchair_patches) == 0:
        return image_patch_simple_query(""Are both the television and the armchair the same color?"", ""no"")
    for armchair_patch in armchair_patches:
        if television_patch verify_property(""television"", ""color"") == armchair_patch verify_property(""armchair"", ""color""):
            return ""yes""
    return ""no"""
4917605,Is the shoe white or brown?," # assumes only one shoe patch
    image_patch = Image Patch(image)
    shoe_patches = image_patch find(""shoe"")
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch_simple_query(""Is the shoe white or brown?"", ""white"")
    return shoe_patches[0].best_text_match [""white"", ""brown""]"
91055143,What is on the table?," # returns ""the book""
    image_patch = Image Patch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch_simple_query(""What is on the table?"", ""the book"")
    for table_patch in table_patches:
        return table_patch简单 query(""What is on the table?"", ""the book"")"
5430643,What do you think sits on the plate to the left of the tomato?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch_simple_query(""What do you think sits on the plate to the left of the tomato?"", "" plate"")
    for plate_patch in plate_patches:
        is_on_left = (plate_patch horizontal_center < image_patch horizontal_center)
        if is_on_left:
            return plate_patch简单 query(""What do you think sits on the plate to the left of the tomato?"", "" plate"")
    # If no plate is on the left, return ""no""
    return ""no"""
523936,Is the woman in the top part of the picture?," return image_patch简单 query(""Is the woman in the top part of the picture?"")"
3189548,Is there a bottle on the nightstand that is on the bed?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Is there a bottle on the nightstand that is on the bed?"", ""no"")
    for bottle_patch in bottle_patches:
        is_on_bed = (bottle_patch简单 query(""Is the bottle on the bed?"") == ""yes"")
        if is_on_bed:
            return bottle_patch简单 query(""Is there a bottle on the nightstand that is on the bed?"", ""yes"")
    # If no bottle is on the bed, return ""no""
    return ""no"""
14292161,The pot is of which color?," # color of the pot
    image_patch = Image Patch(image)
    return image_patch简单 query(""The pot is of which color?"")"
17495150,"What device is black, the microphone or the laptop?"," # black is a color, so use color check
    image_patch = Image Patch(image)
    is_black = image_patch简单_qa(""Is the object black?"", ""mic"")
    return ""mic"" if is_black else ""laptop"""
1521847,Is the cat on a desk?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cat_patches = image_patch find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch_simple_query(""Is the cat on a desk?"", ""no"")
    for cat_patch in cat_patches:
        is_on_desk = (cat_patch simple query(""Is the cat on a desk?"") == ""yes"")
        if is_on_desk:
            return cat_patch simple query(""Is the cat on a desk?"") # crop would include the desk so keep it in the query
    # If no cat is on a desk, return ""no""
    return ""no"""
16465081,The man is holding what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""The man is holding what?"")"
17387032,What is on the post?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is on the post?"")"
1892436,What is in front of the kids that are looking at the cake?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    kids_patches = image_patch.find(""kids"")
    # Question assumes only one kids patch
    if len(kids_patches) == 0:
        # If no kids is found, query the image directly
        return image_patch_simple_query(""What is in front of the kids that are looking at the cake?"", ""kids"")
    for kids_patch in kids_patches:
        is_looking_at_cake = kids_patch_simple_query(""Is the kid looking at the cake?"", ""kids"")
        if is_looking_at_cake:
            return kids_patch_simple_query(""What is in front of the kids that are looking at the cake?"", ""kids"")
    # If no kids are looking at the cake, return ""no""
    return ""no"""
18906705,How big is the crowd?," # returns the number of people in the image
    image_patch = Image Patch(image)
    people_patches = image_patch find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""How big is the crowd?"", ""number"")
    return len(people_patches)"
6157200,Does the sign on the pole have white color?,"    
    image_patch = Image Patch(image)
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch_simple_query(""Does the sign on the pole have white color?"", ""white"")
    if sign_patches[0].verify_property(""sign"", ""white""):
        return ""yes""
    return ""no"""
16760226,What's the laptop in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    laptop_patches = image_patch find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        # If no laptop is found, query the image directly
        return image_patch_simple_query(""What's the laptop in front of?"", ""laptop"")
    for laptop_patch in laptop_patches:
        is_in_front = (laptop_patch简单 query(""Is the laptop in front of?"") == ""yes"")
        if is_in_front:
            return laptop_patch简单 query(""What's the laptop in front of?"") # crop would include the laptop so keep it in the query
    # If no laptop is in front, pick the first laptop
    return laptop_patches[0].simple query(""What's the laptop in front of?"")"
111054070,How large is the bed?," # returns the width of the bed in px
    image_patch = Image Patch(image)
    return image_patch cropped(0, 0, image_patch_width, image_patch_height).width"
14143886,Where is the person with the luggage standing on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Where is the person with the luggage standing on?"", ""on"")
    for person_patch in person_patches:
        return person_patch简单 query(""Where is the person with the luggage standing on?"", ""on"")"
19872633,Are there either any fire extinguishers or pepper shakers?," # returns ""yes"" if either is found, ""no"" otherwise
    image_patch = Image Patch(image)
    fire_extinguishers_patches = image_patch.find(""fire extinguishers"")
    pepper_shakers_patches = image_patch.find(""pepper shakers"")
    # Question assumes only one fire extinguishers patch and one pepper shaker patch
    if len(fire_extinguishers_patches) == 0 and len(pepper_shakers_patches) == 0:
        # If no fire extinguishers or pepper shakers are found, query the image directly
        return image_patch_simple_query(""Are there either any fire extinguishers or pepper shakers?"", ""no"")
    if len(fire_extinguishers_patches) > 0 and len(pepper_shakers_patches) > 0:
        return ""yes""
    return ""no"""
12755010,Is the bottle to the right of a napkin?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Is the bottle to the right of a napkin?"", ""no"")
    for bottle_patch in bottle_patches:
        napkin_patches = image_patch find(""napkin"")
        for napkin_patch in napkin_patches:
            if napkin_patch horizontal center > bottle_patch horizontal center:
                return ""yes""
    return ""no"""
2747001,Are there any soaps or bombs?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_soap = image_patch.exists(""soap"")
    is_bomb = image_patch.exists(""bomb"")
    return bool_to_yesno(is_soap or is_bomb)"
1553845,Do you see baby giraffes or elephants?," # assumes only one giraffe and one elephant
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    elephant_patches = image_patch.find(""elephant"")
    if len(giraffe_patches) == 0 or len(elephant_patches) == 0:
        # If no giraffe or elephant is found, query the image directly
        return image_patch_simple_query(""Do you see baby giraffes or elephants?"", ""giraffe"", ""elephant"")
    return ""giraffe"" if giraffe_patches[0].simple_query(""Is it a giraffe?"") == ""yes"" else ""elephant"""
6898877,What is the sign on?," # assumes only one sign
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the sign on?"")"
15862812,What is the sticker on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sticker_patches = image_patch find(""sticker"")
    # Question assumes only one sticker patch
    if len(sticker_patches) == 0:
        # If no sticker is found, query the image directly
        return image_patch_simple_query(""What is the sticker on?"", ""sticker"")
    for sticker_patch in sticker_patches:
        return sticker_patch简单 query(""What is the sticker on?"")"
141031470,On which side of the image is the white towel?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the white towel?"", ""left"")
    for towel_patch in towel_patches:
        if towel_patch horizontal_center < image_patch horizontal_center:
            return ""left""
        else:
            return ""right"""
41026846,Who rides a motorcycle?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who rides a motorcycle?"", ""no"")
    for person_patch in person_patches:
        is_riding_motorcycle = (person_patch_simple_query(""Is the person riding a motorcycle?"") == ""yes"")
        if is_riding_motorcycle:
            return person_patch_simple_query(""Who rides a motorcycle?"", ""no"")
    # If no person is riding a motorcycle, pick the first person
    return person_patches[0].simple_query(""Who rides a motorcycle?"", ""no"")"
16540391,What is around the bathtub the towel is on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    towel_patches = image_patch find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch_simple_query(""What is around the bathtub the towel is on?"", "" around"")
    for towel_patch in towel_patches:
        around_patches = image_patch find(""around"")
        for around_patch in around_patches:
            if around_patch horizontal_center < towel_patch horizontal_center:
                return ""top""
            elif around_patch horizontal_center > towel_patch horizontal_center:
                return ""bottom""
    return ""no"""
7469617,Is the man to the left or to the right of the person that is to the left of the people?," # assumes only one man patch and one person patch
    image_patch = Image Patch(image)
    man_patch = image_patch find(""man"")
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the man to the left or to the right of the person that is to the left of the people?"", ""left"")
    if len(person_patches) > 1:
        return ""no""
    person_patch = person_patches[0]
    if person_patch horizontal_center < man_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
64308,What's located on top of the soup?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    soup_patches = image_patch.find(""soup"")
    # Question assumes only one soup patch
    if len(soup_patches) == 0:
        # If no soup is found, query the image directly
        return image_patch_simple_query(""What's located on top of the soup?"", ""top"")
    for soup_patch in soup_patches:
        return soup_patch简单 query(""What's located on top of the soup?"", ""top"")"
16660910,Are both the fence and the bench made of the same material?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one fence patch and one bench patch
    if len(fence_patches) == 0 or len(bench_patches) == 0:
        # If no fence or bench is found, query the image directly
        return image_patch_simple_query(""Are both the fence and the bench made of the same material?"", ""no"")
    for fence_patch in fence_patches:
        for bench_patch in bench_patches:
            if fence_patch material == bench_patch material:
                return ""yes""
    return ""no"""
3196255,Are there helmets that are not white?," # assumes only one helmet patch
    image_patch = Image Patch(image)
    helmets_patches = image_patch find(""helmet"")
    if len(helmets_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch_simple_query(""Are there helmets that are not white?"", ""white"")
    for helmet_patch in helmets_patches:
        if helmet_patch verify_property(""helmet"", ""white""):
            return ""no""
    return ""yes"""
2992630,Is the bowl to the right or to the left of the man that is drinking?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the bowl to the right or to the left of the man that is drinking?"", ""right"")
    for man_patch in man_patches:
        bowl_patches = image_patch find(""bowl"")
        for bowl_patch in bowl_patches:
            if bowl_patch horizontal_center > man_patch horizontal_center:
                return ""right""
    return ""left"""
513894,Is the person above the sand wearing glasses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the person above the sand wearing glasses?"", ""no"")
    for person_patch in person_patches:
        is_wearing_glasses = (person_patch_simple_query(""Is the person wearing glasses?"", ""yes"") == ""yes"")
        if is_wearing_glasses:
            return person_patch_simple_query(""Is the person above the sand wearing glasses?"", ""yes"")
    # If no person is wearing glasses, pick the first person
    return person_patches[0].simple_query(""Is the person above the sand wearing glasses?"", ""no"")"
14167599,Is the color of the life preserver the same as that of the house?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    life_presenter_patches = image_patch.find(""life presber"")
    # Question assumes only one life presber patch
    if len(life_presenter_patches) == 0:
        # If no life presber is found, query the image directly
        return image_patch_simple_query(""Is the color of the life presber the same as that of the house?"", ""no"")
    for life_presenter_patch in life_presenter_patches:
        house_patches = image_patch find(""house"")
        for house_patch in house_patches:
            if life_presenter_patch horizontal_center == house_patch horizontal_center:
                return ""yes""
    return ""no"""
18264755,How is the weather?," return image_patch_simple_qa(""How is the weather?"", image)"
6711450,What is the animal that is looking into the toilet that is not closed?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What is the animal that is looking into the toilet that is not closed?"", ""no"")
    for animal_patch in animal_patches:
        is_open = animal_patch simple query(""Is the toilet open?"", ""no"")
        if is_open:
            return animal_patch简单 query(""What is the animal that is looking into the toilet that is not closed?"", ""no"")
    # If no animal is looking into an open toilet, return ""no""
    return ""no"""
8641613,Do you see any helmets in the picture that are not red?," # returns ""yes"" if any non-red helmets are found
    image_patch = Image Patch(image)
    helmets_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch_simple_query(""Do you see any helmets in the picture that are not red?"", ""red"")
    for helmet_patch in helmets_patches:
        if helmet_patch简单 query(""Is the helmet red?"", ""red"") == ""no"":
            return ""yes""
    return ""no"""
2409779,What does the happy person hold?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What does the happy person hold?"", ""happy person"")"
8461507,Are there either tissue boxes or lamps in the picture?," # contains a relation (on top of), so ask directly
    image_patch = Image Patch(image)
    is_tissue_box = image_patch.exists(""tissue box"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_tissue_box or is_lamp)"
10770916,Which kind of animal is it?," # returns ""animal""
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Which kind of animal is it?"", ""an animal"")
    return ""an animal"""
19102906,What type of drink is to the left of the plate?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    drink_patches = image_patch find(""drink"")
    # Question assumes only one drink patch
    if len(drink_patches) == 0:
        # If no drink is found, query the image directly
        return image_patch_simple_query(""What type of drink is to the left of the plate?"", ""left"")
    for drink_patch in drink_patches:
        is_to_left_of_plate = (drink_patch简单 query(""Is the drink to the left of the plate?"") == ""yes"")
        if is_to_left_of_plate:
            return drink_patch简单 query(""What type of drink is to the left of the plate?"", ""left"")
    # If no drink is to the left of the plate, return ""no""
    return ""no"""
18315440,Is the sky cloudy and blue?," # assumes only one patch
    image_patch = Image Patch(image)
    sky_patches = image_patch.find("" sky"")
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch_simple_query(""Is the sky cloudy and blue?"", ""blue"")
    for sky_patch in sky_patches:
        if sky_patch simple query(""Is the sky cloudy and blue?"", ""blue"") == ""yes"":
            return ""yes""
    return ""no"""
453061,Is the fork on the right of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the fork on the right of the image?"")"
71002567,"What is the broccoli on, a table or a nightstand?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    broccoli_patches = image_patch.find(""broccoli"")
    # Question assumes only one broccoli patch
    if len(broccoli_patches) == 0:
        # If no broccoli is found, query the image directly
        return image_patch_simple_query(""What is the broccoli on, a table or a nightstand?"", "" table"")
    for broccoli_patch in broccoli_patches:
        is_on_table = (broccoli_patch简单 query(""Is the broccoli on a table?"") == ""yes"")
        if is_on_table:
            return broccoli_patch简单 query(""What is the broccoli on, a table or a nightstand?"", "" table"")
    # If no broccoli is on a table, pick the first broccoli
    return broccoli_patches[0].simple query(""What is the broccoli on, a table or a nightstand?"", "" table"")"
17465089,Is the field green and small?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    field_patches = image_patch.find(""field"")
    # Question assumes only one field patch
    if len(field_patches) == 0:
        # If no field is found, query the image directly
        return image_patch_simple_query(""Is the field green and small?"", "" field"")
    for field_patch in field_patches:
        is_green = field_patch简单 query(""Is the field green?"", "" field"")
        is_small = field_patch简单 query(""Is the field small?"", "" field"")
        if is_green and is_small:
            return field_patch简单 query(""Is the field green and small?"", "" field"")
    return ""no"""
16150157,What is on the wall?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is on the wall?"", ""')"
17882658,Is the van to the left or to the right of the SUV on the right side?," # assumes only one van and one SUV
    image_patch = Image Patch(image)
    van_patches = image_patch.find(""van"")
    SUV_patches = image_patch.find(""SUV"")
    if len(van_patches) == 0 or len(SUV_patches) == 0:
        # If no van or SUV is found, query the image directly
        return image_patch_simple_query(""Is the van to the left or to the right of the SUV on the right side?"", ""left"")
    for van_patch in van_patches:
        for SUV_patch in SUV_patches:
            if SUV_patch horizontal_center > van_patch horizontal_center:
                return ""left""
    return ""right"""
15101358,Is the girl to the left of the boy?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one girl patch and one boy patch
    if len(girl_patches) == 0 or len(boy_patches) == 0:
        # If no girl or boy is found, query the image directly
        return image_patch_simple_query(""Is the girl to the left of the boy?"", ""no"")
    for girl_patch in girl_patches:
        for boy_patch in boy_patches:
            if girl_patch_horizontal_center < boy_patch_horizontal_center:
                return ""yes""
    return ""no"""
12785181,What animals are in the grass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animals_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animals_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animals are in the grass?"", ""all"")
    for animal_patch in animals_patches:
        if animal_patch simple query(""Is the animal in the grass?"", ""all"") == ""yes"":
            return animal_patch简单 query(""What animals are in the grass?"", ""all"")
    # If no animal is in the grass, return ""no""
    return ""no"""
348093,Are there both an apple and a bag in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    apple_patches = image_patch.find(""apple"")
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one apple patch and one bag patch
    if len(apple_patches) == 0 or len(bag_patches) == 0:
        # If no apple or bag is found, query the image directly
        return image_patch_simple_query(""Are there both an apple and a bag in the picture?"", ""no"")
    return ""yes"""
314181,Which sign is shown?," # assumes only one sign
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which sign is shown?"")"
16275314,"On which side is the woman, the right or the left?","    
    image_patch = Image Patch(image)
    return image_patch简单 query(""On which side is the woman, the right or the left?"")"
19535592,Who runs on the sand?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who runs on the sand?"", ""no"")
    for person_patch in person_patches:
        is_running_on_sand = (person_patch_simple_query(""Is the person running on the sand?"") == ""yes"")
        if is_running_on_sand:
            return person_patch_simple query(""Who runs on the sand?"")"
156886,Is there a giraffe near the bush?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch_simple_query(""Is there a giraffe near the bush?"", ""no"")
    for giraffe_patch in giraffe_patches:
        is_near_bush = (giraffe_patch simple query(""Is the giraffe near the bush?"") == ""yes"")
        if is_near_bush:
            return giraffe_patch简单 query(""Is there a giraffe near the bush?"") # crop would include the giraffe so keep it in the query
    # If no giraffe is near the bush, return ""no""
    return ""no"""
1756642,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
11177243,Who wears the shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who wears the shirt?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch_simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch_simple_query(""Who wears the shirt?"", ""yes"")
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who wears the shirt?"", ""no"")"
1972390,What type of animal is standing in the field?," return image_patch简单 query(""What type of animal is standing in the field?"", "" what type of animal is standing in the field"")"
14579439,Is the stuffed animal on the right?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    stuffed_animal_patches = image_patch find(""stuffed animal"")
    # Question assumes only one stuffed animal patch
    if len(stuffed_animal_patches) == 0:
        # If no stuffed animal is found, query the image directly
        return image_patch_simple_query(""Is the stuffed animal on the right?"", ""no"")
    for stuffed_animal_patch in stuffed_animal_patches:
        is_on_right = (stuffed_animal_patch horizontal_center > image_patch horizontal_center)
        if is_on_right:
            return ""yes""
    return ""no"""
6645395,Is the gray building behind the passengers that are boarding the airplane?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    building_patches = image_patch.find(""building"")
    # Question assumes only one building patch
    if len(building_patches) == 0:
        # If no building is found, query the image directly
        return image_patch_simple_query(""Is the gray building behind the passengers that are boarding the airplane?"", "" behind"")
    for building_patch in building_patches:
        passengers_patches = image_patch find(""passengers"")
        for passenger_patch in passengers_patches:
            if passenger_patch horizontal_center < building_patch horizontal_center:
                return ""no""
    return ""yes"""
19610200,Is the fence metallic?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Is the fence metallic?"", ""no"")
    for fence_patch in fence_patches:
        is_metalic = fence_patch simple query(""Is the fence metallic?"")"
5299471,What does the girl that to the left of the trashcan carry?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What does the girl that to the left of the trashcan carry?"", ""green"")
    for girl_patch in girl_patches:
        is_carrying_green = (girl_patch_simple_query(""Is the girl carrying green?"") == ""yes"")
        if is_carrying_green:
            return girl_patch_simple_query(""What does the girl that to the left of the trashcan carry?"", ""green"")
    # If no girl is carrying green, pick the first girl
    return girl_patches[0].simple_query(""What does the girl that to the left of the trashcan carry?"", ""green"")"
7548203,Which kind of vegetable is on the pizza?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""Which kind of vegetable is on the pizza?"", "" vegetable"")
    for vegetable_patch in vegetable_patches:
        return vegetable_patch简单 query(""Which kind of vegetable is on the pizza?"", "" vegetable"")"
91027737,On which side is the pan?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pan_patches = image_patch find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch_simple_query(""On which side is the pan?"", ""left"")
    for pan_patch in pan_patches:
        side = ""left"" if pan_patch horizontal_center < image_patch horizontal_center else ""right""
        return side"
19133443,Are the black cars in the top part of the photo?,"    
    image_patch = Image Patch(image)
    black_car_patches = image_patch find(""black car"")
    # Question assumes only one black car patch
    if len(black_car_patches) == 0:
        # If no black car is found, query the image directly
        return image_patch_simple_query(""Are the black cars in the top part of the photo?"", ""top"")
    if black_car_patches[0].vertical_center < image_patch_vertical_center:
        return ""top""
    else:
        return ""bottom"""
6144031,Who is in the living room?," # assumes only one person in the living room
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is in the living room?"", ""no"")
    return person_patches[0].simple_query(""Who is in the living room?"")"
14300987,What is the sink made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sink_patches = image_patch.find(""sink"")
    # Question assumes only one sink patch
    if len(sink_patches) == 0:
        # If no sink is found, query the image directly
        return image_patch_simple_query(""What is the sink made of?"", "" what"")
    for sink_patch in sink_patches:
        return sink_patch简单 query(""What is the sink made of?"", "" what"")"
16464341,Is there a black cat or bird?," # black cat or bird
    image_patch = Image Patch(image)
    black_cat_patches = image_patch find(""black cat"")
    # Question assumes only one black cat patch
    if len(black_cat_patches) == 0:
        # If no black cat is found, query the image directly
        return image_patch_simple_query(""Is there a black cat or bird?"", ""black cat"")
    black_cat_patch = black_cat_patches[0]
    bird_patches = image_patch find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        return ""no""
    for bird_patch in bird_patches:
        if black_cat_patch vertical_center < bird_patch vertical_center:
            return ""black cat""
        else:
            return ""bird"""
1241741,Do you see a bicycle or a biker in this picture?," # returns ""yes"" if there is a bicycle or a biker in the image
    image_patch = Image Patch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    biker_patches = image_patch.find(""biker"")
    # Question assumes only one bicycle patch and one biker patch
    if len(bicycle_patches) == 0 and len(biker_patches) == 0:
        # If no bicycle or biker is found, query the image directly
        return image_patch_simple_query(""Do you see a bicycle or a biker in this picture?"", ""yes"")
    if len(bicycle_patches) > 0 and len(biker_patches) > 0:
        return ""yes""
    return ""no"""
844747,Are there both a pillow and a kitten in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    pillow_patches = image_patch find(""pillow"")
    kitten_patches = image_patch find(""kitten"")
    # Question assumes only one pillow patch and one kitten patch
    if len(pillow_patches) == 0 or len(kitten_patches) == 0:
        # If no pillow or no kitten is found, query the image directly
        return image_patch_simple_query(""Are there both a pillow and a kitten in the image?"", ""no"")
    return ""yes"""
1104500,What kind of food is in the box?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What kind of food is in the box?"", "" what"")
    for food_patch in food_patches:
        return food_patch简单 query(""What kind of food is in the box?"", "" what"")"
4204973,What is the food that is to the left of the kid called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What is the food that is to the left of the kid called?"", ""left"")
    for food_patch in food_patches:
        is_to_left_of_kid = (food_patch简单 query(""Is the food to the left of the kid?"") == ""yes"")
        if is_to_left_of_kid:
            return food_patch简单 query(""What is the food that is to the left of the kid called?"", ""left"")
    # If no food is to the left of the kid, return ""no""
    return ""no"""
11820726,"What device is the desk in front of, a television or a printer?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    desk_patches = image_patch find(""desk"")
    # Question assumes only one desk patch
    if len(desk_patches) == 0:
        # If no desk is found, query the image directly
        return image_patch_simple_query(""What device is the desk in front of, a television or a printer?"", "" television"")
    for desk_patch in desk_patches:
        is_tv = ( desk_patch简单 query(""Is the desk wearing a shirt?"") == ""yes"")
        if is_tv:
            return "" television""
    # If no desk is wearing a shirt, pick the first desk
    return desk_patches[0].simple query(""What device is the desk in front of, a television or a printer?"", "" printer"")"
18114588,Do you see a helmet there?," return image_patch简单 query(""Do you see a helmet there?"", ""no"")"
11950874,What animal is standing on the ground?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is standing on the ground?"", ""no"")
    for animal_patch in animal_patches:
        is_standing_on_ground = (animal_patch simple query(""Is the animal standing on the ground?"") == ""yes"")
        if is_standing_on ground:
            return animal_patch简单 query(""What animal is standing on the ground?"") # crop would include the ground so keep it in the query
    # If no animal is standing on the ground, pick the first animal
    return animal_patches[0].simple query(""What animal is standing on the ground?"")"
10216953,Is the small car to the left of the fork on the right?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""Is the small car to the left of the fork on the right?"", ""no"")
    for car_patch in car_patches:
        fork_patches = image_patch find(""fork"")
        for fork_patch in fork_patches:
            if fork_patch horizontal_center > car_patch horizontal_center:
                return ""no""
    return ""yes"""
16184942,Does that grass look brown and short?," # returns ""yes"" if the grass looks brown and short
    image_patch = Image Patch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch_simple_query(""Does that grass look brown and short?"", ""yes"")
    if grass_patches[0].verify_property(""grass"", ""brown and short""):
        return ""yes""
    return ""no"""
6312238,Is the hydrant to the left of the car?," # assumes only one hydrant patch and one car patch
    image_patch = Image Patch(image)
    hydrant_patches = image_patch.find(""hydrant"")
    car_patches = image_patch.find(""car"")
    if len(hydrant_patches) == 0 or len(car_patches) == 0:
        # If no hydrant or car is found, query the image directly
        return image_patch_simple_query(""Is the hydrant to the left of the car?"", ""no"")
    for hydrant_patch in hydrant_patches:
        for car_patch in car_patches:
            if hydrant_patch horizontal_center < car_patch horizontal_center:
                return ""yes""
    return ""no"""
16646227,On which side of the picture is the gray car?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    gray_car_patches = image_patch.find(""gray car"")
    # Question assumes only one gray car patch
    if len(gray_car_patches) == 0:
        # If no gray car is found, query the image directly
        return image_patch_simple_query(""On which side of the picture is the gray car?"", ""left"")
    for gray_car_patch in gray_car_patches:
        is_left = gray_car_patch horizontal_center < image_patch horizontal_center)
        if is_left:
            return ""left""
    return ""right"""
10484636,Is the ball to the right or to the left of the person that is wearing sneakers?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the ball to the right or to the left of the person that is wearing sneakers?"", ""right"")
    for person_patch in person_patches:
        ball_patches = image_patch.find(""ball"")
        for ball_patch in ball_patches:
            if ball_patch horizontal_center > person_patch horizontal_center:
                return ""right""
    return ""left"""
3443704,What is the woman wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""What is the woman wearing?"", "" what"")
    for woman_patch in woman_patches:
        return woman_patch简单 query(""What is the woman wearing?"")"
19313572,What is the color of the tent to the left of the vehicles?," # color of the tent to the left of the vehicles
    image_patch = Image Patch(image)
    tent_patches = image_patch find(""tent"")
    # Question assumes only one tent patch
    if len(tent_patches) == 0:
        # If no tent is found, query the image directly
        return image_patch_simple_query(""What is the color of the tent to the left of the vehicles?"", ""color"")
    for tent_patch in tent_patches:
        color_patches = image_patch find(""color"")
        for color_patch in color_patches:
            if color_patch horizontal_center < tent_patch horizontal_center:
                return color_patch simple query(""What is the color of the tent to the left of the vehicles?"", ""color"")
    return ""no"""
10885675,What is the toilet seat made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toilet seat_patches = image_patch find(""toilet seat"")
    # Question assumes only one toilet seat patch
    if len(toilet seat_patches) == 0:
        # If no toilet seat is found, query the image directly
        return image_patch_simple_query(""What is the toilet seat made of?"", "" what is the toilet seat made of?"")"
6926432,What animal is resting on the blanket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is resting on the blanket?"", ""no"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal resting on the blanket?"") == ""yes"":
            return animal_patch简单 query(""What animal is resting on the blanket?"", ""no"")
    # If no animal is resting on the blanket, return ""no""
    return ""no"""
14561612,What color do you think the bikini that the woman is wearing is?," # color of the bikini
    image_patch = Image Patch(image)
    return image_patch简单 query(""What color do you think the bikini that the woman is wearing is?"")"
6587755,Are both the room and the bowl the same color?," # returns ""no"" if both are not the same color
    image_patch = Image Patch(image)
    room_patches = image_patch.find(""room"")
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one room patch and one bowl patch
    if len(room_patches) == 0 or len(bowl_patches) == 0:
        # If no room or bowl is found, query the image directly
        return image_patch_simple_query(""Are both the room and the bowl the same color?"", ""no"")
    room_patch = room_patches[0]
    bowl_patch = bowl_patches[0]
    return room_patch verify_property(""room"", ""bowl"")"
4479543,Is the barn white or brown?," # assumes only one barn patch
    image_patch = Image Patch(image)
    barn_patches = image_patch find(""barn"")
    if len(barn_patches) == 0:
        # If no barn is found, query the image directly
        return image_patch_simple_query(""Is the barn white or brown?"", ""white"")
    if barn_patches[0].best_text_match [""white""] == ""yes"":
        return ""white""
    else:
        return ""brown"""
972522,Does the box look white or brown?," # assumes only one box patch
    image_patch = Image Patch(image)
    box_patches = image_patch find(""box"")
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch_simple_query(""Does the box look white or brown?"", ""white"")
    if box_patches[0].best_text_match [""white""] == ""yes"":
        return ""white""
    else:
        return ""brown"""
3948528,What is the bowl made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bowl_patches = image_patch find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch_simple_query(""What is the bowl made of?"", "" what"")
    for bowl_patch in bowl_patches:
        material_patches = image_patch find(""material"")
        for material_patch in material_patches:
            if material_patch simple query(""Is the material made of wood?"", "" what):
                return ""wood""
    # If no bowl is made of wood, pick the first material
    return bowl_patches[0].simple query(""What is the bowl made of?"", "" what"")"
15724828,Is the bench in front of the rock gray or red?," # assumes only one bench patch and one rock patch
    image_patch = Image Patch(image)
    bench_patches = image_patch find(""bench"")
    rock_patches = image_patch find(""rock"")
    if len(bench_patches) == 0 or len(rock_patches) == 0:
        # If no bench or rock is found, query the image directly
        return image_patch_simple_query(""Is the bench in front of the rock gray or red?"", ""gray red"")
    bench_patch = bench_patches[0]
    rock_patch = rock_patches[0]
    if bench_patch horizontal_center < rock_patch horizontal_center:
        return ""gray""
    else:
        return ""red"""
866459,On which side is the couch?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    couch_patches = image_patch find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch_simple_query(""On which side is the couch?"", ""left"", ""right"")
    if couch_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
8614812,Is the person that is playing wearing shorts?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the person that is playing wearing shorts?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shorts = (person_patch_simple_query(""Is the person wearing shorts?"", ""yes"") == ""yes"")
        if is_wearing_shorts:
            return person_patch_simple_query(""Is the person wearing shorts?"", ""yes"")
    # If no person is wearing shorts, pick the first person
    return person_patches[0].simple_query(""Is the person wearing shorts?"", ""no"")"
167438,What is wearing the ground?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch_simple_query(""What is wearing the ground?"", "" ground"")
    for ground_patch in ground_patches:
        is_wearing_ground = (ground_patch_simple_query(""Is the ground wearing the ground?"") == ""yes"")
        if is_wearing_ground:
            return ground_patch_simple_query(""What is wearing the ground?"", "" ground"")
    # If no ground is wearing the ground, pick the first ground
    return ground_patches[0].simple query(""What is wearing the ground?"", "" ground"")"
9418088,Which kind of furniture is wooden?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""Which kind of furniture is wooden?"", ""wood"")
    for furniture_patch in furniture_patches:
        is_wooden = (furniture_patch simple query(""Is the furniture wooden?"") == ""yes"")
        if is_wooden:
            return furniture_patch简单 query(""Which kind of furniture is wooden?"", ""wood"")
    # If no furniture is wooden, return ""no""
    return ""no"""
1042377,Who is standing beside the person that is wearing a dress?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is standing beside the person that is wearing a dress?"", ""person"")
    for person_patch in person_patches:
        is_wearing_dress = (person_patch_simple_query(""Is the person wearing a dress?"") == ""yes"")
        if is_wearing_dress:
            return person_patch_simple_query(""Who is standing beside the person that is wearing a dress?"", ""person"")
    # If no person is wearing a dress, pick the first person
    return person_patches[0].simple_query(""Who is standing beside the person that is wearing a dress?"", ""person"")"
16889676,Is it an indoors or outdoors scene?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is it an indoors or outdoors scene?"")"
10324400,How fat are the long skis?," # assumes only one pair of skis
    image_patch = Image Patch(image)
    skis_patches = image_patch find(""skis"")
    if len(ski_patches) == 0:
        # If no skis are found, query the image directly
        return image_patch_simple_query(""How fat are the long skis?"", ""skis"")
    if skis_patches[0].width > image_patch_width:
        return ""full""
    else:
        return ""not full"""
2211743,Is the sky clear or overcast?," # overcast is a better answer than clear
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the sky clear or overcast?"")"
4224772,Are there bottles to the left of the pencils in the bottom part of the image?," # assumes only one bottle patch and one pencil patch
    image_patch = Image Patch(image)
    bottles_patches = image_patch.find(""bottles"")
    pencils_patches = image_patch.find(""pencils"")
    if len(bottles_patches) == 0 or len(pencils_patches) == 0:
        # If no bottles or pencils are found, query the image directly
        return image_patch_simple_query(""Are there bottles to the left of the pencils in the bottom part of the image?"", ""no"")
    for bottle_patch in bottles_patches:
        for pencil_patch in pencils_patches:
            if bottle_patch vertical_center < pencil_patch vertical_center:
                return ""yes""
    return ""no"""
15478302,Is there any dark door or window in the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dark_patches = image_patch.find(""dark"")
    # Question assumes only one dark patch
    if len(dark_patches) == 0:
        # If no dark is found, query the image directly
        return image_patch_simple_query(""Is there any dark door or window in the image?"", ""dark"")
    for dark_patch in dark_patches:
        is_door = (dark_patch simple query(""Is the dark patch a door?"") == ""yes"")
        is_window = (dark_patch simple query(""Is the dark patch a window?"") == ""yes"")
        if is_door or is_window:
            return ""yes""
    return ""no"""
18414234,Do you see either a knife or a chair in the picture?," # returns ""yes"" if either is found, ""no"" otherwise
    image_patch = Image Patch(image)
    knife_patches = image_patch.find(""knife"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one knife patch and one chair patch
    if len(knife_patches) == 0 and len(chair_patches) == 0:
        return image_patch_simple_query(""Do you see either a knife or a chair in the picture?"", ""no"")
    if len(knife_patches) > 0 and len(chair_patches) > 0:
        return image_patch_simple_qa(""Do you see either a knife or a chair in the picture?"", ""yes"")
    if len(knife_patches) > 0:
        return image_patch_simple_qa(""Do you see either a knife or a chair in the picture?"", ""yes"")
    if len(chair_patches) > 0:
        return image_patch_simple_qa(""Do you see either a knife or a chair in the picture?"", ""yes"")
    return ""no"""
19779815,Is the book red or yellow?," # assumes only one book patch
    image_patch = Image Patch(image)
    book_patches = image_patch find(""book"")
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch_simple_query(""Is the book red or yellow?"", ""red"", ""yellow"")
    return book_patches[0].best_text_match([""red"", ""yellow""])"
7257283,Are there men to the left of the picture?," # assumes only one man patch
    image_patch = Image Patch(image)
    men_patches = image_patch find(""man"")
    if len(men_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are there men to the left of the picture?"", ""left"")
    for man_patch in men_patches:
        if man_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
6621625,On which side of the picture is the bench?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch_simple_query(""On which side of the picture is the bench?"", ""left"", ""right"")
    for bench_patch in bench_patches:
        return bench_patch simple query(""On which side of the picture is the bench?"", ""left"", ""right"")"
19311589,Are there both fences and horses in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    horse_patches = image_patch find(""horse"")
    # Question assumes only one fence patch and one horse patch
    if len(fence_patches) == 0 or len(horse_patches) == 0:
        # If no fence or no horse is found, query the image directly
        return image_patch_simple_query(""Are there both fences and horses in this picture?"", ""no"")
    return ""yes"""
171018070,What device is to the right of the container that the person is to the left of?," # assumes only one container and one person
    image_patch = Image Patch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch_simple_query(""What device is to the right of the container that the person is to the left of?"", "" container"")
    for container_patch in container_patches:
        person_patches = image_patch find(""person"")
        if len(person_patches) == 0:
            return image_patch_simple query(""What device is to the right of the container that the person is to the left of?"", "" container"")
        for person_patch in person_patches:
            if person_patch horizontal center < container_patch horizontal center:
                return image_patch简单 query(""What device is to the right of the container that the person is to the left of?"", "" container"")
    return ""no"""
171031333,Do you see blankets in the picture that are not black?," # black is a color, so need to check if there are other colors
    image_patch = Image Patch(image)
    blankets_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch_simple_query(""Do you see blankets in the picture that are not black?"", ""black"")
    if image_patch简单 query(""Is the blanket black?"", ""black"") == ""no"":
        return ""yes""
    return ""no"""
16695341,What is the fence made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What is the fence made of?"", "" what"")
    for fence_patch in fence_patches:
        return fence_patch简单 query(""What is the fence made of?"", "" what"")"
8314287,Do you see any bottle or child there?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    child_patches = image_patch.find(""child"")
    # Question assumes only one bottle patch and one child patch
    if len(bottle_patches) == 0 or len(child_patches) == 0:
        # If no bottle or child is found, query the image directly
        return image_patch_simple_query(""Do you see any bottle or child there?"", ""bottle or child"")
    for bottle_patch in bottle_patches:
        for child_patch in child_patches:
            if bottle_patch horizontal center < child_patch horizontal center:
                return ""yes""
    return ""no"""
5111363,Are there chairs or tables that are not blue?," # assumes only one chair and one table
    image_patch = Image Patch(image)
    chairs_patches = image_patch.find(""chair"")
    tables_patches = image_patch.find(""table"")
    if len(chairs_patches) == 0 or len(tables_patches) == 0:
        # If no chairs or tables are found, query the image directly
        return image_patch_simple_query(""Are there chairs or tables that are not blue?"", ""blue"")
    for chair_patch in chairs_patches:
        if chair_patch verify_property(""chair"", ""blue""):
            return ""no""
    for table_patch in tables_patches:
        if table_patch verify_property(""table"", ""blue""):
            return ""no""
    return ""yes"""
9230971,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
132422,Does the hair have short length and white color?," # assumes only one hair patch
    image_patch = Image Patch(image)
    hair_patches = image_patch find(""hair"")
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Does the hair have short length and white color?"", ""no"")
    for hair_patch in hair_patches:
        if hair_patch.horizontal_center < image_patch horizontal_center and hair_patch simple query(""Is the hair white?"") == ""yes"":
            return ""yes""
    return ""no"""
4822200,Do you see any lettuce on the food with the meat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""Do you see any lettuce on the food with the meat?"", ""no"")
    for food_patch in food_patches:
        is_lettuce = (food_patch简单 query(""Is there lettuce on the food?"") == ""yes"")
        if is_lettuce:
            return food_patch_simple query(""Is there lettuce on the food?"") # crop would include the lettuce so keep it in the query
    # If no food is wearing a shirt, pick the first food
    return food_patches[0].simple query(""Is there lettuce on the food?"")"
3726666,What device is to the left of the curtain that is to the left of the glasses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch_simple_query(""What device is to the left of the curtain that is to the left of the glasses?"", ""left"")
    for curtain_patch in curtain_patches:
        glasses_patches = image_patch find(""glasses"")
        # Question assumes only one glasses patch
        if len(glasses_patches) == 0:
            return image_patch_simple query(""What device is to the left of the curtain that is to the left of the glasses?"", ""left"")
        for glasses_patch in glasses_patches:
            if glasses_patch horizontal center < curtain_patch horizontal center:
                return image_patch simple query(""What device is to the left of the curtain that is to the left of the glasses?"", ""left"")
    return ""no"""
9954849,What kind of furniture is it?," # assumes only one piece of furniture
    image_patch = Image Patch(image)
    furniture_patches = image_patch find(""furniture"")
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is it?"", ""furniture"")
    return furniture_patches[0].simple_query(""What kind of furniture is it?"", ""furniture"")"
19409495,Are there any red trains or buses?," # red train or bus
    image_patch = Image Patch(image)
    red_train_patches = image_patch.find(""red train"")
    red_bus_patches = image_patch.find(""red bus"")
    # Question assumes only one red train patch and one red bus patch
    if len(red_train_patches) == 0 and len(red_bus_patches) == 0:
        # If no red train or bus is found, query the image directly
        return image_patch_simple_query(""Are there any red trains or buses?"", ""red train or bus"")
    return ""yes"""
8965422,What kind of vegetable is to the left of the crate that is of the lettuce?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        # If no crate is found, query the image directly
        return image_patch_simple_query(""What kind of vegetable is to the left of the crate that is of the lettuce?"", ""left"")
    for crate_patch in crate_patches:
        lettuce_patches = image_patch.find(""lettuce"")
        for lettuce_patch in lettuce_patches:
            if lettuce_patch horizontal_center < crate_patch horizontal_center:
                return lettuce_patch简单 query(""What kind of vegetable is to the left of the crate that is of the lettuce?"", ""left"")
    # If no lettuce is found, return ""no""
    return ""no"""
623393,"What type of clothing is tan, the hat or the vest?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch_simple_query(""What type of clothing is tan, the hat or the vest?"", [""tan"", ""hat"", ""vest""])
    for clothing_patch in clothing_patches:
        if clothing_patch简单 query(""Is the clothing tan?"") == ""yes"":
            return ""tan""
        elif clothing_patch简单 query(""Is the clothing a hat?"") == ""yes"":
            return ""hat""
        elif clothing_patch simple query(""Is the clothing a vest?"") == ""yes"":
            return ""vest""
    return ""no"""
6436448,Is the color of the skirt the same as the scarf?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch_simple_query(""Is the color of the skirt the same as the scarf?"", ""same color"")
    for skirt_patch in skirt_patches:
        is_same_color = (skirt_patch简单 query(""Is the color of the skirt the same as the scarf?"", ""same color"") == ""yes"")
        if is_same_color:
            return skirt_patch_simple query(""Is the color of the skirt the same as the scarf?"", ""same color"") # crop would include the scarf so keep it in the query
    # If no skirt is the same color as the scarf, return ""no""
    return ""no"""
3303313,Is the blanket under a cat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch_simple_query(""Is the blanket under a cat?"", ""under"")
    for blanket_patch in blanket_patches:
        is_under_cat = (blanket_patch简单 query(""Is the blanket under a cat?"", ""under"") == ""yes"")
        if is_under_cat:
            return blanket_patch简单 query(""Is the blanket under a cat?"", ""under"") # crop would include the cat so keep it in the query
    # If no blanket is under a cat, return ""no""
    return ""no"""
443663,What color is the picture?," return image_patch简单 query(""What color is the picture?"")"
17267472,Is there any umbrella to the right of the man?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is there any umbrella to the right of the man?"", ""no"")
    for man_patch in man_patches:
        umbrella_patches = image_patch find(""umbrella"")
        for umbrella_patch in umbrella_patches:
            if umbrella_patch horizontal_center > man_patch horizontal_center:
                return ""yes""
    return ""no"""
1885406,What is the toy on the bed?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toy_patches = image_patch find(""toy"")
    # Question assumes only one toy patch
    if len(toy_patches) == 0:
        # If no toy is found, query the image directly
        return image_patch_simple_query(""What is the toy on the bed?"", ""no"")
    for toy_patch in toy_patches:
        is_on_bed = toy_patch simple query(""Is the toy on the bed?"")"
5557965,On which side is the bag?," # assumes only one bag patch
    image_patch = Image Patch(image)
    bag_patches = image_patch find(""bag"")
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""On which side is the bag?"", ""left"")
    if bag_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
4325825,On which side is the banana?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    banana_patches = image_patch find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""On which side is the banana?"", ""left"")
    for banana_patch in banana_patches:
        side = ""left"" if banana_patch horizontal_center < image_patch horizontal_center else ""right""
        return side"
3196355,What does the batter hold?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What does the batter hold?"")"
14470748,Who wears a jacket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who wears a jacket?"", ""no"")
    for person_patch in person_patches:
        is_wearing_jacket = (person_patch_simple_query(""Is the person wearing a jacket?"") == ""yes"")
        if is_wearing_jacket:
            return person_patch_simple_query(""Who wears a jacket?"", ""yes"")
    # If no person is wearing a jacket, pick the first person
    return person_patches[0].simple query(""Who wears a jacket?"", ""no"")"
16537736,Are there any houses behind the shrubs?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shrub_patches = image_patch find("" shrub"")
    # Question assumes only one shrub patch
    if len(shrub_patches) == 0:
        # If no shrub is found, query the image directly
        return image_patch_simple_query(""Are there any houses behind the shrubs?"", ""no"")
    for shrub_patch in shrub_patches:
        house_patches = image_patch find(""house"")
        for house_patch in house_patches:
            if house_patch_horizontal_center > shrub_patch_horizontal_center:
                return ""yes""
    return ""no"""
1129541,What piece of furniture is made of wood?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What piece of furniture is made of wood?"", ""mathrm"")
    for furniture_patch in furniture_patches:
        is_made_of_wood = (furniture_patch简单 query(""Is the furniture made of wood?"") == ""yes"")
        if is_made_of_wood:
            return furniture_patch简单 query(""What piece of furniture is made of wood?"", ""mathrm"")
    # If no furniture is made of wood, pick the first piece of furniture
    return furniture_patches[0].simple query(""What piece of furniture is made of wood?"", ""mathrm"")"
15270011,Is the racket to the right or to the left of the man that is wearing a hat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the racket to the right or to the left of the man that is wearing a hat?"", ""right"")
    for man_patch in man_patches:
        if man_patch_simple_query(""Is the man wearing a hat?"", ""yes""):
            return man_patch_simple_query(""Is the racket to the right or to the left of the man?"", ""right"")
    # If no man is wearing a hat, pick the first man
    return man_patches[0].simple_query(""Is the racket to the right or to the left of the man?"", ""right"")"
12416703,Where is that cat?," # returns ""where is that cat""
    image_patch = Image Patch(image)
    cat_patches = image_patch find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch_simple_query(""Where is that cat?"", ""where"")
    return cat_patches[0].simple_query(""Where is that cat?"", ""where"")"
15603088,The animal to the right of the envelope is lying on what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""The animal to the right of the envelope is lying on what?"", ""lying on"")
    for animal_patch in animal_patches:
        is_laying_on = (animal_patch simple query(""Is the animal lying on?"") == ""yes"")
        if is_laying_on:
            return animal_patch简单 query(""The animal to the right of the envelope is lying on what?"", ""lying on"")
    # If no animal is lying on, pick the first animal
    return animal_patches[0].simple query(""The animal to the right of the envelope is lying on what?"", ""lying on"")"
5329077,Is the man on a bench?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man on a bench?"", ""no"")
    for man_patch in man_patches:
        is_on_bench = (man_patch简单 query(""Is the man on a bench?"") == ""yes"")
        if is_on_bench:
            return man_patch简单 query(""Is the man on a bench?"") # crop would include the bench so keep it in the query
    # If no man is on a bench, return ""no""
    return ""no"""
1945705,What kind of device is to the left of the device that looks silver and gray?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    silver_gray_patch = image_patch.find(""silver gray"")
    # Question assumes only one silver gray patch
    if len(silver_gray_patch) == 0:
        # If no silver gray patch is found, query the image directly
        return image_patch_simple_query(""What kind of device is to the left of the device that looks silver and gray?"", ""left"")
    for silver_gray_patch in silver_gray_patch:
        device_patches = image_patch.find(""device"")
        for device_patch in device_patches:
            if device_patch horizontal_center < silver_gray_patch horizontal_center:
                return device_patch简单 query(""What kind of device is to the left of the device that looks silver and gray?"", ""left"")
    # If no silver gray patch is found, query the image directly
    return image_patch简单 query(""What kind of device is to the left of the device that looks silver and gray?"", ""left"")"
17520003,What vehicle is to the right of the pine tree?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pine_tree_patches = image_patch.find(""pine tree"")
    # Question assumes only one pine tree patch
    if len(pine_tree_patches) == 0:
        # If no pine tree is found, query the image directly
        return image_patch_simple_query(""What vehicle is to the right of the pine tree?"", ""no"")
    for pine_tree_patch in pine_tree_patches:
        vehicle_patches = image_patch find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch horizontal_center > pine_tree_patch horizontal_center:
                return vehicle_patch simple query(""What vehicle is to the right of the pine tree?"", ""no"")
    # If no vehicle is to the right of the pine tree, return ""no""
    return ""no"""
1259983,Who is wearing pants?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing pants?"", ""no"")
    for person_patch in person_patches:
        is_wearing_pants = (person_patch_simple_query(""Is the person wearing pants?"") == ""yes"")
        if is_wearing_pants:
            return person_patch_simple_query(""Who is wearing pants?"", ""yes"")
    # If no person is wearing pants, pick the first person
    return person_patches[0].simple query(""Who is wearing pants?"", ""no"")"
6413378,Is there a black keyboard or camera?," # black keyboard is not possible so only camera
    image_patch = Image Patch(image)
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one camera patch
    if len camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch_simple_query(""Is there a black keyboard or camera?"", ""camera"")
    return ""no"""
947305,Is the sunny water blue and high?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch_simple_query(""Is the sunny water blue and high?"", ""water"")
    for water_patch in water_patches:
        is_blue = water_patch simple query(""Is the water blue?"", ""water"")
        is_high = water_patch simple query(""Is the water high?"", ""water"")
        if is_blue and is_high:
            return ""yes""
    return ""no"""
4367817,What type of animal in this scene is brown?," # returns ""no brown animal found""
    image_patch = Image Patch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch_simple_query(""What type of animal in this scene is brown?"", ""no brown animal found"")
    if brown_patches[0].verify_property(""brown"", ""brown""):
        return ""brown""
    return ""no brown animal found"""
15485572,What is the vegetable on the hot dog with the cheese?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    hot_dog_patches = image_patch.find(""hot dog"")
    # Question assumes only one hot dog patch
    if len(hot_dog_patches) == 0:
        # If no hot dog is found, query the image directly
        return image_patch_simple_query(""What is the vegetable on the hot dog with the cheese?"", ""hot dog"")
    for hot_dog_patch in hot_dog_patches:
        is_cheese = (hot_dog_patch简单 query(""Is there cheese on the hot dog?"") == ""yes"")
        if is_cheese:
            return hot_dog_patch简单 query(""What is the vegetable on the hot dog with the cheese?"", ""hot dog"")
    # If no hot dog is wearing a shirt, pick the first hot dog
    return hot_dog_patches[0].simple query(""What is the vegetable on the hot dog with the cheese?"", ""hot dog"")"
12661142,What is the appliance in the kitchen called?," # assumes only one appliance patch
    image_patch = Image Patch(image)
    appliance_patches = image_patch find(""appliance"")
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch_simple_query(""What is the appliance in the kitchen called?"", ""appliance"")
    return appliance_patches[0].simple_query(""What is the appliance in the kitchen called?"", ""appliance"")"
41012743,The arrow is on what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    arrow_patches = image_patch find(""arrow"")
    # Question assumes only one arrow patch
    if len(arrow_patches) == 0:
        # If no arrow is found, query the image directly
        return image_patch_simple_query(""The arrow is on what?"", ""on"")
    for arrow_patch in arrow_patches:
        is_on = (arrow_patch简单 query(""Is the arrow on?"") == ""on"")
        if is_on:
            return arrow_patch简单 query(""The arrow is on what?"", ""on"")
    # If no arrow is on, pick the first arrow
    return arrow_patches[0].simple query(""The arrow is on what?"", ""on"")"
4777414,What color is the bicycle in the bottom of the photo?," return image_patch简单 query(""What color is the bicycle in the bottom of the photo?"", ""blue"")"
1185988,What is the device on top of the table that is to the right of the trashcan?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch_simple_query(""What is the device on top of the table that is to the right of the trashcan?"", "" table"")
    for table_patch in table_patches:
        trashcan_patches = image_patch.find(""trash can"")
        for trashcan_patch in trashcan_patches:
            if table_patch horizontal_center > trashcan_patch horizontal_center:
                return table_patch简单 query(""What is the device on top of the table that is to the right of the trashcan?"", "" table"")"
13582968,Was granite used to make that floor?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    granite_patches = image_patch.find(""granite"")
    # Question assumes only one granite patch
    if len(granite_patches) == 0:
        # If no granite is found, query the image directly
        return image_patch_simple_query(""Was granite used to make that floor?"", ""no"")
    for granite_patch in granite_patches:
        is_used = (granite_patch simple query(""Was granite used to make that floor?"") == ""yes"")
        if is_used:
            return granite_patch简单 query(""Was granite used to make that floor?"") # crop would include the floor so keep it in the query
    # If no granite is used to make the floor, return ""no""
    return ""no"""
6235273,Are there women in the photo?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Are there women in the photo?"", ""no"")
    for person_patch in person_patches:
        gender_patches = image_patch.find(""gender"")
        for gender_patch in gender_patches:
            if gender_patch simple query("" what gender is the person?"", ""female):
                return ""yes""
    return ""no"""
5377974,What is the girl playing with?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What is the girl playing with?"", "" what"")
    for girl_patch in girl_patches:
        is_playing_with = (girl_patch_simple_query(""Is the girl playing with?"") == ""yes"")
        if is_playing_with:
            return girl_patch_simple_query(""What is the girl playing with?"", "" what"")
    # If no girl is playing with, pick the first girl
    return girl_patches[0].simple_query(""What is the girl playing with?"", "" what"")"
51037065,On which side of the image is the fridge?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    return image_patch简单 query(""On which side of the image is the fridge?"")"
5299477,Which kind of bag does the girl carry?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""Which kind of bag does the girl carry?"", ""bag"")
    for bag_patch in bag_patches:
        return bag_patch简单 query(""Which kind of bag does the girl carry?"", ""bag"")"
15135617,Is the white dog on a bench?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch_simple_query(""Is the white dog on a bench?"", ""white"")
    for dog_patch in dog_patches:
        is_on_bench = (dog_patch简单 query(""Is the dog on a bench?"") == ""yes"")
        if is_on_bench:
            return dog_patch简单 query(""Is the white dog on a bench?"", ""white"") # crop would include the white dog so keep it in the query
    # If no white dog is on a bench, return ""no""
    return ""no"""
1111583,Is the male person to the right of a person?," # assumes only one male person patch
    image_patch = Image Patch(image)
    male_patches = image_patch find(""male"")
    if len(male_patches) == 0:
        # If no male is found, query the image directly
        return image_patch_simple_query(""Is the male person to the right of a person?"", ""no"")
    for male_patch in male_patches:
        person_patches = image_patch find(""person"")
        for person_patch in person_patches:
            if person_patch horizontal_center > male_patch horizontal_center:
                return ""yes""
    return ""no"""
12352269,Are there both windows and doors in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
15610844,What kind of place is shown?," return image_patch简单 query(""What kind of place is shown?"")"
11869032,Is the banana below a bird?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    banana_patches = image_patch find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""Is the banana below a bird?"", ""no"")
    for banana_patch in banana_patches:
        is_below_bird = (banana_patch_simple_query(""Is the banana below a bird?"") == ""yes"")
        if is_below_bird:
            return banana_patch_simple_query(""Is the banana below a bird?"", ""no"")
    # If no banana is below a bird, return ""no""
    return ""no"""
9878360,What color is the vehicle to the left of the fence?," # color of the object to the left of the fence
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What color is the vehicle to the left of the fence?"", ""fence"")
    for fence_patch in fence_patches:
        left_patches = image_patch find(""left"")
        for left_patch in left_patches:
            if left_patch horizontal center < fence_patch horizontal center:
                return image_patch简单 query(""What color is the vehicle to the left of the fence?"", ""fence"")
    return ""no"""
481765,Are there either any buses or trains in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    buses_patches = image_patch.find(""bus"")
    trains_patches = image_patch.find(""train"")
    # Question assumes only one bus patch and one train patch
    if len(buses_patches) == 0 and len(trains_patches) == 0:
        # If no bus or train is found, query the image directly
        return image_patch_simple_query(""Are there either any buses or trains in the image?"", ""no"")
    if len(buses_patches) == 0:
        return image_patch_simple_qa(""Are there any trains in the image?"", ""no"")
    if len(trains_patches) == 0:
        return image_patch_simple_qa(""Are there any buses in the image?"", ""no"")
    return ""yes"""
6665919,What is the fence made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What is the fence made of?"", "" what"")
    for fence_patch in fence_patches:
        return fence_patch简单 query(""What is the fence made of?"", "" what"")"
9218340,Does the man to the left of the traffic cone wear a cap?," # assumes only one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Does the man to the left of the traffic cone wear a cap?"", ""no"")
    man_patch = man_patches[0]
    traffic_cone_patches = image_patch finds(""traffic cone"")
    if len(traffic_cone_patches) == 0:
        return ""no""
    for traffic_cone_patch in traffic_cone_patches:
        if traffic_cone_patch horizontal center < man_patch horizontal center:
            return ""yes""
    return ""no"""
11981238,What is common to the blazer and the suit?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blazer_patches = image_patch.find(""blazer"")
    suit_patches = image_patch.find(""suit"")
    # Question assumes only one blazer patch and one suit patch
    if len(blanter_patches) == 0 or len(suit_patches) == 0:
        # If no blazer or suit is found, query the image directly
        return image_patch_simple_query(""What is common to the blazer and the suit?"", ""common"")
    for blazer_patch in blazer_patches:
        for suit_patch in suit_patches:
            common_elements = set(blanter_patch.cropped_image) & set(suit_patch.cropped_image)
            if len(common_elements) > 0:
                return ""common""
    return ""no"""
16245,Is the shirt white or green?," # assumes only one shirt patch
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Is the shirt white or green?"", ""white"")
    return shirt_patches[0].best_text_match [""white"", ""green""]"
2595103,"In which part of the image are the cars, the bottom or the top?"," # returns ""top"" because the cars are at the top of the image
    image_patch = Image Patch(image)
    cars_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(cars_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""In which part of the image are the cars, the bottom or the top?"", ""top"")
    if cars_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
2429130,"How does the sand look, dry or wet?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sand_patches = image_patch.find(""sand"")
    # Question assumes only one sand patch
    if len(sand_patches) == 0:
        # If no sand is found, query the image directly
        return image_patch_simple_query(""How does the sand look, dry or wet?"", ""dry"")
    for sand_patch in sand_patches:
        is_dry = (sand_patch_simple_query(""Is the sand dry?"", ""dry"") == ""yes"")
        if is_dry:
            return sand_patch_simple_query(""How does the sand look, dry or wet?"", ""dry"")
    # If no sand is dry, pick the first sand patch
    return sand_patches[0].simple_query(""How does the sand look, dry or wet?"", ""wet"")"
4325920,Are there fruits to the right of the banana which is on the table?," # assumes only one banana patch
    image_patch = Image Patch(image)
    banana_patches = image_patch.find(""banana"")
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""Are there fruits to the right of the banana which is on the table?"", ""no"")
    for banana_patch in banana_patches:
        fruit_patches = image_patch.find(""fruit"")
        for fruit_patch in fruit_patches:
            if fruit_patch horizontal_center > banana_patch horizontal_center:
                return ""yes""
    return ""no"""
6376614,What color is the car in the middle?,"    
    image_patch = Image Patch(image)
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""What color is the car in the middle?"", ""red"")
    for car_patch in car_patches:
        return car_patch verify_property(""car"", ""red"")"
712063,What's the lamp made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""What's the lamp made of?"", "" what"")
    for lamp_patch in lamp_patches:
        is_made_of_plastic = (lamp_patch简单 query(""Is the lamp made of plastic?"") == ""yes"")
        if is_made_of_plastic:
            return lamp_patch简单 query(""What's the lamp made of?"") # crop would include the plastic so keep it in the query
    # If no lamp is made of plastic, pick the first lamp
    return lamp_patches[0].simple query(""What's the lamp made of?"")"
19358285,Which kind of furniture is to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which kind of furniture is to the right of the pillow?"", ""right"")"
9647343,What type of material is the patio made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    patio_patches = image_patch.find(""patio"")
    # Question assumes only one patio patch
    if len(patio_patches) == 0:
        # If no patio is found, query the image directly
        return image_patch_simple_query(""What type of material is the patio made of?"", "" what type of material is the patio made of"")
    for patio_patch in patio_patches:
        material_patches = image_patch find(""material"")
        for material_patch in material_patches:
            if material_patch horizontal center > patio_patch horizontal center:
                return ""concrete""
    return ""concrete"""
12545434,Who is wearing the suit?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    suit_patches = image_patch find(""suit"")
    # Question assumes only one suit patch
    if len(suit_patches) == 0:
        # If no suit is found, query the image directly
        return image_patch_simple_query(""Who is wearing the suit?"", ""no"")
    for suit_patch in suit_patches:
        is_wearing_suit = (suit_patch_simple_query(""Is the suit wearing a suit?"") == ""yes"")
        if is_wearing_suit:
            return suit_patch_simple query(""Who is wearing the suit?"")"
12894285,What is the color of the clouds in the sky?," return image_patch简单 query(""What is the color of the clouds in the sky?"", ""blue"")"
9843309,Do the flowers look orange?," # assumes only one flower patch
    image_patch = Image Patch(image)
    flower_patches = image_patch find(""flower"")
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch_simple_query(""Do the flowers look orange?"", ""no"")
    for flower_patch in flower_patches:
        return flower_patch verify_property(""flower"", ""orange"")"
618996,Is there a chair or a bed in this image?," return image_patch simple query(""Is there a chair or a bed in this image?"", "" chair or bed"")"
18959736,Are there trucks to the left of the umbrella?,"    
    image_patch = Image Patch(image)
    trucks_patches = image_patch find(""truck"")
    # Question assumes only one truck patch
    if len(trucks_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch_simple_query(""Are there trucks to the left of the umbrella?"", ""no"")
    for truck_patch in trucks_patches:
        if truck_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
867869,What color are the pants the man is wearing?," # color is a property
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What color are the pants the man is wearing?"", ""color"")
    man_patch = man_patches[0]
    pants_patches = image_patch find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return ""no""
    for pants_patch in pants_patches:
        if pants_patch verify_property(""pants"", ""color""):
            return pants_patch verify_property(""pants"", ""color"")
    return ""no"""
551601,Are there any pillows or chairs in the image?," # returns ""yes"" if there is at least one object in the image
    image_patch = Image Patch(image)
    return image_patch_exists(""pillow"")"
10775785,Are there women to the left of the person with the bag?," # assumes only one person with the bag
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Are there women to the left of the person with the bag?"", ""no"")
    for person_patch in person_patches:
        if person_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
5925408,What is the bike in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bike_patches = image_patch find(""bike"")
    # Question assumes only one bike patch
    if len(bike_patches) == 0:
        # If no bike is found, query the image directly
        return image_patch_simple_query(""What is the bike in front of?"", ""no"")
    for bike_patch in bike_patches:
        is_in_front = (bike_patch简单 query(""Is the bike in front of?"") == ""yes"")
        if is_in_front:
            return bike_patch简单 query(""What is the bike in front of?"") # crop would include the bike so keep it in the query
    # If no bike is in front, return ""no""
    return ""no"""
11328059,What type of fast food is shown in this photo?," # returns "")i""
    image_patch = Image Patch(image)
    return image_patch简单 query(""What type of fast food is shown in this photo?"")"
15427544,Are there either beds or desks in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    beds_patches = image_patch.find(""beds"")
    desks_patches = image_patch.find(""desks"")
    # Question assumes only one bed patch and one desk patch
    if len(beds_patches) == 0 or len(desks_patches) == 0:
        # If no beds or desks are found, query the image directly
        return image_patch_simple_query(""Are there either beds or desks in the picture?"", ""or"")
    return ""yes"""
13778498,What type of vehicle is behind the green tree?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch_simple_query(""What type of vehicle is behind the green tree?"", ""green tree"")
    for tree_patch in tree_patches:
        is behind the green tree = tree_patch简单 query(""Is the tree behind the green tree?"", ""green tree"")
        if is behind the green tree:
            return tree_patch简单 query(""What type of vehicle is behind the green tree?"", ""green tree"")
    # If no tree is behind the green tree, return ""no""
    return ""no"""
41019603,What is the child standing on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    child_patches = image_patch find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""What is the child standing on?"", ""child"")
    for child_patch in child_patches:
        is_standing_on = child_patch simple query(""Is the child standing on?"")"
11705574,What is the wooden item of furniture called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    wooden_item_patches = image_patch.find(""wooden item"")
    # Question assumes only one wooden item patch
    if len(wooden_item_patches) == 0:
        # If no wooden item is found, query the image directly
        return image_patch_simple_query(""What is the wooden item of furniture called?"", ""wooden item"")
    for wooden_item_patch in wooden_item_patches:
        return wooden_item_patch简单 query(""What is the wooden item of furniture called?"", ""wooden item"")"
16817277,Is the man to the left or to the right of the woman?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man to the left or to the right of the woman?"", ""left"")
    for man_patch in man_patches:
        woman_patches = image_patch find(""woman"")
        # Question assumes only one woman patch
        if len(woman_patches) == 0:
            return image_patch_simple query(""Is the man to the left or to the right of the woman?"", ""left"")
        for woman_patch in woman_patches:
            if man_patch horizontal center < woman_patch horizontal center:
                return ""left""
            else:
                return ""right"""
1316363,Who is wearing the shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the shirt?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch_simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch_simple_query(""Who is wearing the shirt?"", ""yes"")
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing the shirt?"", ""no"")"
18546659,What is the fence made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What is the fence made of?"", "" what"")
    for fence_patch in fence_patches:
        return fence_patch简单 query(""What is the fence made of?"", "" what"")"
10519192,What color is the kite that looks triangular?," # color of the kite that looks triangular
    image_patch = Image Patch(image)
    kite_patches = image_patch.find(""kite"")
    # Question assumes only one kite patch
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch_simple_query(""What color is the kite that looks triangular?"", ""kite"")
    for kite_patch in kite_patches:
        color = kite_patch simple query(""What color is the kite that looks triangular?"", ""kite"")
        if color == "" triangular"":
            return color"
1672200,Who is drinking?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is drinking?"", ""no"")
    for person_patch in person_patches:
        is_drinking = (person_patch_simple_query(""Is the person drinking?"") == ""yes"")
        if is_drinking:
            return person_patch_simple_query(""Who is drinking?"", ""no"")
    # If no person is drinking, pick the first person
    return person_patches[0].simple query(""Who is drinking?"", ""no"")"
5703748,Is the building behind the tree white or brown?," # assumes only one building patch
    image_patch = Image Patch(image)
    building_patches = image_patch find(""building"")
    if len(building_patches) == 0:
        # If no building is found, query the image directly
        return image_patch_simple_query(""Is the building behind the tree white or brown?"", ""white"")
    for building_patch in building_patches:
        if building_patch simple query(""Is the building behind the tree white or brown?"", ""white"") == ""yes"":
            return ""white""
    return ""brown"""
5749240,Are the glove and the undershirt both black?," # black is a color, so use color check
    image_patch = Image Patch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch_simple_query(""Are the glove and theundershirt both black?"", ""black"")
    for glove_patch in glove_patches:
        if glove_patch verify_property(""glove"", ""black""):
            return ""yes""
    return ""no"""
18573157,Is the juice in a cup?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    juice_patches = image_patch find(""juice"")
    # Question assumes only one juice patch
    if len(juice_patches) == 0:
        # If no juice is found, query the image directly
        return image_patch_simple_query(""Is the juice in a cup?"", ""no"")
    for juice_patch in juice_patches:
        is_in_cup = (juice_patch简单 query(""Is the juice in a cup?"") == ""yes"")
        if is_in_cup:
            return juice_patch简单 query(""Is the juice in a cup?"") # crop would include the cup so keep it in the query
    # If no juice is in a cup, return ""no""
    return ""no"""
3445929,Is the brown horse on the right side of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    horse_patches = image_patch.find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch_simple_query(""Is the brown horse on the right side of the photo?"", ""right"")
    for horse_patch in horse_patches:
        if horse_patch horizontal_center > image_patch horizontal_center:
            return ""yes""
    return ""no"""
16541709,Where is the grass?," # returns ""where is the grass""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Where is the grass?"")"
15764335,Are there any dogs on the tan sand?," # returns ""yes"" if there is a dog on the tan sand, ""no"" otherwise
    image_patch = Image Patch(image)
    sand_patches = image_patch.find(""sand"")
    # Question assumes only one sand patch
    if len(sand_patches) == 0:
        # If no sand is found, query the image directly
        return image_patch_simple_query(""Are there any dogs on the tan sand?"", ""no"")
    for sand_patch in sand_patches:
        dogs_patches = image_patch find(""dog"")
        for dog_patch in dogs_patches:
            if sand_patch horizontal_center < dog_patch horizontal_center:
                return ""yes""
    return ""no"""
1478089,Are the door and the garage door made of the same material?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_door = image_patch.exists(""door"")
    is_garage_door = image_patch.exists(""garage door"")
    if is_door and is_garage_door:
        return image_patch simple query(""Are the door and the garage door made of the same material?"", ""same material"")
    else:
        return ""no"""
1250685,Was this picture taken in a bathroom or at a dining room?," # assumes only one patch
    image_patch = Image Patch(image)
    return image_patch简单 query(""Was this picture taken in a bathroom or at a dining room?"")"
10436844,Is the zebra's nose soft and brown?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch_simple_query(""Is the zebra's nose soft and brown?"", ""no"")
    for zebra_patch in zebra_patches:
        is_nose_soft = zebra_patch简单 query(""Is the zebra's nose soft?"", ""yes"")
        is_nose_brown = zebra_patch简单 query(""Is the zebra's nose brown?"", ""yes"")
        if is_nose_soft and is_nose_brown:
            return ""yes""
    return ""no"""
10683765,Does the shirt have blue color?," return image_patch simple query(""Does the shirt have blue color?"")"
1593352,Do the draperies look white and striped?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    draperies_patches = image_patch.find(""draperies"")
    # Question assumes only one draperies patch
    if len(draperies_patches) == 0:
        # If no draperies is found, query the image directly
        return image_patch_simple_query(""Do the draperies look white and striped?"", ""white and striped"")
    for draperies_patch in draperies_patches:
        is_white = draperies_patch简单 query(""Is the draperies white?"", ""white"")
        is_striped = draperies_patch简单 query(""Is the draperies striped?"", ""striped"")
        if is_white and is_striped:
            return ""yes""
    return ""no"""
16553304,Are the trunks both long and wide?," # assumes only one trunks patch
    image_patch = Image Patch(image)
    trunks_patches = image_patch find(""trunks"")
    if len(trunks_patches) == 0:
        # If no trunks is found, query the image directly
        return image_patch_simple_query(""Are the trunks both long and wide?"", ""both long and wide"")
    trunks_patch = trunks_patches[0]
    is_long = trunks_patch simple query(""Is the trunks long?"", ""long"")
    is_wide = trunks_patch simple query(""Is the trunks wide?"", ""wide"")
    return ""yes"" if is_long and is_wide else ""no"""
7165102,Is the car on the left of the photo?," return image_patch简单 query(""Is the car on the left of the photo?"", ""left"")"
11848830,Are both the banana that looks yellow and green and the banana that looks yellow and green short?," # assumes only one banana patch
    image_patch = Image Patch(image)
    banana_patches = image_patch.find(""banana"")
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""Are both the banana that looks yellow and green and the banana that looks yellow and green short?"", ""no"")
    for banana_patch in banana_patches:
        is_short = banana_patch simple query(""Is the banana short?"", ""no"")
        if is_short:
            return ""no""
    return ""yes"""
19279872,What is the man to the right of the helmet wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man to the right of the helmet wearing?"", ""man"")
    for man_patch in man_patches:
        helmet_patches = image_patch find(""helmet"")
        for helmet_patch in helmet_patches:
            if helmet_patch horizontal_center < man_patch horizontal_center:
                return ""helmet""
    # If no helmet is found, return ""no""
    return ""no"""
4285513,What is the color of the floor?," return image_patch简单 query(""What is the color of the floor?"")"
3974266,Do the trousers look tan?," # assumes only one pair of trousers
    image_patch = Image Patch(image)
    trousers_patches = image_patch find(""trousers"")
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch_simple_query(""Do the trousers look tan?"", ""tan"")
    return image_patch verifies_property(""trousers"", ""tan"")"
11595009,What are the devices to the right of the device that is to the right of the remote control?," # assumes only one remote control patch
    image_patch = Image Patch(image)
    remote_control_patches = image_patch.find("" remote control"")
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch_simple_query(""What are the devices to the right of the device that is to the right of the remote control?"", "" remote control"")
    for remote_control_patch in remote_control_patches:
        devices_patches = image_patch.find(""device"")
        for device_patch in devices_patches:
            if device_patch horizontal_center > remote_control_patch horizontal_center:
                return "" device""
    return "" no devices"""
6183000,Are there nightstands or beds?," # assumes only one nightstand and one bed
    image_patch = Image Patch(image)
    nightstand_patches = image_patch find(""nightstand"")
    bed_patches = image_patch find(""bed"")
    if len(nightstand_patches) == 0 or len(bed_patches) == 0:
        # If no nightstand or bed is found, query the image directly
        return image_patch_simple_query(""Are there night stands or beds?"", "" nightstand or bed"")
    nightstand_patch = nightstand_patches[0]
    bed_patch = bed_patches[0]
    if nightstand_patchhorizontal_center < bed_patchhorizontal_center:
        return ""nightstand""
    else:
        return ""bed"""
14143982,Is it an outdoors scene?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is it an outdoors scene?"")"
6123160,Are the speakers to the left of a Wii controller?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    speakers_patches = image_patch find(""speaker"")
    # Question assumes only one speaker patch
    if len(speakers_patches) == 0:
        # If no speaker is found, query the image directly
        return image_patch_simple_query(""Are the speakers to the left of a Wii controller?"", ""no"")
    for speaker_patch in speakers_patches:
        wii_controller_patches = image_patch find(""wii controller"")
        for wii_controller_patch in wii_controller_patches:
            if wii_controller_patch horizontal_center < speaker_patch horizontal_center:
                return ""yes""
    return ""no"""
3681634,Is the plastic fork in the top or in the bottom part of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    plastic_fork_patches = image_patch find(""plastic_fork"")
    # Question assumes only one plastic_fork patch
    if len(plastic_fork_patches) == 0:
        # If no plastic_fork is found, query the image directly
        return image_patch_simple_query(""Is the plastic_fork in the top or in the bottom part of the photo?"", ""top or bottom"")
    for plastic_fork_patch in plastic_fork_patches:
        is_in_top = plastic_fork_patch vertical_center < image_patch_vertical_center)
        if is_in_top:
            return ""top""
        else:
            return ""bottom"""
13629530,What is the vehicle on the street?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""What is the vehicle on the street?"", "" what is the vehicle on the street"")
    for vehicle_patch in vehicle_patches:
        return vehicle_patch简单 query(""What is the vehicle on the street?"", "" what is the vehicle on the street"")"
1718325,Are there chairs or windows in the scene?,"    
    image_patch = Image Patch(image)
    chairs_patches = image_patch find(""chairs"")
    # Question assumes only one chair patch
    if len(chairs_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""Are there chairs or windows in the scene?"", ""chairs"")
    for chair_patch in chairs_patches:
        if chair_patch simple query(""Is the chair in front of a window?"") == ""yes"":
            return ""yes""
    return ""no"""
10607062,What color is the hat the man is in?," # color of the hat
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What color is the hat the man is in?"", ""hat color"")
    man_patch = man_patches[0]
    hat_patches = image_patch find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return ""no""
    for hat_patch in hat_patches:
        if hat_patch horizontal center > man_patch horizontal center:
            return ""red""
    return ""no"""
1849976,What vegetables are to the left of the spoon?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetables_patches = image_patch.find(""vegetables"")
    # Question assumes only one vegetable patch
    if len(vegetables_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""What vegetables are to the left of the spoon?"", ""left"")
    for vegetable_patch in vegetable_patches:
        is_to_left_of_spoon = (vegetable_patch简单 query(""Is the vegetable to the left of the spoon?"") == ""yes"")
        if is_to_left_of_spoon:
            return vegetable_patch简单 query(""What vegetables are to the left of the spoon?"", ""left"")
    # If no vegetable is to the left of the spoon, return ""no""
    return ""no"""
14827816,Is the statue made of bronze or stone?," # assumes only one statue patch
    image_patch = Image Patch(image)
    statue_patches = image_patch find(""statue"")
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch_simple_query(""Is the statue made of bronze or stone?"", ""blue"")
    for statue_patch in statue_patches:
        if statue_patch verify_property(""statue"", ""stone):
            return ""stone""
    return ""bronze"""
857204,What's the woman wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""What's the woman wearing?"", "" what"")
    for woman_patch in woman_patches:
        what_woman_wearing = woman_patch简单 query(""What's the woman wearing?"", "" what"")
        if what_woman_wearing == "" what"":
            return woman_patch简单 query(""What's the woman wearing?"", "" what"")
    # If no woman is wearing what, pick the first woman
    return woman_patches[0].simple query(""What's the woman wearing?"", "" what"")"
2201105,Is the ball pink?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ball_patches = image_patch find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch_simple_query(""Is the ball pink?"", ""no"")
    for ball_patch in ball_patches:
        is_pink = ball_patch simple query(""Is the ball pink?"", ""yes"")
        if is_pink:
            return ball_patch simple query(""Is the ball pink?"", ""yes"")
    # If no ball is pink, return ""no""
    return ""no"""
14616023,What piece of furniture are the cords in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cord_patches = image_patch find(""cords"")
    # Question assumes only one cord patch
    if len(cord_patches) == 0:
        # If no cord is found, query the image directly
        return image_patch_simple_query(""What piece of furniture are the cords in front of?"", ""furniture"")
    for cord_patch in cord_patches:
        is_in_front_of_furniture = ( cord_patch简单 query(""Is the cord in front of a piece of furniture?"") == ""yes"")
        if is_in_front_of_furniture:
            return cord_patch简单 query(""What piece of furniture are the cords in front of?"", ""furniture"")
    # If no cord is in front of any piece of furniture, return ""no""
    return ""no"""
161027411,Are there both doors and windows in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
8249677,On which side of the image is the black car?," # assumes only one black car
    image_patch = Image Patch(image)
    black_car_patches = image_patch find(""black car"")
    if len(black_car_patches) == 0:
        # If no black car is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the black car?"", ""left right"")
    black_car_patch = black_car_patches[0]
    return black_car_patch simple query(""On which side of the image is the black car?"", ""left right"")"
16184856,What is the striped animal called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What is the striped animal called?"", "" what"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal striped?"", ""yes):
            return animal_patch简单 query(""What is the striped animal called?"", "" what"")
    # If no animal is striped, return ""no""
    return ""no"""
1479068,Is it outdoors?," # assumes only one image patch
    image_patch = Image Patch(image)
    return image_patch simple query(""Is it outdoors?"")"
16155046,Is the dry grass below a zebra?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dry_grass_patches = image_patch.find(""dry grass"")
    # Question assumes only one dry grass patch
    if len(dry_grass_patches) == 0:
        # If no dry grass is found, query the image directly
        return image_patch_simple_query(""Is the dry grass below a zebra?"", ""no"")
    for dry_grass_patch in dry_grass_patches:
        zebra_patches = image_patch find(""zebra"")
        for zebra_patch in zebra_patches:
            if zebra_patch_vertical_center < dry_grass_patch_vertical_center:
                return ""yes""
    return ""no"""
16515071,What is the person in the water wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person in the water wearing?"", "" fruit"")
    for person_patch in person_patches:
        is_wearing_fruit = (person_patch_simple_query(""Is the person wearing a fruit?"", "" fruit"") == ""yes"")
        if is_wearing_fruit:
            return person_patch_simple_query(""What is the person wearing?"", "" fruit"")
    # If no person is wearing a fruit, pick the first person
    return person_patches[0].simple_query(""What is the person wearing?"", "" fruit"")"
161015042,Who is wearing the goggles?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the goggles?"", ""no"")
    for person_patch in person_patches:
        is_wearing_goggles = (person_patch_simple_query(""Is the person wearing the goggles?"") == ""yes"")
        if is_wearing_goggles:
            return person_patch_simple_query(""Who is wearing the goggles?"", ""yes"")
    # If no person is wearing the goggles, pick the first person
    return person_patches[0].simple_query(""Who is wearing the goggles?"", ""no"")"
19149868,What is pulled by the lady?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is pulled by the lady?"", ""person"")
    for person_patch in person_patches:
        is_pulled_by_lady = (person_patch_simple_query(""Is the person pulled by the lady?"", ""person"") == ""yes"")
        if is_pulled_by_lady:
            return person_patch_simple_query(""What is pulled by the lady?"", ""person"")
    # If no person is pulled by the lady, return ""no""
    return ""no"""
5199994,What's the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What's the man wearing?"", "" what"")
    for man_patch in man_patches:
        what patch = man_patch简单 query(""What's the man wearing?"", "" what"")
        if what_patch == "" what"":
            return man_patch简单 query(""What's the man wearing?"", "" what"")
    # If no man is wearing a what, pick the first what patch
    return man_patches[0].simple query(""What's the man wearing?"", "" what"")"
19184475,Are the man glasses on the left side of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are the man glasses on the left side of the image?"", ""no"")
    for man_patch in man_patches:
        is_glasses_on_left = (man_patch_simple_query(""Is the man glasses on the left side of the image?"", ""no"") == ""yes"")
        if is_glasses_on_left:
            return man_patch_simple_query(""Are the man glasses on the left side of the image?"", ""no"") # crop would include the glasses so keep it in the query
    # If no man is wearing glasses, return ""no""
    return ""no"""
7149602,Is the shirt orange or blue?," # assumes only one shirt patch
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Is the shirt orange or blue?"", ""blue"")
    return shirt_patches[0].best_text_match([""orange"", ""blue""])"
19479555,What is the person to the right of the benches holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person to the right of the benches holding?"", ""right"")
    for person_patch in person_patches:
        is_holding = (person_patch_simple_query(""Is the person holding?"", ""right"") == ""yes"")
        if is_holding:
            return person_patch_simple_query(""What is the person holding?"", ""right"")
    # If no person is holding, pick the first person
    return person_patches[0].simple_query(""What is the person holding?"", ""right"")"
19273393,Are there both a door and a window in this photo?,"    
    image_patch = Image Patch(image)
    is_door = image_patch_exists(""door"")
    is_window = image_patch_exists(""window"")
    return bool_to_yesno(is_door and is_window)"
6481656,What is the man doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man doing?"", "" what"")
    for man_patch in man_patches:
        action_patches = man_patch find(""action"")
        # Question assumes only one action patch
        if len action_patches) == 0:
            return man_patch simple query(""What is the man doing?"", "" what"")
        for action_patch in action_patches:
            return action_patch简单 query(""What is the man doing?"", "" what"")"
13127703,What kind of drink is to the left of the bottle the woman is pouring?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""What kind of drink is to the left of the bottle the woman is pouring?"", ""bottle"")
    for bottle_patch in bottle_patches:
        drink_patches = image_patch find(""drink"")
        for drink_patch in drink_patches:
            if drink_patch horizontal_center < bottle_patch horizontal_center:
                return drink_patch简单 query(""What kind of drink is to the left of the bottle the woman is pouring?"", ""bottle"")
    # If no bottle is found, return ""no""
    return ""no"""
2378018,What is the toilet in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch_simple_query(""What is the toilet in front of?"", ""no"")
    for toilet_patch in toilet_patches:
        is_in_front = (toilet_patch_simple_query(""Is the toilet in front of?"", ""yes"")
        if is_in_front:
            return toilet_patch_simple_query(""What is the toilet in front of?"", ""no"")
    # If no toilet is in front, return ""no""
    return ""no"""
8430841,Is the frisbee to the left of the guy?,"    
    image_patch = Image Patch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch_simple_query(""Is the frisbee to the left of the guy?"", ""left"")
    for frisbee_patch in frisbee_patches:
        boy_patches = image_patch find(""boy"")
        for boy_patch in boy_patches:
            if boy_patch horizontal_center < frisbee_patch horizontal_center:
                return ""yes""
    return ""no"""
18616818,The man is watching who?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is watching who?"", ""The man is"
179526,Is the white dog behind a girl?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch_simple_query(""Is the white dog behind a girl?"", ""white"")
    for dog_patch in dog_patches:
        is_behind_girl = (dog_patch_simple_query(""Is the dog behind a girl?"", ""white"") == ""yes"")
        if is_behind_girl:
            return dog_patch_simple_query(""Is the dog behind a girl?"", ""white"") # crop would include the girl so keep it in the query
    # If no dog is behind a girl, pick the first dog
    return dog_patches[0].simple_query(""Is the white dog behind a girl?"", ""white"")"
21018827,Is the river murky and calm?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    river_patches = image_patch.find(""river"")
    # Question assumes only one river patch
    if len(river_patches) == 0:
        # If no river is found, query the image directly
        return image_patch_simple_query(""Is the river murky andcalm?"", ""no"")
    for river_patch in river_patches:
        is_muddy = river_patch_simple_query(""Is the river muddy?"", ""yes"")
        is_calm = river_patch_simple query(""Is the rivercalm?"", ""yes"")
        if is_muddy and is_calm:
            return ""yes""
    return ""no"""
3697449,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
3697807,Are there both a racket and a toothbrush in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    racket_patches = image_patch find(""racket"")
    toothbrush_patches = image_patch find(""toothbrush"")
    # Question assumes only one racket patch and one toothbrush patch
    if len(racket_patches) == 0 or len(toothbrush_patches) == 0:
        # If no racket or toothbrush is found, query the image directly
        return image_patch_simple_query(""Are there both a racket and a toothbrush in the image?"", ""no"")
    return ""yes"""
1904643,What do both the car and the sign have in common?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""What do both the car and the sign have in common?"", ""car"")
    for car_patch in car_patches:
        sign_patches = image_patch.find(""sign"")
        for sign_patch in sign_patches:
            if car_patch verify_property(""car"", ""sign""):
                return car_patch simple query(""What do both the car and the sign have in common?"", ""sign"")
    # If no sign is found, return ""no""
    return ""no"""
11764476,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
4903948,On what kind of furniture is the plate?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch_simple_query(""On what kind of furniture is the plate?"", "" what"")
    for plate_patch in plate_patches:
        furniture_patches = image_patch find(""furniture"")
        for furniture_patch in furniture_patches:
            if plate_patch horizontal_center > furniture_patch horizontal_center:
                return "" table""
    return "" table"""
61022361,What is the painting that is to the left of the clock hanging on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_query(""What is the painting that is to the left of the clock hanging on?"", "" clock"")
    for clock_patch in clock_patches:
        painting_patches = image_patch find(""painting"")
        for painting_patch in painting_patches:
            if painting_patch horizontal_center < clock_patch horizontal_center:
                return painting_patch简单 query(""What is the painting that is to the left of the clock hanging on?"", "" clock"")
    # If no painting is to the left of the clock, return ""no""
    return ""no"""
1527392,"What color is the fence, tan or black?"," # assumes only one fence patch
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What color is the fence, tan or black?"", ""fence"")
    if fence_patches[0].verify_property(""fence"", ""tan""):
        return ""tan""
    else:
        return ""black"""
19229351,Do you see both bowls and carrots?," # assumes only one bowl and one carrot patch
    image_patch = Image Patch(image)
    bowl_patches = image_patch find(""bowl"")
    carrot_patches = image_patch find(""carrot"")
    if len(bowl_patches) == 0 or len(carrot_patches) == 0:
        # If no bowl or carrot is found, query the image directly
        return image_patch_simple_query(""Do you see both bowls and carrots?"", ""no"")
    return ""yes"""
1297082,On which side is the silver fork?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    silver_fork_patches = image_patch.find(""silver fork"")
    # Question assumes only one silver fork patch
    if len(silver_fork_patches) == 0:
        # If no silver fork is found, query the image directly
        return image_patch_simple_query(""On which side is the silver fork?"", ""left"")
    for silver_fork_patch in silver_fork_patches:
        is_on_left = silver_fork_patch简单 query(""Is the silver fork on the left?"")
        if is_on_left:
            return silver_fork_patch简单 query(""On which side is the silver fork?"", ""left"")
    # If no silver fork is on the left, it must be on the right
    return silver_fork_patches[0].simple query(""On which side is the silver fork?"", ""right"")"
16757832,Are there any blue helmets or napkins?," # assumes only one blue helmet and one napkin
    image_patch = Image Patch(image)
    blue_helmet_patches = image_patch.find(""blue helmet"")
    napkin_patches = image_patch.find(""napkin"")
    if len(blue_helmet_patches) == 0 or len(napkin_patches) == 0:
        # If no blue helmet or napkin is found, query the image directly
        return image_patch_simple_query(""Are there any blue helmets or napkins?"", ""blue helmet, napkin"")
    return ""yes"""
839816,"In which part of the photo is the racket, the top or the bottom?"," # returns ""top"" or ""bottom""
    image_patch = Image Patch(image)
    racket_patches = image_patch find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch_simple_query(""In which part of the photo is the racket, the top or the bottom?"", ""top"")
    if racket_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
12385226,Is there a mirror in the bathroom?," # assumes only one mirror patch
    image_patch = Image Patch(image)
    mirror_patches = image_patch find(""mirror"")
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch_simple_query(""Is there a mirror in the bathroom?"", ""no"")
    return ""yes"""
18720852,Are there either blankets or tents in this picture?," # returns ""yes"" if either blankets or tents are found, ""no"" otherwise
    image_patch = Image Patch(image)
    blankets_patches = image_patch find(""blanket"")
    tents_patches = image_patch find(""tents"")
    if len(blanket_patches) > 0 or len(tents_patches) > 0:
        return ""yes""
    return ""no"""
4675139,Is the cardboard box to the right or to the left of the woman that is on the left?," # assumes only one box and one woman on the left
    image_patch = Image Patch(image)
    box_patches = image_patch.find(""cardboard box"")
    woman_patches = image_patch.find(""woman"")
    if len(box_patches) == 0 or len(woman_patches) == 0:
        # If no box or woman is found, query the image directly
        return image_patch_simple_query(""Is the cardboard box to the right or to the left of the woman that is on the left?"", ""right"")
    for box_patch in box_patches:
        for woman_patch in woman_patches:
            if woman_patch horizontal_center < box_patch horizontal_center:
                return ""left""
    return ""right"""
19453453,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
19562503,Is the house in the bottom part or in the top of the photo?,"    
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the house in the bottom part or in the top of the photo?"")"
11737187,What is in front of the flowers that look red?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    flowers_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flowers_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch_simple_query(""What is in front of the flowers that look red?"", ""red"")
    for flower_patch in flowers_patches:
        is_red = flower_patch简单 query(""Is the flower red?"", ""red"")
        if is_red:
            return flower_patch简单 query(""What is in front of the flowers that look red?"", ""red"")"
15710688,Is the shirt short sleeved or sleeveless?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Is the shirt short sleeve or sleeveless?"", ""short sleeve"")
    for shirt_patch in shirt_patches:
        is_short_sleeved = (shirt_patch简单 query(""Is the shirt short sleeve or sleeveless?"") == ""short sleeve"")
        if is_short_sleeved:
            return shirt_patch简单 query(""Is the shirt short sleeve or sleeveless?"") # crop would include the short sleeve so keep it in the query
    # If no shirt is short sleeve, pick the first shirt
    return shirt_patches[0].simple query(""Is the shirt short sleeve or sleeveless?"")"
5533952,What are the white wires connected to?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_wires_patches = image_patch.find(""white wire"")
    # Question assumes only one white wire patch
    if len(white_wires_patches) == 0:
        # If no white wire is found, query the image directly
        return image_patch_simple_query(""What are the white wires connected to?"", ""white wire"")
    for white_wire_patch in white_wires_patches:
        connected_patches = image_patch.find(""connected"")
        for connected_patch in connected_patches:
            if connected_patch horizontal center > white_wire_patch horizontal center:
                return connected_patch简单 query(""What are the white wires connected to?"", ""white wire"")
    # If no white wire is connected to anything, return ""white wire""
    return ""white wire"""
11313555,"What type of furniture is that, a table or a nightstand?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What type of furniture is that, a table or a nightstand?"", "" table or nightstand"")
    for furniture_patch in furniture_patches:
        is_table = (furniture_patch简单 query(""Is the furniture a table?"") == ""yes"")
        if is_table:
            return ""table""
        is_nightstand = (furniture_patch简单 query(""Is the furniture a nightstand?"") == ""yes"")
        if is_nightstand:
            return ""nightstand""
    return "" table or nightstand"""
10508893,What animals are in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What animals are in front of the trees?"")"
14501997,What is the gate made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the gate made of?"")"
45624,What color is the device on top of the table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What color is the device on top of the table?"", ""color"")
    for device_patch in device_patches:
        color_patches = image_patch find(""color"")
        for color_patch in color_patches:
            if color_patch vertical_center < image_patch_vertical_center:
                return color_patch简单 query(""What color is the device on top of the table?"", ""color"")
    # If no device is found, return ""no""
    return ""no"""
181032044,Are these closed drawers?," # assumes only one drawer
    image_patch = Image Patch(image)
    drawer_patches = image_patch find(""drawer"")
    if len(drawer_patches) == 0:
        # If no drawer is found, query the image directly
        return image_patch_simple_query(""Are these closed drawers?"", ""closed"")
    return drawer_patches[0].verify_property(""drawer"", ""closed"")"
383,What kind of furniture is made of wood?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is made of wood?"", ""mathrm"")
    for furniture_patch in furniture_patches:
        is_made_of_wood = (furniture_patch简单 query(""Is the furniture made of wood?"") == ""yes"")
        if is_made_of_wood:
            return furniture_patch简单 query(""What kind of furniture is made of wood?"")"
101054962,What is the person by the bananas wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person by the bananas wearing?"", ""person"")
    for person_patch in person_patches:
        is_wearing_bananas = (person_patch_simple_query(""Is the person wearing bananas?"", ""person"") == ""yes"")
        if is_wearing_bananas:
            return person_patch_simple_query(""What is the person wearing?"", ""person"")
    # If no person is wearing bananas, pick the first person
    return person_patches[0].simple_query(""What is the person wearing?"", ""person"")"
759165,What is the color of the tower in the middle of the picture?," return image_patch简单 query(""What is the color of the tower in the middle of the picture?"", ""red"")"
10775539,Is this giraffe tall and white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch_simple_query(""Is this giraffe tall and white?"", ""no"")
    for giraffe_patch in giraffe_patches:
        is_tall = giraffe_patch_simple_query(""Is the giraffe tall?"", ""yes"")
        is_white = giraffe_patch_simple_query(""Is the giraffe white?"", ""yes"")
        if is_tall and is_white:
            return ""yes""
    return ""no"""
19981804,On which side of the photo is the colorful screen?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    color_patches = image_patch.find(""colorful screen"")
    # Question assumes only one colorful patch
    if len(color_patches) == 0:
        # If no colorful patch is found, query the image directly
        return image_patch_simple_query(""On which side of the photo is the colorful screen?"", ""left"")
    for color_patch in color_patches:
        side = color_patch horizontal_center < image_patch horizontal_center
        if side:
            return ""left""
    return ""right"""
7903654,Is the tap on the left side or on the right?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tap_patches = image_patch find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch_simple_query(""Is the tap on the left side or on the right?"", ""left"")
    for tap_patch in tap_patches:
        is_on_left = (tap_patch简单 query(""Is the tap on the left side or on the right?"") == ""left"")
        if is_on_left:
            return tap_patch简单 query(""Is the tap on the left side or on the right?"", ""left"") # crop would include the tap so keep it in the query
    # If no tap is on the left side, it must be on the right side
    return tap_patches[0].simple query(""Is the tap on the left side or on the right?"", ""right"")"
6206183,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
15212437,Is the coat black or beige?," # assumes only one coat patch
    image_patch = Image Patch(image)
    coat_patches = image_patch find(""coat"")
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch_simple_query(""Is the coat black or beige?"", ""black"")
    if coat_patches[0].simple_query(""Is the coat black or beige?"", ""black"") == ""yes"":
        return ""black""
    return ""beige"""
13123207,Does the kite near the field look high and red?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    kite_patches = image_patch.find(""kite"")
    # Question assumes only one kite patch
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch_simple_query(""Does the kite near the field look high and red?"", ""no"")
    for kite_patch in kite_patches:
        is_high = kite_patch_simple_query(""Is the kite high?"", ""yes"")
        is_red = kite_patch_simple_qa(""Is the kite red?"", ""yes"")
        if is_high and is_red:
            return ""yes""
    return ""no"""
7740092,Are there any utensils in this picture?," # returns ""yes"" if any utensils are found, ""no"" otherwise
    image_patch = Image Patch(image)
    utensils_patches = image_patch.find(""utensils"")
    # Question assumes only one utensil patch
    if lenuteils_patches) == 0:
        return ""no""
    return ""yes"""
8774975,What is around the guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What is around the guy?"")"
17728574,Do you see bananas or cookies?," # assumes only one patch of each object
    image_patch = Image Patch(image)
    bananas_patches = image_patch.find(""bananas"")
    cookies_patches = image_patch.find(""cookies"")
    if len(bananas_patches) == 0 or len(cookies_patches) == 0:
        # If no bananas or cookies are found, query the image directly
        return image_patch_simple_query(""Do you see bananas or cookies?"", ""or"")
    return ""yes"""
14274506,Is the staircase different in color than the sky?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    color_patches = image_patch简单 query(""Is the staircase different in color than the sky?"", "" different"")
    if len(color_patches) == 0:
        # If no color patch is found, query the image directly
        return image_patch_simple query(""Is the staircase different in color than the sky?"", "" different"")
    for color_patch in color_patches:
        if color_patch简单 query(""Is the staircase different in color than the sky?"", "" different"") == "" different"":
            return color_patch simple query(""Is the staircase different in color than the sky?"", "" different"")
    return ""no"""
1605874,What color are the containers that are on the right?," # color of the containers on the right
    image_patch = Image Patch(image)
    containers_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(containers_patches) == 0:
        # If no container is found, query the image directly
        return image_patch_simple_query(""What color are the containers that are on the right?"", ""red"")
    for container_patch in containers_patches:
        if container_patch horizontal_center > image_patch horizontal_center:
            return ""red""
    return ""red"""
12495781,Are the people to the right or to the left of the cone that is orange?," # assumes only one cone patch
    image_patch = Image Patch(image)
    cone_patches = image_patch.find(""cone"")
    if len(cone_patches) == 0:
        # If no cone is found, query the image directly
        return image_patch_simple_query(""Are the people to the right or to the left of the cone that is orange?"", ""left"")
    for cone_patch in cone_patches:
        if cone_patch vertical_center < image_patch_vertical_center:
            return ""left""
        else:
            return ""right"""
14165681,"What type of clothing is light, the sweater or the cap?"," # assumes only one type of clothing
    image_patch = Image Patch(image)
    clothing_patches = image_patch.find(""clothing"")
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch_simple_query(""What type of clothing is light, the sweater or the cap?"", [""sweater"", ""cap""])
    if clothing_patches[0].color == ""light"":
        return ""sweater""
    else:
        return ""cap"""
19982010,Is the chair to the right or to the left of the girl that is wearing jeans?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""Is the chair to the right or to the left of the girl that is wearing jeans?"", ""right"")
    for girl_patch in girl_patches:
        if girl_patch_simple_query(""Is the girl wearing jeans?"", ""yes""):
            return girl_patch_simple_query(""Is the chair to the right or to the left of the girl that is wearing jeans?"", ""right"")
    # If no girl is wearing jeans, return ""no""
    return ""no"""
5617223,"What color is the container to the left of the horse, green or silver?"," # assumes only one container patch
    image_patch = Image Patch(image)
    container_patches = image_patch find(""container"")
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch_simple_query(""What color is the container to the left of the horse, green or silver?"", ""green silver"")
    for container_patch in container_patches:
        if container_patch horizontal_center < image_patch horizontal_center:
            return ""green""
        else:
            return ""silver"""
2428964,Is the water gray or teal?," # assumes only one water patch
    image_patch = Image Patch(image)
    water_patches = image_patch find(""water"")
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch_simple_query(""Is the water gray or teal?"", ""blue"")
    return water_patches[0].best_text_match [""gray"", ""teal""]"
19620769,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
14785459,On which side of the picture is the lamp?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""On which side of the picture is the lamp?"", ""left"", ""right"")
    for lamp_patch in lamp_patches:
        is_left = (lamp_patch horizontal_center < image_patch horizontal_center)
        if is_left:
            return ""left""
        else:
            return ""right"""
1325617,Does the brown animal look tiny?," # brown animal is a cat
    image_patch = Image Patch(image)
    cat_patches = image_patch find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch_simple_query(""Does the brown animal look tiny?"", ""cat"")
    if cat_patches[0].vertical_center < image_patch_vertical_center:
        return ""yes""
    else:
        return ""no"""
5672532,Does that shirt look long sleeved?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Does that shirt look long sleeves')
    for shirt_patch in shirt_patches:
        is_long_sleeved = (shirt_patch简单 query(""Is the shirt long sleeves?"") == ""yes"")
        if is_long_sleeved:
            return shirt_patch简单 query(""Does that shirt look long sleeves?') # crop would include the shirt so keep it in the query
    # If no shirt is long sleeves, pick the first shirt
    return shirt_patches[0].simple query(""Does that shirt look long sleeves?"")"
6146439,Does the box look green?," return image_patch简单 query(""Does the box look green?"")"
1910285,Is the white container on the left of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_container_patches = image_patch.find(""white container"")
    # Question assumes only one white container patch
    if len(white_container_patches) == 0:
        # If no white container is found, query the image directly
        return image_patch_simple_query(""Is the white container on the left of the image?"", ""left"")
    for white_container_patch in white_container_patches:
        is_on_left = white_container_patch simple query(""Is the white container on the left of the image?"", ""left"")
        if is_on_left:
            return white_container_patch简单 query(""Is the white container on the left of the image?"", ""left"") # crop would include the white container so keep it in the query
    # If no white container is on the left, return ""no""
    return ""no"""
13362134,Is that shower curtain to the left of a toilet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shower_curtain_patches = image_patch.find(""shower_curtain"")
    # Question assumes only one shower_curtain patch
    if len(shower_curtain_patches) == 0:
        # If no shower_curtain is found, query the image directly
        return image_patch_simple_query(""Is that shower curtain to the left of a toilet?"", ""left"")
    for shower_curtain_patch in shower_curtain_patches:
        toilet_patches = image_patch find(""toilet"")
        for toilet_patch in toilet_patches:
            if shower_curtain_patch horizontal_center < toilet_patch horizontal_center:
                return ""left""
    return ""right"""
161060488,Is there any cabinet to the right of the stove?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cabinet_patches = image_patch find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch_simple_query(""Is there any cabinet to the right of the stove?"", ""no"")
    for cabinet_patch in cabinet_patches:
        is_to_the_right = (cabinet_patch horizontal_center > image_patch horizontal_center)
        if is_to_the_right:
            return ""yes""
    return ""no"""
111055042,Is the chair on the right?," return image_patch简单 query(""Is the chair on the right?"")"
151068,Which kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of clothing is white?"", ""white"")"
19387951,Is this place the forest or the garden?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    place_patches = image_patch.find(""place"")
    # Question assumes only one place patch
    if len(place_patches) == 0:
        # If no place is found, query the image directly
        return image_patch_simple_query(""Is this place the forest or the garden?"", "" forest"")
    for place_patch in place_patches:
        is_forest = place_patch simple query(""Is this place the forest or the garden?"", "" forest"")
        if is_forest:
            return place_patch简单 query(""Is this place the forest or the garden?"", "" forest"")
    # If no place is the forest, return garden
    return ""garden"""
1781695,What's on the blanket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(baget_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch_simple_query(""What's on the blanket?"", "" what"")
    for blanket_patch in blanket_patches:
        return blanket_patch简单 query(""What's on the blanket?"", "" what"")"
17699779,Is she on a bed?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is she on a bed?"", ""no"")
    for person_patch in person_patches:
        if person_patch vertical_center < image_patch_vertical_center:
            return ""yes""
    return ""no"""
464441,"What piece of furniture is the blanket on, a bed or a sofa?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch_simple_query(""What piece of furniture is the blanket on, a bed or a sofa?"", ""bed"")
    for blanket_patch in blanket_patches:
        is_on_bed = (blanket_patch简单 query(""Is the blanket on a bed?"") == ""yes"")
        if is_on_bed:
            return ""bed""
    # If no blanket is on a bed, it must be on a sofa
    return ""sofa"""
9505496,Are the wires above a man?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are the wires above a man?"", ""no"")
    for man_patch in man_patches:
        wires_patches = image_patch find(""wires"")
        for wire_patch in wire_patches:
            if wire_patch_vertical_center > man_patch_vertical_center:
                return ""yes""
    return ""no"""
4625512,What is the woman doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""What is the woman doing?"", "" what"")
    for woman_patch in woman_patches:
        action_patches = image_patch find(""action"")
        for action_patch in action_patches:
            if action_patch horizontal_center > woman_patch horizontal_center:
                return action_patch simple query(""What is the woman doing?"", "" what"")
    # If no action is found, return ""no""
    return ""no"""
9441941,Is the woman's hair red or black?," # assumes only one hair patch
    image_patch = Image Patch(image)
    hair_patches = image_patch find(""hair"")
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the woman's hair red or black?"", ""red black"")
    return hair_patches[0].best_text_match [""red black""]"
2387432,What's on the table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What's on the table?"")"
10534717,What is the pillow on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pillow_patches = image_patch find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch_simple_query(""What is the pillow on?"", "" what"")
    for pillow_patch in pillow_patches:
        return pillow_patch简单 query(""What is the pillow on?"")"
19335685,"What fruits is the container behind of, apples or bananas?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch_simple_query(""What fruits is the container behind of, apples or bananas?"", "" behind"")
    for container_patch in container_patches:
        fruits_patches = image_patch.find(""fruits"")
        for fruit_patch in fruit_patches:
            if fruit_patch horizontal_center < container_patch horizontal_center:
                return ""apples""
            else:
                return ""bananas"""
3127817,The goat is standing in what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    goat_patches = image_patch find(""goat"")
    # Question assumes only one goat patch
    if len(goat_patches) == 0:
        # If no goat is found, query the image directly
        return image_patch_simple_query(""The goat is standing in what?"")"
1588567,Where does the man that to the right of the mirror sit?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Where does the man that to the right of the mirror sit?"", ""right"")
    for man_patch in man_patches:
        if man_patch horizontal_center > image_patch horizontal_center:
            return ""right""
    return ""left"""
7399543,What is the floor made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    floor_patches = image_patch find(""floor"")
    # Question assumes only one floor patch
    if len(floor_patches) == 0:
        # If no floor is found, query the image directly
        return image_patch_simple_query(""What is the floor made of?"", "" what"")
    for floor_patch in floor_patches:
        is_made_of_cement = (floor_patch简单 query(""Is the floor made of cement?"") == ""yes"")
        if is_made_of_cement:
            return floor_patch简单 query(""What is the floor made of?"") # crop would include the cement so keep it in the query
    # If no floor is made of cement, pick the first floor
    return floor_patches[0].simple query(""What is the floor made of?"")"
13741124,What kind of animal is the house behind of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What kind of animal is the house behind of?"")"
1174904,Is the cobblestone sidewalk both large and gray?," # assumes only one cobblestone patch
    image_patch = Image Patch(image)
    cobblestone_patches = image_patch find("" cobblestone"")
    if len(cobblestone_patches) == 0:
        # If no cobblestone is found, query the image directly
        return image_patch_simple_query(""Is the cobblestone sidewalk both large and gray?"", ""no"")
    for cobblestone_patch in cobblestone_patches:
        is_large = ( cobblestone_patch horizontal_center > image_patch horizontal_center)
        is_gray = ( cobblestone_patch simple query(""Is the cobblestone gray?"", ""yes"")
        if is_large and is_gray:
            return ""yes""
    return ""no"""
13375231,What is the lettuce on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    lettuce_patches = image_patch find(""lettuce"")
    # Question assumes only one lettuce patch
    if len(lettuce_patches) == 0:
        # If no lettuce is found, query the image directly
        return image_patch_simple_query(""What is the lettuce on?"", ""on"")
    for lettuce_patch in lettuce_patches:
        is_on = lettuce_patch简单 query(""Is the lettuce on?"", ""on"")
        if is_on:
            return lettuce_patch简单 query(""What is the lettuce on?"", ""on"") # crop would include the lettuce so keep it in the query
    # If no lettuce is on, pick the first lettuce
    return lettuce_patches[0].simple query(""What is the lettuce on?"", ""on"")"
1194027,Which kind of clothing is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of clothing is black?"", ""black"")"
9963477,Is the statue wearing a dress?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    statue_patches = image_patch find(""statue"")
    # Question assumes only one statue patch
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch_simple_query(""Is the statue wearing a dress?"", ""no"")
    for statue_patch in statue_patches:
        is_wearing_dress = (statue_patch简单 query(""Is the statue wearing a dress?"") == ""yes"")
        if is_wearing_dress:
            return statue_patch简单 query(""Is the statue wearing a dress?"") # crop would include the dress so keep it in the query
    # If no statue is wearing a dress, pick the first statue
    return statue_patches[0].simple query(""Is the statue wearing a dress?"")"
1151995,Which side of the photo is the yellow vase on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    yellow_vase_patches = image_patch.find(""yellow vase"")
    # Question assumes only one yellow vase patch
    if len(yellow_vase_patches) == 0:
        # If no yellow vase is found, query the image directly
        return image_patch_simple_query(""Which side of the photo is the yellow vase on?"", ""left"")
    for yellow_vase_patch in yellow_vase_patches:
        is_left = (yellow_vase_patch horizontal_center < image_patch horizontal_center)
        if is_left:
            return ""left""
    return ""right"""
712821,What is common to the bear and the belt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bear_patches = image_patch.find(""bear"")
    belt_patches = image_patch.find(""belt"")
    # Question assumes only one bear patch and one belt patch
    if len(bear_patches) == 0 or len(belt_patches) == 0:
        # If no bear or belt is found, query the image directly
        return image_patch_simple_query(""What is common to the bear and the belt?"", ""common"")
    for bear_patch in bear_patches:
        for belt_patch in belt_patches:
            if bear_patch(vertical_center) == belt_patch(vertical_center):
                return ""common""
    return ""no common"""
1757418,What is the vehicle to the right of the car?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""What is the vehicle to the right of the car?"", ""car"")
    for car_patch in car_patches:
        vehicle_patches = image_patch find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch horizontal_center > car_patch horizontal_center:
                return vehicle_patch简单 query(""What is the vehicle to the right of the car?"", ""car"")
    # If no vehicle is found to the right of the car, return ""no""
    return ""no"""
7624100,Are the trunks that are gray wet and large?," # assumes only one trunks patch
    image_patch = Image Patch(image)
    trunks_patches = image_patch.find(""trunks"")
    if len(trunks_patches) == 0:
        # If no trunks is found, query the image directly
        return image_patch_simple_query(""Are the trunks that are gray wet and large?"", ""no"")
    trunks_patch = trunks_patches[0]
    is_gray = trunks_patch simple query(""Is the trunks gray?"", ""yes"")
    is_wet = trunks_patch simple query(""Is the trunks wet?"", ""yes"")
    is_large = trunks_patch simple query(""Is the trunks large?"", ""yes"")
    if is_gray and is_wet and is_large:
        return ""yes""
    return ""no"""
1125474,"On which side of the photo is the iron fence, the right or the left?"," # assumes only one iron fence patch
    image_patch = Image Patch(image)
    iron_fence_patches = image_patch.find(""iron fence"")
    if len(iron_fence_patches) == 0:
        # If no iron fence is found, query the image directly
        return image_patch_simple_query(""On which side of the photo is the iron fence, the right or the left?"", ""left"")
    iron_fence_patch = iron_fence_patches[0]
    if iron_fence_patch horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
1300375,What is the name of the item of furniture that the printer is on?," # assumes only one printer patch
    image_patch = Image Patch(image)
    printer_patches = image_patch.find(""printer"")
    if len(printer_patches) == 0:
        # If no printer is found, query the image directly
        return image_patch_simple_query(""What is the name of the item of furniture that the printer is on?"", ""printer"")
    return printer_patches[0].simple_query(""What is the name of the item of furniture that the printer is on?"", ""printer"")"
5925196,What's the building covered by?," # returns ""the building covered by the tree"" or ""the building covered by the car""
    image_patch = Image Patch(image)
    building_patches = image_patch.find(""building"")
    # Question assumes only one building patch
    if len(building_patches) == 0:
        # If no building is found, query the image directly
        return image_patch_simple_query(""What's the building covered by?"", ""the tree or the car"")
    for building_patch in building_patches:
        covered_by_patches = image_patch find(""covered by"")
        for covered_by_patch in covered_by_patches:
            if covered_by_patch horizontal center > building_patch horizontal center:
                return ""the building covered by the tree""
            else:
                return ""the building covered by the car"""
1948055,What watercraft is the white rope tying?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    watercraft_patches = image_patch.find(""watercraft"")
    # Question assumes only one watercraft patch
    if len(watercraft_patches) == 0:
        # If no watercraft is found, query the image directly
        return image_patch_simple_query(""What watercraft is the white rope tying?"", ""white rope"")
    for watercraft_patch in watercraft_patches:
        is_tied_with_white_rope = watercraft_patch simple query(""Is the watercraft tied with a white rope?"", ""white rope"")
        if is_tied_with_white_rope:
            return watercraft_patch简单 query(""What watercraft is the white rope tying?"", ""white rope"") # crop would include the white rope so keep it in the query
    # If no watercraft is tied with a white rope, pick the first watercraft
    return watercraft_patches[0].simple query(""What watercraft is the white rope tying?"", ""white rope"")"
8540582,What kind of animal is in front of the leafy trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What kind of animal is in front of the leafy trees?"")"
3719411,What does the walking woman by the bus wear?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""What does the walking woman by the bus wear?"", "" what"")
    for woman_patch in woman_patches:
        return woman_patch简单 query(""What does the walking woman by the bus wear?"", "" what"")"
1129508,Is the controller to the left of a pillow?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    controller_patches = image_patch find("" controller"")
    # Question assumes only one controller patch
    if len(Controller_patches) == 0:
        # If no controller is found, query the image directly
        return image_patch_simple_query(""Is the controller to the left of a pillow?"", ""left"")
    for controller_patch in controller_patches:
        is_to_left_of_pillow = ( controller_patch simple query(""Is the controller to the left of a pillow?"") == ""left"")
        if is_to_left_of_pillow:
            return controller_patch simple query(""Is the controller to the left of a pillow?"")"
18664084,Is there any sheep by the fence?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sheep_patches = image_patch.find(""sheep"")
    # Question assumes only one sheep patch
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch_simple_query(""Is there any sheep by the fence?"", ""no"")
    for sheep_patch in sheep_patches:
        is_by_fence = (sheep_patch_simple_query(""Is the sheep by the fence?"") == ""yes"")
        if is_by_fence:
            return sheep_patch_simple_query(""Is there any sheep by the fence?"", ""yes"")
    # If no sheep is by the fence, return ""no""
    return ""no"""
6912079,What animal is this?," return image_patch简单 query(""What animal is this?"", "" what animal is this"")"
3412029,Where is the person?," # assumes only one person
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Where is the person?"", ""right"")
    return person_patches[0].simple_query(""Where is the person?"", ""right"")"
14161122,What animal is in the water?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is in the water?"", ""no"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal in the water?"") == ""yes"":
            return animal_patch简单 query(""What animal is in the water?"", ""no"")
    # If no animal is in the water, return ""no""
    return ""no"""
1781542,What is the item of furniture to the right of the baby the parent is to the left of?," # assumes only one baby and one parent
    image_patch = Image Patch(image)
    baby_patches = image_patch.find(""baby"")
    if len(baby_patches) == 0:
        # If no baby is found, query the image directly
        return image_patch_simple_query(""What is the item of furniture to the right of the baby the parent is to the left of?"", ""baby"")
    baby_patch = baby_patches[0]
    parent_patches = image_patch find(""parent"")
    if len(parent_patches) == 0:
        return image_patch_simple query(""What is the item of furniture to the right of the baby the parent is to the left of?"", ""parent"")
    parent_patch = parent_patches[0]
    item_patches = image_patch find(""item"")
    if len(item_patches) == 0:
        return image_patch_simple query(""What is the item of furniture to the right of the baby the parent is to the left of?"", ""item"")
    item_patch = item_patches[0]
    if item_patch horizontal center > baby_patch horizontal center and item_patch horizontal center < parent_patch horizontal center:
        return ""furniture""
    return ""no"""
15699496,What is the cup that looks clean made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cup_patches = image_patch find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch_simple_query(""What is the cup that looks clean made of?"", ""clean"")
    for cup_patch in cup_patches:
        material = cup_patch简单 query(""What is the cup made of?"", ""clean"")
        if material == ""clean"":
            return cup_patch简单 query(""What is the cup made of?"", ""clean"")"
12765451,What animals are to the right of the ladder?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What animals are to the right of the ladder?"", ""right"")"
191044307,What animal is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""What animal is black?"", ""black"")"
12639181,Who is wearing shorts?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing shorts?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shorts = (person_patch_simple_query(""Is the person wearing shorts?"") == ""yes"")
        if is_wearing_shorts:
            return person_patch_simple_query(""Who is wearing shorts?"", ""yes"")
    # If no person is wearing shorts, pick the first person
    return person_patches[0].simple_query(""Who is wearing shorts?"", ""no"")"
10630949,Is the person that is not male wearing an elbow pad?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the person that is not male wearing an elbow pad?"", ""not male"")
    for person_patch in person_patches:
        if person_patch simple query(""Is the person that is not male wearing an elbow pad?"", ""not male"") == ""yes"":
            return person_patch简单 query(""Is the person that is not male wearing an elbow pad?"", ""not male"")
    # If no person is wearing an elbow pad, return ""no""
    return ""no"""
14544602,What is the boy holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""What is the boy holding?"", "" what"")
    for boy_patch in boy_patches:
        what_patch = boy_patch简单 query(""What is the boy holding?"", "" what"")
        if what_patch == "" crayons"":
            return "" crayons""
        what_patch = boy_patch simple query(""What is the boy holding?"", "" what"")
        if what_patch == "" crayons"":
            return "" crayons""
        what_patch = boy_patch simple query(""What is the boy holding?"", "" what"")
        if what_patch == "" crayons"":
            return "" crayons""
        what_patch = boy_patch simple query(""What is the boy holding?"", "" what"")
        if what_patch == "" crayons):
            return "" crayons""
        what_patch = boy_patch simple query(""What is the boy holding?"", "" what"")
        if what_patch == "" crayons):
            return "" crayons""
        what_patch = boy_patch simple query("" what is the boy holding?"", "" what"")
        if what_patch == "" crayons):
            return "" crayons""
        what_patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what_patch == "" crayons):
            return "" crayons""
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return "" crayons""
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return "" crayons$
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return "" crayons$
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return "" crayons$
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return "" crayons$
        what patch = boy patch simple query("" what is the boy holding?"", "" what"")
        if what patch == "" crayons):
            return """
2986699,Of what material the dish?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dish_patches = image_patch.find(""dish"")
    # Question assumes only one dish patch
    if len(dish_patches) == 0:
        # If no dish is found, query the image directly
        return image_patch_simple_query(""Of what material the dish?"", "" material"")
    for dish_patch in dish_patches:
        material_patches = image_patch.find(""material"")
        for material_patch in material_patches:
            if material_patch horizontal_center < dish_patch horizontal_center:
                return ""wood""
            elif material_patch horizontal_center > dish_patch horizontal_center:
                return ""plastic""
    return ""wood"""
161013513,What kind of animal is on the street?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What kind of animal is on the street?"", "" what"")
    for animal_patch in animal_patches:
        return animal_patch简单 query(""What kind of animal is on the street?"", "" what"")"
15143936,What animal is before the roof?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is before the roof?"", ""are"")
    for animal_patch in animal_patches:
        is_before_roof = (animal_patch简单 query(""Is the animal before the roof?"") == ""yes"")
        if is_before_roof:
            return animal_patch简单 query(""What animal is before the roof?"") # crop would include the roof so keep it in the query
    # If no animal is before the roof, pick the first animal
    return animal_patches[0].simple query(""What animal is before the roof?"")"
1955043,Who is playing with the ball?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Who is playing with the ball?"", ""no"")"
91044150,What is the name of the animals in front of the trees beside the river?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animals_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animals_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What is the name of the animals in front of the trees beside the river?"", ""no"")
    for animal_patch in animals_patches:
        if animal_patch horizontal_center < image_patch horizontal_center:
            return ""no""
    return ""yes"""
13483129,What kind of fruit is hanging?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fruit_patches = image_patch find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch_simple_query(""What kind of fruit is hanging?"", "" fruit"")
    for fruit_patch in fruit_patches:
        is_fruit_hanging = (fruit_patch简单 query(""Is the fruit hanging?"") == ""yes"")
        if is_fruit_hanging:
            return fruit_patch简单 query(""What kind of fruit is hanging?"") # crop would include the fruit so keep it in the query
    # If no fruit is hanging, pick the first fruit
    return fruit_patches[0].simple query(""What kind of fruit is hanging?"")"
7317299,What is under the bush?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bush_patches = image_patch find(""bush"")
    # Question assumes only one bush patch
    if len(bush_patches) == 0:
        # If no bush is found, query the image directly
        return image_patch_simple_query(""What is under the bush?"", ""no"")
    for bush_patch in bush_patches:
        is_under_bush = (bush_patch_simple_query(""Is the bush under the bush?"") == ""yes"")
        if is_under_bush:
            return bush_patch_simple_query(""What is under the bush?"", ""no"")
    # If no bush is under the bush, return ""no""
    return ""no"""
17432396,Are there kangaroos or birds in this photograph?," # assumes only one kangaroo patch and one bird patch
    image_patch = Image Patch(image)
    kangaroo_patches = image_patch.find(""kangaroo"")
    birds_patches = image_patch.find(""bird"")
    if len(kangaroo_patches) == 0 or len(bird_patches) == 0:
        # If no kangaroo or bird is found, query the image directly
        return image_patch_simple_query(""Are there kangaroos or birds in this photograph?"", ""kangaroo or bird"")
    return ""yes"""
10457241,What is the color of the trousers?," # color of trousers is red
    image_patch = Image Patch(image)
    trousers_patches = image_patch find(""trousers"")
    # Question assumes only one trouser patch
    if len(trousers_patches) == 0:
        # If no trouser is found, query the image directly
        return image_patch_simple_query(""What is the color of the trousers?"", ""red"")
    return image_patch简单 query(""What is the color of the trousers?"", ""red"")"
2913850,Is the placemat in the bottom or in the top part?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    placemat_patches = image_patch find(""placemat"")
    # Question assumes only one placemat patch
    if len(placemat_patches) == 0:
        # If no placemat is found, query the image directly
        return image_patch_simple_query(""Is the placemat in the bottom or in the top part?"", ""bottom top"")
    if placemat_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
12788747,What is covered with blanket?," # returns ""the cat is covered with blanket""
    image_patch = Image Patch(image)
    cat_patches = image_patch find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch_simple_query(""What is covered with blanket?"", ""cat"")
    for cat_patch in cat_patches:
        if cat_patch simple query(""Is the cat covered with blanket?"") == ""yes"":
            return cat_patch simple query(""What is covered with blanket?"")"
7343271,What is the item of furniture that is to the right of the man that is wearing a sweater?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the item of furniture that is to the right of the man that is wearing a sweater?"", ""man"")
    man_patch = man_patches[0]
    sweater_patches = image_patch find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        return ""no""
    for sweater_patch in sweater_patches:
        if sweater_patch horizontal center > man_patch horizontal center:
            return sweater_patch简单 query(""What is the item of furniture that is to the right of the man that is wearing a sweater?"", ""sweater"")
    return ""no"""
18673671,"In which part of the picture is the desk drawer, the bottom or the top?"," # returns ""top"" because the desk drawer is on top of the table
    image_patch = Image Patch(image)
    desk_patches = image_patch.find(""desk"")
    # Question assumes only one desk patch
    if len(desk_patches) == 0:
        # If no desk is found, query the image directly
        return image_patch_simple_query(""In which part of the picture is the desk drawer, the bottom or the top?"", ""top"")
    if desk_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
19900141,Are there napkins or tablecloths?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    napkin_patches = image_patch.find(""napkin"")
    tablecloth_patches = image_patch.find(""tablecloth"")
    # Question assumes only one napkin patch and one tablecloth patch
    if len(napkin_patches) == 0 or len(tablecloth_patches) == 0:
        # If no napkin or tablecloth is found, query the image directly
        return image_patch_simple_query(""Are there napkins or tablecloths?"", ""no"")
    napkin_patch = napkin_patches[0]
    tablecloth_patch = tablecloth_patches[0]
    if napkin_patch horizontal_center < tablecloth_patch horizontal_center:
        return ""no""
    else:
        return ""yes"""
19737232,Is the book on the right of the picture?," return image_patch简单 query(""Is the book on the right of the picture?"", ""right"")"
475064,Who is wearing the glasses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the glasses?"", ""no"")
    for person_patch in person_patches:
        is_wearing_glasses = (person_patch_simple_query(""Is the person wearing glasses?"") == ""yes"")
        if is_wearing_glasses:
            return person_patch_simple_query(""Who is wearing the glasses?"", ""yes"")
    # If no person is wearing glasses, pick the first person
    return person_patches[0].simple_query(""Who is wearing the glasses?"", ""no"")"
8594579,Is there a woman to the right of the orange object that is to the right of the person?," # assumes only one object to the right of the person
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is there a woman to the right of the orange object that is to the right of the person?"", ""no"")
    for person_patch in person_patches:
        orange_patches = image_patch.find(""orange"")
        if len(orange_patches) == 0:
            return image_patch_simple_query(""Is there a woman to the right of the orange object that is to the right of the person?"", ""no"")
        for orange_patch in orange_patches:
            if orange_patch horizontal center > person_patch horizontal center:
                return image_patch_simple query(""Is there a woman to the right of the orange object that is to the right of the person?"", ""yes"")
    return ""no"""
14602992,Which side of the image is the couch on?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    couch_patches = image_patch find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch_simple_query(""Which side of the image is the couch on?"", ""left"")
    if couch_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
9944587,How tall is the man that is wearing a shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""How tall is the man that is wearing a shirt?"", ""height"")
    for man_patch in man_patches:
        height = man_patch vertical center
        return ""The man is "" + str(height) + "" tall."""
13736712,Are there any giraffes?," return image_patch simple query(""Are there any giraffes?"")"
6996118,The young girl is wearing what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""The young girl is wearing what?"")"
19992576,Is the basket on the floor small and brown?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    basket_patches = image_patch.find(""basket"")
    # Question assumes only one basket patch
    if len(basket_patches) == 0:
        # If no basket is found, query the image directly
        return image_patch_simple_query(""Is the basket on the floor small and brown?"", ""no"")
    for basket_patch in basket_patches:
        is_on_floor = (basket_patch简单 query(""Is the basket on the floor?"") == ""yes"")
        if is_on_floor:
            is_small = (basket_patch简单 query(""Is the basket small?"") == ""yes"")
            is_brown = (basket_patch simple query(""Is the basket brown?"") == ""yes"")
            if is_small and is_brown:
                return ""yes""
    return ""no"""
17332401,What is the boy in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""What is the boy in front of?"", ""no"")
    for boy_patch in boy_patches:
        is_in_front = boy_patch simple query(""Is the boy in front of?"") == ""yes""
        if is_in_front:
            return boy_patch simple query(""What is the boy in front of?"") # crop would include the boy so keep it in the query
    # If no boy is in front, return ""no""
    return ""no"""
15586294,Which side is the leather armchair on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    armchair_patches = image_patch find(""leather armchair"")
    # Question assumes only one armchair patch
    if len(armchair_patches) == 0:
        # If no armchair is found, query the image directly
        return image_patch_simple_query(""Which side is the leather armchair on?"", ""left"")
    for armchair_patch in armchair_patches:
        side = armchair_patch简单 query(""Which side is the leather armchair on?"", ""left"")
        if side == ""left"":
            return ""left""
        else:
            return ""right"""
15658324,What is the horse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What is the horse in front of?"")"
18453709,What is the item of furniture that has the same color as the controller the man is holding called?," # assumes only one controller patch
    image_patch = Image Patch(image)
    controller_patches = image_patch find("" controller"")
    if len(Controller_patches) == 0:
        # If no controller is found, query the image directly
        return image_patch_simple_query(""What is the item of furniture that has the same color as the controller the man is holding called?"", "" controller"")
    for controller_patch in controller_patches:
        color = controller_patch简单 query(""What is the color of the controller?"")"
2531874,Who is playing?," # asks for the subject of a verb (playing), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Who is playing?"")"
3112009,Is the plate on the left side?," # assumes only one plate patch
    image_patch = Image Patch(image)
    plate_patches = image_patch find(""plate"")
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch_simple_query(""Is the plate on the left side?"", ""left"")
    return ""left"""
1527613,On which side of the picture is the bag?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bag_patches = image_patch find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""On which side of the picture is the bag?"", ""left"")
    for bag_patch in bag_patches:
        side = bag_patch horizontal_center < image_patch horizontal_center
        if side:
            return ""left""
    return ""right"""
11781054,Are both the road and the roof the same color?," # returns ""yes"" if both are the same color, ""no"" otherwise
    image_patch = Image Patch(image)
    road_patches = image_patch.find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch_simple_query(""Are both the road and the roof the same color?"", ""no"")
    road_patch = road_patches[0]
    roof_patches = image_patch.find(""roof"")
    # Question assumes only one roof patch
    if len(roof_patches) == 0:
        return ""no""
    for roof_patch in roof_patches:
        if road_patch verify_property(""road"", ""color"") == roof_patch verify_property(""roof"", ""color""):
            return ""yes""
    return ""no"""
161027384,What is the green rug hanging on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    green_rug_patches = image_patch.find(""green rug"")
    # Question assumes only one green rug patch
    if len(green_rug_patches) == 0:
        # If no green rug is found, query the image directly
        return image_patch_simple_query(""What is the green rug hanging on?"", ""green rug"")
    for green_rug_patch in green_rug_patches:
        is_hanging_on = (green_rug_patch_simple_query(""Is the green rug hanging on?"") == ""yes"")
        if is_hanging_on:
            return green_rug_patch_simple query(""What is the green rug hanging on?"") # crop would include the green rug so keep it in the query
    # If no green rug is hanging on, pick the first green rug
    return green_rug_patches[0].simple query(""What is the green rug hanging on?"")"
14153714,Who is using the laptop?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is using the laptop?"", ""person"")
    for person_patch in person_patches:
        is_using_laptop = (person_patch_simple_query(""Is the person using the laptop?"", ""person"") == ""yes"")
        if is_using_laptop:
            return person_patch_simple query(""Who is using the laptop?"", ""person"")
    # If no person is using the laptop, pick the first person
    return person_patches[0].simple query(""Who is using the laptop?"", ""person"")"
1969500,Who in the photo is standing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch_simple_query(""Who in the photo is standing?"", ""people"")
    for person_patch in people_patches:
        is_standing = (person_patch_simple_query(""Is the person standing?"", ""people"") == ""yes"")
        if is_standing:
            return person_patch_simple_query(""Who in the photo is standing?"", ""people"") # crop would include the person so keep it in the query
    # If no person is standing, pick the first person
    return people_patches[0].simple_query(""Who in the photo is standing?"", ""people"")"
693318,Do you see any plates in the photo?," return image_patch简单 query(""Do you see any plates in the photo?"", ""yes"")"
19613394,The person on the skateboard is wearing what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""The person on the skateboard is wearing what?"")"
19927237,Is the blue car in front of the white van?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    blue_car_patches = image_patch.find(""blue car"")
    # Question assumes only one blue car patch
    if len(blue_car_patches) == 0:
        # If no blue car is found, query the image directly
        return image_patch_simple_query(""Is the blue car in front of the white van?"", ""blue car"")
    for blue_car_patch in blue_car_patches:
        white_van_patches = image_patch.find(""white van"")
        for white_van_patch in white_van_patches:
            if blue_car_patch horizontal_center < white_van_patch horizontal_center:
                return ""yes""
    return ""no"""
31054022,What is the box sitting on?," # box is on top of the table
    image_patch = Image Patch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch_simple_query(""What is the box sitting on?"", ""table"")
    return ""table"""
17634413,Does the ground look snowy and brown?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ground_patches = image_patch find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch_simple_query(""Does the ground look snowy and brown?"", ""no"")
    for ground_patch in ground_patches:
        is_snowy = ground_patch_simple_query(""Is the ground snowy?"", ""yes"")
        is_brown = ground_patch_simple query(""Is the ground brown?"", ""yes"")
        if is_snowy and is_brown:
            return ""yes""
    return ""no"""
15185768,Does the sky look blue and clear?," # returns ""yes"" if the sky looks blue and clear, ""no"" otherwise
    image_patch = Image Patch(image)
    return image_patch simple query(""Does the sky look blue and clear?"")"
1589160,Does the person that is sitting lean against a fire hydrant?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Does the person that is sitting lean against a fire hydrant?"", ""no"")
    for person_patch in person_patches:
        if person_patch simple query(""Is the person leaning against a fire hydrant?"", ""yes):
            return ""yes""
    return ""no"""
2142522,Are there any shopping carts or mannequins in this photo?," # returns ""no"" if no shopping cart or mannequins found
    image_patch = Image Patch(image)
    shopping_cart_patches = image_patch.find(""shopping cart"")
    mannequins_patches = image_patch.find(""mannequins"")
    if len(shopping_cart_patches) == 0 and len(mannequins_patches) == 0:
        return ""no""
    return ""yes"""
17362234,Are there cages or scrub brushes in this picture?," # assumes only one cage patch and one scrub brush patch
    image_patch = Image Patch(image)
    is_cage = image_patch.exists(""cage"")
    is_scrub_brush = image_patch.exists(""scrub brush"")
    if is_cage and is_scrub_brush:
        return ""yes""
    return ""no"""
4955854,Is the lamp below the chain?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    lamp_patches = image_patch find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""Is the lamp below the chain?"", ""no"")
    for lamp_patch in lamp_patches:
        chain_patches = image_patch find(""chain"")
        for chain_patch in chain_patches:
            if chain_patch_vertical_center < lamp_patch_vertical_center:
                return ""yes""
    return ""no"""
10463545,Is the computer to the right of the other computer silver or black?," # assumes only one computer patch
    image_patch = Image Patch(image)
    computers_patches = image_patch.find(""computer"")
    if len(computers_patches) == 0:
        # If no computer is found, query the image directly
        return image_patch_simple_query(""Is the computer to the right of the other computer silver or black?"", ""black"")
    for computer_patch in computers_patches:
        if computer_patch简单 query(""Is the computer to the right of the other computer silver or black?"", ""black"") == ""yes"":
            return ""black""
    return ""black"""
2265037,What is the girl wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What is the girl wearing?"", "" what"")
    for girl_patch in girl_patches:
        what she wearing = girl_patch简单 query(""What is the girl wearing?"", "" what"")
        if what she wearing == "" what"":
            return girl_patch简单 query(""What is the girl wearing?"", "" what"")
    # If no girl is wearing what, pick the first girl
    return girl_patches[0].simple query(""What is the girl wearing?"", "" what"")"
15485146,Are there any blue numbers or letters?," # assumes only one blue number or letter
    image_patch = Image Patch(image)
    blue_patches = image_patch find(""blue"")
    if len(blue_patches) == 0:
        # If no blue is found, query the image directly
        return image_patch_simple_query(""Are there any blue numbers or letters?"", ""blue"")
    for blue_patch in blue_patches:
        if blue_patch verify_property(""blue"", ""number""):
            return ""yes""
        if blue_patch verify_property(""blue"", ""letter""):
            return ""yes""
    return ""no"""
3483992,Is the long bus to the left or to the right of the person with the backpack?," # assumes only one bus patch and one backpack patch
    image_patch = Image Patch(image)
    bus_patches = image_patch.find(""bus"")
    backpack_patches = image_patch find(""backpack"")
    if len(bus_patches) == 0 or len(backpack_patches) == 0:
        # If no bus or backpack is found, query the image directly
        return image_patch_simple_query(""Is the long bus to the left or to the right of the person with the backpack?"", ""left or right"")
    bus_patch = bus_patches[0]
    backpack_patch = backpack_patches[0]
    if bus_patch horizontal center < backpack_patch horizontal center:
        return ""left""
    else:
        return ""right"""
13598461,What is the device that is not on called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What is the device that is not on called?"", ""not on"")
    for device_patch in device_patches:
        is_not_on = (device_patch_simple_query(""Is the device not on?"", ""not on"") == ""yes"")
        if is_not_on:
            return device_patch_simple_query(""What is the device that is not on called?"", ""not on"") # crop would include not on so keep it in the query
    # If no device is not on, pick the first device
    return device_patches[0].simple_query(""What is the device that is not on called?"", ""not on"")"
13885436,The sky has what color?," return image_patch简单 query(""The sky has what color?"")"
7432467,Is the black container to the left of the man that is on the motorcycle?," # black container is on the left of the man on the motorcycle
    image_patch = Image Patch(image)
    black_container_patches = image_patch.find(""black container"")
    # Question assumes only one black container patch
    if len(black_container_patches) == 0:
        # If no black container is found, query the image directly
        return image_patch_simple_query(""Is the black container to the left of the man that is on the motorcycle?"", ""black container"")
    for black_container_patch in black_container_patches:
        man_patches = image_patch find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            return image_patch简单 query(""Is the black container to the left of the man that is on the motorcycle?"", ""man"")
        for man_patch in man_patches:
            if man_patch horizontal center < black_container_patch horizontal center:
                return ""yes""
    return ""no"""
19540096,Is the fire in an oven?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fire_patches = image_patch.find(""fire"")
    # Question assumes only one fire patch
    if len(fire_patches) == 0:
        # If no fire is found, query the image directly
        return image_patch_simple_query(""Is the fire in an oven?"", ""no"")
    for fire_patch in fire_patches:
        is_in_oven = (fire_patch简单 query(""Is the fire in an oven?"") == ""yes"")
        if is_in_oven:
            return fire_patch简单 query(""Is the fire in an oven?"") # crop would include the oven so keep it in the query
    # If no fire is in an oven, return ""no""
    return ""no"""
18291107,The horse is where?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    horse_patches = image_patch find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch_simple_query(""The horse is where?"", ""in front of"")
    for horse_patch in horse_patches:
        return horse_patch简单 query(""The horse is where?"", ""in front of"")"
5435474,Is the man that is to the left of the motorbike wearing a hat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man that is to the left of the motorbike wearing a hat?"", ""no"")
    for man_patch in man_patches:
        if man_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
226307,Are there any tables in the photo?," return image_patch simple query(""Are there any tables in the photo?"", "" tables"")"
1944826,Who is reflected in the mirror?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Who is reflected in the mirror?"")"
6199650,What is the cooking utensil on top of the stove that is to the right of the woman called?," # assumes only one utensil patch
    image_patch = Image Patch(image)
    utensil_patches = image_patch find(""utensil"")
    if lenuteil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch_simple_query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"", ""utensil"")
    utensil_patch = utensil_patches[0]
    if utensil_patch horizontal_center > image_patch horizontal_center:
        return utensil_patch simple query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"", ""utensil"")
    return ""no"""
18435846,What is the color of the balloon that is to the right of the backpack?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch_simple_query(""What is the color of the balloon that is to the right of the backpack?"", ""balloon"")
    for backpack_patch in backpack_patches:
        balloon_patches = image_patch find(""balloon"")
        for balloon_patch in balloon_patches:
            if balloon_patch horizontal_center > backpack_patch horizontal_center:
                return balloon_patch简单 query(""What is the color of the balloon that is to the right of the backpack?"", ""balloon"")"
8390894,Is the woman to the right of the man sitting on a sofa?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman to the right of the man sitting on a sofa?"", ""no"")
    for woman_patch in woman_patches:
        man_patches = image_patch find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            return ""no""
        for man_patch in man_patches:
            if man_patch horizontal center < woman_patch horizontal center:
                return ""no""
    return ""yes"""
18896007,Which side of the image is the pot on?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Which side of the image is the pot on?"")"
19323898,Is that pillow on a couch?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch_simple_query(""Is that pillow on a couch?"", ""on"")
    for pillow_patch in pillow_patches:
        is_on_couch = (pillow_patch_simple_query(""Is the pillow on a couch?"", ""on"") == ""yes"")
        if is_on_couch:
            return pillow_patch_simple_query(""Is that pillow on a couch?"", ""on"") # crop would include the couch so keep it in the query
    # If no pillow is on a couch, return ""no""
    return ""no"""
1281034,Where are the trees?," # returns ""top"" or ""bottom""
    image_patch = Image Patch(image)
    trees_patches = image_patch find(""trees"")
    # Question assumes only one tree patch
    if len(trees_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch_simple_query(""Where are the trees?"", ""top or bottom"")
    if trees_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
13515147,What is on the cow?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cow_patches = image_patch find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch_simple_query(""What is on the cow?"", ""on top of"")
    for cow_patch in cow_patches:
        is_on_top = (cow_patch简单 query(""Is the cow on top of another object?"") == ""yes"")
        if is_on_top:
            return cow_patch简单 query(""What is on the cow?"", ""on top of"")
    # If no cow is on top of another object, pick the first cow
    return cow_patches[0].simple query(""What is on the cow?"", ""on top of"")"
91036716,What is the skater doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    skater_patches = image_patch find(""skater"")
    # Question assumes only one skater patch
    if len(skater_patches) == 0:
        # If no skater is found, query the image directly
        return image_patch_simple_query(""What is the skater doing?"", ""skating"")
    for skater_patch in skater_patches:
        return skater_patch简单 query(""What is the skater doing?"", ""skating"")"
17791510,What is the person to the left of the boy carrying?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""What is the person to the left of the boy carrying?"", "" boy"")
    for boy_patch in boy_patches:
        person_patches = image_patch find(""person"")
        for person_patch in person_patches:
            if person_patch horizontal_center < boy_patch horizontal_center:
                return person_patch简单 query(""What is the person to the left of the boy carrying?"", "" boy"")
    # If no boy is found, query the image directly
    return image_patch简单 query(""What is the person to the left of the boy carrying?"", "" boy"")"
13152020,Is the ground wet or dry?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch_simple_query(""Is the ground wet or dry?"", ""wet"")
    for ground_patch in ground_patches:
        is_wet = ground_patch_simple_query(""Is the ground wet or dry?"", ""wet"")
        if is_wet:
            return ground_patch_simple_query(""Is the ground wet or dry?"", ""wet"")
    # If no ground is wet, return ""dry""
    return ""dry"""
19312096,"On which side is the purse, the left or the right?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    purse_patches = image_patch find(""purse"")
    # Question assumes only one purse patch
    if len(purse_patches) == 0:
        # If no purse is found, query the image directly
        return image_patch_simple_query(""On which side is the purse, the left or the right?"", ""left"")
    for purse_patch in purse_patches:
        is_left = (purse_patch简单 query(""Is the purse on the left?"") == ""yes"")
        if is_left:
            return ""left""
    # If no purse is on the left, it must be on the right
    return ""right"""
71002343,Are there breads in this photograph?," return image_patch simple query(""Are there breads in this photograph?"", "" bread"")"
9113663,Do you see either any snow or sand that are white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    snow_patches = image_patch.find(""snow"")
    sand_patches = image_patch.find(""sand"")
    # Question assumes only one snow patch and one sand patch
    if len(snow_patches) == 0 or len(sand_patches) == 0:
        # If no snow or sand is found, query the image directly
        return image_patch_simple_query(""Do you see either any snow or sand that are white?"", ""white"")
    snow_patch = snow_patches[0]
    sand_patch = sand_patches[0]
    is_snow_white = (snow_patch simple query(""Is the snow white?"") == ""yes"")
    is_sand_white = (sand_patch simple query(""Is the sand white?"") == ""yes"")
    if is_snow_white or is_sand_white:
        return ""yes""
    return ""no"""
10243612,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
555062,What vegetable is to the left of the napkin?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetable_patches = image_patch find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""What vegetable is to the left of the napkin?"", ""no"")
    for vegetable_patch in vegetable_patches:
        napkin_patches = image_patch find(""napkin"")
        for napkin_patch in napkin_patches:
            if napkin_patch horizontal_center < vegetable_patch horizontal_center:
                return ""yes""
    return ""no"""
15599523,Is the dog on the right side?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    dog_patches = image_patch find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch_simple_query(""Is the dog on the right side?"", ""no"")
    for dog_patch in dog_patches:
        is_on_right_side = (dog_patch simple query(""Is the dog on the right side?"") == ""yes"")
        if is_on_right_side:
            return dog_patch simple query(""Is the dog on the right side?"") # crop would include the dog so keep it in the query
    # If no dog is on the right side, return ""no""
    return ""no"""
101019673,What is the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man wearing?"", "" what"")
    for man_patch in man_patches:
        what patch = man_patch简单 query(""What is the man wearing?"", "" what"")
        if what patch == "" what"":
            return man_patch简单 query(""What is the man wearing?"", "" what"")
    # If no man is wearing what, pick the first man
    return man_patches[0].simple query(""What is the man wearing?"", "" what"")"
333047,Do you see any men to the right of the orange tent?," # returns ""yes"" if there is a man to the right of the orange tent
    image_patch = Image Patch(image)
    orange_tents_patches = image_patch.find(""orange tent"")
    # Question assumes only one orange tent patch
    if len(orange_tents_patches) == 0:
        # If no orange tent is found, query the image directly
        return image_patch_simple_query(""Do you see any men to the right of the orange tent?"", ""no"")
    for orange_tent_patch in orange_tents_patches:
        men_patches = image_patch finds(""man"")
        # Question assumes only one man patch
        if len(men_patches) == 0:
            return image_patch_simple query(""Do you see any men to the right of the orange tent?"", ""no"")
        for men_patch in men_patches:
            if men_patch horizontal center > orange_tent_patch horizontal center:
                return ""yes""
    return ""no"""
13907796,Is the shirt striped and green?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Is the shirt striped and green?"", ""no"")
    for shirt_patch in shirt_patches:
        is_striped = (shirt_patch_simple_query(""Is the shirt striped?"") == ""yes"")
        is_green = (shirt_patch_simple_query(""Is the shirt green?"") == ""yes"")
        if is_striped and is_green:
            return ""yes""
    return ""no"""
17207604,Are there either bottles or shelves?," # returns ""yes"" if either is found, ""no"" otherwise
    image_patch = Image Patch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_bottle or is_shelf)"
1890653,What vehicle is to the right of the train on the left of the photo?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""What vehicle is to the right of the train on the left of the photo?"", ""train"")
    train_patch = train_patches[0]
    train_left = train_patch horizontal_center - train_patch_width / 2
    train_right = train_patch horizontal_center + train_patch_width / 2
    train_patches = image_patch find(""train"")
    # Question assumes only one train patch
    if len train_patches) == 0:
        return image_patch simple query(""What vehicle is to the right of the train on the left of the photo?"", ""train"")
    train_patch = train_patches[0]
    train_left = train_patch horizontal center - train_patch_width / 2
    train right = train_patch horizontal center + train_patch width / 2
    train_patches = image_patch find(""train"")
    return image_patch simple query(""What vehicle is to the right of the train on the left of the photo?"", ""train"")"
7165131,Is that train engine small or large?," # assumes only one train patch
    image_patch = Image Patch(image)
    train_patches = image_patch find(""train"")
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""Is that train engine small or large?"", ""small"")
    train_patch = train_patches[0]
    return train_patch verify_property(""train"", ""small"")"
21049362,Where are the railroad tracks?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Where are the railroad tracks?"")"
6224352,What is the animal looking at?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What is the animal looking at?"", ""are"")
    for animal_patch in animal_patches:
        is_looking_at_animal = (animal_patch简单 query(""Is the animal looking at an animal?"") == ""yes"")
        if is_looking_at_animal:
            return animal_patch简单 query(""What is the animal looking at?"") # crop would include the animal so keep it in the query
    # If no animal is looking at an animal, pick the first animal
    return animal_patches[0].simple query(""What is the animal looking at?"")"
14367593,What are the children playing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    children_patches = image_patch find(""children"")
    # Question assumes only one child patch
    if len(children_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""What are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the children playing?"", "" what are the"
598297,Are there combs or figurines in the picture?," # returns ""yes"" if combs or figurines are found, ""no"" otherwise
    image_patch = Image Patch(image)
    combs_patches = image_patch.find("" comb"")
    figurines_patches = image_patch.find("" figurine"")
    return ""yes"" if len(combs_patches) > 0 or len(figurines_patches) > 0 else ""no"""
16409127,What is the wire on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    wire_patches = image_patch find(""wire"")
    # Question assumes only one wire patch
    if len(wire_patches) == 0:
        # If no wire is found, query the image directly
        return image_patch_simple_query(""What is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is the wire on?"", "" what is"
5841062,Is the tunnel small or large?," # assumes only one tunnel patch
    image_patch = Image Patch(image)
    tunnel_patches = image_patch find(""tunnel"")
    if len(tunnel_patches) == 0:
        # If no tunnel is found, query the image directly
        return image_patch_simple_query(""Is the tunnel small or large?"", ""small"")
    if tunnel_patches[0].width < image_patch_width:
        return ""small""
    else:
        return ""large"""
17560468,Do you see trains or windows?," # returns ""yes"" if there are both trains and windows, ""no"" otherwise
    image_patch = Image Patch(image)
    trains_patches = image_patch.find(""train"")
    windows_patches = image_patch.find(""window"")
    return bool_to_yesno(len(trains_patches) > 0 and len(windows_patches) > 0)"
9321809,What is the person near the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the person near the man wearing?"", ""man"")
    for man_patch in man_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if person_patch horizontal_center < man_patch horizontal_center:
                return person_patch简单 query(""What is the person near the man wearing?"", ""man"")
    # If no person is found, return ""no""
    return ""no"""
12352375,Is the vehicle that is sitting down black or blue?," # assumes only one vehicle patch
    image_patch = Image Patch(image)
    vehicle_patches = image_patch find(""vehicle"")
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""Is the vehicle that is sitting down black or blue?"", ""black"")
    for vehicle_patch in vehicle_patches:
        color_patches = image_patch find(""color"")
        for color_patch in color_patches:
            if color_patch horizontal_center > vehicle_patch horizontal_center:
                return ""black""
    return ""blue"""
7949280,Is the metal trash can to the left or to the right of the white thing near the shower curtain?," # assumes only one white thing near the shower curtain
    image_patch = Image Patch(image)
    white_patches = image_patch.find(""white"")
    if len(white_patches) == 0:
        # If no white is found, query the image directly
        return image_patch_simple_query(""Is the metal trash can to the left or to the right of the white thing near the shower curtain?"", ""left or right"")
    for white_patch in white_patches:
        if white_patch horizontal_center < image_patch horizontal_center:
            return ""left""
        else:
            return ""right"""
5800248,Is it outdoors?," # assumes only one image patch
    image_patch = Image Patch(image)
    return image_patch simple query(""Is it outdoors?"")"
4604785,Does the pizza slice to the left of the pizza have large size?," # assumes only one pizza slice
    image_patch = Image Patch(image)
    pizza_patches = image_patch.find(""pizza"")
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch_simple_query(""Does the pizza slice to the left of the pizza have large size?"", ""left"")
    for pizza_patch in pizza_patches:
        if pizza_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
15185845,What's the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What's the man wearing?"", "" what"")
    for man_patch in man_patches:
        what patch = man_patch简单 query(""What's the man wearing?"", "" what"")
        if what_patch == "" what"":
            return man_patch简单 query(""What's the man wearing?"", "" what"")
    # If no man is wearing a what, pick the first what patch
    return man_patches[0].simple query(""What's the man wearing?"", "" what"")"
2282232,Where is the snow?," # returns ""where is the snow""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Where is the snow?"")"
7889197,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
11292587,Are there either any blankets or pictures in the photograph?," # contains a relation (on top of), so ask directly
    image_patch = Image Patch(image)
    blankets_patches = image_patch find(""blanket"")
    pictures_patches = image_patch find(""picture"")
    # Question assumes only one blanket patch and one picture patch
    if len(blanket_patches) == 0 and len(pictures_patches) == 0:
        # If no blankets or pictures are found, query the image directly
        return image_patch_simple_query(""Are there either any blankets or pictures in the photograph?"", ""no"")
    if len(blanket_patches) > 0 and len(pictures_patches) > 0:
        return ""yes""
    if len(blanket_patches) > 0:
        return ""yes""
    if len(pictures_patches) > 0:
        return ""yes""
    return ""no"""
154682,Where does the bird stand on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bird_patches = image_patch find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch_simple_query(""Where does the bird stand on?"", ""on"")
    for bird_patch in bird_patches:
        return bird_patch简单 query(""Where does the bird stand on?"", ""on"")"
10435315,Is the man holding a racket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man holding a racket?"", ""no"")
    for man_patch in man_patches:
        is_holding_racket = (man_patch简单 query(""Is the man holding a racket?"") == ""yes"")
        if is_holding_racket:
            return man_patch简单 query(""Is the man holding a racket?"") # crop would include the racket so keep it in the query
    # If no man is holding a racket, return ""no""
    return ""no"""
121035887,Do the man shorts have white color?," # assumes only one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Do the man shorts have white color?"", ""blue"")
    return ""yes"""
10770422,What kind of vehicle is to the left of the man that is to the left of the cows?," # assumes only one man patch and one cow patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"", ""no"")
    man_patch = man_patches[0]
    cows_patches = image_patch.find(""cows"")
    if len(cows_patches) == 0:
        return image_patch_simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"", ""no"")
    for cow_patch in cows_patches:
        if cow_patch horizontal_center > man_patch horizontal_center:
            return image_patch简单 query(""What kind of vehicle is to the left of the man that is to the left of the cows?"", ""car"")
    return image_patch_simple query(""What kind of vehicle is to the left of the man that is to the left of the cows?"", ""no"")"
19659501,What is the color of the umbrella the bird is on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch_simple_query(""What is the color of the umbrella the bird is on?"", ""red"")
    for bird_patch in bird_patches:
        color_of_umbrella = bird_patch简单 query(""What is the color of the umbrella the bird is on?"", ""red"")
        if color_of_umbrella == ""red"":
            return bird_patch简单 query(""What is the color of the umbrella the bird is on?"", ""red"")
    # If no bird is wearing a red umbrella, return red (defective)
    return ""red"""
10595217,Where is the grass?," # returns ""where is the grass""
    image_patch = Image Patch(image)
    return image_patch简单 query(""Where is the grass?"")"
14803743,Which kind of clothing is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of clothing is black?"", ""black"")"
19743238,Is the man on the right side?," # assumes only one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man on the right side?"", ""no"")
    if man_patches[0].horizontal_center > image_patch horizontal_center:
        return ""yes""
    return ""no"""
3965204,Are the mountains covered with snow?," # assumes only one mountain patch
    image_patch = Image Patch(image)
    mountain_patches = image_patch find(""mountain"")
    if len(mountain_patches) == 0:
        # If no mountain is found, query the image directly
        return image_patch_simple_query(""Are the mountains covered with snow?"", ""no"")
    for mountain_patch in mountain_patches:
        snow_patches = image_patch find(""snow"")
        for snow_patch in snow_patches:
            if snow_patch vertical_center > mountain_patch vertical_center:
                return ""yes""
    return ""no"""
141024710,Are there both windows and cars in the picture?,"    
    image_patch = Image Patch(image)
    is_window = image_patch_exists(""window"")
    is_car = image_patch_exists(""car"")
    return bool_to_yesno(is_window and is_car)"
6481635,What color do you think the shirt is?," # color of the shirt is not specified so need to check if it is red or blue
    image_patch = Image Patch(image)
    red_patches = image_patch.find(""red"")
    blue_patches = image_patch.find(""blue"")
    # Question assumes only one red patch and one blue patch
    if len(red_patches) == 0 and len(blue_patches) == 0:
        # If no red or blue is found, query the image directly
        return image_patch_simple_query(""What color do you think the shirt is?"", ""red or blue"")
    if len(red_patches) == 1 and len(blue_patches) == 0:
        return ""red""
    elif len(red_patches) == 0 and len(blue_patches) == 1:
        return ""blue""
    else:
        return ""red or blue"""
3623367,What's he doing?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What's he doing?"", ""The person is doing"")
    person_patch = person_patches[0]
    action_patches = image_patch find(""action"")
    if len action_patches) == 0:
        return ""The person is doing""
    for action_patch in action_patches:
        if action_patch horizontal_center > person_patch horizontal_center:
            return ""The person is doing""
    return ""The person is doing"""
15634950,Where is the giraffe in front of the hay eating from?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch_simple_query(""Where is the giraffe in front of the hay eating from?"", ""giraffe"")
    for giraffe_patch in giraffe_patches:
        hay_patches = image_patch.find(""hay"")
        for hay_patch in hay_patches:
            if hay_patch horizontal_center < giraffe_patch horizontal_center:
                return giraffe_patch简单 query(""Where is the giraffe in front of the hay eating from?"", ""giraffe"")
    return ""no"""
16644500,What animal is the log pulled by?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is the log pulled by?"", ""log"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal the log pulled by?"", ""log"") == ""yes"":
            return animal_patch简单 query(""What animal is the log pulled by?"", ""log"")
    # If no animal is the log pulled by, pick the first animal
    return animal_patches[0].simple query(""What animal is the log pulled by?"", ""log"")"
3202108,Which side is the car on?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch_simple_query(""Which side is the car on?"", ""left"")
    if car_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
10137201,Are the papers in the bottom part of the picture?,"    
    image_patch = Image Patch(image)
    return image_patch简单 query(""Are the papers in the bottom part of the picture?"")"
5325670,Is the boy to the left or to the right of the person that is on the left?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""Is the boy to the left or to the right of the person that is on the left?"", ""left"")
    boy_patch = boy_patches[0]
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return boy_patch简单 query(""Is the boy to the left or to the right of the person that is on the left?"", ""left"")
    for person_patch in person_patches:
        if boy_patch horizontal center < person_patch horizontal center:
            return ""left""
        else:
            return ""right"""
8438091,The picture is what color?," return image_patch简单 query(""The picture is what color?"")"
4325939,On which side of the photo is the banana?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    banana_patches = image_patch find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch_simple_query(""On which side of the photo is the banana?"", ""left"")
    for banana_patch in banana_patches:
        is_left = (banana_patch horizontal_center < image_patch horizontal_center)
        if is_left:
            return ""left""
    return ""right"""
1425189,What is the name of the brown piece of furniture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch_simple_query(""What is the name of the brown piece of furniture?"", ""brown"")
    for brown_patch in brown_patches:
        return brown_patch简单 query(""What is the name of the brown piece of furniture?"", ""brown"")"
5119962,Is the man to the right of glasses?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man to the right of glasses?"", ""no"")
    for man_patch in man_patches:
        glasses_patches = image_patch find(""glasses"")
        for glasses_patch in glasses_patches:
            if glasses_patch horizontal_center < man_patch horizontal_center:
                return ""no""
    return ""yes"""
16523418,Is the toilet lid down or up?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch_simple_query(""Is the toilet lid down or up?"", ""down"")
    for toilet_patch in toilet_patches:
        is_down = (toilet_patch简单 query(""Is the toilet lid down or up?"") == ""down"")
        if is_down:
            return toilet_patch简单 query(""Is the toilet lid down or up?"") # crop would include the toilet lid so keep it in the query
    # If no toilet is down, pick the first toilet
    return toilet_patches[0].simple query(""Is the toilet lid down or up?"")"
6522554,Which kind of device does the man hold?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""Which kind of device does the man hold?"", ""device"")
    for device_patch in device_patches:
        return device_patch简单 query(""Which kind of device does the man hold?"", ""device"")"
870619,What is the device to the left of the person that is to the left of the television?," # assumes only one person and one television
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the device to the left of the person that is to the left of the television?"", ""left"")
    person_patch = person_patches[0]
    television_patches = image_patch.find(""television"")
    if len(television_patches) == 0:
        return image_patch_simple_query(""What is the device to the left of the person that is to the left of the television?"", ""left"")
    television_patch = television_patches[0]
    if television_patch horizontal_center < person_patch horizontal_center:
        return image_patch_simple_query(""What is the device to the left of the person that is to the left of the television?"", ""left"")
    return image_patch_simple_query(""What is the device to the left of the person that is to the left of the television?"", ""left"")"
12713794,Does the woman to the left of the man wear a necklace?," # assumes only one woman patch and one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    woman_patches = image_patch find(""woman"")
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch_simple_query(""Does the woman to the left of the man wear a necklace?"", ""no"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if woman_patchhorizontal_center < man_patchhorizontal_center:
        return ""yes""
    return ""no"""
824070,What is the man doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man doing?"", "" what"")
    for man_patch in man_patches:
        action_patches = man_patch find(""action"")
        # Question assumes only one action patch
        if len action_patches) == 0:
            return man_patch simple query(""What is the man doing?"", "" what"")
        for action_patch in action_patches:
            return action_patch简单 query(""What is the man doing?"", "" what"")"
11593733,Which kind of furniture is right to the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which kind of furniture is right to the pillow?"")"
3357821,Does the dog to the left of the other dog look small or large?," # assumes only one dog to the left of another dog
    image_patch = Image Patch(image)
    left_dog_patches = image_patch.find(""dog"")
    right_dog_patches = image_patch.find(""dog"")
    if len(left_dog_patches) == 0 or len(right_dog_patches) == 0:
        # If no dogs are found, query the image directly
        return image_patch_simple_query(""Does the dog to the left of the other dog look small or large?"", ""left"")
    left_dog = left_dog_patches[0]
    right_dog = right_dog_patches[0]
    if left_dog horizontal_center < right_dog horizontal_center:
        return ""small""
    else:
        return ""large"""
338026,Are the white candles short or tall?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    white_candles_patches = image_patch.find(""white candle"")
    # Question assumes only one white candle patch
    if len(white_candles_patches) == 0:
        # If no white candle is found, query the image directly
        return image_patch_simple_query(""Are the white candles short or tall?"", ""white candle"")
    for white_candle_patch in white_candles_patches:
        is_short = (white_candle_patch_simple_query(""Is the white candle short?"", ""white candle"") == ""yes"")
        if is_short:
            return white_candle_patch_simple_qa(""Are the white candles short or tall?"", ""white candle"")
    # If no white candle is short, return ""short""
    return ""short"""
15346232,What kind of fruit is the girl holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fruit_patches = image_patch.find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch_simple_query(""What kind of fruit is the girl holding?"", "" fruit"")
    for fruit_patch in fruit_patches:
        return fruit_patch简单 query(""What kind of fruit is the girl holding?"", "" fruit"")"
13553098,"On which side of the photo is the yellow vehicle, the right or the left?"," # assumes only one yellow vehicle patch
    image_patch = Image Patch(image)
    yellow_patches = image_patch find(""yellow"")
    if len(yellow_patches) == 0:
        # If no yellow vehicle is found, query the image directly
        return image_patch_simple_query(""On which side of the photo is the yellow vehicle, the right or the left?"", ""left"")
    for yellow_patch in yellow_patches:
        if yellow_patch horizontal_center < image_patch horizontal_center:
            return ""left""
    return ""right"""
81030271,Is the gray car to the right or to the left of the cart?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    gray_car_patches = image_patch.find(""gray car"")
    cart_patches = image_patch.find(""cart"")
    # Question assumes only one gray car patch and one cart patch
    if len(gray_car_patches) == 0 or len(cart_patches) == 0:
        # If no gray car or cart is found, query the image directly
        return image_patch_simple_query(""Is the gray car to the right or to the left of the cart?"", ""no"")
    for gray_car_patch in gray_car_patches:
        for cart_patch in cart_patches:
            if gray_car_patch horizontal_center > cart_patch horizontal center:
                return ""right""
            elif gray_car_patch horizontal center < cart_patch horizontal center:
                return ""left""
    return ""no"""
1827581,What do you think is the cooking utensil that is to the right of the canister made of chrome?," # assumes only one utensil patch
    image_patch = Image Patch(image)
    utensil_patches = image_patch find(""utensil"")
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch_simple_query(""What do you think is the cooking utensil that is to the right of the canister made of chrome?"", ""canister"")
    for utensil_patch in utensil_patches:
        if utensil_patch horizontal_center > image_patch horizontal_center:
            return utensil_patch simple query(""What do you think is the cooking utensil that is to the right of the canister made of chrome?"", ""canister"")
    return ""no"""
8240699,What animal is in front of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What animal is in front of the bird?"", ""no"")"
10105081,Is the fence white or green?," # assumes only one fence patch
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Is the fence white or green?"", ""white"")
    if fence_patches[0].simple_query(""Is the fence white or green?"", ""white"") == ""yes"":
        return ""white""
    return ""green"""
13613689,Is there a train or a fence in the picture?,"    
    image_patch = Image Patch(image)
    train_patches = image_patch find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""Is there a train or a fence in the picture?"", ""train or fence"")
    if train_patches[0]. simple_query(""Is there a train or a fence in the picture?"", ""train or fence"")
    return ""train or fence""
    return ""train or fence"""
10662521,What is the bottle made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""What is the bottle made of?"", "" what"")
    for bottle_patch in bottle_patches:
        material = bottle_patch简单 query(""What is the bottle made of?"", "" what"")
        if material == "" what"":
            return bottle_patch简单 query(""What is the bottle made of?"", "" what"")
    # If no bottle is made of what, pick the first bottle
    return bottle_patches[0].simple query(""What is the bottle made of?"", "" what"")"
1152309,Which kind of fruit is on the plate?," # contains a relational verb (on the plate), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which kind of fruit is on the plate?"")"
16701575,What device is to the right of the cake?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cake_patches = image_patch.find(""cake"")
    # Question assumes only one cake patch
    if len(cake_patches) == 0:
        # If no cake is found, query the image directly
        return image_patch_simple_query(""What device is to the right of the cake?"", "" what device is to the right of the cake"")
    for cake_patch in cake_patches:
        device_patches = image_patch find(""device"")
        for device_patch in device_patches:
            if device_patch horizontal_center > cake_patch horizontal_center:
                return device_patch simple query(""What device is to the right of the cake?"", "" what device is to the right of the cake"")
    # If no device is to the right of the cake, return ""no""
    return ""no"""
6572516,What material is the ceiling?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ceiling_patches = image_patch find(""ceiling"")
    # Question assumes only one ceiling patch
    if len(ceiling_patches) == 0:
        # If no ceiling is found, query the image directly
        return image_patch_simple_query(""What material is the ceiling?"", "" ceiling"")
    for ceiling_patch in ceiling_patches:
        material_patches = image_patch find(""material"")
        for material_patch in material_patches:
            if material_patch horizontal_center < ceiling_patch horizontal_center:
                return "" concrete""
            elif material_patch horizontal_center > ceiling_patch horizontal_center:
                return "" glass""
    return "" concrete"""
11213633,Are there both magazines and umbrellas?," # assumes only one magazine patch and one umbrella patch
    image_patch = Image Patch(image)
    is_magazine = image_patch.exists(""magazine"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_magazine and is_umbrella)"
8606777,What is the color of the egg in the middle of the picture?," return image_patch简单 query(""What is the color of the egg in the middle of the picture?"", ""red"")"
14371534,Are the gold pans on the right part or on the left?," # gold pans are on the right side of the image
    image_patch = Image Patch(image)
    gold_pans_patches = image_patch.find(""gold pans"")
    # Question assumes only one gold pans patch
    if len(gold_pans_patches) == 0:
        # If no gold pans are found, query the image directly
        return image_patch_simple_query(""Are the gold pans on the right part or on the left?"", ""gold pans"")
    if gold_pans_patches[0].horizontal_center > image_patch horizontal_center:
        return ""right""
    else:
        return ""left"""
16538076,What does the man that is not tall wear?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What does the man that is not tall wear?"", ""not tall"")
    for man_patch in man_patches:
        if man_patch simple query(""Is the man tall?"") == ""no"":
            return man_patch简单 query(""What does the man that is not tall wear?"", ""not tall"")"
5483644,"On which side is the woman, the left or the right?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""On which side is the woman, the left or the right?"", ""left"")
    for woman_patch in woman_patches:
        side = ""left"" if woman_patch horizontal_center < image_patch horizontal_center else ""right""
        return ""left"" if side == ""left"" else ""right"""
181041779,What is the animal in this photograph?," return image_patch简单 query(""What is the animal in this photograph?"", "" what is the animal in this photograph"")"
1290926,Are there either any life vests or flags?," # assumes only one life vest and one flag
    image_patch = Image Patch(image)
    life_vests = image_patch find(""life vest"")
    flags = image_patch find(""flag"")
    if len(life_vests) == 0 and len(flags) == 0:
        return image_patch_simple_query(""Are there either any life vests or flags?"", ""no"")
    if len(life_vests) == 0:
        return image_patch_simple_query(""Are there either any life vests or flags?"", ""yes"")
    if len(flags) == 0:
        return image_patch_simple_query(""Are there either any life vests or flags?"", ""yes"")
    return image_patch_simple_query(""Are there either any life vests or flags?"", ""yes"")"
18273738,Do you see a cup?," # returns ""yes"" if there is a cup, ""no"" otherwise
    image_patch = Image Patch(image)
    return image_patch simple query(""Do you see a cup?"")"
4211922,Who is sitting on the table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is sitting on the table?"", ""no"")
    for person_patch in person_patches:
        is_sitting_on_table = (person_patch_simple_query(""Is the person sitting on the table?"") == ""yes"")
        if is_sitting_on_table:
            return person_patch_simple_query(""Who is sitting on the table?"", ""no"")
    # If no person is sitting on the table, return ""no""
    return ""no"""
6587526,What is the color of the girl to the left of the other girl?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""What is the color of the girl to the left of the other girl?"", ""left"")
    for girl_patch in girl_patches:
        color_patches = image_patch.find(""color"")
        for color_patch in color_patches:
            if color_patch horizontal_center < girl_patch horizontal_center:
                return color_patch简单 query(""What is the color of the girl to the left of the other girl?"", ""left"")
    # If no girl is found, query the image directly
    return image_patch简单 query(""What is the color of the girl to the left of the other girl?"", ""left"")"
6599090,What is the person to the right of the car holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person to the right of the car holding?"", ""right"")
    for person_patch in person_patches:
        is_holding = (person_patch_simple_query(""Is the person holding?"", ""right"") == ""yes"")
        if is_holding:
            return person_patch_simple_query(""What is the person holding?"", ""right"")
    # If no person is holding, pick the first person
    return person_patches[0].simple_query(""What is the person holding?"", ""right"")"
1174895,What is the vehicle in the parking lot?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""What is the vehicle in the parking lot?"", "" what is the vehicle in the parking lot"")
    for vehicle_patch in vehicle_patches:
        return vehicle_patch简单 query(""What is the vehicle in the parking lot?"")"
14755158,Who is the woman in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Who is the woman in front of')
    for woman_patch in woman_patches:
        is_in_front = (woman_patch_simple_query(""Is the woman in front of?"") == ""yes"")
        if is_in_front:
            return woman_patch_simple_query(""Who is the woman in front of?"") # crop would include the front so keep it in the query
    # If no woman is in front, pick the first woman
    return woman_patches[0].simple_query(""Who is the woman in front of?"")"
18349161,Where does the cow that is standing stand?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cow_patches = image_patch find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch_simple_query(""Where does the cow that is standing stand?"", ""where"")
    for cow_patch in cow_patches:
        where_patch = image_patch简单 query(""Where does the cow that is standing stand?"", ""where"")
        if where_patch == ""where"":
            return ""where""
    return ""where"""
7472884,On which side is the tap?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tap_patches = image_patch find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch_simple_query(""On which side is the tap?"", ""left"")
    for tap_patch in tap_patches:
        side = tap_patch simple query(""On which side is the tap?"", ""left"")
        if side == ""left"":
            return tap_patch simple query(""On which side is the tap?"", ""left"")
    # If no tap is on the left, it must be on the right
    return ""right"""
111051831,On which side of the image is the cabinet?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the cabinet?"", ""left"", ""right"")
    if cabinet_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
3590007,On which side of the image is the fork?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the fork?"", ""left"", ""right"")
    for fork_patch in fork_patches:
        is_left = (fork_patch horizontal_center < image_patch horizontal_center)
        if is_left:
            return ""left""
        else:
            return ""right"""
2409726,Do you see men to the right of the bag the person is carrying?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Do you see men to the right of the bag the person is carrying?"", ""no"")
    for person_patch in person_patches:
        bag_patches = image_patch find(""bag"")
        if len(bag_patches) == 0:
            return image_patch_simple query(""Do you see men to the right of the bag the person is carrying?"", ""no"")
        for bag_patch in bag_patches:
            if bag_patch horizontal center > person_patch horizontal center:
                return ""yes""
    return ""no"""
577862,Are the artwork and the computer desk made of the same material?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    artwork_patches = image_patch.find(""artwork"")
    # Question assumes only one artwork patch
    if len(artwork_patches) == 0:
        # If no artwork is found, query the image directly
        return image_patch_simple_query(""Are the artwork and the computer desk made of the same material?"", ""no"")
    for artwork_patch in artwork_patches:
        is_made_of_same_material = (artwork_patch simple query(""Is the artwork made of the same material as the computer desk?"") == ""yes"")
        if is_made_of_same_material:
            return artwork_patch简单 query(""Are the artwork and the computer desk made of the same material?"") # crop would include the computer desk so keep it in the query
    # If no artwork is made of the same material, return ""no""
    return ""no"""
14298125,Who is playing Wii?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Who is playing Wii?"")"
9382689,What's the floor made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    floor_patches = image_patch find(""floor"")
    # Question assumes only one floor patch
    if len(floor_patches) == 0:
        # If no floor is found, query the image directly
        return image_patch_simple_query(""What's the floor made of?"", "" what"")
    for floor_patch in floor_patches:
        is_made_of_cement = (floor_patch简单 query(""Is the floor made of cement?"") == ""yes"")
        if is_made_of_cement:
            return floor_patch简单 query(""What's the floor made of?"")"
12889614,Who is wearing the dress?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the dress?"", ""no"")
    for person_patch in person_patches:
        is_wearing_dress = (person_patch_simple_query(""Is the person wearing the dress?"") == ""yes"")
        if is_wearing_dress:
            return person_patch_simple_query(""Who is wearing the dress?"", ""yes"")
    # If no person is wearing a dress, pick the first person
    return person_patches[0].simple_query(""Who is wearing the dress?"", ""no"")"
15127108,Does the tea pot above the receipt look short and white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tea_pot_patches = image_patch.find(""tea pot"")
    # Question assumes only one tea pot patch
    if len(tea_pot_patches) == 0:
        # If no tea pot is found, query the image directly
        return image_patch_simple_query(""Does the tea pot above the receipt look short and white?"", ""no"")
    for tea_pot_patch in tea_pot_patches:
        is_short = (teas_pot_patch_simple_query(""Is the tea pot short?"", ""yes"") == ""yes"")
        is_white = (teas_pot_simple_query(""Is the tea pot white?"", ""yes"") == ""yes"")
        if is_short and is_white:
            return ""yes""
    return ""no"""
15632653,Which room is it?," # assumes only one room
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which room is it?"")"
485962,Which kind of clothing is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of clothing is black?"", ""black"")"
490992,Is the fence on the left side or on the right of the picture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Is the fence on the left side or on the right of the picture?"", ""left"")
    for fence_patch in fence_patches:
        if fence_patch horizontal_center < image_patch horizontal_center:
            return ""left""
        else:
            return ""right"""
17133284,Do the mountains look rocky?," # assumes only one mountain patch
    image_patch = Image Patch(image)
    mountain_patches = image_patch find(""mountain"")
    if len(mountain_patches) == 0:
        # If no mountain is found, query the image directly
        return image_patch_simple_query(""Do the mountains look rocky?"", ""rocky"")
    return ""yes"""
17573742,Is the woman to the right of the camera wearing a coat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman to the right of the camera wearing a coat?"", ""no"")
    for woman_patch in woman_patches:
        is_wearing_coat = (woman_patch_simple_query(""Is the woman wearing a coat?"", ""yes"") == ""yes"")
        if is_wearing_coat:
            return woman_patch_simple_query(""Is the woman to the right of the camera wearing a coat?"", ""yes"")
    # If no woman is wearing a coat, pick the first woman
    return woman_patches[0].simple_query(""Is the woman to the right of the camera wearing a coat?"", ""no"")"
3395780,Is the vehicle to the left of the parking meter covered in rain?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""Is the vehicle to the left of the parking meter covered in rain?"", ""no"")
    for vehicle_patch in vehicle_patches:
        is_covered_in_rain = (vehicle_patch简单 query(""Is the vehicle covered in rain?"") == ""yes"")
        if is_covered_in_rain:
            return vehicle_patch简单 query(""Is the vehicle covered in rain?"") # crop would include the rain so keep it in the query
    # If no vehicle is covered in rain, return ""no""
    return ""no"""
1542668,Is there a black laptop or desk?," # black laptop or desk
    image_patch = Image Patch(image)
    black_patches = image_patch.find(""black"")
    # Question assumes only one black patch
    if len(black_patches) == 0:
        # If no black is found, query the image directly
        return image_patch_simple_query(""Is there a black laptop or desk?"", ""black"")
    for black_patch in black_patches:
        if black_patch simple query(""Is there a black laptop or desk?"", ""black"")
        return ""black""
    return ""no"""
1655442,What type of food is to the right of the waffles that are to the right of the person?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What type of food is to the right of the waffles that are to the right of the person?"", ""right"")
    for person_patch in person_patches:
        waffles_patches = image_patch.find(""waffles"")
        if len(waffles_patches) == 0:
            return image_patch_simple_query(""What type of food is to the right of the waffles that are to the right of the person?"", ""right"")
        for waffles_patch in waffles_patches:
            if waffles_patch horizontal_center > person_patch horizontal_center:
                food_patches = image_patch find(""food"")
                if len(food_patches) == 0:
                    return image_patch_simple query(""What type of food is to the right of the waffles that are to the right of the person?"", ""right"")
                for food_patch in food_patches:
                    if food_patch horizontal center > waffles_patch horizontal center:
                        return ""right""
    return ""left"""
395290,How large is the bag?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bag_patches = image_patch find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""How large is the bag?"", ""area"")
    for bag_patch in bag_patches:
        area = bag_patch horizontal center * bag_patch vertical center
        return ""The bag is "" + str(area) + "" square units."""
16138893,Are there both motorcycles and cars in this scene?,"    
    image_patch = Image Patch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_motorcycle and is_car)"
1462176,Who is wearing shorts?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing shorts?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shorts = (person_patch_simple_query(""Is the person wearing shorts?"") == ""yes"")
        if is_wearing_shorts:
            return person_patch_simple_query(""Who is wearing shorts?"", ""yes"")
    # If no person is wearing shorts, pick the first person
    return person_patches[0].simple_query(""Who is wearing shorts?"", ""no"")"
171032184,What hangs from the windows?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What hangs from the windows?"")"
15962394,Are there both spoons and plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    spoons_patches = image_patch.find(""spoon"")
    plates_patches = image_patch.find(""plate"")
    # Question assumes only one spoon patch and one plate patch
    if len(spoons_patches) == 0 or len(plates_patches) == 0:
        # If no spoons or plates are found, query the image directly
        return image_patch_simple_query(""Are there both spoons and plates in the image?"", ""no"")
    return ""yes"""
16184773,What is in front of the giraffe that the tree is behind of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch_simple_query(""What is in front of the giraffe that the tree is behind of?"", ""giraffe"")
    for giraffe_patch in giraffe_patches:
        tree_patches = image_patch find(""tree"")
        for tree_patch in tree_patches:
            if tree_patch horizontal_center < giraffe_patch horizontal_center:
                return giraffe_patch简单 query(""What is in front of the giraffe that the tree is behind of?"", ""giraffe"")
    # If no giraffe is behind the tree, return ""no""
    return ""no"""
8197176,What color is the jacket that the man wears?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the jacket that the man wears?"", "" what color is the"
3440931,What are that pieces of furniture called?," # assumes only one piece of furniture
    image_patch = Image Patch(image)
    furniture_patches = image_patch find(""furniture"")
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What are that pieces of furniture called?"", ""furniture"")
    return furniture_patches[0].simple_query(""What are that pieces of furniture called?"", ""furniture"")"
337924,What is the fruit that is to the left of the chair?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fruit_patches = image_patch.find(""fruit"")
    # Question assumes only one fruit patch
    if len(fruit_patches) == 0:
        # If no fruit is found, query the image directly
        return image_patch_simple_query(""What is the fruit that is to the left of the chair?"", ""left"")
    for fruit_patch in fruit_patches:
        is_to_left_of_chair = (fruit_patch简单 query(""Is the fruit to the left of the chair?"") == ""yes"")
        if is_to_left_of_chair:
            return fruit_patch简单 query(""What is the fruit that is to the left of the chair?"", ""left"")
    # If no fruit is to the left of the chair, return the first fruit patch
    return fruit_patches[0].simple query(""What is the fruit that is to the left of the chair?"", ""left"")"
16208211,What do you think are the bowls on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bowls_patches = image_patch find(""bowls"")
    # Question assumes only one bowl patch
    if len(bowls_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch_simple_query(""What do you think are the bowls on?"", "" bowl"")
    for bowl_patch in bowls_patches:
        return bowl_patch简单 query(""What do you think are the bowls on?"", "" bowl"")"
18330260,Is the sky above the trees open and clear?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the sky above the trees open and clear?"")"
14119691,Does the squirrel to the right of the stuffed dog look white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    squirrel_patches = image_patch find(""squirrel"")
    # Question assumes only one squirrel patch
    if len(squirrel_patches) == 0:
        # If no squirrel is found, query the image directly
        return image_patch_simple_query(""Does the squirrel to the right of the stuffed dog look white?"", ""white"")
    for squirrel_patch in squirrel_patches:
        is_white = (squirrel_patch简单 query(""Is the squirrel white?"") == ""yes"")
        if is_white:
            return squirrel_patch简单 query(""Does the squirrel to the right of the stuffed dog look white?"", ""white"")
    # If no squirrel is white, return ""no""
    return ""no"""
18437694,Does the clock to the right of the statue have gold color and tiny size?," # clock is a clock object, so use simple_qa instead of verify_property
    image_patch = Image Patch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_qa(""Does the clock to the right of the statue have gold color and tiny size?"", ""clock"")
    clock_patch = clock_patches[0]
    color = clock_patch简单_qa(""What color is the clock?"", ""clock"")
    size = clock_patch simple_qa(""What size is the clock?"", ""clock"")
    return ""yes"" if color == ""gold"" and size == "" tiny"" else ""no"""
1252960,Where was the photo taken?," # assumes only one place
    image_patch = Image Patch(image)
    place_patches = image_patch find(""place"")
    if len(place_patches) == 0:
        # If no place is found, query the image directly
        return image_patch_simple_query(""Where was the photo taken?"", "" place"")
    return place_patches[0].simple_query(""Where was the photo taken?"", "" place"")"
17454895,Is there a frisbee on the grass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    frisbee_patches = image_patch find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch_simple_query(""Is there a frisbee on the grass?"", ""no"")
    for frisbee_patch in frisbee_patches:
        is_on_grass = (frisbee_patch简单 query(""Is the frisbee on the grass?"") == ""yes"")
        if is_on_grass:
            return frisbee_patch简单 query(""Is there a frisbee on the grass?"") # crop would include the frisbee so keep it in the query
    # If no frisbee is on the grass, return ""no""
    return ""no"""
13180513,Are there either cakes or containers in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    cakes_patches = image_patch.find(""cake"")
    containers_patches = image_patch.find(""container"")
    # Question assumes only one cake patch and one container patch
    if len(cakes_patches) == 0 or len(containers_patches) == 0:
        # If no cake or container is found, query the image directly
        return image_patch_simple_query(""Are there either cakes or containers in the photo?"", ""or"")
    return ""yes"""
479962,Are there black cars or motorcycles?," # black cars or motorcycles
    image_patch = Image Patch(image)
    black_car_patches = image_patch.find(""black car"")
    # Question assumes only one black car patch
    if len(black_car_patches) == 0:
        # If no black car is found, query the image directly
        return image_patch_simple_query(""Are there black cars or motorcycles?"", ""black car"")
    black_car_patch = black_car_patches[0]
    motorcycle_patches = image_patch find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        return ""no""
    for motorcycle_patch in motorcycle_patches:
        if black_car_patch horizontal_center < motorcycle_patch horizontal_center:
            return ""no""
    return ""yes"""
19927240,Is the blue car behind or in front of the vehicle to the left of the police officer?," # assumes only one blue car and one vehicle to the left of the police officer
    image_patch = Image Patch(image)
    blue_car_patches = image_patch.find(""blue car"")
    if len(blue_car_patches) == 0:
        # If no blue car is found, query the image directly
        return image_patch_simple_query(""Is the blue car behind or in front of the vehicle to the left of the police officer?"", ""blue car"")
    blue_car_patch = blue_car_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    if len(vehicle_patches) == 0:
        return image_patch_simple_query(""Is the blue car behind or in front of the vehicle to the left of the police officer?"", ""blue car"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch horizontal_center < blue_car_patch horizontal_center:
            return ""in front of""
        else:
            return ""behind""
    return ""no"""
5785831,What is in the glass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    glass_patches = image_patch find(""glass"")
    # Question assumes only one glass patch
    if len(glass_patches) == 0:
        # If no glass is found, query the image directly
        return image_patch_simple_query(""What is in the glass?"", ""no"")
    for glass_patch in glass_patches:
        is_water = glass_patch简单 query(""Is the glass containing water?"")
        if is_water:
            return glass_patch简单 query(""What is in the glass?"", ""water"")
    # If no glass is containing water, return ""no""
    return ""no"""
19246241,Are there any brown benches or buckets?," # assumes only one brown bench and one bucket
    image_patch = Image Patch(image)
    brown_bench_patches = image_patch.find(""brown bench"")
    if len(brown_bench_patches) == 0:
        # If no brown bench is found, query the image directly
        return image_patch_simple_query(""Are there any brown benches or buckets?"", ""brown bench"")
    brown_bench_patch = brown_bench_patches[0]
    buckets_patches = image_patch.find(""bucket"")
    if len(buckets_patches) == 0:
        return ""no""
    for bucket_patch in buckets_patches:
        if brown_bench_patch horizontal_center < bucket_patch horizontal_center:
            return ""yes""
    return ""no"""
3243803,"Where in the picture is the spoon, on the right or on the left?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch_simple_query(""Where in the picture is the spoon, on the right or on the left?"", ""left"")
    for spoon_patch in spoon_patches:
        is_on_left = (spoon_patch horizontal_center < image_patch horizontal_center)
        if is_on_left:
            return ""left""
    return ""right"""
6952486,Does the shirt look white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Does the shirt look white?"", ""white"")
    for shirt_patch in shirt_patches:
        is_white = (shirt_patch simple query(""Is the shirt white?"") == ""yes"")
        if is_white:
            return shirt_patch simple query(""Does the shirt look white?"", ""white"")
    # If no shirt is white, return ""no""
    return ""no"""
17401425,Is there a bag that is not brown?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch_simple_query(""Is there a bag that is not brown?"", ""no"")
    for bag_patch in bag_patches:
        is_brown = bag_patch简单 query(""Is the bag brown?"", ""yes"")
        if not is_brown:
            return bag_patch简单 query(""Is there a bag that is not brown?"", ""yes"")
    return ""no"""
481240,"Which kind of furniture is large, the shelf or the cupboard?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch_simple_query(""Which kind of furniture is large, the shelf or the cupboard?"", ""shelf"")
    for shelf_patch in shelf_patches:
        cupboard_patches = image_patch find(""cupboard"")
        for cupboard_patch in cupboard_patches:
            if cupboard_patch.horizontal_center > shelf_patch horizontal_center:
                return ""cupboard""
    return ""shelf"""
8531943,Are there any screens or bags?," # assumes only one object per patch
    image_patch = Image Patch(image)
    is_screen = image_patch.exists(""screen"")
    is_bag = image_patch.exists(""bag"")
    return ""yes"" if is_screen or is_bag else ""no"""
1969545,What is she wearing?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is she wearing?"", ""person"")
    person_patch = person_patches[0]
    return person_patch简单 query(""What is she wearing?"")"
91045271,"Which appliance is not white, the freezer or the ice maker?"," # returns ""no"" if both are white
    image_patch = Image Patch(image)
    white_patches = image_patch find(""white"")
    # Question assumes only one white patch
    if len(white_patches) == 0:
        # If no white is found, query the image directly
        return image_patch_simple_query(""Which appliance is not white, the freezer or the ice maker?"", ""freezer"")
    if white_patches[0].simple_query(""freezer"") == ""white"":
        return ""ice maker""
    return ""freezer"""
1051870,Are there chairs or tables that are not green?,"    
    image_patch = Image Patch(image)
    chairs_patches = image_patch find(""chairs"")
    tables_patches = image_patch find(""tables"")
    # Question assumes only one chair patch and one table patch
    if len(chairs_patches) == 0 or len(tables_patches) == 0:
        # If no chairs or tables are found, query the image directly
        return image_patch_simple_query(""Are there chairs or tables that are not green?"", ""not green"")
    chairs_patch = chairs_patches[0]
    tables_patch = tables_patches[0]
    if chairs_patch verify_property(""chairs"", ""not green"") and tables_patch verify_property(""tables"", ""not green""):
        return ""yes""
    return ""no"""
1366363,Does the taxi have a different color than the truck?," # assumes only one taxi and one truck
    image_patch = Image Patch(image)
    taxi_patches = image_patch.find(""taxi"")
    truck_patches = image_patch.find(""truck"")
    if len(taxi_patches) == 0 or len(truck_patches) == 0:
        # If no taxi or truck is found, query the image directly
        return image_patch_simple_query(""Does the taxi have a different color than the truck?"", "" different color than the truck"")
    for taxi_patch in taxi_patches:
        for truck_patch in truck_patches:
            if taxi_patch.cropped_image[0, 0] != truck_patch.cropped_image[0, 0]:
                return ""yes""
    return ""no"""
5460839,In which part of the image is the dog?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    dog_patches = image_patch find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch_simple_query(""In which part of the image is the dog?"", ""left"", ""right"")
    if dog_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
18899476,What type of vegetable is to the right of the rice that is on the plate?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    rice_patches = image_patch.find(""rice"")
    # Question assumes only one rice patch
    if len(rice_patches) == 0:
        # If no rice is found, query the image directly
        return image_patch_simple_query(""What type of vegetable is to the right of the rice that is on the plate?"", "" rice"")
    for rice_patch in rice_patches:
        vegetable_patches = image_patch.find(""vegetable"")
        for vegetable_patch in vegetable_patches:
            if vegetable_patch horizontal_center > rice_patch horizontal_center:
                return vegetable_patch简单 query(""What type of vegetable is to the right of the rice that is on the plate?"", "" rice"")
    return ""no"""
8606903,What food item is not wide?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What food item is not wide?"", ""not wide"")
    for food_patch in food_patches:
        is_not_wide = (food_patch_simple_query(""Is the food item not wide?"", ""not wide"") == ""yes"")
        if is_not_wide:
            return food_patch_simple_query(""What food item is not wide?"", ""not wide"") # crop would include the food item so keep it in the query
    # If no food is not wide, pick the first food
    return food_patches[0].simple query(""What food item is not wide?"", ""not wide"")"
18394861,Are there any folding chairs or skateboards?," # asks for the property of a relational verb (folding chairs or skateboards), so ask directly
    image_patch = Image Patch(image)
    return image_patch simple query(""Are there any folding chairs or skateboards?"")"
2327600,Is there an elephant near the pond?," return image_patch简单 query(""Is there an elephant near the pond?"", ""no"")"
1575941,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
9725865,What is the color of the floor that the desk is on top of?," # color of the floor that the desk is on top of
    image_patch = Image Patch(image)
    desk_patches = image_patch find(""desks"")
    # Question assumes only one desk patch
    if len(desk_patches) == 0:
        # If no desk is found, query the image directly
        return image_patch_simple_query(""What is the color of the floor that the desk is on top of?"", ""floor"")
    for desk_patch in desk_patches:
        floor_patches = image_patch find(""floor"")
        for floor_patch in floor_patches:
            if floor_patch horizontal_center < desk_patch horizontal_center:
                return floor_patch simple query(""What is the color of the floor that the desk is on top of?"", ""floor"")
    return ""red"""
16654241,Is the TV on the left or on the right?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""Is the TV on the left or on the right?"")"
18685233,Which kind of vehicle is to the left of the flags?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""Which kind of vehicle is to the left of the flags?"", "" vehicle"")
    for vehicle_patch in vehicle_patches:
        is_to_left_of_flags = (vehicle_patch简单 query(""Is the vehicle to the left of the flags?"") == ""yes"")
        if is_to_left_of_flags:
            return vehicle_patch简单 query(""Which kind of vehicle is to the left of the flags?"", "" vehicle"")
    # If no vehicle is to the left of the flags, return the first vehicle
    return vehicle_patches[0].simple query(""Which kind of vehicle is to the left of the flags?"", "" vehicle"")"
9796068,Are there both a fence and a sheep in the picture?,"    
    image_patch = Image Patch(image)
    fence_patches = image_patch find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Are there both a fence and a sheep in the picture?"", ""fence"")
    for fence_patch in fence_patches:
        sheep_patches = image_patch find(""sheep"")
        # Question assumes only one sheep patch
        if len(sheep_patches) == 0:
            return ""no""
        for sheep_patch in sheep_patches:
            if sheep_patch horizontal center > fence_patch horizontal center:
                return ""yes""
    return ""no"""
181002473,Do you see any blue blanket or towel?," # returns ""yes"" if either is found, ""no"" otherwise
    image_patch = Image Patch(image)
    blue_patches = image_patch find(""blue"")
    towel_patches = image_patch find(""towel"")
    # Question assumes only one blue patch and one towel patch
    if len(blue_patches) == 0 and len(towel_patches) == 0:
        return ""no""
    if len(blue_patches) > 0:
        return ""yes""
    if len(towel_patches) > 0:
        return ""yes""
    return ""no"""
1110330,Is the pillow to the left of the frog cream colored or green?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch_simple_query(""Is the pillow to the left of the frog cream colored or green?"", ""left"")
    for pillow_patch in pillow_patches:
        is_cream_colored = (pillow_patch_simple_query(""Is the pillow cream colored?"", ""green"") == ""yes"")
        if is_cream_colored:
            return pillow_patch_simple_query(""Is the pillow to the left of the frog cream colored or green?"", ""left"")
    # If no pillow is cream colored, return ""no""
    return ""no"""
511507,Is the antenna on the aircraft?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    antenna_patches = image_patch find(""antenna"")
    # Question assumes only one antenna patch
    if len(antenna_patches) == 0:
        # If no antenna is found, query the image directly
        return image_patch_simple_query(""Is the antenna on the aircraft?"", ""antenna on the plane"")
    for antenna_patch in antenna_patches:
        is_on_plane = (antenna_patch simple query(""Is the antenna on the plane?"") == ""yes"")
        if is_on_plane:
            return antenna_patch simple query(""Is the antenna on the plane?"") # crop would include the plane so keep it in the query
    # If no antenna is on the plane, return ""no""
    return ""no"""
10464417,"In which part is the tent, the top or the bottom?","    
    image_patch = Image Patch(image)
    tent_patches = image_patch find(""tent"")
    # Question assumes only one tent patch
    if len(tent_patches) == 0:
        # If no tent is found, query the image directly
        return image_patch_simple_query(""In which part is the tent, the top or the bottom?"", ""top"")
    if tent_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
10816730,Is the tree in front of the building?," return image_patch简单 query(""Is the tree in front of the building?"", "" front of"")"
18766115,Who is walking?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is walking?"", ""no"")
    for person_patch in person_patches:
        is_walking = (person_patch_simple_query(""Is the person walking?"") == ""yes"")
        if is_walking:
            return person_patch_simple_query(""Who is walking?"", ""no"")
    # If no person is walking, pick the first person
    return person_patches[0].simple query(""Who is walking?"", ""no"")"
10625851,Are there either any fruits or plates in the image?," # contains a relation (on top of), so ask directly
    image_patch = Image Patch(image)
    is_fruit = image_patch.exists(""fruit"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_fruit or is_plate)"
71018537,Is the person wearing a coat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the person wearing a coat?"", ""no"")
    for person_patch in person_patches:
        is_wearing_coat = (person_patch_simple_query(""Is the person wearing a coat?"") == ""yes"")
        if is_wearing_coat:
            return person_patch_simple_query(""Is the person wearing a coat?"", ""yes"")
    # If no person is wearing a coat, return ""no""
    return ""no"""
4194722,Is the man wearing a helmet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man wearing a helmet?"", ""no"")
    for man_patch in man_patches:
        is_wearing_helmet = (man_patch简单 query(""Is the man wearing a helmet?"") == ""yes"")
        if is_wearing_helmet:
            return man_patch简单 query(""Is the man wearing a helmet?"") # crop would include the helmet so keep it in the query
    # If no man is wearing a helmet, return ""no""
    return ""no"""
414248,"What animal are the women near the ocean riding, a pig or a horse?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal are the women near the ocean riding, a pig or a horse?"", ""yes"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal near the ocean riding a pig or a horse?"", ""yes"") == ""yes"":
            return animal_patch简单 query(""Is the animal near the ocean riding a pig or a horse?"", ""yes"")
    # If no animal is near the ocean riding, pick the first animal
    return animal_patches[0].simple query(""Is the animal near the ocean riding a pig or a horse?"", ""yes"")"
683094,Who is wearing the shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing the shirt?"", ""no"")
    for person_patch in person_patches:
        is_wearing_shirt = (person_patch_simple_query(""Is the person wearing a shirt?"") == ""yes"")
        if is_wearing_shirt:
            return person_patch_simple_query(""Who is wearing the shirt?"", ""yes"")
    # If no person is wearing a shirt, pick the first person
    return person_patches[0].simple_query(""Who is wearing the shirt?"", ""no"")"
12140603,What device is to the left of the headphones?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What device is to the left of the headphones?"", ""left"")
    for device_patch in device_patches:
        if device_patch horizontal_center < image_patch horizontal_center:
            return device_patch简单 query(""What device is to the left of the headphones?"", ""left"")
    # If no device is to the left of the headphones, return ""no""
    return ""no"""
5575209,The flowers are where?," # returns ""where"" as the answer
    image_patch = Image Patch(image)
    flowers_patches = image_patch find(""flowers"")
    # Question assumes only one flower patch
    if len(flowers_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch_simple_query(""The flowers are where?"", ""where"")
    return ""where"""
8773829,Which kind of furniture is made of wood?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""Which kind of furniture is made of wood?"", ""mathrm"")
    for furniture_patch in furniture_patches:
        is_made_of_wood = (furniture_patch简单 query(""Is the furniture made of wood?"") == ""yes"")
        if is_made_of_wood:
            return furniture_patch简单 query(""Which kind of furniture is made of wood?"", ""mathrm"")
    # If no furniture is made of wood, return ""no""
    return ""no"""
12636428,Which kind of animal is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of animal is black?"", ""black"")"
1020584,What animals is the car behind of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What animals is the car behind of?"")"
11879418,The man is standing on what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""The man is standing on what?"", "" what"")
    for man_patch in man_patches:
        is_standing_on_table = (man_patch简单 query(""Is the man standing on a table?"") == ""yes"")
        if is_standing_on_table:
            return man_patch简单 query(""The man is standing on what?"", "" what"")
    # If no man is standing on a table, pick the first man
    return man_patches[0].simple query(""The man is standing on what?"", "" what"")"
12334288,What device is to the left of the cabinet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What device is to the left of the cabinet?"", ""left"")
    for device_patch in device_patches:
        is_to_left = (device_patch horizontal_center < image_patch horizontal_center)
        if is_to_left:
            return device_patch简单 query(""What device is to the left of the cabinet?"", ""left"")
    # If no device is to the left, return ""no""
    return ""no"""
691610,Is the monitor to the left of a book?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only one monitor patch
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch_simple_query(""Is the monitor to the left of a book?"", ""left"")
    for monitor_patch in monitor_patches:
        book_patches = image_patch find(""book"")
        for book_patch in book_patches:
            if book_patch horizontal_center < monitor_patch horizontal_center:
                return ""no""
    return ""yes"""
7552714,Is the color of the jacket black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Is the color of the jacket black?"", ""black"")"
8492422,Is the man to the left of a boy?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man to the left of a boy?"", ""no"")
    for man_patch in man_patches:
        boy_patches = image_patch find(""boy"")
        for boy_patch in boy_patches:
            if boy_patch horizontal_center > man_patch horizontal_center:
                return ""yes""
    return ""no"""
13248061,What type of device is to the left of the keyboard in the bottom of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What type of device is to the left of the keyboard in the bottom of the image?"", ""left"")
    for device_patch in device_patches:
        if device_patch horizontal_center < image_patch horizontal_center:
            return device_patch simple query(""What type of device is to the left of the keyboard in the bottom of the image?"", ""left"")
    # If no device is to the left of the keyboard in the bottom of the image, return ""no""
    return ""no"""
18252454,What is common to the roof and the sky?," # returns ""blue"" because the sky is blue and the roof is blue
    image_patch = Image Patch(image)
    sky_patches = image_patch.find("" sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch_simple_query(""What is common to the roof and the sky?"", ""blue"")
    for sky_patch in sky_patches:
        roof_patches = image_patch find(""roof"")
        for roof_patch in roof_patches:
            if sky_patch vertical_center > roof_patch vertical_center:
                return ""blue""
    return ""blue"""
14443687,What do the cat and the book have in common?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch_simple_query(""What do the cat and the book have in common?"", "" what do the cat and the book have in common"")
    for cat_patch in cat_patches:
        book_patches = image_patch find(""book"")
        for book_patch in book_patches:
            if cat_patch vertical_center == book_patch vertical center:
                return cat_patch simple query(""What do the cat and the book have in common?"", "" what do the cat and the book have in common"")
    return ""no"""
14571335,Who is wearing trousers?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing trousers?"", ""no"")
    for person_patch in person_patches:
        is_wearing_trousers = (person_patch_simple_query(""Is the person wearing trousers?"") == ""yes"")
        if is_wearing_trousers:
            return person_patch_simple_query(""Who is wearing trousers?"", ""no"")
    # If no person is wearing trousers, pick the first person
    return person_patches[0].simple_query(""Who is wearing trousers?"", ""no"")"
474885,Who wears a cap?," # asks for the predicate of a relational verb (wearing a cap), so ask directly
    image_patch = Image Patch(image)
    return image_patch简单 query(""Who wears a cap?"")"
141013015,"What color is the toilet, brown or white?"," # assumes only one toilet patch
    image_patch = Image Patch(image)
    toilet_patches = image_patch find(""toilet"")
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch_simple_query(""What color is the toilet, brown or white?"", ""brown"")
    if toilet_patches[0].verify_property(""toilet"", ""brown""):
        return ""yes""
    return ""no"""
5515816,On which side of the image is the fence?," # returns ""left"" or ""right""
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""On which side of the image is the fence?"", ""left"", ""right"")
    if fence_patches[0].horizontal_center < image_patch horizontal_center:
        return ""left""
    else:
        return ""right"""
16774696,What is the surfer wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    surfer_patches = image_patch.find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        # If no surfer is found, query the image directly
        return image_patch_simple_query(""What is the surfer wearing?"", "" surfer"")
    surfer_patch = surfer_patches[0]
    surfer patch simple query(""What is the surfer wearing?"", surfer_patch)"
13701956,Is there any grass or sand that is not dry?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    grass_patches = image_patch.find(""grass"")
    sand_patches = image_patch.find(""sand"")
    # Question assumes only one grass patch and one sand patch
    if len(grass_patches) == 0 or len(sand_patches) == 0:
        # If no grass or sand is found, query the image directly
        return image_patch_simple_query(""Is there any grass or sand that is not dry?"", ""no"")
    for grass_patch in grass_patches:
        for sand_patch in sand_patches:
            if grass_patch(vertical_center) > sand_patch(vertical_center):
                return ""yes""
    return ""no"""
11606870,Is there a cow or a zebra in the picture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    cow_patches = image_patch.find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch_simple_query(""Is there a cow or a zebra in the picture?"", ""cow"")
    for cow_patch in cow_patches:
        is_cow = (cow_patch simple query(""Is the cow a cow?"") == ""yes"")
        if is_cow:
            return cow_patch简单 query(""Is there a cow or a zebra in the picture?"", ""cow"")
    # If no cow is found, check for zebra
    zebra_patches = image_patch find(""zebra"")
    if len(zebra_patches) == 0:
        return ""no""
    for zebra_patch in zebra_patches:
        is_zebra = (zebra_patch simple query(""Is the zebra a zebra?"") == ""yes"")
        if is_zebra:
            return zebra_patch simple query(""Is there a cow or a zebra in the picture?"", ""zebra"")
    return ""no"""
1589297,Does the fire hydrant look modern?," # assumes only one fire hydrant patch
    image_patch = Image Patch(image)
    fire_hydrant_patches = image_patch find(""fire hydrant"")
    if len(fire_hydrant_patches) == 0:
        # If no fire hydrant is found, query the image directly
        return image_patch_simple_query(""Does the fire hydrant look modern?"", ""no"")
    return ""yes"""
942308,Is the cup empty or full?," # assumes only one cup patch
    image_patch = Image Patch(image)
    cup_patches = image_patch find(""cup"")
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch_simple_query(""Is the cup empty or full?"", ""full"")
    for cup_patch in cup_patches:
        if cup_patch simple query(""Is the cup empty or full?"", ""full"") == ""full"":
            return ""full""
    return ""empty"""
15815976,Is the woman wearing a scarf?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman wearing a scarf?"", ""no"")
    for woman_patch in woman_patches:
        is_wearing_scarf = (woman_patch_simple_query(""Is the woman wearing a scarf?"", ""yes"")
        if is_wearing_scarf:
            return woman_patch_simple_query(""Is the woman wearing a scarf?"", ""yes"")
    # If no woman is wearing a scarf, pick the first woman
    return woman_patches[0].simple_query(""Is the woman wearing a scarf?"", ""no"")"
3193231,Do you see either parking meters or brooms in the picture?," # returns ""yes"" if either is found, ""no"" otherwise
    image_patch = Image Patch(image)
    parking meters_patches = image_patch.find(""parking meters"")
    broom_patches = image_patch.find(""broom"")
    if len(parking meters_patches) == 0 and len(broom_patches) == 0:
        return ""no""
    return ""yes"""
314218,Is the sign in front of the bridge small and white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch_simple_query(""Is the sign in front of the bridge small and white?"", ""no"")
    for sign_patch in sign_patches:
        is_small = sign_patch_simple_query(""Is the sign small?"", ""yes"")
        is_white = sign_patch_simple_query(""Is the sign white?"", ""yes"")
        if is_small and is_white:
            return sign_patch_simple_query(""Is the sign in front of the bridge small and white?"", ""yes"")
    return ""no"""
18130465,Does the umbrella that is not dry look orange and open?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch_simple_query(""Does the umbrella that is not dry look orange and open?"", ""umbrella"")
    for umbrella_patch in umbrella_patches:
        is_dry = (umbrella_patch_simple_query(""Is the umbrella dry?"", ""umbrella"") == ""no"")
        if is_dry:
            is_orange = (umbrella_patch_simple_query(""Is the umbrella orange?"", ""umbrella"") == ""yes"")
            is_open = (umbrella_patch_simple query(""Is the umbrella open?"", ""umbrella"") == ""yes"")
            if is_orange and is_open:
                return ""yes""
    return ""no"""
7920817,What's in the paper?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        # If no paper is found, query the image directly
        return image_patch_simple_query(""What's in the paper?"", "" what"")
    for paper_patch in paper_patches:
        return paper_patch简单 query(""What's in the paper?"", "" what"")"
18167292,What is on the bun in the top?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bun_patches = image_patch.find(""bun"")
    # Question assumes only one bun patch
    if len(bun_patches) == 0:
        # If no bun is found, query the image directly
        return image_patch_simple_query(""What is on the bun in the top?"", ""bun"")
    for bun_patch in bun_patches:
        return bun_patch简单 query(""What is on the bun in the top?"")"
16929928,What is the fence made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""What is the fence made of?"", "" what"")
    for fence_patch in fence_patches:
        return fence_patch简单 query(""What is the fence made of?"", "" what"")"
14113312,Is the woman to the left or to the right of the lady?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""Is the woman to the left or to the right of the lady?"", ""left"")
    for woman_patch in woman_patches:
        is_to_left = (woman_patch simple query(""Is the woman to the left or to the right of the lady?"", ""left"") == ""left"")
        if is_to_left:
            return woman_patch简单 query(""Is the woman to the left or to the right of the lady?"", ""left"") # crop would include the left side so keep it in the query
    # If no woman is to the left, pick the first woman
    return woman_patches[0].simple query(""Is the woman to the left or to the right of the lady?"", ""left"")"
17993299,Is the horse to the left of a car?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    horse_patches = image_patch find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch_simple_query(""Is the horse to the left of a car?"", ""no"")
    for horse_patch in horse_patches:
        car_patches = image_patch find(""car"")
        for car_patch in car_patches:
            if car_patch horizontal_center < horse_patch horizontal_center:
                return ""yes""
    return ""no"""
8717022,Is the small animal to the left of the vehicle that looks silver?," # assumes only one small animal and one silver vehicle
    image_patch = Image Patch(image)
    small_animal_patches = image_patch.find(""small animal"")
    silver_vehicle_patches = image_patch.find(""silver vehicle"")
    if len(small_animal_patches) == 0 or len(silver_vehicle_patches) == 0:
        # If no small animal or silver vehicle is found, query the image directly
        return image_patch_simple_query(""Is the small animal to the left of the vehicle that looks silver?"", ""no"")
    for small_animal_patch in small_animal_patches:
        for silver_vehicle_patch in silver_vehicle_patches:
            if silver_vehicle_patch horizontal_center > small_animal_patch horizontal center:
                return ""yes""
    return ""no"""
2998707,Which color is the chair that is on the right?," # color of chair on right
    image_patch = Image Patch(image)
    chair_patches = image_patch find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""Which color is the chair that is on the right?"", ""red"")
    for chair_patch in chair_patches:
        if chair_patch horizontal_center > image_patch horizontal_center:
            return chair_patch simple query(""Which color is the chair that is on the right?"", ""red"")"
171017786,Do you see any cups to the left of the monitor?,"    
    image_patch = Image Patch(image)
    cups_patches = image_patch find(""cup"")
    # Question assumes only one cup patch
    if len(cups_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch_simple_query(""Do you see any cups to the left of the monitor?"", ""left"")
    for cup_patch in cups_patches:
        if cup_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
2220068,Is the girl to the right or to the left of the glasses the man is wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""Is the girl to the right or to the left of the glasses the man is wearing?"", ""right"")
    for girl_patch in girl_patches:
        glasses_patches = image_patch find(""glasses"")
        # Question assumes only one glasses patch
        if len(glasses_patches) == 0:
            return ""no""
        for glasses_patch in glasses_patches:
            if girl_patch horizontal_center > glasses_patch horizontal center:
                return ""right""
    return ""left"""
1941568,What animal is in the water?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What animal is in the water?"", ""no"")
    for animal_patch in animal_patches:
        if animal_patch simple query(""Is the animal in the water?"") == ""yes"":
            return animal_patch简单 query(""What animal is in the water?"", ""no"")
    # If no animal is in the water, return ""no""
    return ""no"""
17577787,Does the man's hair look short and white?," # returns ""yes"" if the man's hair is short and white, ""no"" otherwise
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Does the man's hair look short and white?"", ""no"")
    man_patch = man_patches[0]
    hair_patches = image_patch find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        return ""no""
    for hair_patch in hair_patches:
        if hair_patch horizontal center < man_patch horizontal center and hair_patch vertical center < man_patch vertical center:
            return ""yes""
    return ""no"""
6711650,Are there chairs to the left of the bottle the toilet is to the right of?," # assumes only one bottle patch
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch_simple_query(""Are there chairs to the left of the bottle the toilet is to the right of?"", ""no"")
    for bottle_patch in bottle_patches:
        toilet_patches = image_patch.find(""toilet"")
        for toilet_patch in toilet_patches:
            if toilet_patch horizontal_center > bottle_patch horizontal_center:
                return ""yes""
    return ""no"""
9825336,Which kind of furniture is the mat lying on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""Which kind of furniture is the mat lying on?"", ""furniture"")
    for furniture_patch in furniture_patches:
        is_mat = (furniture_patch简单 query(""Is the mat on the furniture?"") == ""yes"")
        if is_mat:
            return furniture_patch简单 query(""Which kind of furniture is the mat lying on?"", ""furniture"")
    # If no furniture is on the mat, return ""no""
    return ""no"""
11222427,Do you see fences or elephants?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    fences_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fences_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch_simple_query(""Do you see fences or elephants?"", ""fence"")
    for fence_patch in fences_patches:
        is_elephant = (fence_patch简单 query(""Is there an elephant in front of the fence?"") == ""yes"")
        if is_elephant:
            return fence_patch简单 query(""Is there an elephant in front of the fence?"") # crop would include the elephant so keep it in the query
    # If no fence is wearing a shirt, pick the first fence
    return fence_patches[0].simple query(""Is there an elephant in front of the fence?"")"
1233009,"What kind of furniture is not white, the entertainment center or the bed?"," # returns ""no"" if no furniture is found
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is not white, the entertainment center or the bed?"", ""white"")
    if furniture_patches[0].color == ""white"":
        return ""no""
    return ""entertainment center or the bed"""
1152020,Do you see either any plate or tomato that are red?," # red is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Do you see either any plate or tomato that are red?"", ""red"")"
8961520,Who is surfing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    surfer_patches = image_patch find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        # If no surfer is found, query the image directly
        return image_patch_simple_query(""Who is surfing?"", "" surfer"")
    surfer_patch = surfer_patches[0]
    surfer_patches = image_patch find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        return surfer_patch_simple query(""Who is surfing?"", "" surfer"")
    surfer_patch = surfer_patches[0]
    surfer_patches = image_patch find("" surfer"")
    surfer_patches = surfer_patches[0]
    surfer_patches = surfer_patches[0]
    surfer_patches sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur sur"
18106780,Which room is it?," # assumes only one room
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which room is it?"")"
1892692,What color do you think the bowl that is to the right of the person is?," # color of bowl to the right of the person
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What color do you think the bowl that is to the right of the person is?"", ""blue"")
    for person_patch in person_patches:
        bowl_patches = image_patch.find(""bowl"")
        for bowl_patch in bowl_patches:
            if bowl_patch horizontal_center > person_patch horizontal_center:
                return bowl_patch simple query(""What color do you think the bowl that is to the right of the person is?"", ""blue"")
    return ""blue"""
6952082,What color is the hair?," return image_patch简单 query(""What color is the hair?"", ""blue"")"
3768067,What color is the pot the statue is to the right of?," # assumes only one statue patch
    image_patch = Image Patch(image)
    statue_patches = image_patch find(""statue"")
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch_simple_query(""What color is the pot the statue is to the right of?"", ""red"")
    for statue_patch in statue_patches:
        if statue_patch horizontal_center < image_patch horizontal_center:
            return ""red""
    return ""blue"""
17866761,Is the clear glass on the shelf of the table?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    clear_glass_patches = image_patch.find(""clear glass"")
    # Question assumes only one clear glass patch
    if len(clear_glass_patches) == 0:
        # If no clear glass is found, query the image directly
        return image_patch_simple_query(""Is the clear glass on the shelf of the table?"", ""no"")
    for clear_glass_patch in clear_glass_patches:
        is_on_shelf = (clear_glass_patch简单 query(""Is the clear glass on the shelf of the table?"") == ""yes"")
        if is_on_shelf:
            return clear_glass_patch简单 query(""Is the clear glass on the shelf of the table?"") # crop would include the clear glass so keep it in the query
    # If no clear glass is on the shelf, return ""no""
    return ""no"""
798020,Does the skirt look black or yellow?," # assumes only one skirt patch
    image_patch = Image Patch(image)
    skirt_patches = image_patch find(""skirt"")
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch_simple_query(""Does the skirt look black or yellow?"", ""black"")
    for skirt_patch in skirt_patches:
        color = skirt_patch简单 query(""Does the skirt look black or yellow?"", ""black"")
        if color == ""black"":
            return ""black""
    return ""yellow"""
828981,How old is he?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""How old is he?"", ""age"")
    return person_patches[0].simple_query(""How old is he?"", ""age"")"
7236463,Of what color is the book?," # color is a property
    image_patch = Image Patch(image)
    book_patches = image_patch find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch_simple_query(""Of what color is the book?"", ""color"")
    return book_patches[0].verify_property(""book"", ""color"")"
6376684,What color is the car to the left of the train car?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""What color is the car to the left of the train car?"", ""left"")
    train_patch = train_patches[0]
    car_patches = image_patch find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        return image_patch_simple query(""What color is the car to the left of the train car?"", ""left"")
    for car_patch in car_patches:
        if car_patch horizontal center < train_patch horizontal center:
            return car_patch simple query(""What color is the car to the left of the train car?"", ""left"")
    return ""red"""
786798,Is this a photo of a beach?," # assumes only one beach patch
    image_patch = Image Patch(image)
    beach_patches = image_patch.find(""beach"")
    if len(beach_patches) == 0:
        # If no beach is found, query the image directly
        return image_patch_simple_query(""Is this a photo of a beach?"", ""no"")
    return ""yes"""
19836753,What vehicles are to the left of the fence?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vehicles_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicles_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch_simple_query(""What vehicles are to the left of the fence?"", ""left"")
    for vehicle_patch in vehicles_patches:
        if vehicle_patch horizontal_center < image_patch horizontal_center:
            return vehicle_patch简单 query(""What vehicles are to the left of the fence?"", ""left"")
    # If no vehicle is to the left of the fence, return ""no""
    return ""no"""
15284615,Who is playing?," # asks for the subject of a verb (playing), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Who is playing?"")"
16785170,Is the man that is walking holding a remote control?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man that is walking holding a remote control?"", ""no"")
    for man_patch in man_patches:
        is_holding remote control = (man_patch_simple_query(""Is the man holding a remote control?"", ""yes"")
        if is_holding remote control:
            return man_patch_simple_query(""Is the man holding a remote control?"", ""yes"")
    # If no man is holding a remote control, pick the first man
    return man_patches[0].simple query(""Is the man holding a remote control?"", ""no"")"
17746396,What's the boy wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    boy_patches = image_patch find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch_simple_query(""What's the boy wearing?"", "" what"")
    for boy_patch in boy_patches:
        boy_patch简单 query(""What's the boy wearing?"", "" what"")
    return boy_patch简单 query(""What's the boy wearing?"", "" what"")"
3625764,Is there a mug to the right of the bottle which is to the right of the tap?," # assumes only one bottle and one tap
    image_patch = Image Patch(image)
    bottle_patches = image_patch.find(""bottle"")
    tap_patches = image_patch.find(""tap"")
    if len(bottle_patches) == 0 or len(tap_patches) == 0:
        # If no bottle or tap is found, query the image directly
        return image_patch_simple_query(""Is there a mug to the right of the bottle which is to the right of the tap?"", ""no"")
    for bottle_patch in bottle_patches:
        for tap_patch in tap_patches:
            if tap_patch horizontal_center > bottle_patch horizontal_center:
                return ""yes""
    return ""no"""
13826837,What color is the door?," return image_patch简单 query(""What color is the door?"")"
19249907,Are there any horses in the field?," return image_patch simple query(""Are there any horses in the field?"", ""horses"")"
2964690,What is in front of the mountains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""What is in front of the mountains?"")"
13396373,Are there vehicles to the right of the truck?," # assumes only one truck patch
    image_patch = Image Patch(image)
    truck_patches = image_patch find(""truck"")
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch_simple_query(""Are there vehicles to the right of the truck?"", ""no"")
    for truck_patch in truck_patches:
        vehicle_patches = image_patch find(""vehicle"")
        for vehicle_patch in vehicle_patches:
            if vehicle_patch horizontal_center > truck_patch horizontal_center:
                return ""yes""
    return ""no"""
493755,Does the scarf made of wool seem to be long and blue?," # returns ""yes"" if the scarf is long and blue
    image_patch = Image Patch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch simple query(""Does the scarf made of wool seem to be long and blue?"", prefix=""no"")
    for scarf_patch in scarf_patches:
        is_long = (scarf_patch horizontal_center > image_patch horizontal_center)
        is_blue = (scarf_patch simple query(""Is the scarf blue?"", prefix=""no"") == ""yes"")
        if is_long and is_blue:
            return ""yes""
    return ""no"""
1189986,Is the man behind the elephant holding a surfboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man behind the elephant holding a surfboard?"", ""no"")
    for man_patch in man_patches:
        is_behind_elephant = (man_patch simple query(""Is the man behind the elephant?"") == ""yes"")
        if is_behind_elephant:
            is_holding_surfboard = (man_patch simple query(""Is the man holding a surfboard?"") == ""yes"")
            if is_holding_surfboard:
                return ""yes""
    return ""no"""
8792466,Which color is the closed window?," # color of the window is the color of the box around the window
    image_patch = Image Patch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch_simple_query(""Which color is the closed window?"", ""red"")
    for window_patch in window_patches:
        return window_patch simple query(""Which color is the closed window?"", ""red"")"
10188423,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
8965417,What kind of vegetable is to the right of the girl?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetable_patches = image_patch find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""What kind of vegetable is to the right of the girl?"", ""no"")
    for vegetable_patch in vegetable_patches:
        is_to_the_right = (vegetable_patch simple query(""Is the vegetable to the right of the girl?"") == ""yes"")
        if is_to_the_right:
            return vegetable_patch简单 query(""What kind of vegetable is to the right of the girl?"")"
4929965,Is there a black racket or clock in the picture?," # black racket or clock
    image_patch = Image Patch(image)
    black_racket_patches = image_patch.find(""black racket"")
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one black racket patch and one clock patch
    if len(black_racket_patches) == 0 or len(clock_patches) == 0:
        # If no black racket or clock is found, query the image directly
        return image_patch_simple_query(""Is there a black racket or clock in the picture?"", ""black racket or clock"")
    black_racket_patch = black_racket_patches[0]
    clock_patch = clock_patches[0]
    if black_racket_patch horizontal_center < clock_patch horizontal_center:
        return ""black racket""
    else:
        return ""clock"""
4782038,What kind of animal is white?," # returns ""white"" if white is found, otherwise returns ""not white""
    image_patch = Image Patch(image)
    white_patches = image_patch find(""white"")
    # Question assumes only one white patch
    if len(white_patches) == 0:
        return image_patch_simple_query(""What kind of animal is white?"", ""not white"")
    return ""white"""
14658201,Is the sheep that looks white and brown made of plastic?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sheep_patches = image_patch.find(""sheep"")
    # Question assumes only one sheep patch
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch_simple_query(""Is the sheep that looks white and brown made of plastic?"", ""no"")
    for sheep_patch in sheep_patches:
        is_white = sheep_patch简单 query(""Is the sheep white?"", ""yes"")
        is_brown = sheep_patch简单 query(""Is the sheep brown?"", ""yes"")
        if is_white and is_brown:
            is_plastic = sheep_patch简单 query(""Is the sheep made of plastic?"", ""yes"")
            if is_plastic:
                return ""yes""
    return ""no"""
1441865,Do you see any boxes on the table under the grill?,"    
    image_patch = Image Patch(image)
    boxes_patches = image_patch find(""box"")
    # Question assumes only one box patch
    if len(boxes_patches) == 0:
        # If no box is found, query the image directly
        return image_patch_simple_query(""Do you see any boxes on the table under the grill?"", ""no"")
    if boxes_patches[0].vertical_center < image_patch_vertical_center:
        return ""yes""
    return ""no"""
1424926,What is the tag on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the tag on?"")"
5543521,What is the piece of furniture that is to the right of the person who is working on a laptop?," # assumes only one piece of furniture and one person working on a laptop
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"", ""person"")
    person_patch = person_patches[0]
    piece_of_furniture_patches = image_patch find(""piece of furniture"")
    if len(piece_of_furniture_patches) == 0:
        return image_patch_simple query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"", ""piece of furniture"")
    for piece_of_furniture_patch in piece_of_furniture_patches:
        if piece_of_furniture_patch horizontal center > person_patch horizontal center:
            return piece_of_furniture_patch simple query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"", ""piece of furniture"")
    return ""no"""
3635257,Is there any freezer in this photo?," return image_patch simple query(""Is there any freezer in this photo?"", ""freezer"")"
8821026,Are there either any bags or chairs?," # assumes only one bag and one chair
    image_patch = Image Patch(image)
    bags_patches = image_patch find(""bag"")
    chairs_patches = image_patch find(""chair"")
    if len(bags_patches) == 0 and len(chairs_patches) == 0:
        return image_patch_simple_query(""Are there either any bags or chairs?"", ""no"")
    if len(bags_patches) > 0 and len(chairs_patches) > 0:
        return image_patch_simple_qa(""Are there either any bags or chairs?"", ""yes"")
    if len(bags_patches) > 0:
        return image_patch_simple_qa(""Are there either any bags or chairs?"", ""yes"")
    if len(chairs_patches) > 0:
        return image_patch_simple_qa(""Are there either any bags or chairs?"", ""yes"")"
13669952,In what vehicle is the bus driver?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch_simple_query(""In what vehicle is the bus driver?"", ""bus"")
    for bus_patch in bus_patches:
        return bus_patch简单 query(""In what vehicle is the bus driver?"", ""bus"")"
17204662,What is that man in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is that man in front of?"", ""no"")
    for man_patch in man_patches:
        is_in_front = man_patch_simple_query(""Is that man in front of?"", ""yes"")
        if is_in_front:
            return man_patch_simple_query(""What is that man in front of?"", ""no"")
    # If no man is in front, return ""no""
    return ""no"""
380866,Are there any girls or radios?," # assumes only one girl patch and one radio patch
    image_patch = Image Patch(image)
    is_girl = image_patch.exists(""girl"")
    is_radio = image_patch.exists(""radio"")
    if is_girl and is_radio:
        return ""yes""
    return ""no"""
13775896,The girl is sitting on what?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch_simple_query(""The girl is sitting on what?"", ""sitting on"")
    for girl_patch in girl_patches:
        is_sitting_on = (girl_patch_simple_query(""Is the girl sitting on what?"", ""sitting on"") == ""yes"")
        if is_sitting_on:
            return girl_patch_simple_query(""The girl is sitting on what?"", ""sitting on"")
    # If no girl is sitting on anything, pick the first girl
    return girl_patches[0].simple_query(""The girl is sitting on what?"", ""sitting on"")"
18798369,Is the white lamp to the left or to the right of the pillow that is in the center?," # assumes only one lamp and one pillow
    image_patch = Image Patch(image)
    lamp_patches = image_patch.find(""lamp"")
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""Is the white lamp to the left or to the right of the pillow that is in the center?"", ""left or right"")
    lamp_patch = lamp_patches[0]
    pillow_patches = image_patch find(""pillow"")
    if len(pillow_patches) == 0:
        return ""no""
    for pillow_patch in pillow_patches:
        if pillow_patch horizontal center > lamp_patch horizontal center:
            return ""right""
        else:
            return ""left"""
16545552,What color do you think is the vehicle the girl is washing?," # color of the vehicle the girl is washing
    image_patch = Image Patch(image)
    return image_patch简单 query(""What color do you think is the vehicle the girl is washing?"")"
16719872,Are there motorcycles to the left of the man who is wearing a hat?," # assumes only one man patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are there motorcycles to the left of the man who is wearing a hat?"", ""no"")
    for man_patch in man_patches:
        if man_patch_simple_query(""Is the man wearing a hat?"", ""yes""):
            motorcycles_patches = image_patch find(""motorcycle"")
            for motorcycle_patch in motorcycles_patches:
                if motorcycle_patch horizontal_center < man_patch horizontal_center:
                    return ""yes""
    return ""no"""
2954090,Is the garbage can to the right or to the left of the person that is pushing the stroller?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the garbage can to the right or to the left of the person that is pushing the stroller?"", ""right"")
    for person_patch in person_patches:
        stroller_patches = image_patch find(""stroller"")
        for stroller_patch in stroller_patches:
            if stroller_patch horizontal_center < person_patch horizontal_center:
                return ""left""
    return ""right"""
13711589,What do the truck and the street sign have in common?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    truck_patches = image_patch find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch_simple_query(""What do the truck and the street sign have in common?"", "" truck"")
    for truck_patch in truck_patches:
        street_sign_patches = image_patch find(""street sign"")
        for street_sign_patch in street_sign_patches:
            if truck_patch vertical_center == street_sign_patch vertical_center:
                return ""color""
    return ""color"""
10227573,Who is wearing a shirt?," return image_patch简单 query(""Who is wearing a shirt?"", image)"
161071156,What animal is the man leading?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What animal is the man leading?"", ""man"")
    for man_patch in man_patches:
        return man_patch简单 query(""What animal is the man leading?"", ""man"")"
161036781,What is the piece of furniture to the right of the curtain the dresser is in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch_simple_query(""What is the piece of furniture to the right of the curtain the dresser is in front of?"", ""furniture"")
    for curtain_patch in curtain_patches:
        dresser_patches = image_patch find(""dresser"")
        for dresser_patch in dresser_patches:
            if dresser_patch horizontal center > curtain_patch horizontal center:
                return dresser_patch简单 query(""What is the piece of furniture to the right of the curtain the dresser is in front of?"", ""furniture"")
    # If no furniture is found, return ""no""
    return ""no"""
7190226,Does the puddle look large?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    puddle_patches = image_patch.find("" puddle"")
    # Question assumes only one puddle patch
    if len(puddle_patches) == 0:
        # If no puddle is found, query the image directly
        return image_patch_simple_query(""Does the puddle look large?"", ""large"")
    for puddle_patch in puddle_patches:
        is_large = puddle_patch simple query(""Does the puddle look large?"", ""large"")
        if is_large:
            return puddle_patch简单 query(""Does the puddle look large?"", ""large"") # crop would include the puddle so keep it in the query
    # If no puddle is large, pick the first puddle
    return puddle_patches[0].simple query(""Does the puddle look large?"", ""large"")"
11675152,Who throws the frisbee?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who throws the frisbee?"", ""no"")
    for person_patch in person_patches:
        is_throwing_frisbee = (person_patch_simple_query(""Is the person throwing the frisbee?"") == ""yes"")
        if is_throwing_frisbee:
            return person_patch_simple_query(""Who throws the frisbee?"", ""no"")
    # If no person is throwing the frisbee, pick the first person
    return person_patches[0].simple query(""Who throws the frisbee?"", ""no"")"
8723676,Which kind of animal is the water on?," # water is a natural element so no relational verb needed
    image_patch = Image Patch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch_simple_query(""Which kind of animal is the water on?"", ""natural element"")
    if water_patches[0].simple_query("" natural element):
        return ""water""
    return ""natural element"""
61046657,Do you think that traffic light is tall?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    traffic_light_patches = image_patch.find(""traffic light"")
    # Question assumes only one traffic light patch
    if len(traffic_light_patches) == 0:
        # If no traffic light is found, query the image directly
        return image_patch_simple_query(""Do you think that traffic light is tall?"", "" traffic light"")
    for traffic_light_patch in traffic_light_patches:
        is_tall = traffic_light_patch simple query(""Is the traffic light tall?"", "" traffic light"")
        if is_tall:
            return traffic_light_patch简单 query(""Is the traffic light tall?"", "" traffic light"") # crop would include the traffic light so keep it in the query
    # If no traffic light is tall, return ""no""
    return ""no"""
9581034,On which side is the wine glass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    wine_glass_patches = image_patch find(""wine glass"")
    # Question assumes only one wine glass patch
    if len(wine_glass_patches) == 0:
        # If no wine glass is found, query the image directly
        return image_patch_simple_query(""On which side is the wine glass?"", ""left"")
    for wine_glass_patch in wine_glass_patches:
        is_left = (wine_glass_patch简单 query(""Is the wine glass on the left?"") == ""yes"")
        if is_left:
            return ""left""
    return ""right"""
181002374,Is the napkin to the right or to the left of the pizza that is shown in the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pizza_patches = image_patch.find(""pizza"")
    # Question assumes only one pizza patch
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch_simple_query(""Is the napkin to the right or to the left of the pizza that is shown in the image?"", ""right"")
    for pizza_patch in pizza_patches:
        napkin_patches = image_patch find(""napkin"")
        for napkin_patch in napkin_patches:
            if napkin_patch horizontal_center > pizza_patch horizontal_center:
                return ""right""
    return ""left"""
18535266,Is the face mask made of the same material as the mask?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    face_mask_patches = image_patch.find(""face mask"")
    # Question assumes only one face mask patch
    if len(face_mask_patches) == 0:
        # If no face mask is found, query the image directly
        return image_patch_simple_query(""Is the face mask made of the same material as the mask?"", ""no"")
    for face_mask_patch in face_mask_patches:
        is_same_material = face_mask_patch simple query(""Is the face mask made of the same material as the mask?"", ""no"")
        if is_same_material:
            return face_mask_patch简单 query(""Is the face mask made of the same material as the mask?"", ""no"")
    # If no face mask is made of the same material, return ""no""
    return ""no"""
11254215,What is the tan item of furniture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    tan_patches = image_patch.find(""tan"")
    # Question assumes only one tan patch
    if len(tan_patches) == 0:
        # If no tan is found, query the image directly
        return image_patch_simple_query(""What is the tan item of furniture?"", ""tan"")
    for tan_patch in tan_patches:
        return tan_patch简单 query(""What is the tan item of furniture?"", ""tan"")"
1852010,How is the device to the right of the device on the desk called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""How is the device to the right of the device on the desk called?"", "" device on the desk"")
    for device_patch in device_patches:
        is_to_the_right = (device_patch简单 query(""Is the device to the right of the device on the desk?"") == ""yes"")
        if is_to_the_right:
            return device_patch简单 query(""How is the device to the right of the device on the desk called?"", "" device on the desk"")
    # If no device is to the right, return ""no""
    return ""no"""
1587534,Is the device on the floor black and large?," # black and large is a property
    image_patch = Image Patch(image)
    black_patches = image_patch find(""black"")
    large_patches = image_patch find(""large"")
    # Question assumes only one black patch and one large patch
    if len(black_patches) == 0 or len(large_patches) == 0:
        # If no black or large patch is found, query the image directly
        return image_patch_simple_query(""Is the device on the floor black and large?"", ""black and large"")
    black_patch = black_patches[0]
    large_patch = large_patches[0]
    if black_patch vertical_center < image_patch_vertical_center and large_patch vertical_center < image_patch_vertical_center:
        return ""yes""
    return ""no"""
8470757,Are there any surfboards?," # returns ""yes"" if there is a surfboard in the image, ""no"" otherwise
    image_patch = Image Patch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    # Question assumes only one surfboard patch
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch_simple_query(""Are there any surfboards?"", ""yes"")
    return ""yes"""
11273949,Is the shirt white?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""Is the shirt white?"", ""no"")
    for shirt_patch in shirt_patches:
        is_white = (shirt_patch简单 query(""Is the shirt white?"") == ""yes"")
        if is_white:
            return shirt_patch简单 query(""Is the shirt white?"") # crop would include the shirt so keep it in the query
    # If no shirt is white, return ""no""
    return ""no"""
7475238,What's the airplane in front of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    airplane_patches = image_patch find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch_simple_query(""What's the airplane in front of?"", ""airplane"")
    for airplane_patch in airplane_patches:
        return airplane_patch简单 query(""What's the airplane in front of?"")"
16685900,Where does the horse to the right of the hose run?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    horse_patches = image_patch find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch_simple_query(""Where does the horse to the right of the hose run?"", ""right"")
    for horse_patch in horse_patches:
        hose_patches = image_patch find(""hose"")
        for hose_patch in hose_patches:
            if hose_patch horizontal_center < horse_patch horizontal_center:
                return ""right""
    return ""left"""
3932624,Are there either any gray chairs or laptops?," # assumes only one chair and one laptop
    image_patch = Image Patch(image)
    is_chair = image_patch.exists(""chair"")
    is_laptop = image_patch.exists(""laptop"")
    return ""yes"" if is_chair or is_laptop else ""no"""
10584099,Is the water brown or blue?," # assumes only one water patch
    image_patch = Image Patch(image)
    water_patches = image_patch find(""water"")
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch_simple_query(""Is the water brown or blue?"", ""blue"")
    return water_patches[0].best_text_match [""brown"", ""blue""]"
9256263,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch简单 query(""Which kind of furniture is brown?"", ""furniture"")"
18719769,Is the man wearing glasses?," return image_patch简单 query(""Is the man wearing glasses?"")"
18342439,What animal is white?," # returns ""yes"" if white else ""no""
    image_patch = Image Patch(image)
    white_patches = image_patch find(""white"")
    # Question assumes only one white patch
    if len(white_patches) == 0:
        # If no white is found, query the image directly
        return image_patch_simple_query(""What animal is white?"", ""white"")
    return ""yes"""
8665725,Who is wearing a coat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is wearing a coat?"", ""person"")
    for person_patch in person_patches:
        is_wearing_coat = (person_patch_simple_query(""Is the person wearing a coat?"", ""person"") == ""yes"")
        if is_wearing_coat:
            return person_patch_simple_query(""Who is wearing a coat?"", ""person"")
    # If no person is wearing a coat, pick the first person
    return person_patches[0].simple query(""Who is wearing a coat?"", ""person"")"
5440407,What vehicle isn't black?," # returns ""no"" if no non-black vehicle found
    image_patch = Image Patch(image)
    non_black_patches = image_patch find(""non-black"")
    # Question assumes only one non-black patch
    if len(non_black_patches) == 0:
        return image_patch_simple_query(""What vehicle isn't black?"", ""no"")
    if non_black_patches[0].color == ""black"":
        return ""no""
    return ""yes"""
4104707,On which side of the picture is the oven?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch_simple_query(""On which side of the picture is the oven?"", ""left"")
    for oven_patch in oven_patches:
        return oven_patch简单 query(""On which side of the picture is the oven?"", ""left"")"
3126763,What is common to the logo and the letter?," # assumes only one letter patch
    image_patch = Image Patch(image)
    letter_patches = image_patch find(""letter"")
    if len(letter_patches) == 0:
        # If no letter is found, query the image directly
        return image_patch_simple_query(""What is common to the logo and the letter?"", "" letter"")
    for letter_patch in letter_patches:
        common_patches = image_patch find("" logo"")
        if len(common_patches) > 0:
            return ""log""
    return "" letter"""
18640925,What animal is in the water the man is walking through?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What animal is in the water the man is walking through?"", ""man"")
    for man_patch in man_patches:
        water_patches = image_patch find(""water"")
        for water_patch in water_patches:
            if water_patch horizontal_center < man_patch horizontal_center:
                return water_patch简单 query(""What animal is in the water the man is walking through?"", ""man"")
    # If no water is found, return ""no""
    return ""no"""
125488,What is the man wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""What is the man wearing?"", "" what"")
    for man_patch in man_patches:
        what patch = man_patch简单 query(""What is the man wearing?"", "" what"")
        if what patch == "" what"":
            return man_patch简单 query(""What is the man wearing?"", "" what"")
    # If no man is wearing what, pick the first man
    return man_patches[0].simple query(""What is the man wearing?"", "" what"")"
5925435,What is the sidewalk made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    sidewalk_patches = image_patch find(""sidewalk"")
    # Question assumes only one sidewalk patch
    if len(sidewalk_patches) == 0:
        # If no sidewalk is found, query the image directly
        return image_patch_simple_query(""What is the sidewalk made of?"", ""are made of"")
    for sidewalk_patch in sidewalk_patches:
        return sidewalk_patch简单 query(""What is the sidewalk made of?"", ""are made of"")"
17563472,What is the pattern of the coat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    coat_patches = image_patch find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch_simple_query(""What is the pattern of the coat?"", "" pattern"")
    for coat_patch in coat_patches:
        pattern_patches = image_patch find(""pattern"")
        for pattern_patch in pattern_patches:
            if pattern_patch horizontal_center > coat_patch horizontal_center:
                return "" pattern""
    # If no pattern is found, return "" pattern""
    return "" pattern"""
4819547,What kind of furniture is white?," # returns ""white"" if white furniture is found, otherwise ""no""
    image_patch = Image Patch(image)
    white_patches = image_patch.find(""white"")
    # Question assumes only one white patch
    if len(white_patches) == 0:
        return ""no""
    return ""white"""
14263174,What color do you think the chair that is to the right of the other chair is?," # returns ""red""
    image_patch = Image Patch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chairs_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""What color do you think the chair that is to the right of the other chair is?"", ""red"")
    chair_patch = chair_patches[0]
    other_chairs_patches = image_patch find(""chair"")
    # Question assumes only one other chair patch
    if len(other_chairs_patches) == 0:
        return ""red""
    for other_chairs_patch in other_chairs_patches:
        if other_chairs_patch horizontal_center > chair_patch horizontal_center:
            return ""red""
    return ""red"""
7515210,Is the man that is to the left of the person riding the green train in front of the fence?," # assumes only one man patch and one train patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    train_patches = image_patch.find(""train"")
    if len(man_patches) == 0 or len(train_patches) == 0:
        # If no man or train is found, query the image directly
        return image_patch_simple_query(""Is the man that is to the left of the person riding the green train in front of the fence?"", ""no"")
    man_patch = man_patches[0]
    train_patch = train_patches[0]
    if train_patch horizontal_center > man_patch horizontal_center:
        return ""yes""
    return ""no"""
9239936,Do the cows near the trees have white color?," # assumes only one cow patch
    image_patch = Image Patch(image)
    cow_patches = image_patch find(""cow"")
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch_simple_query(""Do the cows near the trees have white color?"", ""white"")
    for cow_patch in cow_patches:
        if cow_patch verify_property(""cow"", ""white""):
            return ""yes""
    return ""no"""
1885178,"In which part of the image is the remote control, the bottom or the top?"," # returns ""top"" because the remote control is on top of the table
    image_patch = Image Patch(image)
    remote_control_patches = image_patch.find("" remote control"")
    # Question assumes only one remote control patch
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch simple query(""In which part of the image is the remote control, the bottom or the top?"",)
    if remote_control_patches[0].vertical_center < image_patch_vertical_center:
        return ""bottom""
    else:
        return ""top"""
12341631,Which color is the bag in the top part?," # color of the bag in the top part
    image_patch = Image Patch(image)
    top_patches = image_patch find(""top"")
    # Question assumes only one top patch
    if len(top_patches) == 0:
        # If no top is found, query the image directly
        return image_patch_simple_query(""Which color is the bag in the top part?"", ""top"")
    for top_patch in top_patches:
        color_patches = image_patch find(""color"")
        for color_patch in color_patches:
            if color_patch vertical_center < top_patch vertical_center:
                return color_patch simple query(""Which color is the bag in the top part?"", ""top"")
    return ""red"""
5532909,"What is the weather like, cloudless or maybe rainy?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    weather_patches = image_patch.find(""weather"")
    # Question assumes only one weather patch
    if len(weather_patches) == 0:
        # If no weather is found, query the image directly
        return image_patch_simple_query(""What is the weather like, cloudless or maybe rainy?"", ""cloudless"")
    for weather_patch in weather_patches:
        if weather_patch simple query(""Is the weather cloudless?"") == ""yes"":
            return ""cloudless""
    return ""rainy"""
2618222,What is connected to the open laptop?," # connected to the open laptop
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is connected to the open laptop?"")"
3252220,Of which color is the shirt the man wears?," # color of the shirt the man wears
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Of which color is the shirt the man wears?"", ""red"")
    man_patch = man_patches[0]
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return ""red""
    for shirt_patch in shirt_patches:
        if shirt_patch horizontal center > man_patch horizontal center:
            return ""red""
    return ""red"""
8947801,What is in the vase?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is in the vase?"")"
10841562,Is the color of the pants the same as the shorts?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    pants_patches = image_patch find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants is found, query the image directly
        return image_patch_simple_query(""Is the color of the pants the same as the shorts?"", ""no"")
    for pants_patch in pants_patches:
        shorts_patches = image_patch find(""shorts"")
        for shorts_patch in shorts_patches:
            if pants_patch.horizontal_center == shorts_patch horizontal_center:
                return ""yes""
    return ""no"""
15511838,What kind of furniture is to the left of the bucket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is to the left of the bucket?"", ""left"")
    for furniture_patch in furniture_patches:
        is_to_left_of_bucket = (furniture_patch简单 query(""Is the furniture to the left of the bucket?"") == ""yes"")
        if is_to_left_of_bucket:
            return furniture_patch简单 query(""What kind of furniture is to the left of the bucket?"", ""left"")
    # If no furniture is to the left of the bucket, return ""no""
    return ""no"""
14495306,Is there any racket to the right of the person that the woman is to the left of?," # assumes only one person and one woman
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    woman_patches = image_patch.find(""woman"")
    if len(person_patches) == 0 or len(woman_patches) == 0:
        # If no person or woman is found, query the image directly
        return image_patch_simple_query(""Is there any racket to the right of the person that the woman is to the left of?"", ""no"")
    for person_patch in person_patches:
        for woman_patch in woman_patches:
            if woman_patch horizontal_center < person_patch horizontal_center:
                racket_patches = image_patch find(""racket"")
                if len(racket_patches) > 0:
                    return ""yes""
    return ""no"""
14841932,Do the tiles have square shape and black color?," # assumes only one tile patch
    image_patch = Image Patch(image)
    tile_patches = image_patch.find(""tile"")
    if len(tile_patches) == 0:
        # If no tile is found, query the image directly
        return image_patch_simple_query(""Do the tiles have square shape and black color?"", ""black"")
    for tile_patch in tile_patches:
        if tile_patch.shape == ""square"" and tile_patch.color == ""black"":
            return ""yes""
    return ""no"""
41029381,What is the vehicle that is the same color as the shirt called?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shirt_patches = image_patch find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch_simple_query(""What is the vehicle that is the same color as the shirt called?"", ""shirt"")
    for shirt_patch in shirt_patches:
        color = shirt_patch简单 query(""What is the color of the shirt?"", ""shirt"")
        if color == ""red"":
            return image_patch简单 query(""What is the vehicle that is the same color as the shirt called?"", ""red"")
    # If no red shirt is found, return ""red""
    return ""red"""
161027428,Are there both windows and doors in the image?,"    
    image_patch = Image Patch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
16478246,Does the pillow to the right of the man have green color and large size?," # green color and large size
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Does the pillow to the right of the man have green color and large size?"", ""green large"")
    man_patch = man_patches[0]
    pillow_patches = image_patch find(""pillow"")
    # Question assumes one pillow patch
    if len(pillow_patches) == 0:
        return ""no""
    for pillow_patch in pillow_patches:
        if pillow_patch horizontal center > man_patch horizontal center and pillow_patch color == ""green"" and pillow_patch width > man_patch width:
            return ""yes""
    return ""no"""
9450308,Is the happy person wearing a hat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is the happy person wearing a hat?"", ""happy person"")
    for person_patch in person_patches:
        is_wearing_hat = (person_patch_simple_query(""Is the person wearing a hat?"", ""person"") == ""yes"")
        if is_wearing_hat:
            return person_patch_simple_query(""Is the person wearing a hat?"", ""person"")
    # If no person is wearing a hat, pick the first person
    return person_patches[0].simple_query(""Is the person wearing a hat?"", ""person"")"
11850389,What place is this?," # returns ""the city of New York""
    image_patch = Image Patch(image)
    return image_patch简单 query(""What place is this?"")"
17250452,What kind of appliance is on the right of the drawer?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch_simple_query(""What kind of appliance is on the right of the drawer?"", ""right"")
    for appliance_patch in appliance_patches:
        is_on_right = appliance_patch simple query(""Is the appliance on the right of the drawer?"", ""right"")
        if is_on_right:
            return appliance_patch简单 query(""What kind of appliance is on the right of the drawer?"", ""right"")"
14857961,Is the lady to the right of a woman?," # assumes only one lady patch and one woman patch
    image_patch = Image Patch(image)
    lady_patches = image_patch.find(""lady"")
    woman_patches = image_patch.find(""woman"")
    if len(lady_patches) == 0 or len(woman_patches) == 0:
        # If no lady or woman is found, query the image directly
        return image_patch_simple_query(""Is the lady to the right of a woman?"", ""no"")
    for lady_patch in lady_patches:
        for woman_patch in woman_patches:
            if woman_patch horizontal_center > lady_patch horizontal center:
                return ""yes""
    return ""no"""
132385,What cooking utensils are to the left of the pan on the right side?," # assumes only one pan on the right side
    image_patch = Image Patch(image)
    pan_patches = image_patch.find(""pan"")
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch_simple_query(""What cooking utensils are to the left of the pan on the right side?"", ""left"")
    for pan_patch in pan_patches:
        if pan_patch horizontal_center > image_patch horizontal_center:
            utensils_patches = image_patch find(""utensils"")
            if len(utensils_patches) > 0:
                return utensils_patches[0].simple query(""What cooking utensils are to the left of the pan on the right side?"", ""left"")
    return ""no"""
9745131,Which color is the truck that is to the left of the lamps?," # color of the truck to the left of the lamps
    image_patch = Image Patch(image)
    lamps_patches = image_patch.find(""lamps"")
    # Question assumes only one lamp patch
    if len(lamps_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""Which color is the truck that is to the left of the lamps?"", ""red"")
    for lamp_patch in lamps_patches:
        truck_patches = image_patch find(""truck"")
        for truck_patch in truck_patches:
            if truck_patch horizontal_center < lamp_patch horizontal_center:
                return ""red""
    return ""red"""
5546009,What type of bird is the same color as the motorcycle in the bottom of the image?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    motorcycle_patches = image_patch find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch_simple_query(""What type of bird is the same color as the motorcycle in the bottom of the image?"", ""motorcycle"")
    for motorcycle_patch in motorcycle_patches:
        bird_patches = image_patch find(""bird"")
        for bird_patch in bird_patches:
            if bird_patch horizontal_center < motorcycle_patch horizontal_center:
                return bird_patch simple query(""What type of bird is the same color as the motorcycle in the bottom of the image?"", ""motorcycle"")
    # If no bird is found, return ""no""
    return ""no"""
867818,Is the man on the skateboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Is the man on the skateboard?"", ""no"")
    for man_patch in man_patches:
        is_on_skateboard = (man_patch简单 query(""Is the man on the skateboard?"") == ""yes"")
        if is_on_skateboard:
            return man_patch简单 query(""Is the man on the skateboard?"") # crop would include the skateboard so keep it in the query
    # If no man is on the skateboard, return ""no""
    return ""no"""
13896221,What is on the table?," # returns ""the book""
    image_patch = Image Patch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch_simple_query(""What is on the table?"", ""the book"")
    for table_patch in table_patches:
        return table_patch简单 query(""What is on the table?"", ""the book"")"
1964517,What is the food that is above the white paper?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch_simple_query(""What is the food that is above the white paper?"", ""white paper"")
    for food_patch in food_patches:
        is_above_white_paper = (food_patch简单 query(""Is the food above the white paper?"") == ""yes"")
        if is_above_white_paper:
            return food_patch简单 query(""What is the food that is above the white paper?"", ""white paper"") # crop would include the white paper so keep it in the query
    # If no food is above the white paper, return ""white paper""
    return ""white paper"""
15705231,Is the shelf to the left of a cabinet?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch_simple_query(""Is the shelf to the left of a cabinet?"", ""left"")
    for shelf_patch in shelf_patches:
        cabinet_patches = image_patch find(""cabinet"")
        for cabinet_patch in cabinet_patches:
            if shelf_patch horizontal_center < cabinet_patch horizontal_center:
                return ""yes""
    return ""no"""
15693846,Is the motorcycle parked on the grass?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    motorcycle_patches = image_patch find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch_simple_query(""Is the motorcycle parked on the grass?"", ""no"")
    for motorcycle_patch in motorcycle_patches:
        is_parked_on_grass = (motorcycle_patch简单 query(""Is the motorcycle parked on the grass?"") == ""yes"")
        if is_parked_on_grass:
            return ""yes""
    # If no motorcycle is parked on the grass, return ""no""
    return ""no"""
13872995,Who is jumping?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Who is jumping?"", ""no"")
    for person_patch in person_patches:
        is_jumping = (person_patch_simple_query(""Is the person jumping?"") == ""yes"")
        if is_jumping:
            return person_patch_simple_query(""Who is jumping?"", ""no"")
    # If no person is jumping, pick the first person
    return person_patches[0].simple query(""Who is jumping?"", ""no"")"
4502830,Is this a dog or a cat?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    is_dog = image_patch.exists(""dog"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_dog or is_cat)"
12584623,What is the person with the bag wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person with the bag wearing?"", "" what"")
    for person_patch in person_patches:
        is_wearing_bag = (person_patch简单 query(""Is the person wearing a bag?"") == ""yes"")
        if is_wearing_bag:
            return person_patch简单 query(""What is the person wearing?"")"
7202064,"What is this, a bus or a truck?"," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch_simple_query(""What is this, a bus or a truck?"", ""bus"")
    for bus_patch in bus_patches:
        truck_patches = image_patch find(""truck"")
        for truck_patch in truck_patches:
            if bus_patch horizontal_center > truck_patch horizontal_center:
                return ""truck""
    # If no bus is found, return bus
    return bus_patches[0].simple_query(""What is this, a bus or a truck?"", ""bus"")"
16542208,Do you see either any beds or blankets there?," # returns ""yes"" if either beds or blankets are found
    image_patch = Image Patch(image)
    beds_patches = image_patch.find(""beds"")
    blankets_patches = image_patch.find(""blankets"")
    if len(beds_patches) > 0 or len(blankets_patches) > 0:
        return ""yes""
    return ""no"""
11700224,Do you see both lettuce and salad?," # assumes only one lettuce patch and one salad patch
    image_patch = Image Patch(image)
    lettuce_patches = image_patch.find(""lettuce"")
    if len(lettuce_patches) == 0:
        # If no lettuce is found, query the image directly
        return image_patch_simple_query(""Do you see both lettuce and salad?"", ""lettuce"")
    for lettuce_patch in lettuce_patches:
        salad_patches = image_patch find(""salad"")
        if len(salad_patches) == 0:
            return ""no""
        for salad_patch in salad_patches:
            if lettuce_patch vertical center < salad_patch vertical center:
                return ""yes""
    return ""no"""
1067136,Is the ball on the tree?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ball_patches = image_patch find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch_simple_query(""Is the ball on the tree?"", ""no"")
    for ball_patch in ball_patches:
        is_on_tree = ball_patch simple query(""Is the ball on the tree?"", ""yes"")
        if is_on_tree:
            return ball_patch simple query(""Is the ball on the tree?"", ""yes"")
    # If no ball is on the tree, return ""no""
    return ""no"""
364079,What kind of furniture is to the right of the blanket?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch_simple_query(""What kind of furniture is to the right of the blanket?"", ""furniture"")
    for furniture_patch in furniture_patches:
        is_to_right_of_blanket = (furniture_patch horizontal_center > blanket_patch horizontal_center)
        if is_to_right_of_blanket:
            return furniture_patch简单 query(""What kind of furniture is to the right of the blanket?"", ""furniture"")
    # If no furniture is to the right of the blanket, return ""no""
    return ""no"""
2533062,How large is the ground the zebra is standing on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    ground_patches = image_patch find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch_simple_query(""How large is the ground the zebra is standing on?"", ""area"")
    for ground_patch in ground_patches:
        area = ground_patch horizontal center * ground_patch vertical center
        return ""The ground is "" + str(area) + "" square units."""
19683710,The clock is inside what?," # clock is inside the clock tower
    image_patch = Image Patch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_query(""The clock is inside what?"")"
15674863,Is the racket in the top part?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    racket_patches = image_patch find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch_simple_query(""Is the racket in the top part?"", ""top"")
    for racket_patch in racket_patches:
        is_in_top_part = (racket_patch简单 query(""Is the racket in the top part?"") == ""yes"")
        if is_in_top_part:
            return racket_patch简单 query(""Is the racket in the top part?"") # crop would include the top part so keep it in the query
    # If no racket is in the top part, return ""no""
    return ""no"""
4860320,Do you see any skateboards to the right of the person that is wearing a shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Do you see any skateboards to the right of the person that is wearing a shirt?"", ""no"")
    for person_patch in person_patches:
        skateboards_patches = image_patch.find(""skateboard"")
        for skateboard_patch in skateboards_patches:
            if skateboard_patch horizontal_center > person_patch horizontal_center:
                return ""yes""
    return ""no"""
2292637,What is the color of the shirt that the passenger is wearing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    passengers_patches = image_patch.find(""passenger"")
    # Question assumes only one passenger patch
    if len(passengers_patches) == 0:
        # If no passenger is found, query the image directly
        return image_patch_simple_query(""What is the color of the shirt that the passenger is wearing?"", "" passengers_patches[0].simple_query(""What is the color of the shirt that the passenger is wearing?"", ""red"")
    for passenger_patch in passengers_patches:
        color = passenger_patch简单 query(""What is the color of the shirt that the passenger is wearing?"", ""red"")
        if color == ""red"":
            return color # crop would include the shirt so keep it in the query
    # If no passenger is wearing a red shirt, pick the first passenger
    return passengers_patches[0].simple query(""What is the color of the shirt that the passenger is wearing?"", ""red"")"
9175259,What is the chair made of?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    chair_patches = image_patch find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch_simple_query(""What is the chair made of?"", "" made of"")
    for chair_patch in chair_patches:
        is_made_of_plastic = (chair_patch简单 query(""Is the chair made of plastic?"") == ""yes"")
        if is_made_of_plastic:
            return chair_patch简单 query(""What is the chair made of?"") # crop would include the plastic so keep it in the query
    # If no chair is made of plastic, pick the first chair
    return chair_patches[0].simple query(""What is the chair made of?"")"
8714882,How big is the carrot in the top of the picture?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    top_patches = image_patch.find(""top"")
    # Question assumes only one top patch
    if len(top_patches) == 0:
        # If no top is found, query the image directly
        return image_patch_simple_query(""How big is the carrot in the top of the picture?"", ""top"")
    for top_patch in top_patches:
        return top_patch simple query(""How big is the carrot in the top of the picture?"")"
1638685,What is the name of the vegetable that is on the yellow food?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch_simple_query(""What is the name of the vegetable that is on the yellow food?"", ""yellow food"")
    for vegetable_patch in vegetable_patches:
        is_on_yellow_food = (vegetable_patch_simple_query(""Is the vegetable on the yellow food?"") == ""yes"")
        if is_on_yellow_food:
            return vegetable_patch简单 query(""What is the name of the vegetable that is on the yellow food?"", ""yellow food"")
    # If no vegetable is on the yellow food, return ""no""
    return ""no"""
5828256,Is the clock on a tower?," # clock on a tower is a relational property
    image_patch = Image Patch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch_simple_query(""Is the clock on a tower?"", ""on"")
    for clock_patch in clock_patches:
        if clock_patch vertical_center < image_patch_vertical_center:
            return ""no""
    return ""yes"""
18937563,What kind of animal is orange?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""What kind of animal is orange?"", ""ometric"")
    for animal_patch in animal_patches:
        if animal_patch简单_qa("" what kind of animal is orange?"", ""ometric"") == ""yes"":
            return animal_patch简单_qa("" what kind of animal is orange?"", ""ometric"")
    # If no animal is orange, pick the first animal
    return animal_patches[0].simple_qa("" what kind of animal is orange?"", ""ometric"")"
14360113,What is the smiling woman holding?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    woman_patches = image_patch find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch_simple_query(""What is the smiling woman holding?"", "" what"")
    for woman_patch in woman_patches:
        is_holding = (woman_patch_simple_query(""Is the woman holding?"", "" what"") == ""yes"")
        if is_holding:
            return woman_patch_simple_query(""What is the woman holding?"", "" what"") # crop would include the what so keep it in the query
    # If no woman is holding, pick the first woman
    return woman_patches[0].simple_query(""What is the woman holding?"", "" what"")"
593188,Is the hair short?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    hair_patches = image_patch find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch_simple_query(""Is the hair short?"", ""no"")
    for hair_patch in hair_patches:
        is_short = hair_patch simple query(""Is the hair short?"")"
10824666,Are there ladies to the left of the man that is wearing shorts?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are there ladies to the left of the man that is wearing shorts?"", ""no"")
    for man_patch in man_patches:
        if man_patch_simple_query(""Is the man wearing shorts?"", ""yes""):
            ladies_patches = image_patch finds(""ladies"")
            # Question assumes only one lady patch
            if len(ladies_patches) == 0:
                return ""no""
            for lady_patch in ladies_patches:
                if lady_patch horizontal center < man_patch horizontal center:
                    return ""yes""
    return ""no"""
1890604,Is the gray car to the left or to the right of the garbage bin?," # assumes only one gray car and one garbage bin
    image_patch = Image Patch(image)
    gray_car_patches = image_patch.find(""gray car"")
    garbage_bin_patches = image_patch.find(""garbage bin"")
    if len(gray_car_patches) == 0 or len(garbage_bin_patches) == 0:
        # If no gray car or garbage bin is found, query the image directly
        return image_patch_simple_query(""Is the gray car to the left or to the right of the garbage bin?"", ""left or right"")
    for gray_car_patch in gray_car_patches:
        for garbage_bin_patch in garbage_bin_patches:
            if gray_car_patch horizontal_center < garbage bin_patch horizontal center:
                return ""left""
            else:
                return ""right"""
7574939,Is there any table or plate that is white?,"    
    image_patch = Image Patch(image)
    table_patches = image_patch find(""table"")
    plate_patches = image_patch find(""plate"")
    # Question assumes only one table patch and one plate patch
    if len(table_patches) == 0 or len(plate_patches) == 0:
        # If no table or plate is found, query the image directly
        return image_patch_simple_query(""Is there any table or plate that is white?"", ""white"")
    table_patch = table_patches[0]
    plate_patch = plate_patches[0]
    if table_patch vertical_center < image_patch_vertical_center and plate_patch vertical center < image_patch_vertical_center:
        return ""no""
    else:
        return ""yes"""
12252101,Is it outdoors?," # assumes only one image patch
    image_patch = Image Patch(image)
    return image_patch simple query(""Is it outdoors?"")"
6943442,What cooking utensil is on the oven?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    utensil_patches = image_patch.find(""utensil"")
    # Question assumes only one utensil patch
    if lenuteil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch_simple_query(""What cooking utensil is on the oven?"", ""utensil"")
    for utensil_patch in utensil_patches:
        return utensil_patch简单 query(""What cooking utensil is on the oven?"")"
2977077,The propeller that looks red is what pattern?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    propeller_patches = image_patch.find(""propeller"")
    # Question assumes only one propeller patch
    if len(propeller_patches) == 0:
        # If no propeller is found, query the image directly
        return image_patch_simple_query(""The propeller that looks red is what pattern?"", ""red"")
    for propeller_patch in propeller_patches:
        pattern_patches = image_patch.find(""pattern"")
        for pattern_patch in pattern_patches:
            if pattern_patch horizontal_center > propeller_patch horizontal_center:
                return pattern_patch simple query(""The propeller that looks red is what pattern?"", ""red"")
    # If no pattern is found, return ""red""
    return ""red"""
11190306,Which kind of animal is to the left of the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which kind of animal is to the left of the train?"")"
5107190,Do you see both an airplane and a truck?,"    
    image_patch = Image Patch(image)
    airplane_patches = image_patch find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch_simple_query(""Do you see both an airplane and a truck?"", ""airplane"")
    for airplane_patch in airplane_patches:
        truck_patches = image_patch find(""truck"")
        # Question assumes only one truck patch
        if len(truck_patches) == 0:
            return ""no""
        for truck_patch in truck_patches:
            if truck_patch horizontal center > airplane_patch horizontal center:
                return ""yes""
    return ""no"""
4360982,How old is the child?," # assumes only one child patch
    image_patch = Image Patch(image)
    child_patches = image_patch find(""child"")
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch_simple_query(""How old is the child?"", ""age"")
    return child_patches[0].simple_query(""How old is the child?"", ""age"")"
12536783,What kind of animal is in front of the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""What kind of animal is in front of the pole?"", "" what kind of animal is in front of the pole"")"
443846,Are the glasses to the right or to the left of the man that is wearing a t-shirt?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch_simple_query(""Are the glasses to the right or to the left of the man that is wearing a t-shirt?"", ""right"")
    for man_patch in man_patches:
        t_shirt_patches = image_patch find(""t-shirt"")
        # Question assumes only one t-shirt patch
        if len(t_shirt_patches) == 0:
            return ""no""
        for t_shirt_patch in t_shirt_patches:
            if t_shirt_patch horizontal center > man_patch horizontal center:
                return ""right""
    return ""left"""
18655269,Which room is it?," # assumes only one room
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which room is it?"")"
7405860,Is it indoors?," # assumes only one image patch
    image_patch = Image Patch(image)
    return image_patch simple query(""Is it indoors?"")"
1705569,Does the pot on top of the stove look black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Does the pot on top of the stove look black?"", ""black"")"
1028569,Are there both a cyclist and a helmet in the photo?,"    
    image_patch = Image Patch(image)
    cyclist_patches = image_patch find(""cyclist"")
    helmet_patches = image_patch find(""helmet"")
    # Question assumes only one cyclist patch and one helmet patch
    if len(cyclist_patches) == 0 or len(helmet_patches) == 0:
        # If no cyclist or helmet is found, query the image directly
        return image_patch_simple_query(""Are there both a cyclist and a helmet in the photo?"", ""no"")
    cyclist_patch = cyclist_patches[0]
    helmet_patch = helmet_patches[0]
    if cyclist_patch horizontal center < helmet_patch horizontal center:
        return ""yes""
    else:
        return ""no"""
13954115,Are there any men to the left of the person in the crowd?,"    
    image_patch = Image Patch(image)
    people_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(people_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Are there any men to the left of the person in the crowd?"", ""left"")
    for person_patch in people_patches:
        if person_patch horizontal_center < image_patch horizontal_center:
            return ""yes""
    return ""no"""
12436797,What kind of device is to the left of the keyboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    device_patches = image_patch find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch_simple_query(""What kind of device is to the left of the keyboard?"", ""left"")
    for device_patch in device_patches:
        if device_patch horizontal_center < image_patch horizontal_center:
            return device_patch简单 query(""What kind of device is to the left of the keyboard?"", ""left"")
    # If no device is to the left of the keyboard, return ""no""
    return ""no"""
1017626,Who is inside the train?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch_simple_query(""Who is inside the train?"", ""inside"")
    for train_patch in train_patches:
        inside_patches = train_patch.find(""inside"")
        if len(inside_patches) > 0:
            return train_patch简单 query(""Who is inside the train?"", ""inside"")
    return ""no"""
7650014,Which place is it?," # returns ""the city""
    image_patch = Image Patch(image)
    city_patches = image_patch find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch_simple_query(""Which place is it?"")"
15889871,What is the person to the left of the car doing?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""What is the person to the left of the car doing?"", ""left"")
    for person_patch in person_patches:
        action_patches = image_patch find(""action"")
        for action_patch in action_patches:
            if action_patch horizontal_center < person_patch horizontal_center:
                return action_patch simple query(""What is the person to the left of the car doing?"", ""left"")
    # If no action is found, return ""no""
    return ""no"""
1310985,Is the yellow vehicle to the left of a lamp?," # assumes only one yellow vehicle and one lamp
    image_patch = Image Patch(image)
    yellow_vehicle_patches = image_patch find(""yellow vehicle"")
    lamp_patches = image_patch find(""lamp"")
    if len(yellow_vehicle_patches) == 0 or len(lamp_patches) == 0:
        # If no yellow vehicle or lamp is found, query the image directly
        return image_patch_simple_query(""Is the yellow vehicle to the left of a lamp?"", ""no"")
    for yellow_vehicle_patch in yellow_vehicle_patches:
        for lamp_patch in lamp_patches:
            if yellow_vehicle_patch horizontal center < lamp_patch horizontal center:
                return ""yes""
    return ""no"""
646935,Which room is it?," # assumes only one room
    image_patch = Image Patch(image)
    return image_patch_simple_query(""Which room is it?"")"
9495263,Is the woman to the left or to the right of the man that wears a cap?," # assumes only one man patch and one woman patch
    image_patch = Image Patch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch_simple_query(""Is the woman to the left or to the right of the man that wears a cap?"", ""left"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if woman_patch horizontal_center > man_patch horizontal_center:
        return ""right""
    else:
        return ""left"""
946016,Do you think the animal that is sitting-down is small or large?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch_simple_query(""Do you think the animal that is sitting-down is small or large?"", ""sitting-down"")
    for animal_patch in animal_patches:
        is_sitting_down = (animal_patch简单 query(""Is the animal sitting-down?"") == ""yes"")
        if is_sitting_down:
            return animal_patch简单 query(""Is the animal sitting-down?"")"
9617920,Do the garbage can and the pan have the same color?," # color is a property
    image_patch = Image Patch(image)
    garbage_can_patches = image_patch.find(""garbage can"")
    # Question assumes only one garbage can patch
    if len(garbage_can_patches) == 0:
        # If no garbage can is found, query the image directly
        return image_patch_simple_query(""Do the garbage can and the pan have the same color?"", ""color"")
    for garbage_can_patch in garbage_can_patches:
        pan_patches = image_patch find(""pan"")
        for pan_patch in pan_patches:
            if garbage_can_patch verify_property(""color"", ""same as pan""):
                return ""yes""
    return ""no"""
3578781,Which kind of clothing is black?," # black is a color, so use simple_qa
    image_patch = Image Patch(image)
    return image_patch_simple_qa(""Which kind of clothing is black?"", ""black"")"
4695656,What is the lamp on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    lamp_patches = image_patch find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch_simple_query(""What is the lamp on?"", ""on"")
    for lamp_patch in lamp_patches:
        is_on = lamp_patch simple query(""Is the lamp on?"", ""on"")
        if is_on:
            return lamp_patch简单 query(""What is the lamp on?"", ""on"") # crop would include the lamp so keep it in the query
    # If no lamp is on, pick the first lamp
    return lamp_patches[0].simple query(""What is the lamp on?"", ""on"")"
13696926,The homes that are to the left of the people have what color?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    home_patches = image_patch.find(""home"")
    # Question assumes only one home patch
    if len(home_patches) == 0:
        # If no home is found, query the image directly
        return image_patch_simple_query(""The homes that are to the left of the people have what color?"", ""left"")
    for home_patch in home_patches:
        color_patches = home_patch find(""color"")
        for color_patch in color_patches:
            if color_patch horizontal_center < home_patch horizontal_center:
                return color_patch简单 query(""The homes that are to the left of the people have what color?"", ""left"")
    # If no home is to the left of the people, return ""no""
    return ""no"""
16946079,What is on the wall?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is on the wall?"", ""')"
18986542,Is the napkin on the right side?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    napkin_patches = image_patch.find(""napkin"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch_simple_query(""Is the napkin on the right side?"", ""no"")
    for napkin_patch in napkin_patches:
        is_on_right_side = (napkin_patch简单 query(""Is the napkin on the right side?"") == ""yes"")
        if is_on_right side:
            return napkin_patch简单 query(""Is the napkin on the right side?"") # crop would include the napkin so keep it in the query
    # If no napkin is on the right side, return ""no""
    return ""no"""
11513897,What appliance is the label on?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    appliance_patches = image_patch find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch_simple_query(""What appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance is the label on?"", "" what appliance"
8240644,What is the color of the bird's tail?," # color of the bird's tail
    image_patch = Image Patch(image)
    return image_patch简单 query(""What is the color of the bird's tail?"")"
5245080,Is he to the right or to the left of the camera?," # assumes only one person patch
    image_patch = Image Patch(image)
    person_patches = image_patch find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch_simple_query(""Is he to the right or to the left of the camera?"", ""left"")
    for person_patch in person_patches:
        if person_patch horizontal_center < image_patch horizontal_center:
            return ""left""
    return ""right"""
17800894,Are there both a window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = Image Patch(image)
    window_patches = image_patch find(""window"")
    door_patches = image_patch find(""door"")
    return ""yes"" if len(window_patches) > 0 and len(door_patches) > 0 else ""no"""
191027873,Where is the snowboard?," # not a relational verb so go step by step
    image_patch = Image Patch(image)
    snowboard_patches = image_patch find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch_simple_query(""Where is the snowboard?"", ""Where is the snowboard?"")"
1964079,Are the box and the paper the same color?," # assumes only one box and one paper patch
    image_patch = Image Patch(image)
    box_patch = image_patch find(""box"")
    paper_patch = image_patch find(""paper"")
    return box_patch verify_property(""box"", ""color"") == paper_patch verify_property(""paper"", ""color"")"
