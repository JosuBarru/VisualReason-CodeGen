sample_id,query,generated_code
13151559,Is the large hair both white and soft?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large hair both white and soft?"")"
18370956,Who is eating the cupcake?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is eating the cupcake?"")"
6436809,What is the guy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the guy wearing?"")"
117037,Which kind of food is to the right of the cabbage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the cabbage?"")"
758936,Who wears the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the cap?"")"
111046440,Who is pointing?," # contains a relation (pointing at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is pointing?"")"
15804389,Is the woman's hair short or long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's hair short or long?"")"
11445636,The women are watching who?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The women are watching who?"")"
17736165,Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?," # contains a relation (left of, inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the dishwasher to the left of the woman and the gas stove inside the kitchen both have white color?"")"
1594898,What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that is the same color as the bed sheet the baby is to the right of?"")"
758958,Is there either any red pillow or snowboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_pillow = image_patch.exists(""red pillow"")
    is_snowboard = image_patch.exists(""snowboard"")
    return bool_to_yesno(is_red_pillow or is_snowboard)"
143816,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
13741513,Which side is the knife on?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Which side is the knife on?"")
    if knife_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17829769,What is the computer mouse in front of?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer mouse in front of?"")"
17233738,What is the toddler holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toddler holding?"")"
2951242,Is the gray shirt sleeveless or short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray shirt sleeveless or short sleeved?"")"
15241795,Is the tank top red?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tank top red?"")"
13885234,Which kind of animal is in front of the rocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in front of the rocks?"")"
19335715,Do you see any grapes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""grapes""))"
6455591,What type of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is white?"")"
1033761,What is the blue clothing item?," # returns the clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the blue clothing item?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What is the blue clothing item?"")
    return clothing_patch.simple_query(""What is the blue clothing item?"") # if no blue clothing is found, query the clothing item directly"
17726504,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
13112902,Is the woman wearing a bracelet?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman wearing a bracelet?"")"
698766,What is the food that is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is not white?"")"
1332276,Are there both a cup and a bottle in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_cup and is_bottle)"
12633088,What color is that glove?," # returns the color of the glove
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""What color is that glove?"")
    return glove_patches[0].simple_query(""What color is that glove?"")"
18103787,Who is holding the helmet?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the helmet?"")"
2143247,What is the name of the food to the left of the donut that looks little?," # contains a relation (left of, little, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the food to the left of the donut that looks little?"")"
3767951,Is the clock to the right or to the left of the man on the left?," # left is the horizontal center
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the clock to the right or to the left of the man on the left?"")
    for clock_patch in clock_patches:
        man_patches = image_patch.find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            # If no man is found, query the image directly
            return image_patch.simple_query(""Is the clock to the right or to the left of the man on the left?"")
        man_patch = man_patches[0]
        if clock_patch.horizontal_center > man_patch.horizontal_center:
            return ""right""
        else:
            return ""left"""
17655180,What's the sticker on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the sticker on?"")"
3468831,In front of what is this table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In front of what is this table?"")"
5888523,Do you see people to the right of the still car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see people to the right of the still car?"")"
7188981,Does the giraffe look adult?," # giraffe is a specific object, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""giraffe"", ""adult""))"
16852802,Of what color are the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Of what color are the pants?"")
    return pants_patches[0].simple_query(""Of what color are the pants?"") # crop would include the pants so keep it in the query"
9619158,What kind of watercraft is full of men?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of watercraft is full of men?"")"
3625225,On which side of the picture are the boats?," # left or right
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the boats?"")
    return ""left"" if boat_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
7126345,Does the elephant to the left of the other elephant have large size?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the elephant to the left of the other elephant have large size?"")"
19834124,What is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl holding?"")"
4617704,Does the toilet seat that is not down appear to be white and open?," # toilet seat is a predicate of a relational verb (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the toilet seat that is not down appear to be white and open?"")"
5899539,Are there any bottles or mugs that are not purple?," # bottle or mug
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    mug_patches = image_patch.find(""mug"")
    # Question assumes only one bottle or mug patch
    for bottle_patch in bottle_patches:
        if not bottle_patch.verify_property(""bottle"", ""purple""):
            return ""yes""
    for mug_patch in mug_patches:
        if not mug_patch.verify_property(""mug"", ""purple""):
            return ""yes""
    return ""no"""
2631593,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12228864,Do you see any men to the right of the person that is in the living room?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the right of the person that is in the living room?"")"
111054378,Is the small couch to the right or to the left of the bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small couch to the right or to the left of the bottle?"")"
9392411,Is the bottle to the right or to the left of the appliance on the left?," # bottle and appliance on the left
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the right or to the left of the appliance on the left?"")
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the right or to the left of the appliance on the left?"")
    appliance_patch = appliance_patches[0]
    if bottle_patches[0].horizontal_center > appliance_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
16753829,What type of animal is sitting in the container in the bottom of the photo?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is sitting in the container in the bottom of the photo?"")"
1345482,What is that train in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that train in front of?"")"
1527449,Are there cars to the right of the palm trees which are to the right of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there cars to the right of the palm trees which are to the right of the girl?"")"
459445,In which part is the silver device?," # assumes only one device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""silver device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""In which part is the silver device?"")
    if device_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
11786203,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
5200013,Is there a brown door or chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a brown door or chair?"")"
131031372,What is the napkin in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the napkin in?"")"
1241681,Are there any people behind the white dessert?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.exists(""white dessert"")) # assumes only one white dessert patch"
8730954,What type of animal do you think is in front of the curtain which is to the right of the radiator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal do you think is in front of the curtain which is to the right of the radiator?"")"
8553578,What is the Pikachu doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the Pikachu doing?"")"
16711804,"On which side is the car, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the car, the left or the right?"")"
5546271,What is on the large mountains?," # mountain is a general term
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the large mountains?"")"
5107295,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
123768,What kind of watercraft is the fruit on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of watercraft is the fruit on?"")"
1827218,Is the bottle in the bottom of the image?," # bottle is a common object
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle in the bottom of the image?"")
    if bottle_patches[0].vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no"""
10938155,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
4893512,Does the sail look white or red?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sail look white or red?"")"
3662784,Do you see either any traffic lights or cars?," # traffic light is a car with a red light
    image_patch = ImagePatch(image)
    is_traffic_light = image_patch.exists(""traffic light"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_traffic_light or is_car)"
15515711,Are there any girls to the right of the yellow helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""girl"") and image_patch.find(""yellow helmet"")[0].horizontal_center < image_patch.horizontal_center)"
6315316,Which kind of furniture is in front of the window?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in front of the window?"")"
17736488,What appliance is to the left of the faucet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the faucet?"")"
41050828,What is the color of the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What is the color of the jacket?"")
    return jacket_patches[0].simple_query(""What is the color of the jacket?"") # crop would include the jacket so keep it in the query"
610914,Is the green boat to the right or to the left of the wood house?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green boat to the right or to the left of the wood house?"")"
13158346,Is the woman in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman in the bottom part of the picture?"")"
16318707,Are there either any colorful bikes or skateboards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_bike or is_skateboard)"
2805654,Is the bag to the right or to the left of the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the right or to the left of the bench?"")"
15315607,What do you think is in the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is in the sky?"")"
2995829,What color is the truck near the gas station?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the truck near the gas station?"")"
12140940,"What are the headphones on, a sofa or a desk?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the headphones on, a sofa or a desk?"")"
727533,Does the bun look brown and toasted?," # contains a relation (bun), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bun look brown and toasted?"")"
61044602,What is in the brown basket?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the brown basket?"")"
16827204,Is the marker different in color than the paper?," # returns yes or no
    image_patch = ImagePatch(image)
    marker_patches = image_patch.find(""marker"")
    # Question assumes only one marker patch
    if len(marker_patches) == 0:
        # If no marker is found, query the image directly
        return image_patch.simple_query(""Is the marker different in color than the paper?"")
    marker_color = marker_patches[0].simple_query(""What is the color of the marker?"")
    paper_color = image_patch.simple_query(""What is the color of the paper?"")
    return bool_to_yesno(marker_color != paper_color)"
1284539,Is there a racket to the right of the man on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a racket to the right of the man on the right side?"")"
1257391,What place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"")"
16223517,What do you think is the color of the large device?," # returns the color of the device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""large device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the large device?"")
    return device_patches[0].simple_query(""What do you think is the color of the large device?"") # crop would include the device so keep it in the query"
1024280,Does the shirt look long sleeved or sleeveless?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look long sleeved or sleeveless?"")"
2769463,Which kind of animal is lying in the chair?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is lying in the chair?"")"
18503776,Is the white box to the right of the crate the chair is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white box to the right of the crate the chair is to the right of?"")"
3434581,Are there both a coffee table and a lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coffee_table = image_patch.exists(""coffee table"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_coffee_table and is_lamp)"
19201196,Is that flower pot made of clay?," # clay is a material
    image_patch = ImagePatch(image)
    flower_pot_patches = image_patch.find(""flower pot"")
    # Question assumes only one flower pot patch
    if len(flower_pot_patches) == 0:
        # If no flower pot is found, query the image directly
        return image_patch.simple_query(""Is that flower pot made of clay?"")
    return flower_pot_patches[0].verify_property(""flower pot"", ""clay"")"
191006281,Does the sky look clear and gray?," # clear and gray
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""clear"") and image_patch.verify_property(""sky"", ""gray""))"
681336,Do you see hats or gloves that are white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    glove_patches = image_patch.find(""glove"")
    hat_patches.extend(glove_patches)
    for hat_patch in hat_patches:
        if hat_patch.verify_property(""hat"") or hat_patch.verify_property(""glove""):
            if hat_patch.verify_property(""hat"", ""white"") or hat_patch.verify_property(""glove"", ""white""):
                return ""yes""
    return ""no"""
1300368,What is on the cabinet that is to the right of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cabinet that is to the right of the keyboard?"")"
172394,What is the animal to the left of the tap called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the tap called?"")"
738176,Is the chair on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair on the right?"")"
4194919,Is the child on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child on the right of the picture?"")"
3585327,Who is on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard?"")"
1711172,What size are the packages the candle is on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What size are the packages the candle is on top of?"")"
4353895,Who is on the snowboard on the right?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the snowboard on the right?"")"
17929304,What is the vehicle that is on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is on the road?"")"
1363574,What color is the crust?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the crust?"")"
5672474,Is the plate to the left or to the right of the beer on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the left or to the right of the beer on the left?"")"
11341284,What is the pattern of the mattress on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pattern of the mattress on the street?"")"
14192693,Are there any boys behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy"") and image_patch.exists(""fence"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
19203395,Is the white toilet paper to the right or to the left of the toilet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white toilet paper to the right or to the left of the toilet?"")"
1194938,Are there any airplanes in front of the building?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane"") and image_patch.exists(""building""))"
5350205,How clean is the road that the car is on the side of?," # returns a string describing the cleanliness of the road
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""How clean is the road that the car is on the side of?"")
    car_patch = car_patches[0]
    road_patches = image_patch.find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        return image_patch.simple_query(""How clean is the road that the car is on the side of?"")
    road_patch = road_patches[0]
    return road_patch.simple_query(""How clean is the road that the car is on the side of?"") # crop would include the car so keep it in the query"
4256016,"In which part of the picture is the black van, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the black van, the bottom or the top?"")"
9179602,What is the person to the right of the fence doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the fence doing?"")"
16471124,Does the horse have a different color than the boot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the horse have a different color than the boot?"")"
958247,Is the mouse to the right of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mouse to the right of a chair?"")"
11179512,The basket made of plastic is what color?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The basket made of plastic is what color?"")"
8816272,Do you see any elephant to the left of the bird?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any elephant to the left of the bird?"")"
11168592,What is the animal in front of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in front of the lamp?"")"
3568717,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
7398502,What is the food to the left of the girl in the bottom of the photo?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the left of the girl in the bottom of the photo?"")"
5145864,What is the device that the camera is in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that the camera is in front of?"")"
788143,Is the man on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the surfboard?"")"
15854501,What device has the same color as the device in the box?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device has the same color as the device in the box?"")"
3228067,What is the child wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child wearing?"")"
6817336,Is the blue sky behind a cathedral?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue sky behind a cathedral?"")"
6347271,"In which part of the image is the yellow pepper, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the yellow pepper, the bottom or the top?"")"
296230,What animal is the woman feeding?," # contains a relation (feeding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the woman feeding?"")"
3427727,On which side is the bucket?," # left or right
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""On which side is the bucket?"")
    if bucket_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
31050314,Is the small chimney in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small chimney in the bottom part of the picture?"")"
3503396,Are the pants purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""pants"", ""purple""))"
11742862,Which kind of furniture is to the right of the paper towels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the paper towels?"")"
5891809,What kind of furniture is gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is gray?"")"
5370528,Is the hair white and long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair white and long?"")"
781153,Do you see trains near the lamp post that looks white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see trains near the lamp post that looks white?"")"
5543456,Is the container to the left of the person that wears bracelets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the container to the left of the person that wears bracelets?"")"
163134,What do you think is on the roof?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the roof?"")"
5603075,Is the shoe white or brown?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shoe white or brown?"")"
5511395,What is wrapped in paper?," # contains a relation (wrapped in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wrapped in paper?"")"
5611256,Are there any couches in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""couch""))"
1162826,The man is in what?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is in what?"")"
81020685,Which color is the small house?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the small house?"")"
19640724,Who is in the bathroom?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the bathroom?"")"
289960,Do you see a racket to the right of the boy that is looking at the tie?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a racket to the right of the boy that is looking at the tie?"")"
9957748,Does the hair appear to be long and brown?," # hair is a complex object
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair appear to be long and brown?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""brown"") and hair_patches[0].verify_property(""hair"", ""long""))"
21031610,What is the shoe that looks black and white resting on?," # contains a relation (resting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shoe that looks black and white resting on?"")"
12801921,What is the glass on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the glass on?"")"
16243948,Is the white pillow under the black animal?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white pillow under the black animal?"")"
457770,What kind of clothing is striped?," # contains a relation (striped), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is striped?"")"
12603153,Are the child's eyes blue and open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""child's eyes"", ""blue"") and image_patch.verify_property(""child's eyes"", ""open""))"
9480973,What is located on top of the tub?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the tub?"")"
8399764,Is the fork to the right or to the left of the white plate?," # contains a relation (right, left, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork to the right or to the left of the white plate?"")"
13420253,On which side of the photo is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4747006,What is the label on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the label on?"")"
3322787,What bird is to the left of the person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bird is to the left of the person that is wearing a shirt?"")"
6399594,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6930120,Is the glass bowl on the right or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass bowl on the right or on the left?"")"
12619961,What vehicles are to the left of the taxi?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicles are to the left of the taxi?"")"
13362315,Is the basket on the shelf black and empty?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the basket on the shelf black and empty?"")"
3830854,What is the animal that is standing next to the donkey that is standing in the hay?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is standing next to the donkey that is standing in the hay?"")"
18382324,Is this a bed or a table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a table?"")"
18104571,"Which animal is that, a bird or a cat?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animal is that, a bird or a cat?"")"
2913379,Do you see any fence or pot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""pot""))"
9294271,What is in front of the fence the zebra is kept in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the fence the zebra is kept in?"")"
10741434,What is the vegetable that is on top of the plate called?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is on top of the plate called?"")"
765962,Where is the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the car?"")"
12399262,Is there either a yellow truck or airplane?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_yellow_truck = image_patch.exists(""yellow truck"")
    is_airplane = image_patch.exists(""airplane"")
    return bool_to_yesno(is_yellow_truck or is_airplane)"
13964213,Is the man on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left of the photo?"")"
16171369,What is covered in the snow?," # contains a relation (covered in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered in the snow?"")"
181055844,On which side is the plastic bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side is the plastic bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5858491,Do you see any ropes on the fence that is on the left of the picture?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any ropes on the fence that is on the left of the picture?"")"
17834539,Are there any lamps in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamp""))"
15658176,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
14372400,Does that coat have red color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""coat"", ""red""))"
411886,Are there any curtains or blankets in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_curtain = image_patch.exists(""curtain"")
    is_blanket = image_patch.exists(""blanket"")
    return bool_to_yesno(is_curtain or is_blanket)"
16921850,What is the item of furniture to the left of the remote that the man is holding called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the remote that the man is holding called?"")"
51039491,Is the fence black or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence black or red?"")"
7425912,What animal is standing in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing in the field?"")"
13136338,What animal is in front of the dog which is to the right of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the dog which is to the right of the bird?"")"
3775066,Which color are the cabinets in the bottom of the picture?," # contains a relation (bottom, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the cabinets in the bottom of the picture?"")"
17206239,Is the happy girl to the right of a player?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy girl to the right of a player?"")"
2992517,"What piece of furniture is not wooden, the table or the chair?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is not wooden, the table or the chair?"")"
1827558,Which side of the image is the kettle on?," # left or right
    image_patch = ImagePatch(image)
    kettle_patches = image_patch.find(""kettle"")
    # Question assumes only one kettle patch
    if len(kettle_patches) == 0:
        # If no kettle is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the kettle on?"")
    if kettle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2785208,Where is the man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    return man_patches[0].simple_query(""Where is the man?"") # crop would include the man so keep it in the query"
6623967,Is the baby near the countertop chewing a computer mouses?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baby near the countertop chewing a computer mouses?"")"
12804807,Is the small bottle open or closed?," # bottle is a container, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small bottle open or closed?"")"
18437691,Is the clock small or large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock small or large?"")"
9482318,Are there either any glasses or bottles in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""glasses"") or image_patch.exists(""bottle""))"
12362819,Is the sky blue or dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky blue or dark?"")"
171054254,What is the piece of furniture to the right of the shelf the cup is on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the shelf the cup is on called?"")"
1416636,Are there both bridges and chandeliers in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bridge = image_patch.exists(""bridge"")
    is_chandelier = image_patch.exists(""chandelier"")
    return bool_to_yesno(is_bridge and is_chandelier)"
1997041,"Which side is the car on, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the car on, the left or the right?"")"
6110985,Is there any plate or orange in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate"") or image_patch.exists(""orange""))"
612894,Do you see any doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
13562221,What's the bear on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bear on?"")"
9536851,Is the woman in front of the trees holding scissors?," # contains a relation (in front of, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman in front of the trees holding scissors?"")"
9682405,What is on the machine?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the machine?"")"
8649435,What is on the white wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white wall?"")"
12487033,Does the logo look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""logo"", ""red""))"
14301289,What type of vehicle is to the left of the white vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is to the left of the white vehicle?"")"
523976,Which kind of vehicle is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is large?"")"
3423213,Who is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the trees?"")"
18107197,Is the ottoman to the right or to the left of the brown chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ottoman to the right or to the left of the brown chair?"")"
5716578,Is there a laptop on the bed near the magazines?," # contains a relation (on, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a laptop on the bed near the magazines?"")"
8215791,Is the porcelain toilet to the left or to the right of the small trash can?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the porcelain toilet to the left or to the right of the small trash can?"")"
17528455,What is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the wall?"")"
4896890,Do the goggles and the gloves have a different colors?," # goggles and gloves are assumed to be found
    image_patch = ImagePatch(image)
    goggles_patches = image_patch.find(""goggles"")
    gloves_patches = image_patch.find(""gloves"")
    # Question assumes only one goggles and one gloves patch
    if len(goggles_patches) == 0 or len(gloves_patches) == 0:
        # If no goggles or gloves are found, query the image directly
        return image_patch.simple_query(""Do the goggles and the gloves have a different colors?"")
    goggles_patch = goggles_patches[0]
    gloves_patch = gloves_patches[0]
    return bool_to_yesno(goggles_patch.verify_property(""goggles"", ""blue"") != gloves_patch.verify_property(""gloves"", ""blue""))"
947724,Is there any purple pillow or kite in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_purple_pillow = image_patch.exists(""purple pillow"")
    is_purple_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_purple_pillow or is_purple_kite)"
5679522,"What are the people to the right of the man doing, standing or sitting?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the people to the right of the man doing, standing or sitting?"")"
15492262,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is white?"")"
151032547,Is the bear on the right side?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bear on the right side?"")"
5698674,Are there either any planters or benches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_planters = image_patch.exists(""planter"")
    is_benches = image_patch.exists(""bench"")
    return bool_to_yesno(is_planters or is_benches)"
19397103,What is the person that is standing staring at?," # contains a relation (staring at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is standing staring at?"")"
11630681,What is the color of the necklace?," # returns the color of the necklace
    image_patch = ImagePatch(image)
    necklace_patches = image_patch.find(""necklace"")
    # Question assumes only one necklace patch
    if len(necklace_patches) == 0:
        # If no necklace is found, query the image directly
        return image_patch.simple_query(""What is the color of the necklace?"")
    return necklace_patches[0].simple_query(""What is the color of the necklace?"") # crop would include the necklace so keep it in the query"
248245,Is the table to the left or to the right of the fence?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table to the left or to the right of the fence?"")"
837033,Are there round windows or doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_round_window = image_patch.exists(""round window"")
    is_round_door = image_patch.exists(""round door"")
    return bool_to_yesno(is_round_window or is_round_door)"
5249150,Are there any bears or napkins in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bear = image_patch.exists(""bear"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_bear or is_napkin)"
13908598,What kind of vehicle is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the person?"")"
61006749,Who is dressed in pink?," # contains a relation (dressed in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is dressed in pink?"")"
6122955,Does the pillow have yellow color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Does the pillow have yellow color?"")
    return bool_to_yesno(pillow_patches[0].verify_property(""pillow"", ""yellow""))"
6861738,Is the old woman to the right or to the left of the faucet?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old woman to the right or to the left of the faucet?"")"
15833048,Which kind of animal is on the road?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the road?"")"
9524339,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
18255749,How clean are the sheets the pillow is to the right of?," # pillow is to the right of the sheets
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""How clean are the sheets the pillow is to the right of?"")
    pillow_patch = pillow_patches[0]
    sheets_patches = image_patch.find(""sheets"")
    # Question assumes only one sheets patch
    if len(sheets_patches) == 0:
        return image_patch.simple_query(""How clean are the sheets the pillow is to the right of?"")
    sheets_patch = sheets_patches[0]
    if sheets_patch.horizontal_center < pillow_patch.horizontal_center:
        return sheets_patch.simple_query(""How clean are the sheets the pillow is to the right of?"")
    return image_patch.simple_query(""How clean are the sheets the pillow is to the right of?"") # pillow is to the right of the sheets"
19797097,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
6899090,Is the man to the right or to the left of the appliance that looks white?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the appliance that looks white?"")"
3357701,Does the dog to the right of the other dog have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog to the right of the other dog have white color?"")"
2829418,What's the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the girl holding?"")"
15930109,Which kind of vehicle is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is blue?"")"
1525382,What type of vegetable is on the food with the cheese?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is on the food with the cheese?"")"
8548980,Are there either players or hand soaps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_player = image_patch.exists(""player"")
    is_hand_soap = image_patch.exists(""hand soap"")
    return bool_to_yesno(is_player or is_hand_soap)"
4438348,"Which kind of food is not made, the sandwich or the croissant?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not made, the sandwich or the croissant?"")"
6423906,Which kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is on the plate?"")"
1993231,Are the animals in the image of different types?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are the animals in the image of different types?"")
    first_animal = animal_patches[0]
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What type of animal is this?"") != first_animal.simple_query(""What type of animal is this?""):
            return ""yes""
    return ""no"""
13949656,Are there any people to the left of the tray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.find(""tray"")[0].horizontal_center > image_patch.horizontal_center)"
184032,Does the fresh pineapple appear to be ripe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fresh pineapple appear to be ripe?"")"
9392591,Are there chairs or smoothies?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_smoothie = image_patch.exists(""smoothie"")
    return bool_to_yesno(is_chair or is_smoothie)"
4285170,Which kind of animal is to the right of the sheep?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the right of the sheep?"")"
9896138,Are there any boxes to the left of the screen in the picture?," # image is a 3D array
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Are there any boxes to the left of the screen in the picture?"")
    for box_patch in box_patches:
        if box_patch.horizontal_center < image_patch.horizontal_center:
            return ""yes""
    return ""no"""
1400333,What do you think is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man on?"")"
13105327,Is the boot white or orange?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boot white or orange?"")"
3659880,Does the wood boat have silver color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""wood boat"", ""silver""))"
1827802,Is the red pot on the appliance to the right of the mixer?," # contains a relation (on, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red pot on the appliance to the right of the mixer?"")"
14809102,The phone that is in front of the camera is of what color?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The phone that is in front of the camera is of what color?"")"
61001545,What type of food is to the left of the silver spoon?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the left of the silver spoon?"")"
799463,Are there both a window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
11260725,Does the water have small size and white color?," # water is not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""water"", ""small"") and image_patch.verify_property(""water"", ""white""))"
2397653,Are there any fences that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.find(""fence"")[0].verify_property(""fence"", ""white""))"
1554603,Who is holding the animal?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the animal?"")"
11606818,Is the man to the right or to the left of the people the stroller is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the people the stroller is to the right of?"")"
8988476,What kind of furniture is presented in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is presented in this photo?"")"
10695214,What is the man with the backpack holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man with the backpack holding?"")"
91058050,Are there both mouse pads and computer mice in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mouse_pad = image_patch.exists(""mouse pad"")
    is_computer_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_mouse_pad and is_computer_mouse)"
1972064,Is the person in front of the tree wearing jeans?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in front of the tree wearing jeans?"")"
167162,Is there a bike to the right of the purse that is to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bike to the right of the purse that is to the right of the woman?"")"
1695388,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
10960149,Is the woman to the left or to the right of the man in the bottom?," # bottom is the y-axis
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the man in the bottom?"")
    woman_patch = woman_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the man in the bottom?"")
    man_patch = man_patches[0]
    if woman_patch.horizontal_center < man_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16921984,What is the bent man to the right of the other men doing?," # contains a relation (bent, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bent man to the right of the other men doing?"")"
12175564,What animal are the men to the right of the girl leading?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal are the men to the right of the girl leading?"")"
1219606,On which side of the image is the house?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the house?"")
    house_patch = house_patches[0]
    if house_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1770499,Is the black suitcase to the right or to the left of the person on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black suitcase to the right or to the left of the person on the left?"")"
5282406,Is the pot to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pot to the left of a chair?"")"
10914401,Where are the people?," # returns the location of the people
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""Where are the people?"")
    return people_patches[0].simple_query(""Where are the people?"")"
1919722,What animal is eating the grass?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating the grass?"")"
9681008,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
16861675,Who is on the surfboard in the middle of the photo?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard in the middle of the photo?"")"
10947426,What is the color of the lizard beside the banana?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the lizard beside the banana?"")"
18200684,Is the wine glass in the top or in the bottom part?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wine glass in the top or in the bottom part?"")"
3882988,What kind of vehicle is to the left of the people that are in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the people that are in the middle of the picture?"")"
171012637,Is the teddy bear to the right of a suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the teddy bear to the right of a suitcase?"")"
19861372,Is the woman's hair long or short?," # contains a relation (long or short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's hair long or short?"")"
623889,Are both the television and the armchair the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    is_tlevision = image_patch.exists(""television"")
    is_armchair = image_patch.exists(""armchair"")
    if is_tlevision and is_armchair:
        return bool_to_yesno(image_patch.find(""television"")[0].verify_property(""television"", ""color"") == image_patch.find(""armchair"")[0].verify_property(""armchair"", ""color""))
    return ""no"""
4917605,Is the shoe white or brown?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shoe white or brown?"")"
91055143,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
5430643,What do you think sits on the plate to the left of the tomato?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think sits on the plate to the left of the tomato?"")"
523936,Is the woman in the top part of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman in the top part of the picture?"")"
3189548,Is there a bottle on the nightstand that is on the bed?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bottle on the nightstand that is on the bed?"")"
14292161,The pot is of which color?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The pot is of which color?"")"
17495150,"What device is black, the microphone or the laptop?"," # contains a relation (black, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is black, the microphone or the laptop?"")"
1521847,Is the cat on a desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat on a desk?"")"
16465081,The man is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is holding what?"")"
17387032,What is on the post?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the post?"")"
1892436,What is in front of the kids that are looking at the cake?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the kids that are looking at the cake?"")"
18906705,How big is the crowd?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How big is the crowd?"")"
6157200,Does the sign on the pole have white color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sign on the pole have white color?"")"
16760226,What's the laptop in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the laptop in front of?"")"
111054070,How large is the bed?," # returns a string
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""How large is the bed?"")
    return bed_patches[0].simple_query(""How large is the bed?"") # crop would include the bed so keep it in the query"
14143886,Where is the person with the luggage standing on?," # ground, grass, etc
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Where is the person with the luggage standing on?"")
    for person_patch in person_patches:
        luggage_patches = image_patch.find(""luggage"")
        for luggage_patch in luggage_patches:
            if luggage_patch.horizontal_center > person_patch.horizontal_center:
                return person_patch.simple_query(""Where is the person with the luggage standing on?"")
    # If no luggage is found, query the image directly
    return image_patch.simple_query(""Where is the person with the luggage standing on?"")"
19872633,Are there either any fire extinguishers or pepper shakers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_extinguisher = image_patch.exists(""fire extinguisher"")
    is_pepper_shaker = image_patch.exists(""pepper shaker"")
    return bool_to_yesno(is_fire_extinguisher or is_pepper_shaker)"
12755010,Is the bottle to the right of a napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle to the right of a napkin?"")"
2747001,Are there any soaps or bombs?," # bomb is a type of soap
    image_patch = ImagePatch(image)
    is_soap = image_patch.exists(""soap"")
    is_bomb = image_patch.exists(""bomb"")
    return bool_to_yesno(is_soap or is_bomb)"
1553845,Do you see baby giraffes or elephants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see baby giraffes or elephants?"")"
6898877,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
15862812,What is the sticker on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sticker on?"")"
141031470,On which side of the image is the white towel?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the white towel?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
41026846,Who rides a motorcycle?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who rides a motorcycle?"")"
16540391,What is around the bathtub the towel is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the bathtub the towel is on?"")"
7469617,Is the man to the left or to the right of the person that is to the left of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the person that is to the left of the people?"")"
64308,What's located on top of the soup?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the soup?"")"
16660910,Are both the fence and the bench made of the same material?," # material is a property
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one fence and one bench patch
    if len(fence_patches) == 0 or len(bench_patches) == 0:
        # If no fence or bench is found, query the image directly
        return image_patch.simple_query(""Are both the fence and the bench made of the same material?"")
    fence_patch = fence_patches[0]
    bench_patch = bench_patches[0]
    return bool_to_yesno(fence_patch.verify_property(""fence"", ""material"") == bench_patch.verify_property(""bench"", ""material""))"
3196255,Are there helmets that are not white?," # helmet is a noun
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are there helmets that are not white?"")
    for helmet_patch in helmet_patches:
        is_not_white = helmet_patch.simple_query(""Is the helmet white?"") != ""yes""
        if is_not_white:
            return ""yes""
    return ""no"""
2992630,Is the bowl to the right or to the left of the man that is drinking?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl to the right or to the left of the man that is drinking?"")"
513894,Is the person above the sand wearing glasses?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person above the sand wearing glasses?"")"
14167599,Is the color of the life preserver the same as that of the house?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the life preserver the same as that of the house?"")"
18264755,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
6711450,What is the animal that is looking into the toilet that is not closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is looking into the toilet that is not closed?"")"
8641613,Do you see any helmets in the picture that are not red?," # helmet is a noun, so go step by step
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you see any helmets in the picture that are not red?"")
    for helmet_patch in helmet_patches:
        is_red = helmet_patch.simple_query(""Is the helmet red?"") == ""yes""
        if not is_red:
            return ""yes""
    return ""no"""
2409779,What does the happy person hold?," # holds is a relational verb
    image_patch = ImagePatch(image)
    happy_patches = image_patch.find(""happy"")
    # Question assumes only one happy patch
    if len(happy_patches) == 0:
        # If no happy person is found, query the image directly
        return image_patch.simple_query(""What does the happy person hold?"")
    for happy_patch in happy_patches:
        return happy_patch.simple_query(""What does the happy person hold?"") # crop would include the object held so keep it in the query"
8461507,Are there either tissue boxes or lamps in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tissue box"") or image_patch.exists(""lamp""))"
10770916,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
19102906,What type of drink is to the left of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of drink is to the left of the plate?"")"
18315440,Is the sky cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cloudy = image_patch.verify_property(""sky"", ""cloudy"")
    is_blue = image_patch.verify_property(""sky"", ""blue"")
    return bool_to_yesno(is_cloudy and is_blue)"
453061,Is the fork on the right of the image?," # contains a relation (on, next to, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork on the right of the image?"")"
71002567,"What is the broccoli on, a table or a nightstand?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the broccoli on, a table or a nightstand?"")"
17465089,Is the field green and small?," # field is a complex object, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the field green and small?"")"
16150157,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
17882658,Is the van to the left or to the right of the SUV on the right side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the van to the left or to the right of the SUV on the right side?"")"
15101358,Is the girl to the left of the boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of the boy?"")"
12785181,What animals are in the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are in the grass?"")"
348093,Are there both an apple and a bag in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_apple = image_patch.exists(""apple"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_apple and is_bag)"
314181,Which sign is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which sign is shown?"")"
16275314,"On which side is the woman, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the woman, the right or the left?"")"
19535592,Who runs on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who runs on the sand?"")"
156886,Is there a giraffe near the bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a giraffe near the bush?"")"
1756642,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11177243,Who wears the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the shirt?"")"
1972390,What type of animal is standing in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is standing in the field?"")"
14579439,Is the stuffed animal on the right?," # contains a relation (on, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stuffed animal on the right?"")"
6645395,Is the gray building behind the passengers that are boarding the airplane?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray building behind the passengers that are boarding the airplane?"")"
19610200,Is the fence metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence metallic?"")"
5299471,What does the girl that to the left of the trashcan carry?," # contains a relation (to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the girl that to the left of the trashcan carry?"")"
7548203,Which kind of vegetable is on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on the pizza?"")"
91027737,On which side is the pan?," # left or right
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch.simple_query(""On which side is the pan?"")
    if pan_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19133443,Are the black cars in the top part of the photo?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the black cars in the top part of the photo?"")"
6144031,Who is in the living room?," # contains a relation (in the living room), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the living room?"")"
14300987,What is the sink made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sink made of?"")"
16464341,Is there a black cat or bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_cat = image_patch.exists(""black cat"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_black_cat or is_bird)"
1241741,Do you see a bicycle or a biker in this picture?," # contains a relation (bicycle, biker), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bicycle"") or image_patch.exists(""biker""))"
844747,Are there both a pillow and a kitten in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_kitten = image_patch.exists(""kitten"")
    return bool_to_yesno(is_pillow and is_kitten)"
1104500,What kind of food is in the box?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is in the box?"")"
4204973,What is the food that is to the left of the kid called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the left of the kid called?"")"
11820726,"What device is the desk in front of, a television or a printer?"," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the desk in front of, a television or a printer?"")"
18114588,Do you see a helmet there?," # helmet is a rare object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""helmet""))"
11950874,What animal is standing on the ground?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the ground?"")"
10216953,Is the small car to the left of the fork on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small car to the left of the fork on the right?"")"
16184942,Does that grass look brown and short?," # returns yes or no
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Does that grass look brown and short?"")
    return bool_to_yesno(grass_patches[0].verify_property(""grass"", ""brown"") and grass_patches[0].verify_property(""grass"", ""short""))"
6312238,Is the hydrant to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hydrant to the left of the car?"")"
16646227,On which side of the picture is the gray car?," # left or right
    image_patch = ImagePatch(image)
    gray_car_patches = image_patch.find(""gray car"")
    # Question assumes only one gray car patch
    if len(gray_car_patches) == 0:
        # If no gray car is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the gray car?"")
    gray_car_patch = gray_car_patches[0]
    if gray_car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10484636,Is the ball to the right or to the left of the person that is wearing sneakers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball to the right or to the left of the person that is wearing sneakers?"")"
3443704,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
19313572,What is the color of the tent to the left of the vehicles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the tent to the left of the vehicles?"")"
10885675,What is the toilet seat made of?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toilet seat made of?"")"
6926432,What animal is resting on the blanket?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is resting on the blanket?"")"
14561612,What color do you think the bikini that the woman is wearing is?," # returns the color of the bikini
    image_patch = ImagePatch(image)
    bikini_patches = image_patch.find(""bikini"")
    # Question assumes only one bikini patch
    if len(bikini_patches) == 0:
        # If no bikini is found, query the image directly
        return image_patch.simple_query(""What color do you think the bikini that the woman is wearing is?"")
    return bikini_patches[0].simple_query(""What color do you think the bikini that the woman is wearing is?"") # crop would include the bikini so keep it in the query"
6587755,Are both the room and the bowl the same color?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    is_room = image_patch.exists(""room"")
    is_bowl = image_patch.exists(""bowl"")
    if is_room and is_bowl:
        room_patch = image_patch.find(""room"")[0]
        bowl_patch = image_patch.find(""bowl"")[0]
        return bool_to_yesno(room_patch.verify_property(""room"", ""color"") == bowl_patch.verify_property(""bowl"", ""color""))
    return ""no"""
4479543,Is the barn white or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the barn white or brown?"")"
972522,Does the box look white or brown?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the box look white or brown?"")"
3948528,What is the bowl made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl made of?"")"
15724828,Is the bench in front of the rock gray or red?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench in front of the rock gray or red?"")"
866459,On which side is the couch?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the couch?"")"
8614812,Is the person that is playing wearing shorts?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is playing wearing shorts?"")"
167438,What is wearing the ground?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing the ground?"")"
9418088,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
1042377,Who is standing beside the person that is wearing a dress?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing beside the person that is wearing a dress?"")"
16889676,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
10324400,How fat are the long skis?," # returns a string
    image_patch = ImagePatch(image)
    ski_patches = image_patch.find(""ski"")
    # Question assumes only one ski patch
    if len(ski_patches) == 0:
        # If no ski is found, query the image directly
        return image_patch.simple_query(""How fat are the long skis?"")
    return ski_patches[0].simple_query(""How fat are the long skis?"") # crop would include the skis so keep it in the query"
2211743,Is the sky clear or overcast?," # clear or overcast
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky clear or overcast?"")"
4224772,Are there bottles to the left of the pencils in the bottom part of the image?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bottles to the left of the pencils in the bottom part of the image?"")"
15478302,Is there any dark door or window in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dark door"") or image_patch.exists(""dark window""))"
18414234,Do you see either a knife or a chair in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""knife"") or image_patch.exists(""chair""))"
19779815,Is the book red or yellow?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book red or yellow?"")"
7257283,Are there men to the left of the picture?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.find(""man"")[0].horizontal_center < image_patch.horizontal_center)"
6621625,On which side of the picture is the bench?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bench?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19311589,Are there both fences and horses in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_fence and is_horse)"
171018070,What device is to the right of the container that the person is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the container that the person is to the left of?"")"
171031333,Do you see blankets in the picture that are not black?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket"") and not image_patch.find(""blanket"")[0].verify_property(""blanket"", ""black"")) # crop would include the blanket so keep it in the query"
16695341,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
8314287,Do you see any bottle or child there?," # bottle or child
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_child = image_patch.exists(""child"")
    return bool_to_yesno(is_bottle or is_child)"
5111363,Are there chairs or tables that are not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_chair or is_table)"
9230971,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
132422,Does the hair have short length and white color?," # returns yes or no
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair have short length and white color?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""short"") and hair_patches[0].verify_property(""hair"", ""white""))"
4822200,Do you see any lettuce on the food with the meat?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any lettuce on the food with the meat?"")"
3726666,What device is to the left of the curtain that is to the left of the glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the curtain that is to the left of the glasses?"")"
9954849,What kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is it?"")"
19409495,Are there any red trains or buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red train"") or image_patch.exists(""red bus"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
8965422,What kind of vegetable is to the left of the crate that is of the lettuce?," # contains a relation (left of, of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the left of the crate that is of the lettuce?"")"
623393,"What type of clothing is tan, the hat or the vest?"," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is tan, the hat or the vest?"")"
6436448,Is the color of the skirt the same as the scarf?," # returns yes or no
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the skirt the same as the scarf?"")
    for skirt_patch in skirt_patches:
        scarf_patches = image_patch.find(""scarf"")
        for scarf_patch in scarf_patches:
            if skirt_patch.verify_property(""skirt"", ""color"") == scarf_patch.verify_property(""scarf"", ""color""):
                return ""yes""
    return ""no"""
3303313,Is the blanket under a cat?," # contains a relation (under, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blanket under a cat?"")"
443663,What color is the picture?," # returns the most common color
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the picture?"")"
17267472,Is there any umbrella to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any umbrella to the right of the man?"")"
1885406,What is the toy on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toy on the bed?"")"
5557965,On which side is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4325825,On which side is the banana?," # left or right
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""On which side is the banana?"")
    return ""left"" if banana_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3196355,What does the batter hold?," # batter is a verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the batter hold?"")"
14470748,Who wears a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a jacket?"")"
16537736,Are there any houses behind the shrubs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""house"") and image_patch.exists(""shrubs""))"
1129541,What piece of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is made of wood?"")"
15270011,Is the racket to the right or to the left of the man that is wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket to the right or to the left of the man that is wearing a hat?"")"
12416703,Where is that cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that cat?"")"
15603088,The animal to the right of the envelope is lying on what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The animal to the right of the envelope is lying on what?"")"
5329077,Is the man on a bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on a bench?"")"
1945705,What kind of device is to the left of the device that looks silver and gray?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the device that looks silver and gray?"")"
17520003,What vehicle is to the right of the pine tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the pine tree?"")"
1259983,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
6413378,Is there a black keyboard or camera?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_keyboard = image_patch.exists(""black keyboard"")
    is_black_camera = image_patch.exists(""black camera"")
    return bool_to_yesno(is_black_keyboard or is_black_camera)"
947305,Is the sunny water blue and high?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sunny water blue and high?"")"
4367817,What type of animal in this scene is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal in this scene is brown?"")"
15485572,What is the vegetable on the hot dog with the cheese?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable on the hot dog with the cheese?"")"
12661142,What is the appliance in the kitchen called?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance in the kitchen called?"")"
41012743,The arrow is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The arrow is on what?"")"
4777414,What color is the bicycle in the bottom of the photo?," # contains a relation (bottom, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bicycle in the bottom of the photo?"")"
1185988,What is the device on top of the table that is to the right of the trashcan?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on top of the table that is to the right of the trashcan?"")"
13582968,Was granite used to make that floor?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was granite used to make that floor?"")"
6235273,Are there women in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman""))"
5377974,What is the girl playing with?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl playing with?"")"
51037065,On which side of the image is the fridge?," # left or right
    image_patch = ImagePatch(image)
    fridge_patches = image_patch.find(""fridge"")
    # Question assumes only one fridge patch
    if len(fridge_patches) == 0:
        # If no fridge is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fridge?"")
    if fridge_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5299477,Which kind of bag does the girl carry?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of bag does the girl carry?"")"
15135617,Is the white dog on a bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white dog on a bench?"")"
1111583,Is the male person to the right of a person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the male person to the right of a person?"")"
12352269,Are there both windows and doors in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
15610844,What kind of place is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of place is shown?"")"
11869032,Is the banana below a bird?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the banana below a bird?"")"
9878360,What color is the vehicle to the left of the fence?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the vehicle to the left of the fence?"")"
481765,Are there either any buses or trains in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus"") or image_patch.exists(""train""))"
6665919,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
9218340,Does the man to the left of the traffic cone wear a cap?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the traffic cone wear a cap?"")"
11981238,What is common to the blazer and the suit?," # contains a relation (common to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the blazer and the suit?"")"
16245,Is the shirt white or green?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt white or green?"")"
2595103,"In which part of the image are the cars, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the cars, the bottom or the top?"")"
2429130,"How does the sand look, dry or wet?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the sand look, dry or wet?"")"
4325920,Are there fruits to the right of the banana which is on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there fruits to the right of the banana which is on the table?"")"
6376614,What color is the car in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car in the middle?"")
    car_patch = car_patches[0]
    return car_patch.simple_query(""What color is the car in the middle?"") # crop would include the car so keep it in the query"
712063,What's the lamp made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the lamp made of?"")"
19358285,Which kind of furniture is to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the pillow?"")"
9647343,What type of material is the patio made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the patio made of?"")"
12545434,Who is wearing the suit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the suit?"")"
12894285,What is the color of the clouds in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the clouds in the sky?"")"
9843309,Do the flowers look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the flowers look orange?"")) # crop would include the flowers so keep it in the query"
618996,Is there a chair or a bed in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_chair or is_bed)"
18959736,Are there trucks to the left of the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""truck"") and image_patch.exists(""umbrella"") and image_patch.find(""truck"")[0].horizontal_center < image_patch.find(""umbrella"")[0].horizontal_center)"
867869,What color are the pants the man is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    man_patch = man_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    for pants_patch in pants_patches:
        if pants_patch.horizontal_center > man_patch.horizontal_center:
            return pants_patch.simple_query(""What color are the pants the man is wearing?"")
    return image_patch.simple_query(""What color are the pants the man is wearing?"") # if no pants are found to the right of the man, query the image directly"
551601,Are there any pillows or chairs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow"") or image_patch.exists(""chair""))"
10775785,Are there women to the left of the person with the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there women to the left of the person with the bag?"")"
5925408,What is the bike in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bike in front of?"")"
11328059,What type of fast food is shown in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fast food is shown in this photo?"")"
15427544,Are there either beds or desks in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bed"") or image_patch.exists(""desk""))"
13778498,What type of vehicle is behind the green tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is behind the green tree?"")"
41019603,What is the child standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child standing on?"")"
11705574,What is the wooden item of furniture called?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wooden item of furniture called?"")"
16817277,Is the man to the left or to the right of the woman?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the woman?"")"
1316363,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
18546659,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
10519192,What color is the kite that looks triangular?," # contains a relation (looks like), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the kite that looks triangular?"")"
1672200,Who is drinking?," # contains a relation (drinking from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is drinking?"")"
5703748,Is the building behind the tree white or brown?," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind the tree white or brown?"")"
5749240,Are the glove and the undershirt both black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Are the glove and the undershirt both black?"")
    glove_patch = glove_patches[0]
    undershirt_patches = image_patch.find(""undershirt"")
    # Question assumes only one undershirt patch
    if len(undershirt_patches) == 0:
        return ""yes""
    undershirt_patch = undershirt_patches[0]
    return bool_to_yesno(glove_patch.verify_property(""glove"", ""black"") and undershirt_patch.verify_property(""undershirt"", ""black""))"
18573157,Is the juice in a cup?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the juice in a cup?"")"
3445929,Is the brown horse on the right side of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown horse on the right side of the photo?"")"
16541709,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
15764335,Are there any dogs on the tan sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dog on tan sand"")) # crop would include the tan sand so keep it in the query"
1478089,Are the door and the garage door made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the door and the garage door made of the same material?"")"
1250685,Was this picture taken in a bathroom or at a dining room?," # contains a relation (in, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was this picture taken in a bathroom or at a dining room?"")"
10436844,Is the zebra's nose soft and brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra's nose soft and brown?"")"
10683765,Does the shirt have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""blue""))"
1593352,Do the draperies look white and striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the draperies look white and striped?"")"
16553304,Are the trunks both long and wide?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""trunk"", ""long"") and image_patch.verify_property(""trunk"", ""wide""))"
7165102,Is the car on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car on the left of the photo?"")"
11848830,Are both the banana that looks yellow and green and the banana that looks yellow and green short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the banana that looks yellow and green short?"") == ""yes"") and bool_to_yesno(image_patch.simple_query(""Is the banana that looks yellow and green short?"") == ""yes"")"
19279872,What is the man to the right of the helmet wearing?," # helmet is a headgear
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    helmet_patch = helmet_patches[0]
    for man_patch in man_patches:
        if man_patch.horizontal_center > helmet_patch.horizontal_center:
            return man_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")"
4285513,What is the color of the floor?," # returns the color of the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the floor?"")"
3974266,Do the trousers look tan?," # tan is a color
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""Do the trousers look tan?"")
    return bool_to_yesno(trousers_patches[0].verify_property(""trousers"", ""tan""))"
11595009,What are the devices to the right of the device that is to the right of the remote control?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the devices to the right of the device that is to the right of the remote control?"")"
6183000,Are there nightstands or beds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_nightstand = image_patch.exists(""nightstand"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_nightstand or is_bed)"
14143982,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
6123160,Are the speakers to the left of a Wii controller?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the speakers to the left of a Wii controller?"")"
3681634,Is the plastic fork in the top or in the bottom part of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic fork in the top or in the bottom part of the photo?"")"
13629530,What is the vehicle on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle on the street?"")"
1718325,Are there chairs or windows in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_chair or is_window)"
10607062,What color is the hat the man is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hat the man is in?"")"
1849976,What vegetables are to the left of the spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are to the left of the spoon?"")"
14827816,Is the statue made of bronze or stone?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue made of bronze or stone?"")"
857204,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
2201105,Is the ball pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball pink?"")"
14616023,What piece of furniture are the cords in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture are the cords in front of?"")"
161027411,Are there both doors and windows in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
8249677,On which side of the image is the black car?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""black car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the black car?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16184856,What is the striped animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the striped animal called?"")"
1479068,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
16155046,Is the dry grass below a zebra?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dry grass below a zebra?"")"
16515071,What is the person in the water wearing?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person in the water wearing?"")"
161015042,Who is wearing the goggles?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the goggles?"")"
19149868,What is pulled by the lady?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is pulled by the lady?"")"
5199994,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
19184475,Are the man glasses on the left side of the image?," # glasses on the left
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the man glasses on the left side of the image?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    return ""no"""
7149602,Is the shirt orange or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt orange or blue?"")"
19479555,What is the person to the right of the benches holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the benches holding?"")"
19273393,Are there both a door and a window in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
6481656,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
13127703,What kind of drink is to the left of the bottle the woman is pouring?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of drink is to the left of the bottle the woman is pouring?"")"
2378018,What is the toilet in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toilet in front of?"")"
8430841,Is the frisbee to the left of the guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee to the left of the guy?"")"
18616818,The man is watching who?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is watching who?"")"
179526,Is the white dog behind a girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white dog behind a girl?"")"
21018827,Is the river murky and calm?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the river murky and calm?"")"
3697449,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
3697807,Are there both a racket and a toothbrush in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_racket = image_patch.exists(""racket"")
    is_toothbrush = image_patch.exists(""toothbrush"")
    return bool_to_yesno(is_racket and is_toothbrush)"
1904643,What do both the car and the sign have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the car and the sign have in common?"")"
11764476,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4903948,On what kind of furniture is the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On what kind of furniture is the plate?"")"
61022361,What is the painting that is to the left of the clock hanging on?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the painting that is to the left of the clock hanging on?"")"
1527392,"What color is the fence, tan or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the fence, tan or black?"")"
19229351,Do you see both bowls and carrots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bowl"") and image_patch.exists(""carrot""))"
1297082,On which side is the silver fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side is the silver fork?"")
    for fork_patch in fork_patches:
        if fork_patch.horizontal_center < image_patch.horizontal_center:
            return ""left""
        else:
            return ""right"""
16757832,Are there any blue helmets or napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_helmet = image_patch.exists(""blue helmet"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_blue_helmet or is_napkin)"
839816,"In which part of the photo is the racket, the top or the bottom?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the racket, the top or the bottom?"")"
12385226,Is there a mirror in the bathroom?," # contains a relation (in the bathroom), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mirror""))"
18720852,Are there either blankets or tents in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blanket = image_patch.exists(""blanket"")
    is_tent = image_patch.exists(""tent"")
    return bool_to_yesno(is_blanket or is_tent)"
4675139,Is the cardboard box to the right or to the left of the woman that is on the left?," # left of the woman
    image_patch = ImagePatch(image)
    cardboard_box_patches = image_patch.find(""cardboard box"")
    # Question assumes only one cardboard box patch
    if len(cardboard_box_patches) == 0:
        # If no cardboard box is found, query the image directly
        return image_patch.simple_query(""Is the cardboard box to the right or to the left of the woman that is on the left?"")
    for cardboard_box_patch in cardboard_box_patches:
        woman_patches = image_patch.find(""woman"")
        # Question assumes only one woman patch
        if len(woman_patches) == 0:
            # If no woman is found, query the image directly
            return image_patch.simple_query(""Is the cardboard box to the right or to the left of the woman that is on the left?"")
        for woman_patch in woman_patches:
            if woman_patch.horizontal_center < image_patch.horizontal_center:
                if cardboard_box_patch.horizontal_center > woman_patch.horizontal_center:
                    return ""right""
                else:
                    return ""left""
    return ""right"""
19453453,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
19562503,Is the house in the bottom part or in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house in the bottom part or in the top of the photo?"")"
11737187,What is in front of the flowers that look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the flowers that look red?"")"
15710688,Is the shirt short sleeved or sleeveless?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt short sleeved or sleeveless?"")"
5533952,What are the white wires connected to?," # contains a relation (connected to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the white wires connected to?"")"
11313555,"What type of furniture is that, a table or a nightstand?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is that, a table or a nightstand?"")"
10508893,What animals are in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are in front of the trees?"")"
14501997,What is the gate made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the gate made of?"")"
45624,What color is the device on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the device on top of the table?"")"
181032044,Are these closed drawers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these closed drawers?"")"
383,What kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is made of wood?"")"
101054962,What is the person by the bananas wearing?," # contains a relation (by, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person by the bananas wearing?"")"
759165,What is the color of the tower in the middle of the picture?," # contains a relation (middle of the picture), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the tower in the middle of the picture?"")"
10775539,Is this giraffe tall and white?," # contains a relation (tall, white, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this giraffe tall and white?"")"
19981804,On which side of the photo is the colorful screen?," # left or right
    image_patch = ImagePatch(image)
    colorful_screen_patches = image_patch.find(""colorful screen"")
    # Question assumes only one colorful screen patch
    if len(colorful_screen_patches) == 0:
        # If no colorful screen is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the colorful screen?"")
    colorful_screen_patch = colorful_screen_patches[0]
    if colorful_screen_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7903654,Is the tap on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tap on the left side or on the right?"")"
6206183,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15212437,Is the coat black or beige?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coat black or beige?"")"
13123207,Does the kite near the field look high and red?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the kite near the field look high and red?"")"
7740092,Are there any utensils in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""utensil"")) # Question assumes only one utensil patch"
8774975,What is around the guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the guy?"")"
17728574,Do you see bananas or cookies?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""banana"") or image_patch.exists(""cookie""))"
14274506,Is the staircase different in color than the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the staircase different in color than the sky?"")"
1605874,What color are the containers that are on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the containers that are on the right?"")"
12495781,Are the people to the right or to the left of the cone that is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people to the right or to the left of the cone that is orange?"")"
14165681,"What type of clothing is light, the sweater or the cap?"," # contains a relation (lighter than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is light, the sweater or the cap?"")"
19982010,Is the chair to the right or to the left of the girl that is wearing jeans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the girl that is wearing jeans?"")"
5617223,"What color is the container to the left of the horse, green or silver?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the container to the left of the horse, green or silver?"")"
2428964,Is the water gray or teal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water gray or teal?"")"
19620769,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14785459,On which side of the picture is the lamp?," # left or right
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the lamp?"")
    return ""left"" if lamp_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1325617,Does the brown animal look tiny?," # returns yes or no
    image_patch = ImagePatch(image)
    brown_animal_patches = image_patch.find(""brown animal"")
    # Question assumes only one brown animal patch
    if len(brown_animal_patches) == 0:
        # If no brown animal is found, query the image directly
        return image_patch.simple_query(""Does the brown animal look tiny?"")
    return bool_to_yesno(brown_animal_patches[0].verify_property(""brown animal"", ""tiny""))"
5672532,Does that shirt look long sleeved?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does that shirt look long sleeved?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""long sleeved""))"
6146439,Does the box look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the box look green?"")"
1910285,Is the white container on the left of the image?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white container on the left of the image?"")"
13362134,Is that shower curtain to the left of a toilet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that shower curtain to the left of a toilet?"")"
161060488,Is there any cabinet to the right of the stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cabinet to the right of the stove?"")"
111055042,Is the chair on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair on the right?"")"
151068,Which kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is white?"")"
19387951,Is this place the forest or the garden?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this place the forest or the garden?"")"
1781695,What's on the blanket?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the blanket?"")"
17699779,Is she on a bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she on a bed?"")"
464441,"What piece of furniture is the blanket on, a bed or a sofa?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is the blanket on, a bed or a sofa?"")"
9505496,Are the wires above a man?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the wires above a man?"")"
4625512,What is the woman doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman doing?"")"
9441941,Is the woman's hair red or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's hair red or black?"")"
2387432,What's on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"")"
10534717,What is the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pillow on?"")"
19335685,"What fruits is the container behind of, apples or bananas?"," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits is the container behind of, apples or bananas?"")"
3127817,The goat is standing in what?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The goat is standing in what?"")"
1588567,Where does the man that to the right of the mirror sit?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where does the man that to the right of the mirror sit?"")"
7399543,What is the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the floor made of?"")"
13741124,What kind of animal is the house behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the house behind of?"")"
1174904,Is the cobblestone sidewalk both large and gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""cobblestone sidewalk"", ""large"") and image_patch.verify_property(""cobblestone sidewalk"", ""gray""))"
13375231,What is the lettuce on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lettuce on?"")"
1194027,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
9963477,Is the statue wearing a dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue wearing a dress?"")"
1151995,Which side of the photo is the yellow vase on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the yellow vase on?"")"
712821,What is common to the bear and the belt?," # common to two objects
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""What is common to the bear and the belt?"")
    bear_patch = bear_patches[0]
    belt_patches = image_patch.find(""belt"")
    # Question assumes only one belt patch
    if len(belt_patches) == 0:
        return image_patch.simple_query(""What is common to the bear and the belt?"")
    belt_patch = belt_patches[0]
    common_properties = bear_patch.verify_property(""bear"", ""brown"") and belt_patch.verify_property(""belt"", ""brown"")
    return ""brown"" if common_properties else ""nothing"""
1757418,What is the vehicle to the right of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the car?"")"
7624100,Are the trunks that are gray wet and large?," # contains a relation (wet, large, gray), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trunks that are gray wet and large?"")"
1125474,"On which side of the photo is the iron fence, the right or the left?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the iron fence, the right or the left?"")"
1300375,What is the name of the item of furniture that the printer is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture that the printer is on?"")"
5925196,What's the building covered by?," # assumes only one building patch
    image_patch = ImagePatch(image)
    building_patches = image_patch.find(""building"")
    if len(building_patches) == 0:
        return image_patch.simple_query(""What's the building covered by?"")
    return building_patches[0].simple_query(""What's the building covered by?"")"
1948055,What watercraft is the white rope tying?," # contains a relation (tying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What watercraft is the white rope tying?"")"
8540582,What kind of animal is in front of the leafy trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the leafy trees?"")"
3719411,What does the walking woman by the bus wear?," # contains a relation (walking by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the walking woman by the bus wear?"")"
1129508,Is the controller to the left of a pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the controller to the left of a pillow?"")"
18664084,Is there any sheep by the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any sheep by the fence?"")"
6912079,What animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is this?"") # crop would include the animal so keep it in the query"
3412029,Where is the person?," # returns the location of the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Where is the person?"")
    return person_patches[0].simple_query(""Where is the person?"") # crop would include the person so keep it in the query"
14161122,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
1781542,What is the item of furniture to the right of the baby the parent is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the baby the parent is to the left of?"")"
15699496,What is the cup that looks clean made of?," # assumes only one clean cup
    image_patch = ImagePatch(image)
    clean_cup_patches = image_patch.find(""cup"")
    for clean_cup_patch in clean_cup_patches:
        if clean_cup_patch.verify_property(""cup"", ""clean""):
            return clean_cup_patch.simple_query(""What is the cup that looks clean made of?"")
    return image_patch.simple_query(""What is the cup that looks clean made of?"") # if no clean cup is found, query the image directly"
12765451,What animals are to the right of the ladder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are to the right of the ladder?"")"
191044307,What animal is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is black?"")"
12639181,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
10630949,Is the person that is not male wearing an elbow pad?," # contains a relation (male, not male), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is not male wearing an elbow pad?"")"
14544602,What is the boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy holding?"")"
2986699,Of what material the dish?," # material of the dish
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what material the dish?"")"
161013513,What kind of animal is on the street?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the street?"")"
15143936,What animal is before the roof?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is before the roof?"")"
1955043,Who is playing with the ball?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing with the ball?"")"
91044150,What is the name of the animals in front of the trees beside the river?," # contains a relation (in front of, beside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animals in front of the trees beside the river?"")"
13483129,What kind of fruit is hanging?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is hanging?"")"
7317299,What is under the bush?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the bush?"")"
17432396,Are there kangaroos or birds in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kangaroo = image_patch.exists(""kangaroo"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_kangaroo or is_bird)"
10457241,What is the color of the trousers?," # returns the color of the trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""What is the color of the trousers?"")
    return trousers_patches[0].simple_query(""What is the color of the trousers?"") # crop would include the trousers so keep it in the query"
2913850,Is the placemat in the bottom or in the top part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the placemat in the bottom or in the top part?"")"
12788747,What is covered with blanket?," # contains a relation (covered with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with blanket?"")"
7343271,What is the item of furniture that is to the right of the man that is wearing a sweater?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is to the right of the man that is wearing a sweater?"")"
18673671,"In which part of the picture is the desk drawer, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the desk drawer, the bottom or the top?"")"
19900141,Are there napkins or tablecloths?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""napkin"") or image_patch.exists(""tablecloth""))"
19737232,Is the book on the right of the picture?," # assumes only one book patch
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    if len(book_patches) == 0:
        return image_patch.simple_query(""Is the book on the right of the picture?"")
    book_patch = book_patches[0]
    if book_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
475064,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
8594579,Is there a woman to the right of the orange object that is to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the right of the orange object that is to the right of the person?"")"
14602992,Which side of the image is the couch on?," # left or right
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the couch on?"")
    if couch_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9944587,How tall is the man that is wearing a shirt?," # returns height in pixels
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""How tall is the man that is wearing a shirt?"")
    man_patch = man_patches[0]
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return man_patch.simple_query(""How tall is the man that is wearing a shirt?"")
    shirt_patch = shirt_patches[0]
    return man_patch.simple_query(""How tall is the man that is wearing a shirt?"") # crop would include the shirt so keep it in the query"
13736712,Are there any giraffes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"")) # Question assumes only one giraffe patch"
6996118,The young girl is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The young girl is wearing what?"")"
19992576,Is the basket on the floor small and brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the basket on the floor small and brown?"")"
17332401,What is the boy in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy in front of?"")"
15586294,Which side is the leather armchair on?," # left or right
    image_patch = ImagePatch(image)
    armchair_patches = image_patch.find(""armchair"")
    # Question assumes only one armchair patch
    if len(armchair_patches) == 0:
        # If no armchair is found, query the image directly
        return image_patch.simple_query(""Which side is the leather armchair on?"")
    armchair_patch = armchair_patches[0]
    if armchair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15658324,What is the horse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse in front of?"")"
18453709,What is the item of furniture that has the same color as the controller the man is holding called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that has the same color as the controller the man is holding called?"")"
2531874,Who is playing?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing?"")"
3112009,Is the plate on the left side?," # assumes only one plate
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        return image_patch.simple_query(""Is the plate on the left side?"")
    plate_patch = plate_patches[0]
    if plate_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
1527613,On which side of the picture is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11781054,Are both the road and the roof the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    road_patches = image_patch.find(""road"")
    roof_patches = image_patch.find(""roof"")
    if len(road_patches) == 0 or len(roof_patches) == 0:
        return ""no""
    road_color = road_patches[0].simple_query(""What color is the road?"")
    roof_color = roof_patches[0].simple_query(""What color is the roof?"")
    return bool_to_yesno(road_color == roof_color)"
161027384,What is the green rug hanging on?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the green rug hanging on?"")"
14153714,Who is using the laptop?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is using the laptop?"")"
1969500,Who in the photo is standing?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who in the photo is standing?"")
    for person_patch in person_patches:
        if person_patch.verify_property(""person"", ""standing""):
            return person_patch.simple_query(""Who in the photo is standing?"")
    return image_patch.simple_query(""Who in the photo is standing?"")"
693318,Do you see any plates in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate""))"
19613394,The person on the skateboard is wearing what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person on the skateboard is wearing what?"")"
19927237,Is the blue car in front of the white van?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue car in front of the white van?"")"
31054022,What is the box sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box sitting on?"")"
17634413,Does the ground look snowy and brown?," # ground is a common object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ground"", ""snowy"") and image_patch.verify_property(""ground"", ""brown""))"
15185768,Does the sky look blue and clear?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""blue"") and image_patch.verify_property(""sky"", ""clear""))"
1589160,Does the person that is sitting lean against a fire hydrant?," # contains a relation (sitting on, leaning against, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person that is sitting lean against a fire hydrant?"")"
2142522,Are there any shopping carts or mannequins in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shopping cart"") or image_patch.exists(""mannequin""))"
17362234,Are there cages or scrub brushes in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cage = image_patch.exists(""cage"")
    is_scrub_brush = image_patch.exists(""scrub brush"")
    return bool_to_yesno(is_cage or is_scrub_brush)"
4955854,Is the lamp below the chain?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp below the chain?"")"
10463545,Is the computer to the right of the other computer silver or black?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer to the right of the other computer silver or black?"")"
2265037,What is the girl wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl wearing?"")"
15485146,Are there any blue numbers or letters?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blue_number = image_patch.exists(""blue number"")
    is_blue_letter = image_patch.exists(""blue letter"")
    return bool_to_yesno(is_blue_number or is_blue_letter)"
3483992,Is the long bus to the left or to the right of the person with the backpack?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long bus to the left or to the right of the person with the backpack?"")"
13598461,What is the device that is not on called?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is not on called?"")"
13885436,The sky has what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sky has what color?"")"
7432467,Is the black container to the left of the man that is on the motorcycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black container to the left of the man that is on the motorcycle?"")"
19540096,Is the fire in an oven?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fire in an oven?"")"
18291107,The horse is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The horse is where?"")"
5435474,Is the man that is to the left of the motorbike wearing a hat?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the motorbike wearing a hat?"")"
226307,Are there any tables in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table""))"
1944826,Who is reflected in the mirror?," # mirror is a tricky one, as it can be a reflection of the person or the environment
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is reflected in the mirror?"")"
6199650,What is the cooking utensil on top of the stove that is to the right of the woman called?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil on top of the stove that is to the right of the woman called?"")"
18435846,What is the color of the balloon that is to the right of the backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the balloon that is to the right of the backpack?"")"
8390894,Is the woman to the right of the man sitting on a sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the man sitting on a sofa?"")"
18896007,Which side of the image is the pot on?," # left or right
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the pot on?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19323898,Is that pillow on a couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that pillow on a couch?"")"
1281034,Where are the trees?," # returns the location of the trees
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""Where are the trees?"")
    return tree_patches[0].simple_query(""Where are the trees?"")"
13515147,What is on the cow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cow?"")"
91036716,What is the skater doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the skater doing?"")"
17791510,What is the person to the left of the boy carrying?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the boy carrying?"")"
13152020,Is the ground wet or dry?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground wet or dry?"")"
19312096,"On which side is the purse, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the purse, the left or the right?"")"
71002343,Are there breads in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bread""))"
9113663,Do you see either any snow or sand that are white?," # snow or sand
    image_patch = ImagePatch(image)
    is_snow = image_patch.exists(""snow"")
    is_sand = image_patch.exists(""sand"")
    if is_snow or is_sand:
        return ""yes""
    return ""no"""
10243612,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
555062,What vegetable is to the left of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the napkin?"")"
15599523,Is the dog on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog on the right side?"")"
101019673,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
333047,Do you see any men to the right of the orange tent?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the right of the orange tent?"")"
13907796,Is the shirt striped and green?," # shirt is the object, striped and green are the properties
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt striped and green?"")
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""striped"") and shirt_patch.verify_property(""shirt"", ""green""))"
17207604,Are there either bottles or shelves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_bottle or is_shelf)"
1890653,What vehicle is to the right of the train on the left of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the train on the left of the photo?"")"
7165131,Is that train engine small or large?," # contains a relation (small or large), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that train engine small or large?"")"
21049362,Where are the railroad tracks?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where are the railroad tracks?"")"
6224352,What is the animal looking at?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal looking at?"")"
14367593,What are the children playing?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the children playing?"")"
598297,Are there combs or figurines in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_comb = image_patch.exists(""comb"")
    is_figurine = image_patch.exists(""figurine"")
    return bool_to_yesno(is_comb or is_figurine)"
16409127,What is the wire on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wire on?"")"
5841062,Is the tunnel small or large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tunnel small or large?"")"
17560468,Do you see trains or windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_train or is_window)"
9321809,What is the person near the man wearing?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person near the man wearing?"")"
12352375,Is the vehicle that is sitting down black or blue?," # contains a relation (sitting down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle that is sitting down black or blue?"")"
7949280,Is the metal trash can to the left or to the right of the white thing near the shower curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal trash can to the left or to the right of the white thing near the shower curtain?"")"
5800248,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
4604785,Does the pizza slice to the left of the pizza have large size?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pizza slice to the left of the pizza have large size?"")"
15185845,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
2282232,Where is the snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the snow?"")"
7889197,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
11292587,Are there either any blankets or pictures in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket"") or image_patch.exists(""picture""))"
154682,Where does the bird stand on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where does the bird stand on?"")"
10435315,Is the man holding a racket?," # tennis racket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man holding a racket?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return ""no""
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
121035887,Do the man shorts have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the man shorts have white color?"")"
10770422,What kind of vehicle is to the left of the man that is to the left of the cows?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the man that is to the left of the cows?"")"
19659501,What is the color of the umbrella the bird is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the umbrella the bird is on?"")"
10595217,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
14803743,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
19743238,Is the man on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right side?"")"
3965204,Are the mountains covered with snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the mountains covered with snow?"")"
141024710,Are there both windows and cars in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window and is_car)"
6481635,What color do you think the shirt is?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What color do you think the shirt is?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What color do you think the shirt is?"")"
3623367,What's he doing?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""What's he doing?"")
    return man_patches[0].simple_query(""What's he doing?"")"
15634950,Where is the giraffe in front of the hay eating from?," # contains a relation (in front of, eating from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the giraffe in front of the hay eating from?"")"
16644500,What animal is the log pulled by?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the log pulled by?"")"
3202108,Which side is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10137201,Are the papers in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the papers in the bottom part of the picture?"") == ""yes"")"
5325670,Is the boy to the left or to the right of the person that is on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the person that is on the left?"")"
8438091,The picture is what color?," # image is a 3D array
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The picture is what color?"")"
4325939,On which side of the photo is the banana?," # left or right
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the banana?"")
    if banana_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1425189,What is the name of the brown piece of furniture?," # returns the name of the brown piece of furniture
    image_patch = ImagePatch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch.simple_query(""What is the name of the brown piece of furniture?"")
    for brown_patch in brown_patches:
        return brown_patch.simple_query(""What is the name of the brown piece of furniture?"") # crop would include the brown so keep it in the query"
5119962,Is the man to the right of glasses?," # glasses is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right of glasses?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    return bool_to_yesno(man_patch.horizontal_center > glasses_patch.horizontal_center)"
16523418,Is the toilet lid down or up?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toilet lid down or up?"")"
6522554,Which kind of device does the man hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device does the man hold?"")"
870619,What is the device to the left of the person that is to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the person that is to the left of the television?"")"
12713794,Does the woman to the left of the man wear a necklace?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the woman to the left of the man wear a necklace?"")"
824070,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
11593733,Which kind of furniture is right to the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is right to the pillow?"")"
3357821,Does the dog to the left of the other dog look small or large?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog to the left of the other dog look small or large?"")"
338026,Are the white candles short or tall?," # contains a relation (short or tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white candles short or tall?"")"
15346232,What kind of fruit is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is the girl holding?"")"
13553098,"On which side of the photo is the yellow vehicle, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the yellow vehicle, the right or the left?"")"
81030271,Is the gray car to the right or to the left of the cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray car to the right or to the left of the cart?"")"
1827581,What do you think is the cooking utensil that is to the right of the canister made of chrome?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the cooking utensil that is to the right of the canister made of chrome?"")"
8240699,What animal is in front of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the bird?"")"
10105081,Is the fence white or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence white or green?"")"
13613689,Is there a train or a fence in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_train or is_fence)"
10662521,What is the bottle made of?," # bottle is a common object
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""What is the bottle made of?"")
    return bottle_patches[0].simple_query(""What is the bottle made of?"") # crop would include the bottle so keep it in the query"
1152309,Which kind of fruit is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is on the plate?"")"
16701575,What device is to the right of the cake?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the cake?"")"
6572516,What material is the ceiling?," # ceiling is not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the ceiling?"")"
11213633,Are there both magazines and umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_magazine = image_patch.exists(""magazine"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_magazine and is_umbrella)"
8606777,What is the color of the egg in the middle of the picture?," # contains a relation (middle of the picture), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the egg in the middle of the picture?"")"
14371534,Are the gold pans on the right part or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the gold pans on the right part or on the left?"")"
16538076,What does the man that is not tall wear?," # contains a relation (tall, not tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man that is not tall wear?"")"
5483644,"On which side is the woman, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the woman, the left or the right?"")"
181041779,What is the animal in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in this photograph?"")"
1290926,Are there either any life vests or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_life_vest = image_patch.exists(""life vest"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_life_vest or is_flag)"
18273738,Do you see a cup?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cup""))"
4211922,Who is sitting on the table?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the table?"")"
6587526,What is the color of the girl to the left of the other girl?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the girl to the left of the other girl?"")"
6599090,What is the person to the right of the car holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the car holding?"")"
1174895,What is the vehicle in the parking lot?," # contains a relation (parking lot), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle in the parking lot?"")"
14755158,Who is the woman in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the woman in front of?"")"
18349161,Where does the cow that is standing stand?," # contains a relation (standing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where does the cow that is standing stand?"")"
7472884,On which side is the tap?," # left or right
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""On which side is the tap?"")
    if tap_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
111051831,On which side of the image is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3590007,On which side of the image is the fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fork?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2409726,Do you see men to the right of the bag the person is carrying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see men to the right of the bag the person is carrying?"")"
577862,Are the artwork and the computer desk made of the same material?," # returns yes or no
    image_patch = ImagePatch(image)
    artwork_patches = image_patch.find(""artwork"")
    # Question assumes only one artwork patch
    if len(artwork_patches) == 0:
        # If no artwork is found, query the image directly
        return image_patch.simple_query(""Are the artwork and the computer desk made of the same material?"")
    artwork_patch = artwork_patches[0]
    computer_desk_patches = image_patch.find(""computer desk"")
    # Question assumes only one computer desk patch
    if len(computer_desk_patches) == 0:
        return ""no""
    computer_desk_patch = computer_desk_patches[0]
    return bool_to_yesno(artwork_patch.verify_property(""artwork"", ""material"") == computer_desk_patch.verify_property(""computer desk"", ""material""))"
14298125,Who is playing Wii?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing Wii?"")"
9382689,What's the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the floor made of?"")"
12889614,Who is wearing the dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the dress?"")"
15127108,Does the tea pot above the receipt look short and white?," # receipt is a common object
    image_patch = ImagePatch(image)
    tea_pot_patches = image_patch.find(""tea pot"")
    # Question assumes only one tea pot patch
    if len(tea_pot_patches) == 0:
        # If no tea pot is found, query the image directly
        return image_patch.simple_query(""Does the tea pot above the receipt look short and white?"")
    for tea_pot_patch in tea_pot_patches:
        if tea_pot_patch.vertical_center < image_patch.vertical_center:
            return bool_to_yesno(tea_pot_patch.verify_property(""tea pot"", ""short"") and tea_pot_patch.verify_property(""tea pot"", ""white""))
    return ""no"""
15632653,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
485962,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
490992,Is the fence on the left side or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left side or on the right of the picture?"")"
17133284,Do the mountains look rocky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""mountains"", ""rocky""))"
17573742,Is the woman to the right of the camera wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the camera wearing a coat?"")"
3395780,Is the vehicle to the left of the parking meter covered in rain?," # contains a relation (left of, covered in rain), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle to the left of the parking meter covered in rain?"")"
1542668,Is there a black laptop or desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a black laptop or desk?"")"
1655442,What type of food is to the right of the waffles that are to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the right of the waffles that are to the right of the person?"")"
395290,How large is the bag?," # returns a string
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""How large is the bag?"")
    return bag_patches[0].simple_query(""How large is the bag?"") # crop would include the bag so keep it in the query"
16138893,Are there both motorcycles and cars in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_motorcycle and is_car)"
1462176,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
171032184,What hangs from the windows?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs from the windows?"")"
15962394,Are there both spoons and plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_spoon = image_patch.exists(""spoon"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_spoon and is_plate)"
16184773,What is in front of the giraffe that the tree is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the giraffe that the tree is behind of?"")"
8197176,What color is the jacket that the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the jacket that the man wears?"")"
3440931,What are that pieces of furniture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are that pieces of furniture called?"")"
337924,What is the fruit that is to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that is to the left of the chair?"")"
16208211,What do you think are the bowls on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think are the bowls on?"")"
18330260,Is the sky above the trees open and clear?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky above the trees open and clear?"")"
14119691,Does the squirrel to the right of the stuffed dog look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the squirrel to the right of the stuffed dog look white?"")"
18437694,Does the clock to the right of the statue have gold color and tiny size?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the clock to the right of the statue have gold color and tiny size?"")"
1252960,Where was the photo taken?," # contains a relation (where was the photo taken), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the photo taken?"")"
17454895,Is there a frisbee on the grass?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a frisbee on the grass?"")"
13180513,Are there either cakes or containers in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_container = image_patch.exists(""container"")
    return bool_to_yesno(is_cake or is_container)"
479962,Are there black cars or motorcycles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_car = image_patch.exists(""black car"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_black_car or is_motorcycle)"
19927240,Is the blue car behind or in front of the vehicle to the left of the police officer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue car behind or in front of the vehicle to the left of the police officer?"")"
5785831,What is in the glass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass?"")"
19246241,Are there any brown benches or buckets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_bucket = image_patch.exists(""bucket"")
    return bool_to_yesno(is_bench or is_bucket)"
3243803,"Where in the picture is the spoon, on the right or on the left?"," # assumes only one spoon
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    if len(spoon_patches) == 0:
        return image_patch.simple_query(""Where in the picture is the spoon, on the right or on the left?"")
    spoon_patch = spoon_patches[0]
    if spoon_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
6952486,Does the shirt look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look white?"")"
17401425,Is there a bag that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Is there a bag that is not brown?"")
    for bag_patch in bag_patches:
        if bag_patch.simple_query(""Is the bag brown?"") != ""yes"":
            return ""yes""
    return ""no"""
481240,"Which kind of furniture is large, the shelf or the cupboard?"," # contains a relation (large, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is large, the shelf or the cupboard?"")"
8531943,Are there any screens or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_screen = image_patch.exists(""screen"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_screen or is_bag)"
1969545,What is she wearing?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she wearing?"")"
91045271,"Which appliance is not white, the freezer or the ice maker?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which appliance is not white, the freezer or the ice maker?"")"
1051870,Are there chairs or tables that are not green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_chair or is_table)"
1366363,Does the taxi have a different color than the truck?," # returns yes or no
    image_patch = ImagePatch(image)
    taxi_patches = image_patch.find(""taxi"")
    # Question assumes only one taxi patch
    if len(taxi_patches) == 0:
        # If no taxi is found, query the image directly
        return image_patch.simple_query(""Does the taxi have a different color than the truck?"")
    taxi_color = taxi_patches[0].simple_query(""What color is the taxi?"")
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""Does the taxi have a different color than the truck?"")
    truck_color = truck_patches[0].simple_query(""What color is the truck?"")
    return bool_to_yesno(taxi_color != truck_color)"
5460839,In which part of the image is the dog?," # returns the horizontal position of the dog
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the dog?"")
    return dog_patches[0].horizontal_center"
18899476,What type of vegetable is to the right of the rice that is on the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is to the right of the rice that is on the plate?"")"
8606903,What food item is not wide?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food item is not wide?"")"
18394861,Are there any folding chairs or skateboards?," # returns yes or no
    image_patch = ImagePatch(image)
    is_folding_chair = image_patch.exists(""folding chair"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_folding_chair or is_skateboard)"
2327600,Is there an elephant near the pond?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an elephant near the pond?"")"
1575941,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9725865,What is the color of the floor that the desk is on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the floor that the desk is on top of?"")"
16654241,Is the TV on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the TV on the left or on the right?"")"
18685233,Which kind of vehicle is to the left of the flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the flags?"")"
9796068,Are there both a fence and a sheep in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_sheep = image_patch.exists(""sheep"")
    return bool_to_yesno(is_fence and is_sheep)"
181002473,Do you see any blue blanket or towel?," # returns yes or no
    image_patch = ImagePatch(image)
    blue_patches = image_patch.find(""blue blanket or towel"")
    return bool_to_yesno(len(blue_patches) > 0)"
1110330,Is the pillow to the left of the frog cream colored or green?," # pillow is to the left of the frog
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the left of the frog cream colored or green?"")
    for pillow_patch in pillow_patches:
        frog_patches = image_patch.find(""frog"")
        # Question assumes only one frog patch
        if len(frog_patches) == 0:
            # If no frog is found, query the image directly
            return image_patch.simple_query(""Is the pillow to the left of the frog cream colored or green?"")
        for frog_patch in frog_patches:
            if pillow_patch.horizontal_center < frog_patch.horizontal_center:
                return pillow_patch.best_text_match([""cream colored"", ""green""])
    return image_patch.simple_query(""Is the pillow to the left of the frog cream colored or green?"") # if no pillow is to the left of the frog, query the image directly"
511507,Is the antenna on the aircraft?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the antenna on the aircraft?"")"
10464417,"In which part is the tent, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the tent, the top or the bottom?"")"
10816730,Is the tree in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree in front of the building?"")"
18766115,Who is walking?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking?"")"
10625851,Are there either any fruits or plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fruit"") or image_patch.exists(""plate""))"
71018537,Is the person wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing a coat?"")"
4194722,Is the man wearing a helmet?," # helmet is a type of headgear
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man wearing a helmet?"")
    man_patch = man_patches[0]
    return man_patch.verify_property(""man"", ""helmet"")"
414248,"What animal are the women near the ocean riding, a pig or a horse?"," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal are the women near the ocean riding, a pig or a horse?"")"
683094,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
12140603,What device is to the left of the headphones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the headphones?"")"
5575209,The flowers are where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The flowers are where?"")"
8773829,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
12636428,Which kind of animal is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is black?"")"
1020584,What animals is the car behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals is the car behind of?"")"
11879418,The man is standing on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is standing on what?"")"
12334288,What device is to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the cabinet?"")"
691610,Is the monitor to the left of a book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the monitor to the left of a book?"")"
7552714,Is the color of the jacket black?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Is the color of the jacket black?"")
    return bool_to_yesno(jacket_patches[0].verify_property(""jacket"", ""black""))"
8492422,Is the man to the left of a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of a boy?"")"
13248061,What type of device is to the left of the keyboard in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the left of the keyboard in the bottom of the image?"")"
18252454,What is common to the roof and the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the roof and the sky?"")"
14443687,What do the cat and the book have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the cat and the book have in common?"")"
14571335,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
474885,Who wears a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a cap?"")"
141013015,"What color is the toilet, brown or white?"," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the toilet, brown or white?"")"
5515816,On which side of the image is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16774696,What is the surfer wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the surfer wearing?"")"
13701956,Is there any grass or sand that is not dry?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass or sand that is not dry?"")"
11606870,Is there a cow or a zebra in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cow"") or image_patch.exists(""zebra""))"
1589297,Does the fire hydrant look modern?," # modern is a property of fire hydrant
    image_patch = ImagePatch(image)
    firehydrant_patches = image_patch.find(""fire hydrant"")
    # Question assumes only one firehydrant patch
    if len(firehydrant_patches) == 0:
        # If no firehydrant is found, query the image directly
        return image_patch.simple_query(""Does the fire hydrant look modern?"")
    return bool_to_yesno(firehydrant_patches[0].verify_property(""fire hydrant"", ""modern""))"
942308,Is the cup empty or full?," # contains a relation (empty, full), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup empty or full?"")"
15815976,Is the woman wearing a scarf?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman wearing a scarf?"")"
3193231,Do you see either parking meters or brooms in the picture?," # parking meter or broom
    image_patch = ImagePatch(image)
    is_parking_meter = image_patch.exists(""parking meter"")
    is_broom = image_patch.exists(""broom"")
    return bool_to_yesno(is_parking_meter or is_broom)"
314218,Is the sign in front of the bridge small and white?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sign in front of the bridge small and white?"")"
18130465,Does the umbrella that is not dry look orange and open?," # contains a relation (not dry), so ask directly
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""Does the umbrella that is not dry look orange and open?"")
    for umbrella_patch in umbrella_patches:
        is_not_dry = umbrella_patch.verify_property(""umbrella"", ""dry"")
        if is_not_dry:
            return umbrella_patch.best_text_match([""orange"", ""open""]) == ""orange"" and umbrella_patch.verify_property(""umbrella"", ""open"") == True
    return ""no"""
7920817,What's in the paper?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the paper?"")"
18167292,What is on the bun in the top?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bun in the top?"")"
16929928,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
14113312,Is the woman to the left or to the right of the lady?," # lady is a woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left or to the right of the lady?"")
    for woman_patch in woman_patches:
        lady_patches = image_patch.find(""lady"")
        for lady_patch in lady_patches:
            if woman_patch.horizontal_center < lady_patch.horizontal_center:
                return ""left""
            else:
                return ""right"""
17993299,Is the horse to the left of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse to the left of a car?"")"
8717022,Is the small animal to the left of the vehicle that looks silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small animal to the left of the vehicle that looks silver?"")"
2998707,Which color is the chair that is on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the chair that is on the right?"")"
171017786,Do you see any cups to the left of the monitor?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cups to the left of the monitor?"")"
2220068,Is the girl to the right or to the left of the glasses the man is wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the glasses the man is wearing?"")"
1941568,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
17577787,Does the man's hair look short and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man's hair look short and white?"")"
6711650,Are there chairs to the left of the bottle the toilet is to the right of?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there chairs to the left of the bottle the toilet is to the right of?"")"
9825336,Which kind of furniture is the mat lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the mat lying on?"")"
11222427,Do you see fences or elephants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence or is_elephant)"
1233009,"What kind of furniture is not white, the entertainment center or the bed?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is not white, the entertainment center or the bed?"")"
1152020,Do you see either any plate or tomato that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_plate = image_patch.exists(""plate"") and image_patch.simple_query(""Is the plate red?"") == ""yes""
    is_red_tomato = image_patch.exists(""tomato"") and image_patch.simple_query(""Is the tomato red?"") == ""yes""
    return bool_to_yesno(is_red_plate or is_red_tomato)"
8961520,Who is surfing?," # contains a relation (surfer, surfing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is surfing?"")"
18106780,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
1892692,What color do you think the bowl that is to the right of the person is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the bowl that is to the right of the person is?"")"
6952082,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
3768067,What color is the pot the statue is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the pot the statue is to the right of?"")"
17866761,Is the clear glass on the shelf of the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clear glass on the shelf of the table?"")"
798020,Does the skirt look black or yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the skirt look black or yellow?"")"
828981,How old is he?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""How old is he?"")
    return person_patches[0].simple_query(""How old is he?"")"
7236463,Of what color is the book?," # returns the color of the book
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Of what color is the book?"")
    return book_patches[0].simple_query(""Of what color is the book?"") # crop would include the book so keep it in the query"
6376684,What color is the car to the left of the train car?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the car to the left of the train car?"")"
786798,Is this a photo of a beach?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a photo of a beach?"")"
19836753,What vehicles are to the left of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicles are to the left of the fence?"")"
15284615,Who is playing?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing?"")"
16785170,Is the man that is walking holding a remote control?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is walking holding a remote control?"")"
17746396,What's the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the boy wearing?"")"
3625764,Is there a mug to the right of the bottle which is to the right of the tap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a mug to the right of the bottle which is to the right of the tap?"")"
13826837,What color is the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the door?"")"
19249907,Are there any horses in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse in the field"")) # crop would include the field so keep it in the query"
2964690,What is in front of the mountains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the mountains?"")"
13396373,Are there vehicles to the right of the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""vehicle"") and image_patch.find(""truck"")[0].horizontal_center < image_patch.horizontal_center)"
493755,Does the scarf made of wool seem to be long and blue?," # returns a boolean
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch.simple_query(""Does the scarf made of wool seem to be long and blue?"")
    scarf_patch = scarf_patches[0]
    is_long = scarf_patch.verify_property(""scarf"", ""long"")
    is_blue = scarf_patch.verify_property(""scarf"", ""blue"")
    return bool_to_yesno(is_long and is_blue)"
1189986,Is the man behind the elephant holding a surfboard?," # contains a relation (behind, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man behind the elephant holding a surfboard?"")"
8792466,Which color is the closed window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the closed window?"")"
10188423,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8965417,What kind of vegetable is to the right of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the girl?"")"
4929965,Is there a black racket or clock in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black racket"") or image_patch.exists(""clock""))"
4782038,What kind of animal is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is white?"")"
14658201,Is the sheep that looks white and brown made of plastic?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sheep that looks white and brown made of plastic?"")"
1441865,Do you see any boxes on the table under the grill?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boxes on the table under the grill?"")"
1424926,What is the tag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tag on?"")"
5543521,What is the piece of furniture that is to the right of the person who is working on a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the right of the person who is working on a laptop?"")"
3635257,Is there any freezer in this photo?," # freezer
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""freezer""))"
8821026,Are there either any bags or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""chair""))"
13669952,In what vehicle is the bus driver?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In what vehicle is the bus driver?"")"
17204662,What is that man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man in front of?"")"
380866,Are there any girls or radios?," # returns yes or no
    image_patch = ImagePatch(image)
    is_girl = image_patch.exists(""girl"")
    is_radio = image_patch.exists(""radio"")
    return bool_to_yesno(is_girl or is_radio)"
13775896,The girl is sitting on what?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The girl is sitting on what?"")"
18798369,Is the white lamp to the left or to the right of the pillow that is in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white lamp to the left or to the right of the pillow that is in the center?"")"
16545552,What color do you think is the vehicle the girl is washing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think is the vehicle the girl is washing?"")"
16719872,Are there motorcycles to the left of the man who is wearing a hat?," # contains a relation (to the left of, wearing a hat, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorcycle"") and image_patch.exists(""man wearing a hat"")) # contains a relation (to the left of, wearing a hat, etc), so ask directly"
2954090,Is the garbage can to the right or to the left of the person that is pushing the stroller?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garbage can to the right or to the left of the person that is pushing the stroller?"")"
13711589,What do the truck and the street sign have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the truck and the street sign have in common?"")"
10227573,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
161071156,What animal is the man leading?," # contains a relation (leading), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the man leading?"")"
161036781,What is the piece of furniture to the right of the curtain the dresser is in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the curtain the dresser is in front of?"")"
7190226,Does the puddle look large?," # returns yes or no
    image_patch = ImagePatch(image)
    puddle_patches = image_patch.find(""puddle"")
    # Question assumes only one puddle patch
    if len(puddle_patches) == 0:
        # If no puddle is found, query the image directly
        return image_patch.simple_query(""Does the puddle look large?"")
    return bool_to_yesno(puddle_patches[0].verify_property(""puddle"", ""large""))"
11675152,Who throws the frisbee?," # contains a relation (throwing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who throws the frisbee?"")"
8723676,Which kind of animal is the water on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the water on?"")"
61046657,Do you think that traffic light is tall?," # traffic light is a common object
    image_patch = ImagePatch(image)
    traffic_light_patches = image_patch.find(""traffic light"")
    # Question assumes only one traffic light patch
    if len(traffic_light_patches) == 0:
        # If no traffic light is found, query the image directly
        return image_patch.simple_query(""Do you think that traffic light is tall?"")
    return bool_to_yesno(traffic_light_patches[0].verify_property(""traffic light"", ""tall""))"
9581034,On which side is the wine glass?," # left or right
    image_patch = ImagePatch(image)
    wine_glass_patches = image_patch.find(""wine glass"")
    # Question assumes only one wine glass patch
    if len(wine_glass_patches) == 0:
        # If no wine glass is found, query the image directly
        return image_patch.simple_query(""On which side is the wine glass?"")
    return ""left"" if wine_glass_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
181002374,Is the napkin to the right or to the left of the pizza that is shown in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin to the right or to the left of the pizza that is shown in the image?"")"
18535266,Is the face mask made of the same material as the mask?," # assumes only one face mask and one mask
    image_patch = ImagePatch(image)
    face_mask_patches = image_patch.find(""face mask"")
    mask_patches = image_patch.find(""mask"")
    if len(face_mask_patches) == 0 or len(mask_patches) == 0:
        return ""no""
    face_mask_patch = face_mask_patches[0]
    mask_patch = mask_patches[0]
    return bool_to_yesno(face_mask_patch.verify_property(""face mask"", ""material"") == mask_patch.verify_property(""mask"", ""material""))"
11254215,What is the tan item of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tan item of furniture?"")"
1852010,How is the device to the right of the device on the desk called?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the device to the right of the device on the desk called?"")"
1587534,Is the device on the floor black and large?," # returns yes or no
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Is the device on the floor black and large?"")
    for device_patch in device_patches:
        if device_patch.vertical_center > image_patch.vertical_center / 2: # on the floor
            if device_patch.simple_query(""Is the device black?"") == ""yes"" and device_patch.simple_query(""Is the device large?"") == ""yes"":
                return ""yes""
    return ""no"""
8470757,Are there any surfboards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""surfboard""))"
11273949,Is the shirt white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt white?"")"
7475238,What's the airplane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the airplane in front of?"")"
16685900,Where does the horse to the right of the hose run?," # contains a relation (right of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where does the horse to the right of the hose run?"")"
3932624,Are there either any gray chairs or laptops?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gray_chair = image_patch.exists(""gray chair"")
    is_laptop = image_patch.exists(""laptop"")
    return bool_to_yesno(is_gray_chair or is_laptop)"
10584099,Is the water brown or blue?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water brown or blue?"")"
9256263,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
18719769,Is the man wearing glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing glasses?"")"
18342439,What animal is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is white?"")"
8665725,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
5440407,What vehicle isn't black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle isn't black?"")"
4104707,On which side of the picture is the oven?," # left or right
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the oven?"")
    return ""left"" if oven_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3126763,What is common to the logo and the letter?," # returns a string
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""What is common to the logo and the letter?"")
    letter_patches = image_patch.find(""letter"")
    # Question assumes only one letter patch
    if len(letter_patches) == 0:
        return image_patch.simple_query(""What is common to the logo and the letter?"")
    logo_patch = logo_patches[0]
    letter_patch = letter_patches[0]
    common_properties = logo_patch.verify_property(""logo"", ""red"") and letter_patch.verify_property(""letter"", ""red"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""blue"") and letter_patch.verify_property(""letter"", ""blue"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""green"") and letter_patch.verify_property(""letter"", ""green"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""yellow"") and letter_patch.verify_property(""letter"", ""yellow"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""orange"") and letter_patch.verify_property(""letter"", ""orange"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""purple"") and letter_patch.verify_property(""letter"", ""purple"")
    common_properties = common_properties or logo_patch.verify_property(""logo"", ""pink"") and"
18640925,What animal is in the water the man is walking through?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water the man is walking through?"")"
125488,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
5925435,What is the sidewalk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sidewalk made of?"")"
17563472,What is the pattern of the coat?," # returns the pattern of the coat
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What is the pattern of the coat?"")
    return coat_patches[0].simple_query(""What is the pattern of the coat?"") # crop would include the coat so keep it in the query"
4819547,What kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is white?"")"
14263174,What color do you think the chair that is to the right of the other chair is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the chair that is to the right of the other chair is?"")"
7515210,Is the man that is to the left of the person riding the green train in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the person riding the green train in front of the fence?"")"
9239936,Do the cows near the trees have white color?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the cows near the trees have white color?"")"
1885178,"In which part of the image is the remote control, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the remote control, the bottom or the top?"")"
12341631,Which color is the bag in the top part?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag in the top part?"")"
5532909,"What is the weather like, cloudless or maybe rainy?"," # cloudless or rainy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the weather like, cloudless or maybe rainy?"")"
2618222,What is connected to the open laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is connected to the open laptop?"")"
3252220,Of which color is the shirt the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color is the shirt the man wears?"")"
8947801,What is in the vase?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the vase?"")"
10841562,Is the color of the pants the same as the shorts?," # returns yes or no
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Is the color of the pants the same as the shorts?"")
    for pants_patch in pants_patches:
        shorts_patches = image_patch.find(""shorts"")
        for shorts_patch in shorts_patches:
            if pants_patch.verify_property(""pants"", ""color"") == shorts_patch.verify_property(""shorts"", ""color""):
                return ""yes""
    return ""no"""
15511838,What kind of furniture is to the left of the bucket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the bucket?"")"
14495306,Is there any racket to the right of the person that the woman is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any racket to the right of the person that the woman is to the left of?"")"
14841932,Do the tiles have square shape and black color?," # returns yes or no
    image_patch = ImagePatch(image)
    tile_patches = image_patch.find(""tile"")
    # Question assumes only one tile patch
    if len(tile_patches) == 0:
        # If no tile is found, query the image directly
        return image_patch.simple_query(""Do the tiles have square shape and black color?"")
    return bool_to_yesno(tile_patches[0].verify_property(""tile"", ""square"") and tile_patches[0].verify_property(""tile"", ""black""))"
41029381,What is the vehicle that is the same color as the shirt called?," # shirt is the first object found
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the vehicle that is the same color as the shirt called?"")
    shirt_patch = shirt_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        return image_patch.simple_query(""What is the vehicle that is the same color as the shirt called?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.simple_query(""Is the vehicle the same color as the shirt?"") == ""yes"":
        return vehicle_patch.simple_query(""What is the vehicle that is the same color as the shirt called?"")
    return image_patch.simple_query(""What is the vehicle that is the same color as the shirt called?"")"
161027428,Are there both windows and doors in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
16478246,Does the pillow to the right of the man have green color and large size?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Does the pillow to the right of the man have green color and large size?"")
    for pillow_patch in pillow_patches:
        if pillow_patch.horizontal_center > image_patch.horizontal_center:
            return bool_to_yesno(pillow_patch.verify_property(""pillow"", ""green"") and pillow_patch.verify_property(""pillow"", ""large""))
    return ""no"""
9450308,Is the happy person wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy person wearing a hat?"")"
11850389,What place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"")"
17250452,What kind of appliance is on the right of the drawer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is on the right of the drawer?"")"
14857961,Is the lady to the right of a woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right of a woman?"")"
132385,What cooking utensils are to the left of the pan on the right side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensils are to the left of the pan on the right side?"")"
9745131,Which color is the truck that is to the left of the lamps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the truck that is to the left of the lamps?"")"
5546009,What type of bird is the same color as the motorcycle in the bottom of the image?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of bird is the same color as the motorcycle in the bottom of the image?"")"
867818,Is the man on the skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the skateboard?"")"
13896221,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
1964517,What is the food that is above the white paper?," # contains a relation (above), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is above the white paper?"")"
15705231,Is the shelf to the left of a cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left of a cabinet?"")"
15693846,Is the motorcycle parked on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the motorcycle parked on the grass?"")"
13872995,Who is jumping?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is jumping?"")"
4502830,Is this a dog or a cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a dog or a cat?"")"
12584623,What is the person with the bag wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person with the bag wearing?"")"
7202064,"What is this, a bus or a truck?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a bus or a truck?"")"
16542208,Do you see either any beds or blankets there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bed"") or image_patch.exists(""blanket""))"
11700224,Do you see both lettuce and salad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lettuce = image_patch.exists(""lettuce"")
    is_salad = image_patch.exists(""salad"")
    return bool_to_yesno(is_lettuce and is_salad)"
1067136,Is the ball on the tree?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball on the tree?"")"
364079,What kind of furniture is to the right of the blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the blanket?"")"
2533062,How large is the ground the zebra is standing on?," # returns a string
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch.simple_query(""How large is the ground the zebra is standing on?"")
    zebra_patch = zebra_patches[0]
    return zebra_patch.simple_query(""How large is the ground the zebra is standing on?"") # crop would include the ground so keep it in the query"
19683710,The clock is inside what?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The clock is inside what?"")"
15674863,Is the racket in the top part?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket in the top part?"")"
4860320,Do you see any skateboards to the right of the person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any skateboards to the right of the person that is wearing a shirt?"")"
2292637,What is the color of the shirt that the passenger is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt that the passenger is wearing?"")"
9175259,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
8714882,How big is the carrot in the top of the picture?," # returns a string
    image_patch = ImagePatch(image)
    carrot_patches = image_patch.find(""carrot"")
    # Question assumes only one carrot patch
    if len(carrot_patches) == 0:
        # If no carrot is found, query the image directly
        return image_patch.simple_query(""How big is the carrot in the top of the picture?"")
    carrot_patch = carrot_patches[0]
    if carrot_patch.vertical_center > image_patch.vertical_center:
        return carrot_patch.simple_query(""How big is the carrot in the top of the picture?"")
    return carrot_patch.simple_query(""How big is the carrot in the bottom of the picture?"")"
1638685,What is the name of the vegetable that is on the yellow food?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable that is on the yellow food?"")"
5828256,Is the clock on a tower?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock on a tower?"")"
18937563,What kind of animal is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is orange?"")"
14360113,What is the smiling woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the smiling woman holding?"")"
593188,Is the hair short?," # hair is a property of the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the hair short?"")
    return bool_to_yesno(person_patches[0].verify_property(""hair"", ""short""))"
10824666,Are there ladies to the left of the man that is wearing shorts?," # contains a relation (left of, wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there ladies to the left of the man that is wearing shorts?"")"
1890604,Is the gray car to the left or to the right of the garbage bin?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray car to the left or to the right of the garbage bin?"")"
7574939,Is there any table or plate that is white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    plate_patches = image_patch.find(""plate"")
    for table_patch in table_patches:
        if table_patch.verify_property(""table"", ""white""):
            return ""yes""
    for plate_patch in plate_patches:
        if plate_patch.verify_property(""plate"", ""white""):
            return ""yes""
    return ""no"""
12252101,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
6943442,What cooking utensil is on the oven?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is on the oven?"")"
2977077,The propeller that looks red is what pattern?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The propeller that looks red is what pattern?"")"
11190306,Which kind of animal is to the left of the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the left of the train?"")"
5107190,Do you see both an airplane and a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_airplane = image_patch.exists(""airplane"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_airplane and is_truck)"
4360982,How old is the child?," # returns a string
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""How old is the child?"")
    return child_patches[0].simple_query(""How old is the child?"") # crop would include the child so keep it in the query"
12536783,What kind of animal is in front of the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the pole?"")"
443846,Are the glasses to the right or to the left of the man that is wearing a t-shirt?," # glasses and man are found in the image
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses to the right or to the left of the man that is wearing a t-shirt?"")
    glasses_patch = glasses_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the glasses to the right or to the left of the man that is wearing a t-shirt?"")
    man_patch = man_patches[0]
    if glasses_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
18655269,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
7405860,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
1705569,Does the pot on top of the stove look black?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pot on top of the stove look black?"")"
1028569,Are there both a cyclist and a helmet in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cyclist = image_patch.exists(""cyclist"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_cyclist and is_helmet)"
13954115,Are there any men to the left of the person in the crowd?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the person in the crowd?"")"
12436797,What kind of device is to the left of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the keyboard?"")"
1017626,Who is inside the train?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is inside the train?"")"
7650014,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15889871,What is the person to the left of the car doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the car doing?"")"
1310985,Is the yellow vehicle to the left of a lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow vehicle to the left of a lamp?"")"
646935,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
9495263,Is the woman to the left or to the right of the man that wears a cap?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the man that wears a cap?"")"
946016,Do you think the animal that is sitting-down is small or large?," # contains a relation (sitting-down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the animal that is sitting-down is small or large?"")"
9617920,Do the garbage can and the pan have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    garbage_can_patches = image_patch.find(""garbage can"")
    # Question assumes only one garbage can patch
    if len(garbage_can_patches) == 0:
        # If no garbage can is found, query the image directly
        return image_patch.simple_query(""Do the garbage can and the pan have the same color?"")
    garbage_can_patch = garbage_can_patches[0]
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        return ""no""
    pan_patch = pan_patches[0]
    return bool_to_yesno(garbage_can_patch.verify_property(""garbage can"", ""blue"") == pan_patch.verify_property(""pan"", ""blue""))"
3578781,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
4695656,What is the lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lamp on?"")"
13696926,The homes that are to the left of the people have what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The homes that are to the left of the people have what color?"")"
16946079,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
18986542,Is the napkin on the right side?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin on the right side?"")"
11513897,What appliance is the label on?," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""What appliance is the label on?"")
    appliance_patch = appliance_patches[0]
    return appliance_patch.simple_query(""What appliance is the label on?"") # crop would include the label so keep it in the query"
8240644,What is the color of the bird's tail?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bird's tail?"")"
5245080,Is he to the right or to the left of the camera?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is he to the right or to the left of the camera?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
17800894,Are there both a window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
191027873,Where is the snowboard?," # returns the location of the snowboard
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""Where is the snowboard?"")
    return snowboard_patches[0].simple_query(""Where is the snowboard?"")"
1964079,Are the box and the paper the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the box and the paper the same color?"")) # crop would include the box and paper so keep it in the query"
