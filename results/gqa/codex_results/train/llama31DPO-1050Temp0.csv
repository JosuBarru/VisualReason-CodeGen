sample_id,query,generated_code
14145991,Are the white blinds to the right of a clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white blinds to the right of a clock?"")"
16906415,Which kind of furniture is to the left of the bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the bed?"")"
294499,Are there any bikes or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bike or is_car)"
7125126,What is the man guiding?," # contains a relation (guiding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man guiding?"")"
13561987,What is the avocado on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the avocado on?"")"
15472689,What is the color of the shirt the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the woman is wearing?"")"
12757581,What cooking utensil is left of the oven?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is left of the oven?"")"
7639953,What is in the box?," # contains a relation (in, on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the box?"")"
12963506,What is the device on the pillow on the right side?," # contains a relation (on the right side of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the pillow on the right side?"")"
15276125,Are there any bags or coats that are purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_coat = image_patch.exists(""coat"")
    is_purple = image_patch.exists(""purple"")
    return bool_to_yesno(is_bag or is_coat or is_purple)"
994731,What kind of clothing isn't orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing isn't orange?"")"
2912472,Which color do you think the device that the woman is holding is?," # returns the color of the device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Which color do you think the device that the woman is holding is?"")
    return device_patches[0].simple_query(""What color is the device?"") # crop would include the woman so keep it in the query"
19390027,What do you think is the animal in front of the weeds called?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the animal in front of the weeds called?"")"
6177054,Which kind of appliance is stained?," # contains a relation (stained by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is stained?"")"
14455724,The girl is watching what?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The girl is watching what?"")"
8661932,Who is wearing eyeglasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing eyeglasses?"")"
1529817,Is there a woman to the right of the person behind the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the right of the person behind the computer?"")"
17604190,Are there children to the right of the dessert on the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there children to the right of the dessert on the napkin?"")"
6582118,Does the city look paved?," # city is a specific object
    image_patch = ImagePatch(image)
    city_patches = image_patch.find(""city"")
    # Question assumes only one city patch
    if len(city_patches) == 0:
        # If no city is found, query the image directly
        return image_patch.simple_query(""Does the city look paved?"")
    return bool_to_yesno(city_patches[0].verify_property(""city"", ""paved""))"
2206962,Are there chairs or televisions that are silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_tlevision = image_patch.exists(""television"")
    is_silver_chair = image_patch.exists(""chair"") and image_patch.exists(""silver"")
    is_silver_tlevision = image_patch.exists(""television"") and image_patch.exists(""silver"")
    return bool_to_yesno(is_chair or is_tlevision or is_silver_chair or is_silver_tlevision)"
7171984,What is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees?"")"
1313960,What is the name of the device that is the same color as the shirt the woman is wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device that is the same color as the shirt the woman is wearing?"")"
11430982,On which side of the photo is the microwave?," # left or right
    image_patch = ImagePatch(image)
    microwave_patches = image_patch.find(""microwave"")
    # Question assumes only one microwave patch
    if len(microwave_patches) == 0:
        # If no microwave is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the microwave?"")
    return ""left"" if microwave_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
17420868,Who is in front of the chair on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the chair on the right of the picture?"")"
4469385,What kind of animal runs through the field?," # contains a relation (running through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal runs through the field?"")"
17801829,Is there a traffic light or a bike in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""traffic light"") or image_patch.exists(""bike""))"
6295323,What is on the coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the coffee table?"")"
239133,Is the baseball player on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baseball player on the right side of the picture?"")"
181468,The leaves are in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The leaves are in front of what?"")"
8632635,Are there bags or coats that are brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_coat = image_patch.exists(""coat"")
    is_brown = image_patch.exists(""brown"")
    return bool_to_yesno(is_bag or is_coat) and bool_to_yesno(is_brown)"
15112496,Are there any cell phones in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cell phone""))"
10930199,What is the piece of furniture to the left of the dishwasher?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the dishwasher?"")"
18692997,What is the TV in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the TV in front of?"")"
388775,Is the smiling man to the left of the food wearing glasses?," # contains a relation (left of, wearing glasses, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the smiling man to the left of the food wearing glasses?"")"
15587569,"Which kind of food is green, the lemon or the onion?"," # contains a relation (green, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is green, the lemon or the onion?"")"
9537823,What is the sign that hangs on the pole made of metal?," # contains a relation (on, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign that hangs on the pole made of metal?"")"
17159364,What color does the horse that is to the left of the man have?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the horse that is to the left of the man have?"")"
3514396,What is the barefoot boy holding?," # barefoot boy
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What is the barefoot boy holding?"")
    boy_patch = boy_patches[0]
    holding_patches = image_patch.find(""holding"")
    # Question assumes only one holding patch
    if len(holding_patches) == 0:
        return image_patch.simple_query(""What is the barefoot boy holding?"")
    holding_patch = holding_patches[0]
    return holding_patch.simple_query(""What is the barefoot boy holding?"") # crop would include the boy so keep it in the query"
1417784,Which color is the shirt the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt the man wears?"")"
17407496,Who wears a ring?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a ring?"")"
10321651,What is on the napkin?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the napkin?"")"
9597184,"On which side is the book, the right or the left?"," # assumes one book patch
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""On which side is the book, the right or the left?"")
    book_patch = book_patches[0]
    if book_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
14643774,On which side of the image is the pillow?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the pillow?"")
    return ""right"" if pillow_patches[0].horizontal_center > image_patch.horizontal_center else ""left"""
5319064,On which side of the image are the chairs?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the chairs?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8169749,Which color is the jacket the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the jacket the man wears?"")"
13459763,Is the tray to the left or to the right of the plate that looks green?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tray to the left or to the right of the plate that looks green?"")"
16739795,Is the orange cone on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    orange_cone_patches = image_patch.find(""orange cone"")
    # Question assumes only one orange_cone patch
    if len(orange_cone_patches) == 0:
        # If no orange_cone is found, query the image directly
        return image_patch.simple_query(""Is the orange cone on the left side?"")
    if orange_cone_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
18599220,"What kind of furniture is beige, the sofa or the shelf?"," # contains a relation (beige), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is beige, the sofa or the shelf?"")"
7433918,The house is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The house is in front of what?"")"
884755,Is there a cup or a bread in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_bread = image_patch.exists(""bread"")
    return bool_to_yesno(is_cup or is_bread)"
18192489,Do you see boxes or bottles there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""box"") or image_patch.exists(""bottle""))"
4751864,Is there a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
6754776,"What is the woman waiting for, a train or a bus?"," # contains a relation (waiting for), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman waiting for, a train or a bus?"")"
13776035,What is the ceiling made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ceiling made of?"")"
19866008,Is the camera to the right or to the left of the man that is to the right of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the camera to the right or to the left of the man that is to the right of the laptop?"")"
2738148,On which side is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13358337,What is the person on the pole wearing?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on the pole wearing?"")"
8696055,Do you see a motorcycle that is black?," # returns yes or no
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Do you see a motorcycle that is black?"")
    return bool_to_yesno(motorcycle_patches[0].verify_property(""motorcycle"", ""black""))"
18509817,What appliance is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is not white?"")"
21059536,In which part of the picture is the picnic table?," # horizontal center
    image_patch = ImagePatch(image)
    picnic_table_patches = image_patch.find(""picnic table"")
    # Question assumes only one picnic table patch
    if len(picnic_table_patches) == 0:
        # If no picnic table is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the picnic table?"")
    return ""center"""
1591996,Is the woman to the right or to the left of the man that the pizza is displayed on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the man that the pizza is displayed on?"")"
18226033,Is the woman to the right or to the left of the brown chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the brown chair?"")"
16927052,What is the color of the necktie the sweater is above?," # contains a relation (above), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the necktie the sweater is above?"")"
16396180,"On which side is the man, the right or the left?"," # assumes only one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man, the right or the left?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
18314727,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
14307324,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
7996638,Are there any chargers or televisions in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_charger = image_patch.exists(""charger"")
    is_tv = image_patch.exists(""television"")
    return bool_to_yesno(is_charger or is_tv)"
3548933,What is the item of furniture to the right of the picture in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the picture in the center?"")"
2651458,Which part of the photo is the video camera in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the photo is the video camera in?"")"
17702915,Does the zebra to the right of the other zebra look soft?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra to the right of the other zebra look soft?"")"
1687164,What's the bottle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bottle on?"")"
16556000,The fence is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The fence is in front of what?"")"
7249646,Is the car to the right or to the left of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the right or to the left of the bus?"")"
21069945,What is the ground covered by?," # ground covered by
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ground covered by?"")"
16627665,Is the catcher on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher on the left or on the right?"")"
6204028,What is on the calm water?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the calm water?"")"
16500475,Are the muffins on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the muffins on the right?"")"
2772972,Is the picture on the right of the picture?," # assumes only one picture
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture on the right of the picture?"")
    for picture_patch in picture_patches:
        right_picture_patches = image_patch.find(""picture"")
        for right_picture_patch in right_picture_patches:
            if right_picture_patch.horizontal_center > picture_patch.horizontal_center:
                return ""yes""
    return ""no"""
151050840,On which side of the photo is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19848861,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
14305781,What is the cooking utensil in the appliance that is not closed?," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""What is the cooking utensil in the appliance that is not closed?"")
    for appliance_patch in appliance_patches:
        if appliance_patch.simple_query(""Is the appliance closed?"") == ""no"":
            cooking_utensil_patches = image_patch.find(""cooking utensil"")
            for cooking_utensil_patch in cooking_utensil_patches:
                return cooking_utensil_patch.simple_query(""What is the cooking utensil in the appliance that is not closed?"")
    return image_patch.simple_query(""What is the cooking utensil in the appliance that is not closed?"")"
14936661,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
10172278,Is the bookshelf on the right or on the left of the picture?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bookshelf on the right or on the left of the picture?"")"
1389582,How is the piece of furniture in the image called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the piece of furniture in the image called?"")"
12777675,Are there birds or leopards in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bird = image_patch.exists(""bird"")
    is_leopard = image_patch.exists(""leopard"")
    return bool_to_yesno(is_bird or is_leopard)"
1342694,Which side of the image are the bags on?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Which side of the image are the bags on?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12861789,What color is the truck on the right?," # contains a relation (right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the truck on the right?"")"
8134395,"What color is the container that is to the right of the orange, blue or brown?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the container that is to the right of the orange, blue or brown?"")"
15566099,Is the yellow vehicle on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow vehicle on the left side or on the right?"")"
13118786,Which kind of dessert is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of dessert is on the plate?"")"
13233045,How big is the blue rug?," # returns the size of the rug in feet
    image_patch = ImagePatch(image)
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""How big is the blue rug?"")
    rug_patch = rug_patches[0]
    width = rug_patch.width / 100 # convert to feet
    height = rug_patch.height / 100 # convert to feet
    return f""{width}x{height}"""
3460124,What is on the island?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the island?"")"
9503162,"In which part of the image is the man, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the man, the top or the bottom?"")"
5354232,Which kind of furniture is the poster on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the poster on?"")"
5880602,Are there any apples or bananas that are not green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_apple = image_patch.exists(""apple"")
    is_banana = image_patch.exists(""banana"")
    return bool_to_yesno(is_apple or is_banana)"
4953216,Who is holding onto the man?," # contains a relation (holding onto), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding onto the man?"")"
19541036,How is the vegetable on the sandwich in the middle called?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vegetable on the sandwich in the middle called?"")"
12300518,Is the weather overcast?," # overcast is a property of weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""overcast""))"
12546096,"What color is the hair, white or blond?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hair, white or blond?"")"
9153373,Is the tray in the top or in the bottom part?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tray in the top or in the bottom part?"")"
19687873,Which side is the wood bench on?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Which side is the wood bench on?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11744939,Are there ovens or refrigerators in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""oven"") or image_patch.exists(""refrigerator""))"
171013550,Does the cat appear to be resting?," # cat is resting
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Does the cat appear to be resting?"")
    return bool_to_yesno(cat_patches[0].verify_property(""cat"", ""resting""))"
1845223,What is on the dessert that is on the pan?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dessert that is on the pan?"")"
2633225,Is the man to the right or to the left of the vase the flower is in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the vase the flower is in?"")"
5290204,What is the fire hydrant before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fire hydrant before?"")"
6972091,"On which side is the metal knife, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the metal knife, the right or the left?"")"
9958181,Do you see both goggles and helmets?," # helmet
    image_patch = ImagePatch(image)
    is_goggles = image_patch.exists(""goggles"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_goggles and is_helmet)"
21048739,Are there cell phones to the right of the device on the mousepad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cell phone"") and image_patch.exists(""mousepad"") and image_patch.exists(""device""))"
10658159,Do you see any woman to the right of the dog the bag is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any woman to the right of the dog the bag is to the left of?"")"
440882,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1041042,What is the baby wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the baby wearing?"")"
14968466,What kind of animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is large?"")"
131027581,Is the person carrying a backpack?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person carrying a backpack?"")"
5472232,Which kind of device is on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the desk?"")"
11340829,Is the black clock on the modern building?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black clock on the modern building?"")"
2422694,What is the toy on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toy on the table?"")"
3541570,What animal is on the dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the dirt?"")"
1347082,Of which color is the table?," # table is a common object
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Of which color is the table?"")
    return table_patches[0].simple_query(""What color is the table?"") # crop would include the table so keep it in the query"
1463372,What is the vegetable that is on the round food called?," # round food is a potato
    image_patch = ImagePatch(image)
    # contains a relation (on), so ask directly
    return image_patch.simple_query(""What is the vegetable that is on the round food called?"")"
7471684,Are there either ties or glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie or is_glasses)"
27951,Do you see any bottles to the left of the device above the tablet?," # contains a relation (above, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any bottles to the left of the device above the tablet?"")"
10634384,Is there either a motorcycle or a mirror in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_motorcycle or is_mirror)"
6344648,"On which side is the container, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the container, the right or the left?"")"
12230420,Are there both collars and pictures in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_collar = image_patch.exists(""collar"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_collar and is_picture)"
14629312,Are there both lemons and cups in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lemon = image_patch.exists(""lemon"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_lemon and is_cup)"
9422044,Does the kite have a different color than the sky?," # contains a relation (different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the kite have a different color than the sky?"")"
6422058,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
17189055,Does the coat look red?," # coat is a type of clothing
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Does the coat look red?"")
    return bool_to_yesno(coat_patches[0].verify_property(""coat"", ""red""))"
15753617,What's on the saucer?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the saucer?"")"
1316167,Does the toy behind the napkin seem to be sitting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the toy behind the napkin seem to be sitting?"")"
6702576,What animal is the woman on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the woman on?"")"
2129822,Is the color of the sweatshirt the same as the hat?," # returns yes or no
    image_patch = ImagePatch(image)
    sweatshirt_patches = image_patch.find(""sweatshirt"")
    # Question assumes only one sweatshirt patch
    if len(sweatshirt_patches) == 0:
        # If no sweatshirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the sweatshirt the same as the hat?"")
    for sweatshirt_patch in sweatshirt_patches:
        hat_patches = image_patch.find(""hat"")
        # Question assumes only one hat patch
        if len(hat_patches) == 0:
            return ""no""
        hat_patch = hat_patches[0]
        return bool_to_yesno(sweatshirt_patch.verify_property(""sweatshirt"", ""color"") == hat_patch.verify_property(""hat"", ""color""))"
14998776,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2326115,On which side of the image is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7990358,Are there fire hydrants or mirrors in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_fire_hydrant or is_mirror)"
17927761,Which kind of vehicle is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is not large?"")"
18441960,Is the woman below the frisbee wearing a hat?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman below the frisbee wearing a hat?"")"
6384734,What is the device to the left of the man that is to the left of the remote control?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the man that is to the left of the remote control?"")"
663111,"On which side is the monkey, the right or the left?"," # monkey is on the left
    image_patch = ImagePatch(image)
    monkey_patches = image_patch.find(""monkey"")
    # Question assumes only one monkey patch
    if len(monkey_patches) == 0:
        # If no monkey is found, query the image directly
        return image_patch.simple_query(""On which side is the monkey, the right or the left?"")
    if monkey_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10880585,Is the player wearing a helmet?," # helmet is a type of headgear
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    # Question assumes only one player patch
    if len(player_patches) == 0:
        # If no player is found, query the image directly
        return image_patch.simple_query(""Is the player wearing a helmet?"")
    return player_patches[0].verify_property(""player"", ""helmet"")"
15229605,Are there either any deer or horses that are jumping?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_deer_jumping = image_patch.exists(""deer"") and image_patch.exists(""jumping"")
    is_horse_jumping = image_patch.exists(""horse"") and image_patch.exists(""jumping"")
    return bool_to_yesno(is_deer_jumping or is_horse_jumping)"
4183767,Which color is the bag that is sitting on the couch?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag that is sitting on the couch?"")"
3300660,What's in front of the giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the giraffe?"")"
1119621,What color is the shirt the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man is wearing?"")"
15996117,Where do you think is the snow?," # returns the location of the snow
    image_patch = ImagePatch(image)
    snow_patches = image_patch.find(""snow"")
    # Question assumes only one snow patch
    if len(snow_patches) == 0:
        # If no snow is found, query the image directly
        return image_patch.simple_query(""Where do you think is the snow?"")
    return snow_patches[0].simple_query(""Where do you think is the snow?"") # crop would include the snow so keep it in the query"
15831117,Which side of the photo is the elephant on?," # left or right
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only one elephant patch
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the elephant on?"")
    if elephant_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17838793,Is there a woman that is talking?," # contains a relation (talking to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman that is talking?"")"
5593984,Who is holding the bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the bat?"")"
14292536,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
1944546,What is the food to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the chair?"")"
19934068,What is the name of the piece of furniture that is the same color as the ottoman to the right of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that is the same color as the ottoman to the right of the table?"")"
6277627,"How does the hat look like, yellow or blue?"," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the hat look like, yellow or blue?"")"
5260048,What is holding the paper?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is holding the paper?"")"
7619404,Is there an umbrella in this scene that is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    for umbrella_patch in umbrella_patches:
        if umbrella_patch.simple_query(""Is the umbrella white?"") != ""yes"":
            return ""yes""
    return ""no"""
2286618,What is mounted on the wall?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is mounted on the wall?"")"
1176005,Of which color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Of which color is the hair?"")
    return hair_patches[0].simple_query(""Of which color is the hair?"")"
11426671,What is on the white sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white sign?"")"
5745528,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
19327859,Where is it?," # contains a relation (where is it?), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is it?"") # contains a relation (where is it?), so ask directly"
17162926,Do you see either stainless steel spoons or forks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stainless steel spoon"") or image_patch.exists(""fork""))"
5975782,Are there skis in the image that are not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skis"") and not image_patch.verify_property(""skis"", ""yellow""))"
11942635,Do the frame and the painting have the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    frame_patches = image_patch.find(""frame"")
    painting_patches = image_patch.find(""painting"")
    # Question assumes only one frame and one painting patch
    if len(frame_patches) == 0 or len(painting_patches) == 0:
        # If no frame or painting is found, query the image directly
        return image_patch.simple_query(""Do the frame and the painting have the same color?"")
    frame_patch = frame_patches[0]
    painting_patch = painting_patches[0]
    return bool_to_yesno(frame_patch.verify_property(""frame"", ""blue"") == painting_patch.verify_property(""painting"", ""blue""))"
696321,Do you see fire hydrants that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""fire hydrant"", ""red""))"
9544883,What is the man to the right of the tennis racket wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the tennis racket wearing?"")"
5194193,What animal lies on the black bag?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal lies on the black bag?"")"
241257,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
2471966,Do you see both vending machines and bats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_vending_machine = image_patch.exists(""vending machine"")
    is_bat = image_patch.exists(""bat"")
    return bool_to_yesno(is_vending_machine and is_bat)"
6875077,Is the keyboard that looks silver sitting or standing?," # contains a relation (sitting or standing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the keyboard that looks silver sitting or standing?"")"
2562306,Is the towel to the left or to the right of the cabinet that is on the right side of the photo?," # assumes only one towel and one cabinet
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one towel patch and one cabinet patch
    if len(towel_patches) == 0 or len(cabinet_patches) == 0:
        # If no towel or cabinet is found, query the image directly
        return image_patch.simple_query(""Is the towel to the left or to the right of the cabinet that is on the right side of the photo?"")
    towel_patch = towel_patches[0]
    cabinet_patch = cabinet_patches[0]
    if cabinet_patch.horizontal_center > image_patch.horizontal_center:
        if towel_patch.horizontal_center < cabinet_patch.horizontal_center:
            return ""left""
        else:
            return ""right""
    return ""left"""
18696,Is there a motorcycle in the shop?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorcycle in shop"")) # contains a relation (in), so ask directly"
16789005,What items of furniture are made of plastic?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What items of furniture are made of plastic?"")"
13189813,Are there fences or elephants in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence or is_elephant)"
18401804,Who is wearing a shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shoe?"")"
7159527,On which side is the small vehicle?," # left or right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""On which side is the small vehicle?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5536798,Is the bus on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus on the right side?"")"
15750407,What material is the bottle which is to the right of the wine bottles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the bottle which is to the right of the wine bottles?"")"
16514154,How is the animal that is in the water near the rocks called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal that is in the water near the rocks called?"")"
788078,What's in the cup?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the cup?"")"
382730,What is the animal to the right of the person that is to the right of the people called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the right of the person that is to the right of the people called?"")"
1280372,What animal is on the sandy beach?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the sandy beach?"")"
17247671,On which side is the faucet?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the faucet?"")"
7391104,Do the sweater and the cup have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        # If no sweater is found, query the image directly
        return image_patch.simple_query(""Do the sweater and the cup have the same color?"")
    sweater_color = sweater_patches[0].simple_query(""What color is the sweater?"")
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""Do the sweater and the cup have the same color?"")
    cup_color = cup_patches[0].simple_query(""What color is the cup?"")
    return bool_to_yesno(sweater_color == cup_color)"
15501359,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
7501312,"How do the rocks look like, small or huge?"," # huge is the default
    image_patch = ImagePatch(image)
    rock_patches = image_patch.find(""rock"")
    # Question assumes only one rock patch
    if len(rock_patches) == 0:
        # If no rock is found, query the image directly
        return image_patch.simple_query(""How do the rocks look like, small or huge?"")
    return rock_patches[0].simple_query(""How do the rocks look like, small or huge?"") # crop would include the rock so keep it in the query"
10800933,Who is the man in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the man in front of?"")"
1712325,Is the bear to the left of the other bear small or huge?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bear to the left of the other bear small or huge?"")"
851645,Do you see any plates above the brown table?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any plates above the brown table?"")"
1353842,Which kind of animal is striped?," # contains a relation (striped), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is striped?"")"
9244439,Is there a skateboard in front of the van in the top part?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a skateboard in front of the van in the top part?"")"
16704360,Of what color is the vase on the left?," # contains a relation (on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the vase on the left?"")"
11217046,Is the orange in the bottom or in the top part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange in the bottom or in the top part of the photo?"")"
165263,Does he wear a jacket?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""Does he wear a jacket?"")
    man_patch = man_patches[0]
    jacket_patches = image_patch.find(""jacket"")
    for jacket_patch in jacket_patches:
        if jacket_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
21027439,Does the laptop computer have silver color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""laptop computer"", ""silver""))"
789216,Is the clean toilet to the right of the toilet paper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clean toilet to the right of the toilet paper?"")"
5563403,This woman wears what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""This woman wears what?"")"
6230768,What is the mug filled with?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mug filled with?"")"
9933516,Where is the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the train?"")"
1827121,Which kind of fast food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is it?"")"
2897771,What is the color of the striped shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the striped shirt?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What is the color of the shirt?"") # crop would include the stripes so keep it in the query"
6876916,Is the cup on the left side of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup on the left side of the photo?"")"
2712451,What is sitting on the laptop?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the laptop?"")"
4771329,What kind of furniture is the sticker on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the sticker on?"")"
383528,Is the blue vehicle on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue vehicle on the left of the photo?"")"
12788508,Do you see toilet papers on the blue wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see toilet papers on the blue wall?"")"
11384115,Is the tennis racket to the left of the person that is wearing a head band?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tennis racket to the left of the person that is wearing a head band?"")"
15364238,What is she wearing?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she wearing?"")"
1550771,Are there any cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat""))"
15550861,Are the pole and the jacket the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    pole_patches = image_patch.find(""pole"")
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one pole and one jacket patch
    if len(pole_patches) == 0 or len(jacket_patches) == 0:
        # If no pole or jacket is found, query the image directly
        return image_patch.simple_query(""Are the pole and the jacket the same color?"")
    pole_color = pole_patches[0].simple_query(""What color is the pole?"")
    jacket_color = jacket_patches[0].simple_query(""What color is the jacket?"")
    return bool_to_yesno(pole_color == jacket_color)"
17137375,What type of material is the fence made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the fence made of?"")"
9672280,What is the color of the towel to the left of the other towel?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the towel to the left of the other towel?"")"
18194514,What are the mountains that look blue covered by?," # mountain is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the mountains that look blue covered by?"")"
5228731,What is the name of this appliance?," # returns the name of the appliance
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of this appliance?"")"
16843189,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12414472,Are there large rugs or televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_large_rug = image_patch.exists(""large rug"")
    is_television = image_patch.exists(""television"")
    return bool_to_yesno(is_large_rug or is_television)"
78342,Is the cabinet to the right or to the left of the table the can is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet to the right or to the left of the table the can is on?"")"
16906072,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
151003139,Who is wearing the jersey?," # jersey
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jersey?"")"
15750088,Is there a cabinet or a blender in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"")
    is_blender = image_patch.exists(""blender"")
    return bool_to_yesno(is_cabinet or is_blender)"
6308803,Which kind of furniture are the books on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture are the books on?"")"
19591655,What color is the pot to the right of the other pots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the pot to the right of the other pots?"")"
15137144,What is the piece of furniture to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the pillow?"")"
3226559,What is the shape of the fountain that is covered in dirt?," # assumes only one fountain patch
    image_patch = ImagePatch(image)
    fountain_patches = image_patch.find(""fountain"")
    if len(fountain_patches) == 0:
        # If no fountain is found, query the image directly
        return image_patch.simple_query(""What is the shape of the fountain that is covered in dirt?"")
    for fountain_patch in fountain_patches:
        if fountain_patch.verify_property(""fountain"", ""covered in dirt""):
            return fountain_patch.simple_query(""What is the shape of the fountain that is covered in dirt?"")
    return image_patch.simple_query(""What is the shape of the fountain that is covered in dirt?"")"
17792641,Who is on the snow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the snow?"")"
121017926,Which color are the paper napkins to the left of the pickles?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the paper napkins to the left of the pickles?"")"
7304502,Which color is the bag the people are carrying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag the people are carrying?"")"
16659837,What is the woman that is jumping wearing?," # contains a relation (jumping), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman that is jumping wearing?"")"
19523521,What kind of watercraft is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of watercraft is the man on?"")"
14560326,Do the sky and the swimsuit have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the sky and the swimsuit have a different colors?"")) # crop would include the swimsuit so keep it in the query"
12332127,Are there any fences or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_fence or is_zebra)"
13509650,What is the color of the trousers?," # returns the color of the trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""What is the color of the trousers?"")
    return trousers_patches[0].simple_query(""What is the color of the trousers?"") # crop would include the trousers so keep it in the query"
7910736,What color do you think the fence in the top of the image is?," # image is assumed to be in top-down orientation
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What color do you think the fence in the top of the image is?"")
    return fence_patches[0].simple_query(""What color do you think the fence in the top of the image is?"")"
17645399,Is the wood picture to the left or to the right of the computer in the center of the image?," # image is assumed to be centered horizontally
    image_patch = ImagePatch(image)
    wood_patches = image_patch.find(""wood picture"")
    # Question assumes only one wood patch
    if len(wood_patches) == 0:
        # If no wood picture is found, query the image directly
        return image_patch.simple_query(""Is the wood picture to the left or to the right of the computer in the center of the image?"")
    for wood_patch in wood_patches:
        computer_patches = image_patch.find(""computer"")
        for computer_patch in computer_patches:
            if wood_patch.horizontal_center < computer_patch.horizontal_center:
                return ""left""
            elif wood_patch.horizontal_center > computer_patch.horizontal_center:
                return ""right""
    return ""left"""
19625014,Does the skirt have long length and red color?," # returns yes or no
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Does the skirt have long length and red color?"")
    return bool_to_yesno(skirt_patches[0].verify_property(""skirt"", ""long"") and skirt_patches[0].verify_property(""skirt"", ""red""))"
18738954,Who is wearing a scarf?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a scarf?"")"
1718588,Does the train have a different color than the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the train have a different color than the door?"")"
7267558,Which kind of drink is in the bottle?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of drink is in the bottle?"")"
18977890,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
31028971,Where is the decoration?," # returns the location of the decoration
    image_patch = ImagePatch(image)
    decoration_patches = image_patch.find(""decoration"")
    # Question assumes only one decoration patch
    if len(decoration_patches) == 0:
        # If no decoration is found, query the image directly
        return image_patch.simple_query(""Where is the decoration?"")
    return decoration_patches[0].simple_query(""Where is the decoration?"")"
1465082,Is this a keyboard or a Wii controller?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a keyboard or a Wii controller?"")"
17820215,How long is his hair?," # returns a string
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""How long is his hair?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""How long is his hair?"")"
15493920,What's in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the man?"")"
5623291,That chain has what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That chain has what color?"")"
10325589,Is the color of the collar different than the couch?," # returns yes or no
    image_patch = ImagePatch(image)
    collar_patches = image_patch.find(""collar"")
    # Question assumes only one collar patch
    if len(collar_patches) == 0:
        # If no collar is found, query the image directly
        return image_patch.simple_query(""Is the color of the collar different than the couch?"")
    collar_color = collar_patches[0].simple_query(""What is the color of the collar?"")
    couch_color = image_patch.simple_query(""What is the color of the couch?"")
    return bool_to_yesno(collar_color != couch_color)"
17925216,What is located on top of the meat on the right?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the meat on the right?"")"
18360250,Is the man to the right of the woman wearing jeans?," # contains a relation (right of, wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the woman wearing jeans?"")"
13972354,On which side is the camera?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the camera?"")"
5785461,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
18538730,Is there a racket to the left of the man that is skiing on the snow?," # contains a relation (left of, skiing on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a racket to the left of the man that is skiing on the snow?"")"
19708352,Of what color is the shirt the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the shirt the man wears?"")"
18785739,What is the pan on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pan on?"")"
6394623,What type of appliance is to the right of the vegetable near the fruit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of appliance is to the right of the vegetable near the fruit?"")"
12214045,What is the color of the trousers that the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the trousers that the boy is wearing?"")"
347719,Is the outfit on a doll?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the outfit on a doll?"")"
9486043,Does the fence made of metal look short and brown?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fence made of metal look short and brown?"")"
15748793,What color is the shoe?," # returns the color of the shoe
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""What color is the shoe?"")
    return shoe_patches[0].simple_query(""What color is the shoe?"") # crop would include the shoe so keep it in the query"
17211752,"Where in this scene is the fence, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this scene is the fence, in the bottom or in the top?"")"
15925869,Are there any swimmers or customers in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_swimmer = image_patch.exists(""swimmer"")
    is_customer = image_patch.exists(""customer"")
    return bool_to_yesno(is_swimmer or is_customer)"
8297868,Is the round watch made of leather or metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the round watch made of leather or metal?"")"
17716562,What color is the fruit the orange is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the fruit the orange is to the right of?"")"
17759441,Is the bench to the left or to the right of the person that is standing in the bathroom?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench to the left or to the right of the person that is standing in the bathroom?"")"
2250618,Are there both rice and meat in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_rice = image_patch.exists(""rice"")
    is_meat = image_patch.exists(""meat"")
    return bool_to_yesno(is_rice and is_meat)"
580456,What are the animals to the right of the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals to the right of the bench?"")"
16795703,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
3965963,What animals are standing on the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are standing on the grass?"")"
16208885,What is on the coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the coffee table?"")"
5179360,Is the man to the right or to the left of the chair in the bottom?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the chair in the bottom?"")"
8167200,"In which part is the vase, the top or the bottom?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the vase, the top or the bottom?"")"
12901131,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
14601688,Is the black bag on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag on the left?"")"
10393834,Is there any bench or tennis ball in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_tennis_ball = image_patch.exists(""tennis ball"")
    return bool_to_yesno(is_bench or is_tennis_ball)"
14347371,Which kind of furniture is to the left of the sausage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the sausage?"")"
11248630,What is the name of the vegetable that is to the right of the bread that is held by the basket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable that is to the right of the bread that is held by the basket?"")"
141024310,Are there white computers or books?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_computer = image_patch.exists(""white computer"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_white_computer or is_book)"
639530,Is the brown couch to the left or to the right of the lamp?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown couch to the left or to the right of the lamp?"")"
8559919,Does the ring look thick and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    ring_patches = image_patch.find(""ring"")
    # Question assumes only one ring patch
    if len(ring_patches) == 0:
        # If no ring is found, query the image directly
        return image_patch.simple_query(""Does the ring look thick and blue?"")
    return bool_to_yesno(ring_patches[0].verify_property(""ring"", ""thick"") and ring_patches[0].verify_property(""ring"", ""blue""))"
131024553,Do you see giraffes there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"")) # assumes one giraffe patch"
1326047,What kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is it?"")"
13492394,What color are the horns?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the horns?"")"
18577084,On which side of the picture is the small cucumber?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the small cucumber?"")"
2273644,What's the beer in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the beer in?"")"
154164,Is there a train near the pole that looks gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a train near the pole that looks gray?"")"
9262097,Is that sky cloudy and blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that sky cloudy and blue?"")"
181057223,What is the woman standing behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman standing behind of?"")"
6525793,Is the white dog on the right side of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white dog on the right side of the image?"")"
5211663,Which kind of furniture is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in front of the man?"")"
8170355,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
4867508,What is the device to the right of the man that is wearing pants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the device to the right of the man that is wearing pants?"")
    man_patch = man_patches[0]
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        return image_patch.simple_query(""What is the device to the right of the man that is wearing pants?"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > man_patch.horizontal_center:
            return device_patch.simple_query(""What is the device to the right of the man that is wearing pants?"")
    return image_patch.simple_query(""What is the device to the right of the man that is wearing pants?"")"
4796552,What is the food on the pizza made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the pizza made of wood?"")"
2970246,Does the counter look dotted?," # assumes only one counter patch
    image_patch = ImagePatch(image)
    counter_patches = image_patch.find(""counter"")
    if len(counter_patches) == 0:
        # If no counter is found, query the image directly
        return image_patch.simple_query(""Does the counter look dotted?"")
    return bool_to_yesno(counter_patches[0].verify_property(""counter"", ""dotted""))"
5259905,On which side is the black towel?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side is the black towel?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3246293,Where is the rug?," # returns the location of the rug
    image_patch = ImagePatch(image)
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""Where is the rug?"")
    return rug_patches[0].simple_query(""Where is the rug?"") # crop would include the rug so keep it in the query"
17209370,Do you see either coffee mugs or plates there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""coffee mug"") or image_patch.exists(""plate""))"
758215,Does the kite have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""kite"", ""blue""))"
1419006,On which side is the spectator?," # assumes only one spectator
    image_patch = ImagePatch(image)
    spectator_patches = image_patch.find(""spectator"")
    if len(spectator_patches) == 0:
        # If no spectator is found, query the image directly
        return image_patch.simple_query(""On which side is the spectator?"")
    spectator_patch = spectator_patches[0]
    if spectator_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12368577,Which kind of furniture is in the living room?," # contains a relation (in the living room), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in the living room?"")"
19166866,How is the animal above the device the duck is on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal above the device the duck is on called?"")"
1698369,What is in the bread?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bread?"")"
10551495,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
1481176,Is the motorcycle on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the motorcycle on the left?"")"
1317456,What animal is standing on the grass that is not tall?," # contains a relation (on, not, tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the grass that is not tall?"")"
17637150,Do you see glasses to the left of the man that is not short?," # glasses and man are not necessarily in the same image
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Do you see glasses to the left of the man that is not short?"")
    for glasses_patch in glasses_patches:
        man_patches = image_patch.find(""man"")
        for man_patch in man_patches:
            if man_patch.verify_property(""man"", ""short"") == False and glasses_patch.horizontal_center < man_patch.horizontal_center:
                return ""yes""
    return ""no"""
7895400,Do you see a motorcycle to the right of the man on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a motorcycle to the right of the man on the left?"")"
6683404,What is hanging over the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging over the tree?"")"
9928656,Is the boy on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy on the left side?"")"
7890786,"On which side is the palm, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the palm, the left or the right?"")"
18754465,What is the purple clothing item?," # returns the clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the purple clothing item?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing item purple?"") == ""yes"":
            return clothing_patch.simple_query(""What is the clothing item?"")
    return clothing_patch.simple_query(""What is the clothing item?"") # if no purple clothing is found, pick the first clothing item"
13290336,What is the mozzarella on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mozzarella on?"")"
6968966,Is the vehicle to the right of the zebra silver or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle to the right of the zebra silver or blue?"")"
9125462,What is on the cabinet?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cabinet?"")"
18914129,What is the color of the bridge?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bridge?"")"
16630874,Who is in front of the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the truck?"")"
12294273,What size are the vegetables that are to the right of the broccoli?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What size are the vegetables that are to the right of the broccoli?"")"
18315066,Is the person wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing a jacket?"")"
3833604,Is the girl to the right of a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right of a fence?"")"
14859034,What is in front of the building by the water?," # contains a relation (in front of, by, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building by the water?"")"
6756860,"In which part of the image is the young girl, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the young girl, the top or the bottom?"")"
12461509,Is there either a white lamb or horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_lamb = image_patch.exists(""white lamb"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_white_lamb or is_horse)"
12885421,On which side of the image is the white device?," # left or right
    image_patch = ImagePatch(image)
    white_device_patches = image_patch.find(""white device"")
    # Question assumes only one white device patch
    if len(white_device_patches) == 0:
        # If no white device is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the white device?"")
    white_device_patch = white_device_patches[0]
    if white_device_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9112854,Is there any chair or blanket in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""blanket""))"
3195671,Is the woman to the right of the white fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the white fence?"")"
12198802,"Which is healthier, the nut or the muffins?"," # assumes only one nut and one muffin
    image_patch = ImagePatch(image)
    nut_patches = image_patch.find(""nut"")
    muffin_patches = image_patch.find(""muffin"")
    if len(nut_patches) == 0 or len(muffin_patches) == 0:
        return image_patch.simple_query(""Which is healthier, the nut or the muffins?"")
    return nut_patches[0].simple_query(""Which is healthier, the nut or the muffins?"") # crop would include the nut so keep it in the query"
16864049,What do you think are the numbers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think are the numbers on?"")"
11298607,"What is that fence made of, metal or stone?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that fence made of, metal or stone?"")"
13270504,Is the speaker to the left or to the right of the monitor that is on top of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the speaker to the left or to the right of the monitor that is on top of the desk?"")"
131050248,What is the sign in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign in front of?"")"
13614188,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4472082,"In which part of the picture is the chair, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the chair, the bottom or the top?"")"
9949495,Is the towel to the right or to the left of the cabinet the refrigerator is to the left of?," # assumes only one towel and one cabinet
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one towel and one cabinet patch
    if len(towel_patches) == 0 or len(cabinet_patches) == 0:
        # If no towel or cabinet is found, query the image directly
        return image_patch.simple_query(""Is the towel to the right or to the left of the cabinet the refrigerator is to the left of?"")
    towel_patch = towel_patches[0]
    cabinet_patch = cabinet_patches[0]
    if cabinet_patch.horizontal_center < image_patch.horizontal_center:
        if towel_patch.horizontal_center > cabinet_patch.horizontal_center:
            return ""right""
        else:
            return ""left""
    else:
        return ""left"""
5427677,Does the happy person wear jeans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the happy person wear jeans?"") == ""yes"")"
6647798,Is the bear on the right?," # contains a relation (on, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bear on the right?"")"
18172074,Is the window large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window large?"")"
111014585,Are there any elephants in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""elephant""))"
788442,Is the brown bird on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bird on the left or on the right?"")"
5706259,Is the faucet in the bottom part or in the top of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the faucet in the bottom part or in the top of the image?"")"
4860614,What is the spoon made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the spoon made of?"")"
2622542,What is the food that is in front of the plastic cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is in front of the plastic cup?"")"
15222256,What kind of appliance is to the left of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is to the left of the box?"")"
12278000,What is the sidewalk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sidewalk made of?"")"
13460496,Who is on the motorbike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the motorbike?"")"
16260377,What is the man to the right of the girl wearing?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the girl wearing?"")"
6801692,On which side of the image is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6942681,Does the bench on the pavement look white and short?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bench on the pavement look white and short?"")"
10455516,Do you see both a window and a door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
15273649,Which kind of device is to the right of the child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the child?"")"
15638006,"What animal are these, elephants or giraffes?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal are these, elephants or giraffes?"")"
303323,Does the fence look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""fence"", ""black""))"
15429170,What's the vase on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the vase on?"")"
12298236,Is there a flag or a bike in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_bike = image_patch.exists(""bike"")
    return bool_to_yesno(is_flag or is_bike)"
10321677,Which kind of food is to the right of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the napkin?"")"
674115,Do the car and the SUV have the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the car and the SUV have the same color?"")"
996446,What is the toaster oven on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toaster oven on?"")"
6473181,What is the chicken on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chicken on?"")"
286930,On which side of the image is the modern chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""modern chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the modern chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17522406,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
690220,Is there any meat to the right of the mushrooms?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any meat to the right of the mushrooms?"")"
4883129,Is the light house short and red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the light house short and red?"")"
10444489,What is the food that is to the right of the bowl called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the right of the bowl called?"")"
9861773,What is the child looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child looking at?"")"
286216,What is the material of the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the material of the door?"")"
2520171,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16496476,Is the color of the jacket different than that of the helmet?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one jacket and helmet patch
    if len(jacket_patches) == 0 or len(helmet_patches) == 0:
        # If no jacket or helmet is found, query the image directly
        return image_patch.simple_query(""Is the color of the jacket different than that of the helmet?"")
    jacket_color = jacket_patches[0].simple_query(""What is the color of the jacket?"")
    helmet_color = helmet_patches[0].simple_query(""What is the color of the helmet?"")
    return bool_to_yesno(jacket_color != helmet_color)"
2264688,What color is the car?," # returns the color of the car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car?"")
    return car_patches[0].simple_query(""What color is the car?"")"
1062787,What is the person on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on?"")"
19245355,What is the white piece of clothing called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white piece of clothing called?"")"
16575980,Are there any boys on the sand?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy on sand"")) # crop would include the sand so keep it in the query"
12215592,Is there either a snake or a parrot in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""snake"") or image_patch.exists(""parrot""))"
18419102,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
2337644,Is it an outdoors or indoors picture?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors picture?"")"
1215725,Is the bag to the left of the tent made out of paper?," # contains a relation (left of, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left of the tent made out of paper?"")"
18732831,What is pulled by the belt?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is pulled by the belt?"")"
4815528,Are there any men near the statue the person is to the left of?," # contains a relation (near, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men near the statue the person is to the left of?"")"
151037630,Are the players to the right or to the left of the black helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the players to the right or to the left of the black helmet?"")"
14985766,What is the aircraft in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the aircraft in the sky?"")"
81030310,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
4413486,Which side is the brick house on?," # left or right
    image_patch = ImagePatch(image)
    brick_patches = image_patch.find(""brick house"")
    # Question assumes only one brick patch
    if len(brick_patches) == 0:
        # If no brick is found, query the image directly
        return image_patch.simple_query(""Which side is the brick house on?"")
    if brick_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17112199,Is the little boy to the right or to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the little boy to the right or to the left of the chair?"")"
11559134,Are there any bottles to the left of the beer?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle"") and image_patch.find(""bottle"")[0].horizontal_center < image_patch.find(""beer"")[0].horizontal_center)"
2893221,Are there either yellow fire hydrants or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_yellow_fire_hydrant = image_patch.exists(""yellow fire hydrant"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_yellow_fire_hydrant or is_traffic_light)"
8723381,Who holds the remote that looks white?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the remote that looks white?"")"
10660564,What kind of vehicle is to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the man?"")"
16397054,Is there a woman in the photo that is walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman in the photo that is walking?"")"
3241430,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
14712335,Who is hugging the animal on the couch?," # contains a relation (hugging), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is hugging the animal on the couch?"")"
17241857,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
5449369,What's the microwave in?," # kitchen
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the microwave in?"")"
16503130,What is in front of the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the window?"")"
8672257,What color is that hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What color is that hat?"")
    return hat_patches[0].simple_query(""What color is that hat?"")"
277272,Do you see a table in front of the chair on the left of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a table in front of the chair on the left of the picture?"")"
10540252,Do you see any taxis near the elephant?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any taxis near the elephant?"")"
141047010,Of what color is the shirt the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the shirt the boy is wearing?"")"
5989348,Do you see any brown mud or grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown mud"") or image_patch.exists(""grass""))"
19525476,Is the person that is to the right of the ball wearing a necklace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the right of the ball wearing a necklace?"")"
113639,Is there any broccoli in the bowl to the right of the lobster?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any broccoli in the bowl to the right of the lobster?"")"
19468,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
10717165,What is the boy sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy sitting on?"")"
5264729,Is there any bottle or spoon in the photo?," # bottle or spoon
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_spoon = image_patch.exists(""spoon"")
    return bool_to_yesno(is_bottle or is_spoon)"
5965032,Do you see horses or cows that are not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse = image_patch.exists(""horse"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_horse or is_cow)"
11753923,Does the dog to the right of the other dog look large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog to the right of the other dog look large?"")"
8121280,What does the person to the right of the purse climb?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person to the right of the purse climb?"")"
13820957,Are there any cameras or hard drives?," # returns yes or no
    image_patch = ImagePatch(image)
    is_camera = image_patch.exists(""camera"")
    is_hard_drive = image_patch.exists(""hard drive"")
    return bool_to_yesno(is_camera or is_hard_drive)"
17866376,The cart to the right of the other cart is of which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cart to the right of the other cart is of which color?"")"
21048390,On which side of the photo is the white car?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white car?"")"
6837034,What is the name of the young animal?," # contains a relation (young of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the young animal?"")"
13651935,What device is on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the desk?"")"
6727483,Where is the man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    return man_patches[0].simple_query(""Where is the man?"") # crop would include the man so keep it in the query"
15717874,Is the bed to the left or to the right of the curtain on the left of the picture?," # left of the picture
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""Is the bed to the left or to the right of the curtain on the left of the picture?"")
    for bed_patch in bed_patches:
        curtain_patches = image_patch.find(""curtain"")
        # Question assumes only one curtain patch
        if len(curtain_patches) == 0:
            return image_patch.simple_query(""Is the bed to the left or to the right of the curtain on the left of the picture?"")
        for curtain_patch in curtain_patches:
            if curtain_patch.horizontal_center < image_patch.horizontal_center:
                if bed_patch.horizontal_center < curtain_patch.horizontal_center:
                    return ""left""
                else:
                    return ""right""
    return image_patch.simple_query(""Is the bed to the left or to the right of the curtain on the left of the picture?"")"
2508855,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
161030453,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
6388534,Do you see any cars to the right of the bun on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cars to the right of the bun on the left?"")"
266093,Is this large salad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this large salad?"")"
1372750,What is the vehicle on the beach?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle on the beach?"")"
19155454,What color is the shirt he is in?," # shirt he is in
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What color is the shirt he is in?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What color is the shirt he is in?"") # crop would include the shirt so keep it in the query"
7793243,Is the man to the right or to the left of the bike on the right?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the bike on the right?"")"
910764,Does the ground near the man have brown color?," # ground near the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the ground near the man have brown color?"")
    man_patch = man_patches[0]
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        return ""no""
    ground_patch = ground_patches[0]
    if ground_patch.horizontal_center > man_patch.horizontal_center:
        return ""no""
    return bool_to_yesno(ground_patch.verify_property(""ground"", ""brown""))"
14617877,Which side of the photo is the water glass on?," # left or right
    image_patch = ImagePatch(image)
    water_glass_patches = image_patch.find(""water glass"")
    # Question assumes only one water glass patch
    if len(water_glass_patches) == 0:
        # If no water glass is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the water glass on?"")
    if water_glass_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1378446,Are there any tools or mirrors in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tool"") or image_patch.exists(""mirror""))"
4800321,What device is upper?," # assumes only one device patch
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What device is upper?"")
    for device_patch in device_patches:
        if device_patch.vertical_center > image_patch.vertical_center:
            return device_patch.simple_query(""What device is upper?"")
    return device_patch.simple_query(""What device is upper?"")"
8722342,Does the shower curtain in the bathroom seem to be white and open?," # contains a relation (in the bathroom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shower curtain in the bathroom seem to be white and open?"")"
4908431,What is the white animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white animal called?"")"
146018,Are there any curtains near the plant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""curtains"") and image_patch.exists(""plant""))"
51014744,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
8809830,What is the item of furniture to the left of the pink crown called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the pink crown called?"")"
18157350,On which side is the box?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""On which side is the box?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8782012,What is around the sheep the tag is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the sheep the tag is on?"")"
14718476,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
471049,What is in the wine glass on the right?," # contains a relation (in, on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the wine glass on the right?"")"
4576066,Is the box on a shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box on a shelf?"")"
11902021,What device has the same color as the bag on the chair?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device has the same color as the bag on the chair?"")"
5820501,Is the vehicle that is to the right of the person facing an airplane?," # contains a relation (right of, facing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle that is to the right of the person facing an airplane?"")"
13177510,Is there a towel to the left of the shower curtain on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a towel to the left of the shower curtain on the right?"")"
8937870,Who is wearing the boot?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the boot?"")"
6934233,Is the white phone to the right or to the left of the girl in the image?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white phone to the right or to the left of the girl in the image?"")"
1102342,Are the French fries in the top part or in the bottom of the picture?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the French fries in the top part or in the bottom of the picture?"")"
8759091,Is the woman to the left or to the right of the person in the bottom of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the person in the bottom of the image?"")"
5393653,What animal is in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the field?"")"
4896175,What is the device that is to the right of the white cabinet called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the white cabinet called?"")"
7441630,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
8595391,Is the striped zebra black and large?," # contains a relation (striped, black, large, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the striped zebra black and large?"")"
1864822,Is the chair that is to the left of the computer yellow or gray?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair that is to the left of the computer yellow or gray?"")"
9280168,Do you see any houses to the right of the green truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any houses to the right of the green truck?"")"
8494212,Is the hair short and curly?," # returns yes or no
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Is the hair short and curly?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""short"") and hair_patches[0].verify_property(""hair"", ""curly""))"
5171024,"Where in the photo is the van, in the top or in the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the photo is the van, in the top or in the bottom?"")"
10853987,Does the hair look long?," # hair is a property of the head
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair look long?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""long""))"
19464440,"Which kind of clothing is made of leather, the jacket or the outfit?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is made of leather, the jacket or the outfit?"")"
179396,What pieces of furniture are under the bed?," # returns a list of strings
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""What pieces of furniture are under the bed?"")
    bed_patch = bed_patches[0]
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        return image_patch.simple_query(""What pieces of furniture are under the bed?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.vertical_center < bed_patch.vertical_center:
            return furniture_patch.simple_query(""What pieces of furniture are under the bed?"")
    return image_patch.simple_query(""What pieces of furniture are under the bed?"")"
8439012,Are there peppers in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pepper""))"
4741018,Does the horse that to the right of the child wear a wig?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the horse that to the right of the child wear a wig?"")"
171039012,"Which side of the image are the curtains on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the image are the curtains on, the right or the left?"")"
3671200,Is this a farm?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a farm?"")"
7368553,What color does the arrow have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the arrow have?"")"
7833970,Is this a beach or a park?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a beach or a park?"")"
4763042,What is in front of the buildings that are not little?," # contains a relation (in front of) and a property (little), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the buildings that are not little?"")"
2225879,Do you see any benches to the right of the child who is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any benches to the right of the child who is wearing a shirt?"")"
1735527,What vehicle is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the man?"")"
18378806,Is the man to the right or to the left of the black backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the black backpack?"")"
397586,What appliance is the tree behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is the tree behind of?"")"
1145482,"Which part is the white ball in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the white ball in, the top or the bottom?"")"
10888940,Are there any vans at the traffic light on the right?," # contains a relation (at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""van"")) # contains a relation (at, on, etc), so ask directly"
16745251,Is the man on the sidewalk carrying a snowboard?," # contains a relation (on, carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the sidewalk carrying a snowboard?"")"
18798750,Are these animals of the same type?," # contains a relation (same type, different type, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of the same type?"")"
18156686,Is the lady to the left or to the right of the man that is holding the microphone?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the left or to the right of the man that is holding the microphone?"")"
1882860,What item of furniture is above the trash can?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is above the trash can?"")"
18123377,What height is the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What height is the grass?"")"
17537850,Is she wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she wearing a jacket?"")"
17261748,What is inside the basket?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the basket?"")"
6175077,Are the curtains short and light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the curtains short and light?"")"
5457396,Are there any letters in the picture that are orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""letters"") and image_patch.simple_query(""Are any of the letters orange?"") == ""yes"") # crop would include the letters so keep it in the query"
8402102,Is the open laptop to the right of the black thing that is to the right of the printer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the open laptop to the right of the black thing that is to the right of the printer?"")"
19154069,What is the happy person wearing?," # contains a relation (happy, wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the happy person wearing?"")"
12708533,The person that is to the left of the man is standing where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person that is to the left of the man is standing where?"")"
17757755,Is there a black skateboard or motorcycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_skateboard = image_patch.exists(""black skateboard"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_black_skateboard or is_motorcycle)"
7109760,What device is to the right of the sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the sofa?"")"
10686977,Are there any women or men that are not sitting?," # contains a relation (sitting, standing, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman or is_man)"
7634332,Is the cabbage purple or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabbage purple or green?"")"
8432172,What's on the stove?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the stove?"")"
19101735,Are the speakers on a nightstand?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the speakers on a nightstand?"")"
2999444,What type of animal is to the left of the man that is riding a motorcycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is to the left of the man that is riding a motorcycle?"")"
19183646,What's on the shelf?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the shelf?"")"
8883783,Is the color of the mouse different than the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the mouse different than the bowl?"")"
5337808,Does the person above the skateboard wear jeans?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person above the skateboard wear jeans?"")"
76650,Is the truck to the right of the blue bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck to the right of the blue bike?"")"
873710,What color is that scarf?," # returns the color of the scarf
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch.simple_query(""What color is that scarf?"")
    return scarf_patches[0].simple_query(""What color is that scarf?"")"
6218505,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
5390841,Are there kites or surfboards that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kite = image_patch.exists(""kite"")
    is_surfboard = image_patch.exists(""surfboard"")
    is_red_kite = False
    is_red_surfboard = False
    if is_kite:
        kite_patches = image_patch.find(""kite"")
        for kite_patch in kite_patches:
            if kite_patch.verify_property(""kite"", ""red""):
                is_red_kite = True
    if is_surfboard:
        surfboard_patches = image_patch.find(""surfboard"")
        for surfboard_patch in surfboard_patches:
            if surfboard_patch.verify_property(""surfboard"", ""red""):
                is_red_surfboard = True
    return bool_to_yesno(is_red_kite or is_red_surfboard)"
460725,Is the bowl made of brass or glass?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl made of brass or glass?"")"
5718703,Is the plastic plate to the left or to the right of the utensil on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic plate to the left or to the right of the utensil on the left of the image?"")"
12119590,What is the skateboarder on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the skateboarder on?"")"
19784197,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
2834610,Are there any flags or bowls in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_bowl = image_patch.exists(""bowl"")
    return bool_to_yesno(is_flag or is_bowl)"
17534220,On which side of the photo is the red vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the red vehicle?"")"
10982183,What are the vehicles in the parking lot called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vehicles in the parking lot called?"")"
776152,Do you see a clock on the building behind the bicycle?," # contains a relation (on, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a clock on the building behind the bicycle?"")"
8488475,Which animal is standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animal is standing?"")"
3818611,On which side of the picture is the napkin?," # left or right
    image_patch = ImagePatch(image)
    napkin_patches = image_patch.find(""napkin"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the napkin?"")
    return ""left"" if napkin_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
6704732,Are there any bags to the left of the people that are wearing glasses?," # contains a relation (left of, wearing glasses), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.exists(""person wearing glasses"")) # assumes only one patch for each object"
2554512,Are there any boxes on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""box on the ground"")) # crop would include the ground so keep it in the query"
8661854,What is the name of the bag to the right of the boy that is to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the bag to the right of the boy that is to the right of the person?"")"
1302852,What is the liquid in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the liquid in?"")"
9976369,Are there both microwaves and stoves in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_microwave = image_patch.exists(""microwave"")
    is_stove = image_patch.exists(""stove"")
    return bool_to_yesno(is_microwave and is_stove)"
14243954,Is the fork in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork in the bottom of the photo?"")"
16586159,Who is the bed in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the bed in front of?"")"
11914055,Are there both a chair and a window in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_chair and is_window)"
11220348,How long is the skinny tail?," # returns a string
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""How long is the skinny tail?"")
    animal_patch = animal_patches[0]
    return animal_patch.simple_query(""How long is the skinny tail?"") # crop would include the tail so keep it in the query"
31042479,Are there either any black remote controls or computer mice?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_remote_control = image_patch.exists(""black remote control"")
    is_computer_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_black_remote_control or is_computer_mouse)"
1848983,What are the animals that are facing the picture?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals that are facing the picture?"")"
17432893,On which side is the wood cabinet?," # left or right
    image_patch = ImagePatch(image)
    wood_cabinet_patches = image_patch.find(""wood cabinet"")
    # Question assumes only one wood cabinet patch
    if len(wood_cabinet_patches) == 0:
        # If no wood cabinet is found, query the image directly
        return image_patch.simple_query(""On which side is the wood cabinet?"")
    wood_cabinet_patch = wood_cabinet_patches[0]
    horizontal_center = wood_cabinet_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
161061326,Is the brown bottle on the right?," # bottle is brown, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bottle on the right?"")"
4180717,What does the person on the snow board hold?," # contains a relation (on, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person on the snow board hold?"")"
9208920,Are there both street signs and cars in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_street_sign = image_patch.exists(""street sign"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_street_sign and is_car)"
694421,Does the door look closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the door look closed or open?"")"
4269795,Does the brown bear seem to be sitting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the brown bear seem to be sitting?"")"
8620217,On which side is the stroller?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the stroller?"")"
2416330,Who is riding the bicycle?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the bicycle?"")"
10778836,Is the floor metallic and brown?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the floor metallic and brown?"")"
14714791,The man to the right of the car is sitting on what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the right of the car is sitting on what?"")"
12296068,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
2261665,What material is the tray made of?," # assumes only one tray patch
    image_patch = ImagePatch(image)
    tray_patches = image_patch.find(""tray"")
    if len(tray_patches) == 0:
        # If no tray is found, query the image directly
        return image_patch.simple_query(""What material is the tray made of?"")
    return tray_patches[0].simple_query(""What material is the tray made of?"")"
19408323,What's the girl sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the girl sitting on?"")"
19394088,Is the vehicle to the right or to the left of the man that is on top of the motorbike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle to the right or to the left of the man that is on top of the motorbike?"")"
1589871,What does this woman play with?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does this woman play with?"")"
1053921,What animal is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the man holding?"")"
19426003,Where is this couch?," # returns the location of the couch
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""Where is this couch?"")
    return couch_patches[0].simple_query(""Where is this couch?"") # crop would include the couch so keep it in the query"
19258285,What is in front of the building made of brick?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building made of brick?"")"
19417833,Does the man that to the right of the skateboard wear a watch?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man that to the right of the skateboard wear a watch?"")"
7456466,Are there both windows and doors in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
7875839,Who is on the chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the chair?"")"
14729715,Are there either players or rackets in the image?," # tennis
    image_patch = ImagePatch(image)
    is_player = image_patch.exists(""player"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_player or is_racket)"
944227,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
463696,Are there either any blue briefcases or backpacks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_briefcase = image_patch.exists(""blue briefcase"")
    is_backpack = image_patch.exists(""backpack"")
    return bool_to_yesno(is_blue_briefcase or is_backpack)"
1546453,Does the zebra's tail look short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra's tail look short?"")"
6374130,Is the chair to the left or to the right of the phone?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left or to the right of the phone?"")"
18407591,What is the vehicle to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the people?"")"
17984739,Do you see windows or doors that are not closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see windows or doors that are not closed?"")"
2853355,Are there both men and women in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_man = image_patch.exists(""man"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_man and is_woman)"
4697389,On which side of the picture is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
17403075,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
5593315,Are there balls in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ball in the air"")) # contains a relation (in the air), so ask directly"
9787334,Is the man to the right of the clock wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the clock wearing a coat?"")"
325939,Are the hill side and the field the same color?," # hill and field are assumed to be on the same horizontal line
    image_patch = ImagePatch(image)
    hill_patches = image_patch.find(""hill"")
    field_patches = image_patch.find(""field"")
    # Question assumes only one hill patch and one field patch
    if len(hill_patches) == 0 or len(field_patches) == 0:
        # If no hill or field is found, query the image directly
        return image_patch.simple_query(""Are the hill side and the field the same color?"")
    hill_patch = hill_patches[0]
    field_patch = field_patches[0]
    return bool_to_yesno(hill_patch.verify_property(""hill"", ""color"") == field_patch.verify_property(""field"", ""color""))"
932279,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
61036561,What is the color of the house?," # returns the color of the house
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""What is the color of the house?"")
    return house_patches[0].simple_query(""What is the color of the house?"") # crop would include the house so keep it in the query"
14791283,What is the shape of the tiles on the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shape of the tiles on the wall?"")"
17626571,Are there any bottles or jars in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle"") or image_patch.exists(""jar""))"
5890506,What device is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on top of the table?"")"
73670,What is the color of the wallet?," # wallet is a specific object, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the wallet?"")"
5595418,Are there any men to the left of the racket on the left?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""racket"") and image_patch.find(""man"")[0].horizontal_center < image_patch.find(""racket"")[0].horizontal_center)"
10262140,What is the book on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the book on?"")"
8727251,What is the color of the keyboard?," # returns the color of the keyboard
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""What is the color of the keyboard?"")
    return keyboard_patches[0].simple_query(""What is the color of the keyboard?"") # crop would include the keyboard so keep it in the query"
8136239,Is the man to the right of a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a boy?"")"
19565777,On which side of the photo is the bike?," # left or right
    image_patch = ImagePatch(image)
    bike_patches = image_patch.find(""bike"")
    # Question assumes only one bike patch
    if len(bike_patches) == 0:
        # If no bike is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the bike?"")
    return ""left"" if bike_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
19470420,Which material makes up the sink?," # material is a property of the object
    image_patch = ImagePatch(image)
    sink_patches = image_patch.find(""sink"")
    # Question assumes only one sink patch
    if len(sink_patches) == 0:
        # If no sink is found, query the image directly
        return image_patch.simple_query(""Which material makes up the sink?"")
    return sink_patches[0].simple_query(""Which material makes up the sink?"") # crop would include the material so keep it in the query"
8311799,Who is wearing the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jeans?"")"
1586193,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
12286263,Does the vehicle to the right of the bench look white or black?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle to the right of the bench look white or black?"")"
8713518,Are there both windows and doors in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
898318,"Where is it, the city or the village?"," # city or village
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is it, the city or the village?"")"
263753,Does the laptop computer to the right of the magazine seem to be off?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the laptop computer to the right of the magazine seem to be off?"")"
9602412,Are these ducks or swans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these ducks or swans?"")"
15413147,Is there a bus near the vehicle that is driving the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bus near the vehicle that is driving the road?"")"
6121082,On which side of the image is the boy?," # left or right
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the boy?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
161060370,Is the kite on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kite on the right side?"")"
2742441,The lid on top of the garbage bin is what color?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The lid on top of the garbage bin is what color?"")"
21000426,Is there a cabinet to the left of the oven that the control panel is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cabinet to the left of the oven that the control panel is on?"")"
3326101,Who is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the hat?"")"
1772791,Is there any bench that is not made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bench that is not made of metal?"")"
15514016,Are the happy people holding a horse?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the happy people holding a horse?"")"
10275822,Are there both doors and windows in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
9849040,What is the vehicle to the right of the fruit that the man is with called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the fruit that the man is with called?"")"
19787212,What is the cord on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cord on?"")"
1651872,What do you think is the food to the right of the white bowls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the food to the right of the white bowls?"")"
10481610,Does the player to the right of the umpire wear a glove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the player to the right of the umpire wear a glove?"")"
4358197,Does the toilet look white and closed?," # toilet is a tricky one
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Does the toilet look white and closed?"")
    for toilet_patch in toilet_patches:
        is_white = toilet_patch.verify_property(""toilet"", ""white"")
        is_closed = toilet_patch.verify_property(""toilet"", ""closed"")
        return bool_to_yesno(is_white and is_closed)"
15192314,What is on the sidewalk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sidewalk?"")"
13274959,Does the purse have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""purse"", ""white""))"
10503699,Is the cabinet to the right or to the left of the bag in the bottom of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet to the right or to the left of the bag in the bottom of the photo?"")"
277958,What is common to the truck and the ladder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the truck and the ladder?"")"
12382933,What place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is it?"")"
19183331,Are there players on the baseball field?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""player on baseball field"")) # crop would include the field so keep it in the query"
1048762,Is the child to the right or to the left of the bear the woman is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child to the right or to the left of the bear the woman is to the left of?"")"
3634137,What appliance has the same color as the stove?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance has the same color as the stove?"")"
11278204,Is the wristband the same color as the sock?," # returns yes or no
    image_patch = ImagePatch(image)
    wristband_patches = image_patch.find(""wristband"")
    # Question assumes only one wristband patch
    if len(wristband_patches) == 0:
        # If no wristband is found, query the image directly
        return image_patch.simple_query(""Is the wristband the same color as the sock?"")
    for wristband_patch in wristband_patches:
        sock_patches = image_patch.find(""sock"")
        for sock_patch in sock_patches:
            if wristband_patch.verify_property(""wristband"", ""color"") == sock_patch.verify_property(""sock"", ""color""):
                return ""yes""
    return ""no"""
1326890,Who is skiing on the smooth snow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing on the smooth snow?"")"
850617,Is the bottle on the right side?," # bottle is on the right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle on the right side?"")"
267422,Is the bag to the right or to the left of the man that is on the platform?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the right or to the left of the man that is on the platform?"")"
141038440,Where is the dog?," # returns the location of the dog
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Where is the dog?"")
    return dog_patches[0].simple_query(""Where is the dog?"")"
11292391,Do you see a bottle to the right of the woman the chair sits in?," # contains a relation (sits in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bottle to the right of the woman the chair sits in?"")"
1054407,On which side of the picture is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9354733,What is the color of that floor?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of that floor?"")"
10674018,What fruit is to the right of the strawberry?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the right of the strawberry?"")"
14754197,What type of animal is in the snow?," # contains a relation (in the snow), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is in the snow?"")"
17448371,Are there cones or American flags in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cone = image_patch.exists(""cone"")
    is_flag = image_patch.exists(""American flag"")
    return bool_to_yesno(is_cone or is_flag)"
10242305,What do you think is the watercraft in the marina?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the watercraft in the marina?"")"
10828756,What device is the same color as the wall next to the woman?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the same color as the wall next to the woman?"")"
18927609,Do you see any animals to the right of the men?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any animals to the right of the men?"")"
337539,"Which part is the fence in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the fence in, the bottom or the top?"")"
181016594,Which kind of aircraft is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is blue?"")"
12366989,What is the device to the left of the chair that is to the left of the magazine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the chair that is to the left of the magazine?"")"
5539755,Of what color is the mat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the mat?"")"
12992158,What color is the box the fence is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the box the fence is to the left of?"")"
13743335,Does the island look white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the island look white?"")"
9176140,Is the red vehicle behind a SUV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red vehicle behind a SUV?"")"
19333490,"Which color is the cooking utensil that is made of wood, brown or white?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the cooking utensil that is made of wood, brown or white?"")"
7510377,What clothing item is not orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is not orange?"")"
1116506,Are the trees lush or bare?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trees lush or bare?"")"
3153659,Is there any woman in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman""))"
8334600,Who is sitting on the sand?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the sand?"")"
9102098,Are there either umbrellas or fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_umbrella or is_fence)"
19576552,Are there people to the left of the person that is to the right of the skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the left of the person that is to the right of the skateboard?"")"
18755678,Who is holding the pizza in this photo?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the pizza in this photo?"")"
18506335,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
17611999,On which side is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13752242,Who is wearing a wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a wetsuit?"")"
2639017,Are there people to the right of the man on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there people to the right of the man on the right side?"")
    man_patch = man_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        return ""no""
    for people_patch in people_patches:
        if people_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
4592108,Are there kites or statues in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kite = image_patch.exists(""kite"")
    is_statue = image_patch.exists(""statue"")
    return bool_to_yesno(is_kite or is_statue)"
2348991,Does the container made of cardboard have white color?," # container made of cardboard
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container made of cardboard"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Does the container made of cardboard have white color?"")
    return bool_to_yesno(container_patches[0].verify_property(""container made of cardboard"", ""white""))"
747175,On which side of the photo is the ladder?," # left or right
    image_patch = ImagePatch(image)
    ladder_patches = image_patch.find(""ladder"")
    # Question assumes only one ladder patch
    if len(ladder_patches) == 0:
        # If no ladder is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the ladder?"")
    return ""left"" if ladder_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
14545547,"Which toy is this, a stuffed bear or a doll?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which toy is this, a stuffed bear or a doll?"")"
6915515,Was glass used to make the bowl that is not large?," # contains a relation (not large), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was glass used to make the bowl that is not large?"")"
103501,What is the net inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the net inside of?"")"
3593046,What material is the light floor made of?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the light floor made of?"")"
6634542,What do both the skateboard and the sign have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the skateboard and the sign have in common?"")"
10708828,Is the woman with the cow wearing glasses?," # contains a relation (woman with cow), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman with the cow wearing glasses?"")"
7838311,Are the animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the animals of different species?"")"
7991241,Is the boot black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boot black?"")"
1495446,What is on the chair made of plastic?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the chair made of plastic?"")"
2810798,Is the garbage bin the same color as the fire hydrant?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garbage bin the same color as the fire hydrant?"")"
9701068,What's sitting on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's sitting on the desk?"")"
19472409,What item of furniture is not cluttered?," # returns the first item of furniture that is not cluttered
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        is_cluttered = furniture_patch.simple_query(""Is the furniture cluttered?"") == ""yes""
        if not is_cluttered:
            return furniture_patch.simple_query(""What item of furniture is not cluttered?"")
    return image_patch.simple_query(""What item of furniture is not cluttered?"") # if no furniture is not cluttered, query the image directly"
4635403,What animal do you think is in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal do you think is in the air?"")"
2804190,Is the black computer to the right or to the left of the speaker that is to the left of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black computer to the right or to the left of the speaker that is to the left of the monitor?"")"
1866726,Is the green umbrella above the bananas?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green umbrella above the bananas?"")"
18358598,Is the dark vehicle to the left or to the right of the van?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dark vehicle to the left or to the right of the van?"")"
2541964,Do you see any cheese on the white plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cheese on the white plate?"")"
389633,What is the long sleeved item of clothing in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the long sleeved item of clothing in the photo?"")"
12346002,What is the color of the chair made of plastic?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the chair made of plastic?"")"
78230,What color is the tie?," # returns the color of the tie
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        # If no tie is found, query the image directly
        return image_patch.simple_query(""What color is the tie?"")
    return tie_patches[0].simple_query(""What color is the tie?"") # crop would include the tie so keep it in the query"
3323260,How large is the TV that is not turned off?," # returns a string
    image_patch = ImagePatch(image)
    tv_patches = image_patch.find(""TV"")
    # Question assumes only one TV patch
    if len(tv_patches) == 0:
        # If no TV is found, query the image directly
        return image_patch.simple_query(""How large is the TV that is not turned off?"")
    for tv_patch in tv_patches:
        if tv_patch.verify_property(""TV"", ""turned off"") == False:
            return tv_patch.simple_query(""How large is the TV that is not turned off?"")
    # If no TV is not turned off, query the image directly
    return image_patch.simple_query(""How large is the TV that is not turned off?"")"
5472599,Is there a pillow to the right of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow to the right of the lamp?"")"
16149147,What is the dirt on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dirt on?"")"
151045651,Of what color is the vehicle in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the vehicle in the middle of the photo?"")"
9761082,What is the man playing?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man playing?"")"
455895,Is there a cat or a dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat"") or image_patch.exists(""dog""))"
4875951,Is there a train by the platform?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a train by the platform?"")"
11787656,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
318501,Is the glass in front of the Coca Cola?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass in front of the Coca Cola?"")"
6928203,Is the napkin yellow?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin yellow?"")"
1652290,Is the shelf to the right or to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the right or to the left of the cabinet?"")"
5484491,Which color are the French fries on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the French fries on the plate?"")"
3786745,What color is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the grass?"")"
2808274,On which side is the milk?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the milk?"")"
11148948,Is there any pizza or plate in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pizza"") or image_patch.exists(""plate""))"
1290494,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
17330193,Is the bag on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag on the left?"")"
12475213,Which color is the television?," # returns the color of the television
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the television?"")"
1988348,Are there any American flags or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_american_flag = image_patch.exists(""American flag"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_american_flag or is_umbrella)"
16991920,Is the brown bowl on the left side?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bowl on the left side?"")"
16852429,Do you see umbrellas above the chair?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see umbrellas above the chair?"")"
4642901,Do you think the chair to the right of the man is blue or yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the chair to the right of the man is blue or yellow?"")"
14559503,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
11172196,Is the couch to the left of a pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch to the left of a pillow?"")"
13273145,What is in front of the light post?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the light post?"")"
3573069,Who is holding the toothbrush?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the toothbrush?"")"
6452669,On which side of the image is the garbage bin?," # left or right
    image_patch = ImagePatch(image)
    garbage_bin_patches = image_patch.find(""garbage bin"")
    # Question assumes only one garbage bin patch
    if len(garbage_bin_patches) == 0:
        # If no garbage bin is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the garbage bin?"")
    if garbage_bin_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3296404,Is the brown animal to the right of the person on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown animal to the right of the person on the right?"")"
17315002,Is the happy girl to the left or to the right of the silver lamp?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy girl to the left or to the right of the silver lamp?"")"
15573750,What is the device in front of him?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device in front of him?"")"
11725960,What is the mouse pad on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mouse pad on?"")"
10194762,What color does the container near the road have?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the container near the road have?"")"
7462733,What is the animal in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in this image?"")"
51052477,Is the sky the same color as the train?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky the same color as the train?"")"
5447750,What kind of furniture is above the bottle on the ground?," # contains a relation (above), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is above the bottle on the ground?"")"
7607810,What is the animal to the left of the bag sitting on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the bag sitting on?"")"
15483852,What is in the bowl to the right of the broccoli?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl to the right of the broccoli?"")"
8217199,What is the long fence made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the long fence made of?"")"
16134965,What is the color of the trains to the left of the other train?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the trains to the left of the other train?"")"
13493508,What place was the picture taken at?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the picture taken at?"")"
15837452,What drink is to the right of the bowl the utensil is in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is to the right of the bowl the utensil is in?"")"
1870961,Does the man in the sky seem to be jumping?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man in the sky seem to be jumping?"")"
5982750,Does the laptop that is to the right of the computer appear to be off or on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the laptop that is to the right of the computer appear to be off or on?"")"
5501180,The snow is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The snow is on what?"")"
11402494,Are there ambulances or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ambulance = image_patch.exists(""ambulance"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_ambulance or is_train)"
1922646,Who is riding a horse?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding a horse?"")"
547552,Which kind of food is to the left of the pot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the pot?"")"
17796379,Does the drawer to the left of the printer look small and wooden?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the drawer to the left of the printer look small and wooden?"")"
16205280,What is this lady wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this lady wearing?"")"
13599967,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
11745817,What kind of animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the water?"")"
412193,What item of furniture is to the left of the closet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the left of the closet?"")"
17433863,Which side of the photo is the metal fork on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the metal fork on?"")"
9859683,Who is playing tennis?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing tennis?"")"
9293530,Is the kid on the cart to the left of the man?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid on the cart to the left of the man?"")"
758269,Are there both frisbees and dogs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_frisbee = image_patch.exists(""frisbee"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_frisbee and is_dog)"
5783667,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
121000372,The person behind the water is standing in what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person behind the water is standing in what?"")"
14250068,Are there both windows and doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
10200175,Are there beds or tables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_bed or is_table)"
1049263,What is located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the table?"")"
13973565,Is the person using a cane?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person using a cane?"")"
19302394,Which kind of fast food is to the left of the pizza boxes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is to the left of the pizza boxes?"")"
14493743,What type of appliance is to the right of the guy that is to the right of the telephone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of appliance is to the right of the guy that is to the right of the telephone?"")"
8751203,What is the man riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man riding?"")"
2940715,Is the color of the shirt different than that of the ring?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than that of the ring?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    ring_patches = image_patch.find(""ring"")
    # Question assumes only one ring patch
    if len(ring_patches) == 0:
        # If no ring is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than that of the ring?"")
    ring_color = ring_patches[0].simple_query(""What is the color of the ring?"")
    return bool_to_yesno(shirt_color != ring_color)"
1350070,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
9763842,Is there any wine to the right of the round plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any wine to the right of the round plate?"")"
13391954,Is the tree behind a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind a fence?"")"
121034964,Are there either any objects or tents in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""object"") or image_patch.exists(""tent""))"
12410196,Is the man to the right or to the left of the red chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the red chair?"")"
11559817,Is the chair to the right or to the left of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the man that is wearing a shirt?"")"
11407816,Is the happy person to the left or to the right of the horse?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy person to the left or to the right of the horse?"")"
933565,Are there either white buses or trucks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bus = image_patch.exists(""white bus"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_white_bus or is_truck)"
1059363,Are there bikes on the street?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike on street"")) # crop would include the street so keep it in the query"
2337250,Is the tomato to the left or to the right of the lemon on the plate?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tomato to the left or to the right of the lemon on the plate?"")"
6600798,On which side of the picture is the bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12410881,What animal is to the left of the flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the flag?"")"
6381516,Who is dressed in white?," # contains a relation (dressed in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is dressed in white?"")"
16301095,What is the bench surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bench surrounded by?"")"
1041819,Are these animals the same type?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only two animal patches
    if len(animal_patches) < 2:
        # If less than two animals are found, query the image directly
        return image_patch.simple_query(""Are these animals the same type?"")
    for i in range(len(animal_patches)):
        for j in range(i+1, len(animal_patches)):
            if animal_patches[i].simple_query(""What type of animal is this?"") != animal_patches[j].simple_query(""What type of animal is this?""):
                return ""no""
    return ""yes"""
4246047,Are there either cans or beach umbrellas in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""can"") or image_patch.exists(""beach umbrella"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5183296,Which kind of food is to the left of the spoon?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the spoon?"")"
6829952,What's the man leaning on?," # contains a relation (leaning on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man leaning on?"")"
1012985,What vehicle is silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is silver?"")"
10108268,Is the blue sky cloudless or maybe stormy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue sky cloudless or maybe stormy?"")"
96720,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
19970514,What kind of animal are the bushes behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal are the bushes behind of?"")"
17247457,Does the lid appear to be up?," # assumes only one lid patch
    image_patch = ImagePatch(image)
    lid_patches = image_patch.find(""lid"")
    if len(lid_patches) == 0:
        # If no lid is found, query the image directly
        return image_patch.simple_query(""Does the lid appear to be up?"")
    return bool_to_yesno(lid_patches[0].verify_property(""lid"", ""up""))"
16738562,Does the umbrella above the man seem to be small and black?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the umbrella above the man seem to be small and black?"")"
13457984,Which kind of furniture is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is large?"")"
3354715,Is the man to the left or to the right of the tennis racket?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the left or to the right of the tennis racket?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return image_patch.simple_query(""Is the man to the left or to the right of the tennis racket?"")
    racket_patch = racket_patches[0]
    if man_patch.horizontal_center < racket_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11966523,Do you see either any scarves or hats that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    hat_patches = image_patch.find(""hat"")
    for scarf_patch in scarf_patches:
        if scarf_patch.verify_property(""scarf"", ""black"") == False:
            return ""yes""
    for hat_patch in hat_patches:
        if hat_patch.verify_property(""hat"", ""black"") == False:
            return ""yes""
    return ""no"""
8322034,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
10936440,Is the bag on top of a bookcase?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag on top of a bookcase?"")"
980349,Which kind of food isn't brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food isn't brown?"")"
19138105,What is the girl that looks blonde doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl that looks blonde doing?"")"
10191751,Is the hat green?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hat green?"")"
14904415,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
7277224,Are the glasses in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses in the bottom part of the photo?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no"""
11115681,Does the ground look blue?," # ground is a common object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ground"", ""blue""))"
655682,What color is the old train?," # old train is a specific object
    image_patch = ImagePatch(image)
    old_train_patches = image_patch.find(""old train"")
    # Question assumes only one old train patch
    if len(old_train_patches) == 0:
        # If no old train is found, query the image directly
        return image_patch.simple_query(""What color is the old train?"")
    return old_train_patches[0].simple_query(""What color is the old train?"") # crop would include the old train so keep it in the query"
12799214,Which kind of vegetable is to the left of the rice?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the left of the rice?"")"
563601,Are there both doors and windows in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
1399390,What is the woman that is to the right of the glasses wearing?," # glasses is a relational verb
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""What is the woman that is to the right of the glasses wearing?"")
    glasses_patch = glasses_patches[0]
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What is the woman that is to the right of the glasses wearing?"")
    woman_patch = woman_patches[0]
    if glasses_patch.horizontal_center < woman_patch.horizontal_center:
        return woman_patch.simple_query(""What is the woman that is to the right of the glasses wearing?"")
    return woman_patch.simple_query(""What is the woman wearing?"") # crop would include the glasses so keep it in the query"
2609820,Are there any chairs or bags in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_chair or is_bag)"
16959255,Who is the skater watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the skater watching?"")"
12205704,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
14310111,Which kind of animal is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is standing?"")"
17899675,Which side is the house on?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""Which side is the house on?"")
    house_patch = house_patches[0]
    if house_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1652372,What is on the shelf on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf on the right?"")"
10833219,Are there both ties and glasses in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie and is_glasses)"
10577578,What color is the short sleeved shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the short sleeved shirt?"")"
3438549,What is the color of that outfit?," # returns the color of the outfit
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of that outfit?"")"
8713819,Which kind of clothing is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is red?"")"
1488111,Are there any teddy bears that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    teddy_bear_patches = image_patch.find(""teddy bear"")
    for teddy_bear_patch in teddy_bear_patches:
        if not teddy_bear_patch.verify_property(""teddy bear"", ""white""):
            return ""yes""
    return ""no"""
84493,Is the cupboard to the left of the appliance that is made of stainless steel?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cupboard to the left of the appliance that is made of stainless steel?"")"
4413033,What animal is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is black?"")"
242855,Is the cake large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake large?"")"
8592986,The sky is what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sky is what color?"")"
16666317,Are there either mattresses or pillows in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_mattress = image_patch.exists(""mattress"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_mattress or is_pillow)"
21013054,What is on the dish?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dish?"")"
2443933,Who is wearing a jersey?," # jersey is a type of clothing
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jersey?"")"
4554946,Who is on the animal that looks brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the animal that looks brown?"")"
11389088,Which kind of furniture is the coffee table in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the coffee table in front of?"")"
1331482,What is the animal in the pen?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the pen?"")"
2831824,What color are the cat's eyes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the cat's eyes?"")"
8660722,Is the elephant to the left of a guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the elephant to the left of a guy?"")"
19585164,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16954087,Are the trousers khaki or orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trousers khaki or orange?"")"
17286487,What cooking utensils are to the right of the bread that is to the right of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensils are to the right of the bread that is to the right of the plate?"")"
1325678,How is the weather today?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather today?"")"
18241050,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
287946,Are there any fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
3885628,Are there any couches or bowls in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_couch = image_patch.exists(""couch"")
    is_bowl = image_patch.exists(""bowl"")
    return bool_to_yesno(is_couch or is_bowl)"
18527544,Does the food with the olive look red?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the food with the olive look red?"")"
17102964,What is that toilet paper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that toilet paper on?"")"
1529400,Is there a bag to the right of the person that wears shoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag to the right of the person that wears shoes?"")"
14501086,"Where in the picture is the old appliance, on the right or on the left?"," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""old appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""Where in the picture is the old appliance, on the right or on the left?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
5634103,Do you see chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
1614299,Does the kitchen look small?," # kitchen is a room, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the kitchen look small?"")"
18241392,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
3384186,He is riding what animal?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""He is riding what animal?"")"
1815522,What is the photo showing?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the photo showing?"") # assumes the image is the whole scene"
15267138,What kind of fast food is delicious?," # contains a relation (delicious), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is delicious?"")"
16940561,Is this a sofa or a desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a sofa or a desk?"")"
4549358,What is the color of the shirt the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the boy is wearing?"")"
522796,Is the picture to the left or to the right of the man on the left of the image?," # left of the image
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture to the left or to the right of the man on the left of the image?"")
    for picture_patch in picture_patches:
        man_patches = image_patch.find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            # If no man is found, query the image directly
            return image_patch.simple_query(""Is the picture to the left or to the right of the man on the left of the image?"")
        man_patch = man_patches[0]
        if picture_patch.horizontal_center < man_patch.horizontal_center:
            return ""left""
    return ""right"""
161062048,Who is cutting the cake?," # contains a relation (cutting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is cutting the cake?"")"
16497557,Is the person to the right of the stroller wearing skis?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the stroller wearing skis?"")"
7834298,What kind of vehicle is parked at the gas station that is shown in the photo?," # contains a relation (at, in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is parked at the gas station that is shown in the photo?"")"
6871577,Which kind of animal is in the bun?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in the bun?"")"
31070522,Which kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is it?"")"
5340324,Is the hot dog to the left of cheese?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hot dog to the left of cheese?"")"
8699058,Does the shoe look white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shoe look white?"")"
2233967,What kind of clothing is not colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is not colorful?"")
    for clothing_patch in clothing_patches:
        is_colorful = clothing_patch.verify_property(""clothing"", ""colorful"")
        if not is_colorful:
            return clothing_patch.simple_query(""What kind of clothing is not colorful?"")
    # If no clothing is not colorful, query the image directly
    return image_patch.simple_query(""What kind of clothing is not colorful?"")"
9178428,What is the piece of furniture below the television that is on the wall?," # contains a relation (below, on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture below the television that is on the wall?"")"
12846133,Is the food to the left of the plate red or green?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the food to the left of the plate red or green?"")"
11957494,Is the appliance that looks gray made of steel?," # gray is a property of the appliance, so ask directly
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Is the appliance that looks gray made of steel?"")
    return appliance_patches[0].verify_property(""appliance"", ""steel"")"
5121195,Do the van and the motorbike have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    motorbike_patches = image_patch.find(""motorbike"")
    # Question assumes only one van and motorbike patch
    if len(van_patches) == 0 or len(motorbike_patches) == 0:
        # If no van or motorbike is found, query the image directly
        return image_patch.simple_query(""Do the van and the motorbike have a different colors?"")
    van_patch = van_patches[0]
    motorbike_patch = motorbike_patches[0]
    return bool_to_yesno(van_patch.verify_property(""van"", ""blue"") != motorbike_patch.verify_property(""motorbike"", ""blue""))"
9909537,"In which part are the tongs, the top or the bottom?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part are the tongs, the top or the bottom?"")"
3206512,What animal is on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the sand?"")"
11149497,Are there girls or cell phones in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_girl = image_patch.exists(""girl"")
    is_cell_phone = image_patch.exists(""cell phone"")
    return bool_to_yesno(is_girl or is_cell_phone)"
1350032,What device is to the right of the cell phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the cell phone?"")"
3346933,Where was the picture taken?," # contains a relation (where was taken), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the picture taken?"")"
101056770,Are there any cows that are male?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""male cow"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1791465,"What color is the armchair, green or white?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the armchair, green or white?"")"
882136,What is the color of the van to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the van to the right of the man?"")"
1265702,Is the man to the right of the dog on the left side?," # assumes only one man and one dog
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    dog_patches = image_patch.find(""dog"")
    if len(man_patches) == 0 or len(dog_patches) == 0:
        return image_patch.simple_query(""Is the man to the right of the dog on the left side?"")
    man = man_patches[0]
    dog = dog_patches[0]
    if man.horizontal_center > dog.horizontal_center:
        return bool_to_yesno(man.horizontal_center < image_patch.horizontal_center)
    return bool_to_yesno(man.horizontal_center < image_patch.horizontal_center)"
8140888,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
6838370,Who is watching the man?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is watching the man?"")"
4946833,Are there chairs to the left of the cabinet that is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there chairs to the left of the cabinet that is in front of the wall?"")"
14817029,What toy is the person on the bench holding?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is the person on the bench holding?"")"
1987058,Is the end table to the right of a pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the end table to the right of a pillow?"")"
3140046,Is the small appliance below an oven?," # assumes only one appliance and one oven
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""small appliance"")
    oven_patches = image_patch.find(""oven"")
    if len(appliance_patches) == 0 or len(oven_patches) == 0:
        return image_patch.simple_query(""Is the small appliance below an oven?"")
    appliance = appliance_patches[0]
    oven = oven_patches[0]
    return bool_to_yesno(appliance.vertical_center < oven.vertical_center)"
14718723,Is the person to the right of the ski wearing a wetsuit?," # ski and wetsuit are not in the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person to the right of the ski wearing a wetsuit?"")
    for person_patch in person_patches:
        ski_patches = image_patch.find(""ski"")
        for ski_patch in ski_patches:
            if ski_patch.horizontal_center < person_patch.horizontal_center:
                return bool_to_yesno(person_patch.verify_property(""person"", ""wetsuit""))
    return ""no"""
15105956,What is the animal to the left of the blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the blanket?"")"
13991113,What's the bird on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bird on?"")"
13896430,What color does that hair have?," # hair is a general term, so query directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does that hair have?"")"
8863145,What is the plant in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plant in?"")"
3638637,Are there both a door and a window in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
17603681,What are the onions on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the onions on?"")"
19652950,Who is wearing a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a skirt?"")"
162827,What is the drink that is to the right of the mugs on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink that is to the right of the mugs on the left?"")"
1246701,Does the flag look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the flag look orange?"")) # crop would include the flag so keep it in the query"
17534999,Does the hair seem to be long?," # hair is a property of the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Does the hair seem to be long?"")
    return bool_to_yesno(person_patches[0].verify_property(""hair"", ""long""))"
18861368,Is this a photo of the village or the city?," # contains a relation (village, city), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a photo of the village or the city?"")"
1580677,Are there any radiators on the wood floor?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""radiator"") and image_patch.exists(""wood floor""))"
111051090,What is the color of the lips?," # returns the color of the lips
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the lips?"")"
151141,Are there either windows or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window or is_car)"
9997156,Are there pillows or beds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_pillow or is_bed)"
8355657,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
1784878,Are there either any black trains or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_train or is_car)"
15442062,On which side of the photo is the trash can?," # left or right
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the trash can?"")
    trash_can_patch = trash_can_patches[0]
    if trash_can_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
41026430,What color is the car?," # returns the color of the car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car?"")
    return car_patches[0].simple_query(""What color is the car?"")"
10757353,Is the baby in front of the pillows playing on a DVD player?," # contains a relation (in front of, playing on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baby in front of the pillows playing on a DVD player?"")"
12686842,Is the truck to the right or to the left of the cone in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck to the right or to the left of the cone in the middle?"")"
5702885,Is this a black bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a black bike?"")"
71030745,What is the man to the right of the person holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the person holding?"")"
1054603,Is the lamp to the left or to the right of the blinds?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the left or to the right of the blinds?"")"
7824779,Is the hose to the right of the dispenser metallic and green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hose to the right of the dispenser metallic and green?"")"
8391608,What is in front of the wire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the wire?"")"
4768570,What color is the egg to the left of the other eggs?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the egg to the left of the other eggs?"")"
10843396,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
12991753,What color is the fence?," # returns the color of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What color is the fence?"")
    return fence_patches[0].simple_query(""What color is the fence?"")"
13365440,How is this drink called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is this drink called?"")"
51021151,"In which part of the image are the eggs, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the eggs, the top or the bottom?"")"
10603868,Does the bed sheet that looks white and blue look striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bed sheet that looks white and blue look striped?"")"
6708725,Do you see both bananas and apples?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""banana"") and image_patch.exists(""apple""))"
1241111,Is the blue screen on the left or on the right of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue screen on the left or on the right of the picture?"")"
1763891,What does the baby to the right of the lady wear?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the baby to the right of the lady wear?"")"
12485732,What is located on top of the plate on the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the plate on the table?"")"
10362758,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
2941606,Do you see sofas in the image that are short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see sofas in the image that are short?"")"
9305358,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
823634,Which color is the sink near the faucet?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the sink near the faucet?"")"
13439471,Which color is the glove?," # returns the color of the glove
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Which color is the glove?"")
    return glove_patches[0].simple_query(""Which color is the glove?"")"
19654545,Which kind of furniture is to the left of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the table?"")"
7838008,Are there frisbees in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""frisbee""))"
5380604,What is the fruit in the orange bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit in the orange bowl?"")"
13614621,What color is that tablecloth?," # returns the color of the tablecloth
    image_patch = ImagePatch(image)
    tablecloth_patches = image_patch.find(""tablecloth"")
    # Question assumes only one tablecloth patch
    if len(tablecloth_patches) == 0:
        # If no tablecloth is found, query the image directly
        return image_patch.simple_query(""What color is that tablecloth?"")
    return tablecloth_patches[0].simple_query(""What color is that tablecloth?"")"
19817299,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
2668762,Is the black vehicle to the right or to the left of the person on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black vehicle to the right or to the left of the person on the left?"")"
8805031,Are there any cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat""))"
418891,Is the mirror to the right of a bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mirror to the right of a bus?"")"
13593400,Is the foil on a nightstand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the foil on a nightstand?"")"
6784253,Do the elephants above the grass look healthy?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the elephants above the grass look healthy?"")"
16258319,On which side of the photo is the backpack?," # left or right
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the backpack?"")
    backpack_patch = backpack_patches[0]
    if backpack_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7361185,Which kind of fruit isn't connected?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit isn't connected?"")"
8556830,What kind of appliance is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    for appliance_patch in appliance_patches:
        if appliance_patch.verify_property(""appliance"", ""white"") == False:
            return appliance_patch.simple_query(""What kind of appliance is not white?"")
    return image_patch.simple_query(""What kind of appliance is not white?"")"
14952083,Is the pan on the left?," # assumes only one pan
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    if len(pan_patches) == 0:
        return image_patch.simple_query(""Is the pan on the left?"")
    pan_patch = pan_patches[0]
    if pan_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    return ""no"""
672476,What kind of animal is in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the field?"")"
697508,Are the picture and the butterfly the same color?," # image is a 3D array
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Are the picture and the butterfly the same color?"")
    picture_patch = picture_patches[0]
    butterfly_patches = image_patch.find(""butterfly"")
    # Question assumes only one butterfly patch
    if len(butterfly_patches) == 0:
        return ""no""
    butterfly_patch = butterfly_patches[0]
    return bool_to_yesno(picture_patch.verify_property(""picture"", ""blue"") == butterfly_patch.verify_property(""butterfly"", ""blue""))"
6993114,What type of furniture is the person to the left of the plate sitting on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the person to the left of the plate sitting on?"")"
91023231,Is the small vehicle in the bottom part or in the top of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small vehicle in the bottom part or in the top of the picture?"")"
14324006,Do you see any surfboards to the right of the man in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any surfboards to the right of the man in the middle of the image?"")"
3390860,Which color are the bananas that are hanging from the tree?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the bananas that are hanging from the tree?"")"
8358682,Is the lady of the surfboard wearing a suit?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady of the surfboard wearing a suit?"")"
12256717,What kind of furniture is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the person?"")"
1550519,What is the meat to the left of the silver fork called?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat to the left of the silver fork called?"")"
8164452,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
6385894,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
1603895,Is the large mirror to the left or to the right of the white pillow?," # mirror and pillow are assumed to be the only objects of their respective types
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one mirror and one pillow patch
    if len(mirror_patches) == 0 or len(pillow_patches) == 0:
        # If no mirror or pillow is found, query the image directly
        return image_patch.simple_query(""Is the large mirror to the left or to the right of the white pillow?"")
    mirror_patch = mirror_patches[0]
    pillow_patch = pillow_patches[0]
    if mirror_patch.horizontal_center < pillow_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
341427,Is there a pillow to the left of the TV on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow to the left of the TV on the right?"")"
8341683,Which kind of meat is the cheese on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is the cheese on?"")"
1697612,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
2660140,Is the blue boat to the right of the colorful umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue boat to the right of the colorful umbrella?"")"
19591688,Is it cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it cloudy?"")"
6760472,Are the ice cubes to the right of a beer bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the ice cubes to the right of a beer bottle?"")"
782046,Who wears shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears shoes?"")"
8236995,Is the white bowl on the left of the picture?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bowl on the left of the picture?"")"
14160150,Do you see doors that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see doors that are not red?"")"
5699803,How is the piece of furniture that is in front of the picture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the piece of furniture that is in front of the picture called?"")"
7452974,Are there either any remote controls or computer mice that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    computer_mouse_patches = image_patch.find(""computer mouse"")
    is_remote_control_black = False
    is_computer_mouse_black = False
    for remote_control_patch in remote_control_patches:
        is_remote_control_black = is_remote_control_black or remote_control_patch.verify_property(""remote control"", ""black"")
    for computer_mouse_patch in computer_mouse_patches:
        is_computer_mouse_black = is_computer_mouse_black or computer_mouse_patch.verify_property(""computer mouse"", ""black"")
    return bool_to_yesno(not is_remote_control_black or not is_computer_mouse_black)"
4306361,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16855537,What kind of appliance is dirty?," # dirty is a property of appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What kind of appliance is dirty?"")
    return appliance_patches[0].simple_query(""What kind of appliance is dirty?"") # crop would include the dirty property so keep it in the query"
5300271,What kind of animal are the shrubs behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal are the shrubs behind of?"")"
19366547,What is the man above the net wearing?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man above the net wearing?"")"
196436,Which kind of watercraft is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of watercraft is in the water?"")"
18277653,What type of device is to the right of the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the couch?"")"
5437821,Where are the people?," # returns the location of the people
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""Where are the people?"")
    return people_patches[0].simple_query(""Where are the people?"")"
5198659,What is that man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man wearing?"")"
11736795,Do you see either a white lamb or horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_lamb = image_patch.exists(""white lamb"")
    is_white_horse = image_patch.exists(""white horse"")
    return bool_to_yesno(is_white_lamb or is_white_horse)"
14542869,Do you see a bed to the left of the white clock?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bed to the left of the white clock?"")"
17971059,Are there rugs or pots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_rug = image_patch.exists(""rug"")
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_rug or is_pot)"
15408164,What is the fruit to the left of the pear that is to the left of the fruits?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit to the left of the pear that is to the left of the fruits?"")"
18560311,Which kind of fruit is to the right of the skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is to the right of the skateboard?"")"
18860635,Is there any brown grass or mud?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown grass"") or image_patch.exists(""mud""))"
3184759,"Which part is the woman in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the woman in, the top or the bottom?"")"
1831924,Do you see both a table and a bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table"") and image_patch.exists(""bed""))"
15850998,Is there a skateboard to the right of the man that is using a camera?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a skateboard to the right of the man that is using a camera?"")"
14147267,What kind of furniture is mounted on the wall the monitor is in front of?," # contains a relation (in front of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is mounted on the wall the monitor is in front of?"")"
10424651,On which side of the photo are the silver tables?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo are the silver tables?"")"
18996498,What are the fruits to the right of the salad the cheese is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits to the right of the salad the cheese is to the left of?"")"
1891794,Which part of the image is the orange vegetable in?," # carrot
    image_patch = ImagePatch(image)
    orange_patches = image_patch.find(""orange vegetable"")
    # Question assumes only one orange patch
    if len(orange_patches) == 0:
        # If no orange is found, query the image directly
        return image_patch.simple_query(""Which part of the image is the orange vegetable in?"")
    return orange_patches[0].simple_query(""Which part of the image is the orange vegetable in?"")"
15397042,Are there cabinets or couches that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"") and image_patch.find(""cabinet"")[0].verify_property(""cabinet"", ""white"")
    is_couch = image_patch.exists(""couch"") and image_patch.find(""couch"")[0].verify_property(""couch"", ""white"")
    return bool_to_yesno(is_cabinet or is_couch)"
15155041,Is this a bed or a couch?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a couch?"")"
1044198,Is there a bag to the left of the brown couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag to the left of the brown couch?"")"
15323371,Do the boots look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the boots look black?"")"
13569478,Do you see any grass or sand that are brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any grass or sand that are brown?"")"
15752654,Are there skateboards or serving trays?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_serving_tray = image_patch.exists(""serving tray"")
    return bool_to_yesno(is_skateboard or is_serving_tray)"
9374270,Is the backpack on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack on the right or on the left?"")"
11765005,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
14684557,What animal is to the right of the coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the coffee table?"")"
612366,What is located on top of the spoon that the sponge is to the left of?," # contains a relation (on top of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the spoon that the sponge is to the left of?"")"
558312,What place is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is shown?"")"
19826627,"Where in this photograph is the ball, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photograph is the ball, in the bottom or in the top?"")"
11357221,Is the white plate to the left of the fork that is on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white plate to the left of the fork that is on the right of the image?"")"
8450811,What is the person to the left of the house holding?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the house holding?"")"
51023344,Is the house in the top or in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house in the top or in the bottom of the photo?"")"
12623104,Is the woman that is to the left of the cup talking on a phone?," # contains a relation (left of, talking on a phone), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman that is to the left of the cup talking on a phone?"")"
1327313,Is the baseball to the left or to the right of the person that is standing in the grass?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baseball to the left or to the right of the person that is standing in the grass?"")"
11561238,What color do you think the basket the man is carrying is?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the basket the man is carrying is?"")"
1929638,What animal is on the red poster?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the red poster?"")"
14837184,Which side is the bowl on?," # left or right
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Which side is the bowl on?"")
    if bowl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9861359,What is the woman on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman on?"")"
1076256,Who is wearing an athletic shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing an athletic shoe?"")"
1246808,Are there benches or kites in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_benches = image_patch.exists(""benches"")
    is_kites = image_patch.exists(""kite"")
    return bool_to_yesno(is_benches or is_kites)"
4796542,Is the red bowl in the bottom part or in the top of the photo?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red bowl in the bottom part or in the top of the photo?"")"
936640,Do you see a fence in this photo that is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    for fence_patch in fence_patches:
        if fence_patch.simple_query(""What color is the fence?"") != ""black"":
            return ""yes""
    return ""no"""
17748027,Are there any glasses or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_glasses or is_pillow)"
8105805,What is the color of the container to the right of the vegetable?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the container to the right of the vegetable?"")"
18651631,Who is standing in front of the net?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing in front of the net?"")"
5489116,Is the locomotive to the left of the other locomotive gray or orange?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the locomotive to the left of the other locomotive gray or orange?"")"
2771761,Do you see both umbrellas and chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_umbrella and is_chair)"
9376790,What is the item of furniture that the card is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that the card is on?"")"
6399465,Do you see any fork or cup in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork"") or image_patch.exists(""cup""))"
972931,Is the person to the right of the person standing on a surfboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the person standing on a surfboard?"")"
16953587,What is the color of the shorts the person wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shorts the person wears?"")"
1025266,Does that man ride a bike?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that man ride a bike?"")"
272111,Does this surfboard appear to be white and large?," # returns yes or no
    image_patch = ImagePatch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    # Question assumes only one surfboard patch
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch.simple_query(""Does this surfboard appear to be white and large?"")
    return bool_to_yesno(surfboard_patches[0].verify_property(""surfboard"", ""white"") and surfboard_patches[0].verify_property(""surfboard"", ""large""))"
1162459,Are there both women and men in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman and is_man)"
4988131,Which kind of furniture is to the left of the towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the towel?"")"
171050329,What is the animal that is lying in the dirt called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is lying in the dirt called?"")"
4376372,"Which kind of food is not round, the pizza or the olive?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not round, the pizza or the olive?"")"
17704497,What is the device that is to the left of the black couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the left of the black couch?"")"
51058477,Are there boats in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
15515084,In front of what kind of furniture is the bathtub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In front of what kind of furniture is the bathtub?"")"
71022960,What is the boy on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy on?"")"
161030258,Which side of the image is the fork on?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the fork on?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12762861,Is the woman to the right of a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of a boy?"")"
2678424,Is the hair dryer to the right of the toothpaste?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair dryer to the right of the toothpaste?"")"
18354539,Is the plastic bowl round and yellow?," # contains a relation (round, yellow, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic bowl round and yellow?"")"
3476747,Are there cakes in the plate in the bottom of the picture?," # contains a relation (in the bottom of the picture), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cake""))"
17542552,Is it foggy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it foggy?"")"
8150049,Are there both cups and plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_cup and is_plate)"
18315257,What is the motorcycle wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the motorcycle wearing?"")"
895127,Are there any dispensers or canes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dispenser = image_patch.exists(""dispenser"")
    is_cane = image_patch.exists(""cane"")
    return bool_to_yesno(is_dispenser or is_cane)"
3813044,What is the food in the bowl that the sandwich is to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food in the bowl that the sandwich is to the left of?"")"
124513,Is the garnish of the food on the food that is on the plate?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garnish of the food on the food that is on the plate?"")"
16606453,"Where in the picture is the oven, on the left or on the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the oven, on the left or on the right?"")"
19637406,Is the color of the bush the same as the door?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the bush the same as the door?"")"
9968283,Who is wearing shirts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shirts?"")"
202113,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
1393920,Where is that giraffe standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that giraffe standing?"")"
18324505,What type of device is to the right of the lamp that is made of wood?," # contains a relation (right of, made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the lamp that is made of wood?"")"
19182342,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
2626693,How is the animal that is in front of the dry bushes called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal that is in front of the dry bushes called?"")"
594048,Is the guy to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the left of a chair?"")"
19588134,Are there doors in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
622801,Is the salad to the left of the green fruits?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the salad to the left of the green fruits?"")"
13483591,What is in the bowl that the cereal is to the left of?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl that the cereal is to the left of?"")"
91004834,Is the metal fence to the left of the animal that is eating hay?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal fence to the left of the animal that is eating hay?"")"
9146491,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
2369997,What is underneath the counter?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is underneath the counter?"")"
14853750,Could this place be a beach or a field?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Could this place be a beach or a field?"")"
4898996,What is sitting on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the desk?"")"
92559,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
15210606,What kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is it?"")"
487704,Which color do you think the doughnut in the middle is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the doughnut in the middle is?"")"
8624459,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
123994,Are there white helmets in the picture?," # helmet is a common object
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are there white helmets in the picture?"")
    for helmet_patch in helmet_patches:
        if helmet_patch.verify_property(""helmet"", ""white""):
            return ""yes""
    return ""no"""
941344,Are there any knives to the right of the toast?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""knife"") and image_patch.find(""knife"")[0].horizontal_center > image_patch.find(""toast"")[0].horizontal_center)"
9542799,Are the pickles the same color as the napkins?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pickles the same color as the napkins?"")"
7430470,Is the meat to the left of a carrot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the meat to the left of a carrot?"")"
732112,What's the logo on?," # assumes only one logo
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    if len(logo_patches) == 0:
        return image_patch.simple_query(""What's the logo on?"")
    return logo_patches[0].simple_query(""What's the logo on?"")"
19898337,Is there a chair or an umbrella in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_chair or is_umbrella)"
41005498,On which side of the image is the red container?," # left or right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the red container?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5115719,Which kind of fast food is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is the man holding?"")"
839423,Is he wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he wearing a cap?"")"
9188626,Who is wearing glasses?," # contains a relation (wearing glasses), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing glasses?"")"
6943520,Are both the bowl and the coffee table made of the same material?," # material is not a property of the object, so ask directly
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Are both the bowl and the coffee table made of the same material?"")
    bowl_patch = bowl_patches[0]
    coffee_table_patches = image_patch.find(""coffee table"")
    # Question assumes only one coffee table patch
    if len(coffee_table_patches) == 0:
        return ""no""
    coffee_table_patch = coffee_table_patches[0]
    return bool_to_yesno(bowl_patch.verify_property(""bowl"", ""material"") == coffee_table_patch.verify_property(""coffee table"", ""material""))"
1959138,"In which part of the photo are the eggs, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo are the eggs, the top or the bottom?"")"
12281336,Are there any beds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bed""))"
5625955,Are there towels or electric toothbrushes in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel"") or image_patch.exists(""electric toothbrush"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
2793900,Is the skier wearing goggles?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skier wearing goggles?"")"
5288956,Which kind of vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is on the street?"")"
1862815,Are there either cars or fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_car or is_fence)"
101021516,Is the green hose on the right or on the left side of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green hose on the right or on the left side of the photo?"")"
10758520,Which side of the photo is the laptop on?," # left or right
    image_patch = ImagePatch(image)
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        # If no laptop is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the laptop on?"")
    laptop_patch = laptop_patches[0]
    horizontal_center = image_patch.horizontal_center
    if laptop_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
12786467,Who wears the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the shirt?"")"
15754223,Which side of the image is the glass container on?," # left or right
    image_patch = ImagePatch(image)
    glass_container_patches = image_patch.find(""glass container"")
    # Question assumes only one glass container patch
    if len(glass_container_patches) == 0:
        # If no glass container is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the glass container on?"")
    if glass_container_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8894318,What is in the sandwich?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sandwich?"")"
16956235,Which type of animal is presented in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of animal is presented in the picture?"")"
10191860,Who is on the street?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the street?"")"
6863549,What is in front of the tower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the tower?"")"
3146549,What's the bed in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bed in front of?"")"
9415526,Which kind of appliance is vintage?," # contains a relation (vintage), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is vintage?"")"
184438,What color is the shirt under the jacket?," # contains a relation (under, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt under the jacket?"")"
1142842,Are there either any buses or cars in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bus or is_car)"
8579744,Is the red vehicle on the right side?," # contains a relation (on the right side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red vehicle on the right side?"")"
17662642,What is the item of furniture below the painting to the left of the woman?," # contains a relation (below, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture below the painting to the left of the woman?"")"
19358655,Is the curtain to the left or to the right of the toilet the shelves are behind of?," # contains a relation (left, right, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain to the left or to the right of the toilet the shelves are behind of?"")"
12357144,What kind of device is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is on the wall?"")"
1784952,What is the name of the vegetable to the left of the sausage that is on the grill?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable to the left of the sausage that is on the grill?"")"
19470749,What is the large bird surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large bird surrounded by?"")"
10173581,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8137131,Which side is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7454744,Do you see giraffes near the trees that are not short?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see giraffes near the trees that are not short?"")"
519551,Are there any pens or chickens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pen = image_patch.exists(""pen"")
    is_chicken = image_patch.exists(""chicken"")
    return bool_to_yesno(is_pen or is_chicken)"
10258964,Are there any people to the left of the glasses in the top part of the image?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the left of the glasses in the top part of the image?"")"
11987462,What is the woman to the right of the bag holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the right of the bag holding?"")"
6336972,Do you see players or women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see players or women?"")"
10495757,What is the man sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man sitting on?"")"
9749755,On which side of the picture is the black device?," # left or right
    image_patch = ImagePatch(image)
    black_device_patches = image_patch.find(""black device"")
    # Question assumes only one black device patch
    if len(black_device_patches) == 0:
        # If no black device is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the black device?"")
    black_device_patch = black_device_patches[0]
    if black_device_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4395747,Which kind of animal is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is brown?"")"
5710148,Do the shirt and the barrier have a different colors?," # barrier is a generic term for a wall, a fence, etc
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Do the shirt and the barrier have a different colors?"")
    shirt_patch = shirt_patches[0]
    barrier_patches = image_patch.find(""barrier"")
    # Question assumes only one barrier patch
    if len(barrier_patches) == 0:
        return ""no""
    barrier_patch = barrier_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""blue"") != barrier_patch.verify_property(""barrier"", ""blue"")) # barrier is a generic term for a wall, a fence, etc"
19334944,Who is holding the pizza slice?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the pizza slice?"")"
3603382,Is the sky above the trees both open and overcast?," # sky is above the trees, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky above the trees both open and overcast?"")"
8630614,Do you see motorcycles or paintings there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_painting = image_patch.exists(""painting"")
    return bool_to_yesno(is_motorcycle or is_painting)"
1480041,Where is the man standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the man standing?"")"
12943010,The person with the luggage is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person with the luggage is holding what?"")"
11753798,Does the light animal look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the light animal look white?"")"
17277370,What is the color of the curtain to the left of the blinds?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the curtain to the left of the blinds?"")"
17498571,What is the color of the snowboard that the man is riding on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the snowboard that the man is riding on?"")"
1643589,What piece of furniture is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is in front of the wall?"")"
13661990,Do you see white fences or frisbees there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see white fences or frisbees there?"")"
4442811,Is the person on the right?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is the person on the right?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
61034274,Is there either any snow or sand in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_snow = image_patch.exists(""snow"")
    is_sand = image_patch.exists(""sand"")
    return bool_to_yesno(is_snow or is_sand)"
19257209,What do you think is the food that is to the right of the dessert on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the food that is to the right of the dessert on the table?"")"
5703522,Who is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a glove?"")"
17738706,Is there either any food or meat in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_food = image_patch.exists(""food"")
    is_meat = image_patch.exists(""meat"")
    return bool_to_yesno(is_food or is_meat)"
16776293,Is the television to the right or to the left of the person that wears a sweatshirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the television to the right or to the left of the person that wears a sweatshirt?"")"
433159,Does the road look curved?," # assumes only one road patch
    image_patch = ImagePatch(image)
    road_patches = image_patch.find(""road"")
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch.simple_query(""Does the road look curved?"")
    return bool_to_yesno(road_patches[0].verify_property(""road"", ""curved""))"
4906785,Do the large umbrellas look sunny?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the large umbrellas look sunny?"")"
18751199,What are the oranges in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the oranges in?"")"
1020884,What kind of vehicle is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is in front of the wall?"")"
6583389,What animal is pulling the man?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is pulling the man?"")"
9549402,What is the cat lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat lying on?"")"
14944367,What type of animal is on top of the laptop that is in front of the plant?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is on top of the laptop that is in front of the plant?"")"
11453706,What's the man sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man sitting on?"")"
10434556,Is there a black briefcase or backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_briefcase = image_patch.exists(""black briefcase"")
    is_black_backpack = image_patch.exists(""black backpack"")
    return bool_to_yesno(is_black_briefcase or is_black_backpack)"
18822357,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
9500898,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17176150,Is the small child to the right or to the left of the person that is walking on the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small child to the right or to the left of the person that is walking on the grass?"")"
13152886,Is the antenna on top of the boat?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the antenna on top of the boat?"")"
5373624,Is the clock tower to the right of the traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock tower to the right of the traffic light?"")"
17494943,Which color are the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Which color are the pants?"")
    return pants_patches[0].simple_query(""Which color are the pants?"")"
10252517,What is the name of the appliance that the fan is on?," # assumes only one fan patch
    image_patch = ImagePatch(image)
    fan_patches = image_patch.find(""fan"")
    if len(fan_patches) == 0:
        # If no fan is found, query the image directly
        return image_patch.simple_query(""What is the name of the appliance that the fan is on?"")
    fan_patch = fan_patches[0]
    appliance_patches = image_patch.find(""appliance"")
    for appliance_patch in appliance_patches:
        if appliance_patch.horizontal_center > fan_patch.horizontal_center:
            return appliance_patch.simple_query(""What is the name of the appliance that the fan is on?"")
    return fan_patch.simple_query(""What is the name of the appliance that the fan is on?"")"
13186404,Is the waitress to the right of a candle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the waitress to the right of a candle?"")"
14651055,Is the blue bus on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue bus on the left?"")"
10550453,Does the cabinet made of wood appear to be white?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cabinet made of wood appear to be white?"")"
14185848,Is the lady to the right or to the left of the man in the market?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right or to the left of the man in the market?"")"
3387275,What color is the cart on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cart on the left?"")"
19538162,Is there a surfer in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a surfer in the water?"")"
16892693,Are there chairs or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_chair or is_bag)"
13715510,Is the balcony above a truck?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the balcony above a truck?"")"
4880447,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
18764458,Is the device on the table black and large?," # returns yes or no
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Is the device on the table black and large?"")
    device_patch = device_patches[0]
    if device_patch.horizontal_center < image_patch.horizontal_center:
        return ""no""
    return bool_to_yesno(device_patch.verify_property(""device"", ""black"") and device_patch.verify_property(""device"", ""large""))"
15375135,What are the drapes covering?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the drapes covering?"")"
13434968,Is the mouse on a mouse pad?," # rename to is_mouse_on_mousepad
    image_patch = ImagePatch(image)
    mouse_patches = image_patch.find(""mouse"")
    # Question assumes only one mouse patch
    if len(mouse_patches) == 0:
        # If no mouse is found, query the image directly
        return image_patch.simple_query(""Is the mouse on a mouse pad?"")
    for mouse_patch in mouse_patches:
        mousepad_patches = image_patch.find(""mouse pad"")
        for mousepad_patch in mousepad_patches:
            if mouse_patch.horizontal_center > mousepad_patch.horizontal_center:
                return ""yes""
    return ""no"""
12723182,Does the bird in front of the tree branch look large and fat?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bird in front of the tree branch look large and fat?"")"
940003,Is this a giraffe or a bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a giraffe or a bear?"")"
2788931,"Which color is the man shirt, red or blue?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the man shirt, red or blue?"")"
1985864,Is the curtain to the left or to the right of the device that looks big?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain to the left or to the right of the device that looks big?"")"
37133,What color is the shirt the man wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man wears?"")"
728163,How old is the person that is walking?," # assumes only one person patch
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""How old is the person that is walking?"")
    return person_patches[0].simple_query(""How old is the person that is walking?"")"
9781418,Does the watch look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the watch look black?"")"
13399866,Do you see chairs or knives there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_knife = image_patch.exists(""knife"")
    return bool_to_yesno(is_chair or is_knife)"
189850,Are there both desks and drawers in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_desk = image_patch.exists(""desk"")
    is_drawer = image_patch.exists(""drawer"")
    return bool_to_yesno(is_desk and is_drawer)"
4310680,Are there any women to the left of the person that is holding the tennis racket?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman"") and image_patch.exists(""tennis racket"") and image_patch.simple_query(""Is the woman to the left of the person that is holding the tennis racket?"") == ""yes"")"
19694417,Is the towel in the bottom part or in the top?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel in the bottom part or in the top?"")"
7620981,Do you think the vehicle to the right of the tablecloth is red or yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the vehicle to the right of the tablecloth is red or yellow?"")"
18730100,What kind of appliance is to the right of the appliance on the left side of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is to the right of the appliance on the left side of the picture?"")"
6747574,Is the pillow on the right side of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow on the right side of the photo?"")"
9524599,What kind of clothing is maroon?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is maroon?"")"
18935874,Does the boy above the skateboard wear jeans?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boy above the skateboard wear jeans?"")"
15876181,What is the person next to the man wearing?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person next to the man wearing?"")"
6616084,Is the chair to the right or to the left of the bear that is on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the bear that is on the right of the photo?"")"
14128811,Is there a Wii remotes or a TV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wii_remote = image_patch.exists(""Wii remote"")
    is_tv = image_patch.exists(""TV"")
    return bool_to_yesno(is_wii_remote or is_tv)"
18722063,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3718124,On which side of the photo is the knife?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the knife?"")
    if knife_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15287358,Which kind of device does the man wear?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device does the man wear?"")"
4340660,Which material is the red bag made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material is the red bag made of?"")"
12424892,Do you see any forks on the plate the orange is sitting next to?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any forks on the plate the orange is sitting next to?"")"
10582572,What is in front of the fireplace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the fireplace?"")"
14730372,What is the animal to the left of the keyboard that looks white and gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the keyboard that looks white and gray?"")"
3718082,What sits on the eggs?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sits on the eggs?"")"
5660264,Is this a train or a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a train or a truck?"")"
15614230,Who is wearing the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the cap?"")"
7401691,What is the paper in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the paper in?"")"
4271491,The tag is attached to what?," # contains a relation (attached to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The tag is attached to what?"")"
1681196,What is the person near the mobile phone holding?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person near the mobile phone holding?"")"
1856053,Which kind of fruit are the spots on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit are the spots on?"")"
3719959,What is that number on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that number on?"")"
8223213,Which color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Which color is the jacket?"")
    return jacket_patches[0].simple_query(""Which color is the jacket?"") # crop would include the jacket so keep it in the query"
13124773,What color do you think the toy that is not little is?," # contains a relation (is not), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the toy that is not little is?"")"
5567670,What is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the logo on?"")"
10582919,Is the calm water high or low?," # contains a relation (high, low), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the calm water high or low?"")"
6917527,"In which part is the yellow animal, the bottom or the top?"," # yellow animal
    image_patch = ImagePatch(image)
    yellow_animal_patches = image_patch.find(""yellow animal"")
    # Question assumes only one yellow animal patch
    if len(yellow_animal_patches) == 0:
        # If no yellow animal is found, query the image directly
        return image_patch.simple_query(""In which part is the yellow animal, the bottom or the top?"")
    if yellow_animal_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
2709746,What's the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man holding?"")"
15378736,Are there any fire hydrants or clocks that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    is_clock = image_patch.exists(""clock"")
    is_white = image_patch.exists(""white"")
    return bool_to_yesno(is_fire_hydrant or is_clock or is_white)"
3369254,What is the large animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large animal called?"")"
6295497,What's on the fireplace?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the fireplace?"")"
14913880,Are there any umbrellas or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_umbrella or is_traffic_light)"
1073488,Where is the airplane?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Where is the airplane?"")
    return airplane_patches[0].simple_query(""Where is the airplane?"") # crop would include the airplane so keep it in the query"
5608247,What does the man to the right of the person lean against?," # contains a relation (to the right of, lean against), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man to the right of the person lean against?"")"
2403142,Does that arrow look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that arrow look red?"")"
15266884,Do you see both hats and fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hat = image_patch.exists(""hat"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_hat and is_fence)"
13712822,What kind of clothing isn't short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing isn't short?"")"
18926177,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
16490360,What is in front of the blue water?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the blue water?"")"
14666916,Is the white snow below a snowboard?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white snow below a snowboard?"")"
2407701,On which side is the cheese?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the cheese?"")"
16742595,Are there people to the left of the woman that is wearing a jacket?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the left of the woman that is wearing a jacket?"")"
14194575,On which side of the picture is the monitor?," # left or right
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only one monitor patch
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the monitor?"")
    monitor_patch = monitor_patches[0]
    horizontal_center = image_patch.horizontal_center
    if monitor_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
2684227,On which side of the picture is the white vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the white vehicle?"")"
9539021,What is the item of furniture to the left of the small drawer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the small drawer?"")"
5752537,How big is the coconut that looks brown?," # returns a string
    image_patch = ImagePatch(image)
    coconut_patches = image_patch.find(""coconut"")
    # Question assumes only one coconut patch
    if len(coconut_patches) == 0:
        # If no coconut is found, query the image directly
        return image_patch.simple_query(""How big is the coconut that looks brown?"")
    for coconut_patch in coconut_patches:
        if coconut_patch.simple_query(""Is the coconut brown?"") == ""yes"":
            return coconut_patch.simple_query(""How big is the coconut that looks brown?"")
    # If no brown coconut is found, pick the first coconut
    return coconut_patches[0].simple_query(""How big is the coconut that looks brown?"")"
11915022,What is the container to the left of the laptop holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the container to the left of the laptop holding?"")"
3302497,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
1344619,Are there either any gray backpacks or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gray_backpack = image_patch.exists(""gray backpack"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_gray_backpack or is_car)"
11720922,What kind of animal is wearing the collar?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is wearing the collar?"")"
1973316,What device is the man to the left of the woman looking down at?," # contains a relation (left of, looking down at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the man to the left of the woman looking down at?"")"
13364726,Are the bananas yellow and long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the bananas yellow and long?"") == ""yes"")"
17171442,Is the oven small or large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the oven small or large?"")"
2764145,Is the couch beige or black?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch beige or black?"")"
16833233,How clean is the bathroom?," # bathroom is a room, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How clean is the bathroom?"")"
13224417,"In which part of the photo is the bike, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the bike, the top or the bottom?"")"
2736461,What color is the van to the left of the bus?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the van to the left of the bus?"")"
2315512,Are there vases or benches in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_vase = image_patch.exists(""vase"")
    is_bench = image_patch.exists(""bench"")
    return bool_to_yesno(is_vase or is_bench)"
19646646,Is there grass that is tall?," # contains a relation (tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there grass that is tall?"")"
12953913,Who is wearing socks?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing socks?"")"
2341803,On which side of the image are the children?," # left or right
    image_patch = ImagePatch(image)
    children_patches = image_patch.find(""children"")
    # Question assumes only one children patch
    if len(children_patches) == 0:
        # If no children are found, query the image directly
        return image_patch.simple_query(""On which side of the image are the children?"")
    if children_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14314941,What is the color of the foggy sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the foggy sky?"")"
16807668,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
14546323,Is the man that is sitting down wearing shorts?," # contains a relation (sitting down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is sitting down wearing shorts?"")"
13681243,Which side is the blue bag on?," # left or right
    image_patch = ImagePatch(image)
    blue_bag_patches = image_patch.find(""blue bag"")
    # Question assumes only one blue bag patch
    if len(blue_bag_patches) == 0:
        # If no blue bag is found, query the image directly
        return image_patch.simple_query(""Which side is the blue bag on?"")
    blue_bag_patch = blue_bag_patches[0]
    if blue_bag_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10394656,What is the little boy looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the little boy looking at?"")"
14197056,What do both the ceiling and the vase have in common?," # returns a string
    image_patch = ImagePatch(image)
    ceiling_patches = image_patch.find(""ceiling"")
    # Question assumes only one ceiling patch
    if len(ceiling_patches) == 0:
        # If no ceiling is found, query the image directly
        return image_patch.simple_query(""What do both the ceiling and the vase have in common?"")
    ceiling_patch = ceiling_patches[0]
    vase_patches = image_patch.find(""vase"")
    # Question assumes only one vase patch
    if len(vase_patches) == 0:
        return image_patch.simple_query(""What do both the ceiling and the vase have in common?"")
    vase_patch = vase_patches[0]
    common_properties = set(ceiling_patch.verify_property(""ceiling"", property) for property in [""white"", ""blue"", ""red"", ""green"", ""yellow"", ""brown"", ""gray"", ""black"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold"", ""beige"", ""tan"", ""lavender"", ""plaid"", ""stripes"", ""polka dots"", ""floral"", ""plum"", ""maroon"", ""navy"", ""teal"", ""ivory"", ""coral"", ""mint"", ""salmon"", ""chocolate"", ""cream"", ""fuchsia"", ""olive"", ""sage"", ""wheat"", ""powder blue"", ""mauve"", ""burgundy"", ""tan"", ""sage"", ""ivory"", ""chocolate"", ""coral"","
14811548,What device is to the right of the charger?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the charger?"")"
6501907,What kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is wooden?"")"
3687040,Who is holding the frisbee?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the frisbee?"")"
121018073,The hot dog is in what?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The hot dog is in what?"")"
14329316,What appliance is silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is silver?"")"
4790948,What is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing pants?"")"
18341513,"On which side of the photo is the fork, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the fork, the right or the left?"")"
191000265,Who is in front of the large tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the large tree?"")"
15940363,What's the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the chair made of?"")"
11656760,Where is the remote?," # assumes only one remote
    image_patch = ImagePatch(image)
    remote_patches = image_patch.find(""remote"")
    if len(remote_patches) == 0:
        return image_patch.simple_query(""Where is the remote?"")
    return remote_patches[0].simple_query(""Where is the remote?"")"
19813453,Is the boat small or is it large?," # contains a relation (small, large), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat small or is it large?"")"
6703909,What is the girl playing with?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl playing with?"")"
6675778,Are there speakers in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""speaker""))"
11574642,Is there either a black hat or scarf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_hat = image_patch.exists(""black hat"")
    is_scarf = image_patch.exists(""scarf"")
    return bool_to_yesno(is_black_hat or is_scarf)"
17161920,Do the tennis racket and the sign have the same color?," # tennis racket and sign
    image_patch = ImagePatch(image)
    tennis_racket_patches = image_patch.find(""tennis racket"")
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one tennis racket and one sign patch
    if len(tennis_racket_patches) == 0 or len(sign_patches) == 0:
        # If no tennis racket or sign is found, query the image directly
        return image_patch.simple_query(""Do the tennis racket and the sign have the same color?"")
    tennis_racket_patch = tennis_racket_patches[0]
    sign_patch = sign_patches[0]
    return bool_to_yesno(tennis_racket_patch.verify_property(""tennis racket"", ""red"") == sign_patch.verify_property(""sign"", ""red""))"
11573953,Does that sky look cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""cloudy"") and image_patch.verify_property(""sky"", ""blue""))"
7721828,What's the lady wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the lady wearing?"")"
11870509,What is the box holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box holding?"")"
4849849,Are there pillows or comforters?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_comforter = image_patch.exists(""comforter"")
    return bool_to_yesno(is_pillow or is_comforter)"
1931792,What kind of food is on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the cake?"")"
18602402,Which kind of appliance is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is it?"")"
9173324,What fruits are they buying?," # contains a relation (buying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits are they buying?"")"
2356644,What's in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the man?"")"
10576087,What bag is on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bag is on the bed?"")"
12308618,Who is playing tennis?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing tennis?"")"
1651444,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5308218,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is white?"")"
2117318,Is the shelf to the left of the mirror that is on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left of the mirror that is on the right of the photo?"")"
11666232,Who is wearing a necklace?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a necklace?"")"
12351846,What is in front of the vehicle that is in front of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the vehicle that is in front of the car?"")"
12982496,What is looking at the sky?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is looking at the sky?"")"
3804851,Are there either any white fire hydrants or stop signs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_fire_hydrant = image_patch.exists(""white fire hydrant"")
    is_stop_sign = image_patch.exists(""stop sign"")
    return bool_to_yesno(is_white_fire_hydrant or is_stop_sign)"
6707100,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
5717042,Where is the young girl standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the young girl standing on?"")"
12443961,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
5621140,How large is the plate in the bottom of the photo?," # returns the size of the plate in the bottom of the photo
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""How large is the plate in the bottom of the photo?"")
    return plate_patches[0].simple_query(""How large is the plate in the bottom of the photo?"") # crop would include the plate so keep it in the query"
7730162,What is that rug inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that rug inside of?"")"
5151361,What is the animal to the left of the person on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the person on the right side?"")"
4720199,Is the red bike to the right of the man that is to the right of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red bike to the right of the man that is to the right of the helmet?"")"
191036512,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17867360,Is the signal light to the right of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the signal light to the right of the bus?"")"
14792233,Which color does the fence near the elephant have?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the fence near the elephant have?"")"
4113359,What type of device is he using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is he using?"")"
181028211,Is the red counter above the dishwasher?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red counter above the dishwasher?"")"
2769845,What color do you think the bag is?," # returns the color of the bag
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""What color do you think the bag is?"")
    return bag_patches[0].simple_query(""What color do you think the bag is?"") # crop would include the bag so keep it in the query"
4694538,What is the red clothing item?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the red clothing item?"")"
15524685,What color is the flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the flag?"")"
5950157,Is there a bag to the right of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag to the right of the man that is wearing a shirt?"")"
19162799,What is the color of the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""What is the color of the pants?"")
    return pants_patches[0].simple_query(""What is the color of the pants?"") # crop would include the pants so keep it in the query"
18473847,What animal is the gate in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the gate in front of?"")"
12941686,Is the laptop to the right or to the left of the blue thing that is to the right of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop to the right or to the left of the blue thing that is to the right of the monitor?"")"
111007621,How large are the black wheels?," # returns a string
    image_patch = ImagePatch(image)
    wheel_patches = image_patch.find(""wheel"")
    # Question assumes only one wheel patch
    if len(wheel_patches) == 0:
        # If no wheel is found, query the image directly
        return image_patch.simple_query(""How large are the black wheels?"")
    return wheel_patches[0].simple_query(""How large are the black wheels?"") # crop would include the wheel so keep it in the query"
5400845,Does the striped canopy look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the striped canopy look orange?"")"
1622874,Is the napkin to the left or to the right of the person that is holding the doll?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin to the left or to the right of the person that is holding the doll?"")"
11736546,Is the clock on the left or on the right side of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock on the left or on the right side of the image?"")"
4288560,Which kind of food is in the box?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is in the box?"")"
13467664,What is the book on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the book on?"")"
8512757,Does the bag have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bag"", ""blue""))"
323174,Is the computer to the left or to the right of the chair?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer to the left or to the right of the chair?"")"
2266661,What pattern is the jacket?," # returns the first pattern found
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What pattern is the jacket?"")
    return jacket_patches[0].simple_query(""What pattern is the jacket?"") # crop would include the jacket so keep it in the query"
11153196,How is the animal under the plant in the planter called?," # contains a relation (under, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal under the plant in the planter called?"")"
10471110,Is the shape of the nightstand the same as the shape of the painting?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shape of the nightstand the same as the shape of the painting?"")"
16546946,Does the ground seem to be wet?," # ground is a common object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ground"", ""wet""))"
18809508,What color is the shirt the girl is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the girl is wearing?"")"
10678716,What kind of device is to the left of the computer mouse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the computer mouse?"")"
4291954,Is there a large table or couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_large_table = image_patch.verify_property(""table"", ""large"")
    is_large_couch = image_patch.verify_property(""couch"", ""large"")
    return bool_to_yesno(is_large_table or is_large_couch)"
8768368,Do you think the helmet is white?," # helmet is white
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you think the helmet is white?"")
    return bool_to_yesno(helmet_patches[0].verify_property(""helmet"", ""white""))"
4612546,Do you see pictures to the left of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see pictures to the left of the clock?"")"
9652805,Are there either men or women that are eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_man_eating = image_patch.exists(""man"") and image_patch.exists(""eating"")
    is_woman_eating = image_patch.exists(""woman"") and image_patch.exists(""eating"")
    return bool_to_yesno(is_man_eating or is_woman_eating)"
13652706,What kind of fruit is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the left of the man?"")"
7125121,Who is guiding the bicycle on the sand?," # contains a relation (guiding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is guiding the bicycle on the sand?"")"
5923946,What is the basket filled with?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the basket filled with?"")"
1563252,Which color is the truck in the top of the photo?," # contains a relation (top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the truck in the top of the photo?"")"
197072,What cooking utensil is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is on the wall?"")"
41032128,What color is the cup to the left of the toothbrush?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cup to the left of the toothbrush?"")"
19872899,Which side of the photo is the little house on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the little house on?"")"
10375547,Who sits on the man?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who sits on the man?"")"
16892657,Is the umbrella to the right of the guy white and open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the right of the guy white and open?"")"
4614796,Is there a truck in this picture that is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a truck in this picture that is white?"")"
4280372,Is there either a duck or a cow in the photograph?," # contains a disjunction (or), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""duck"") or image_patch.exists(""cow""))"
14773571,Is the color of the bucket different than the street?," # bucket and street are assumed to be in the same image
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""Is the color of the bucket different than the street?"")
    bucket_color = bucket_patches[0].simple_query(""What is the color of the bucket?"")
    street_color = image_patch.simple_query(""What is the color of the street?"")
    return bool_to_yesno(bucket_color != street_color)"
1619428,Does the grass look tan and fresh?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""grass"", ""tan"") and image_patch.verify_property(""grass"", ""fresh""))"
12778614,What is in the tray to the left of the tap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the tray to the left of the tap?"")"
14786928,What appliance is on top of the shelf?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is on top of the shelf?"")"
19501142,What is the animal that is white called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is white called?"")"
11404756,How big are the scissors that are in the middle?," # returns a string
    image_patch = ImagePatch(image)
    scissors_patches = image_patch.find(""scissors"")
    # Question assumes only one scissors patch
    if len(scissors_patches) == 0:
        # If no scissors are found, query the image directly
        return image_patch.simple_query(""How big are the scissors that are in the middle?"")
    for scissors_patch in scissors_patches:
        if abs(scissors_patch.horizontal_center - image_patch.horizontal_center) < 50: # 50 pixels
            return scissors_patch.simple_query(""How big are the scissors that are in the middle?"")
    return image_patch.simple_query(""How big are the scissors that are in the middle?"") # if no scissors are in the middle, query the image directly"
18156488,On which side of the picture is the remote control?," # left or right
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    # Question assumes only one remote control patch
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the remote control?"")
    return ""left"" if remote_control_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
18559767,What is on the fence?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the fence?"")"
131043834,How big is the umbrella the person is holding?," # returns the size of the umbrella
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""How big is the umbrella the person is holding?"")
    return umbrella_patches[0].simple_query(""How big is the umbrella the person is holding?"") # crop would include the person so keep it in the query"
12878024,What vehicle is the man in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the man in?"")"
1391402,Is he to the right or to the left of the clock that is to the left of the engine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the right or to the left of the clock that is to the left of the engine?"")"
3888697,On which side of the picture are the people?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the people?"")
    if people_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13234051,Are there tablets or computer mice in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tablet = image_patch.exists(""tablet"")
    is_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_tablet or is_mouse)"
14787204,On which side of the image is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19855709,Do you see either any tomato or bread there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tomato"") or image_patch.exists(""bread""))"
15542042,Is the toilet to the right of a towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toilet to the right of a towel?"")"
6494105,Does the brown dog appear to be standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the brown dog appear to be standing?"")"
15772858,Does this parking meter look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does this parking meter look red?"")"
2562207,Do you see a couch there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""couch""))"
17321940,Who is wearing the vest?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the vest?"")"
1667918,Are there both a mirror and a bus in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_mirror and is_bus)"
7725473,Who is wearing the mask?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the mask?"")"
1866867,Are there any crates to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""crate"") and image_patch.find(""woman"")[0].horizontal_center < image_patch.horizontal_center)"
13509696,The shirt has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt has which color?"")"
5562093,What is the vehicle that is on the street the man is crossing?," # contains a relation (on the street, crossing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is on the street the man is crossing?"")"
8267872,Is there a blue plate or can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_plate = image_patch.exists(""blue plate"")
    is_blue_can = image_patch.exists(""blue can"")
    return bool_to_yesno(is_blue_plate or is_blue_can)"
5797584,Which side of the photo is the shelf on?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the shelf on?"")
    if shelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2819294,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
18424576,What is the vegetable to the left of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the cup?"")"
18122230,Do you see a red train or bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a red train or bus?"")"
8631448,What is the cat on top of the seat doing?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat on top of the seat doing?"")"
19605414,Does the clock look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""clock"", ""white""))"
7594020,Is the vase to the left of the veggies beautiful and red?," # contains a relation (left of, beautiful, red) so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vase to the left of the veggies beautiful and red?"")"
16357104,Are there donkeys or birds in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_donkey = image_patch.exists(""donkey"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_donkey or is_bird)"
13456606,What food is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is the man holding?"")"
17785522,Is the pink bear to the left of the girl on the left of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pink bear to the left of the girl on the left of the image?"")"
13405871,What color is the jacket that the person is wearing?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What color is the jacket that the person is wearing?"")
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        return image_patch.simple_query(""What color is the jacket that the person is wearing?"")
    jacket_patch = jacket_patches[0]
    return jacket_patch.simple_query(""What color is the jacket that the person is wearing?"") # crop would include the jacket so keep it in the query"
15482718,Which side is the oven on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the oven on?"")"
7316763,Are these giraffes or bears?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these giraffes or bears?"")"
17560999,What is the catcher wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the catcher wearing?"")"
4166911,Is the shoe the same color as the tennis racket?," # returns yes or no
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""Is the shoe the same color as the tennis racket?"")
    shoe_patch = shoe_patches[0]
    tennis_racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one tennis racket patch
    if len(tennis_racket_patches) == 0:
        return ""no""
    tennis_racket_patch = tennis_racket_patches[0]
    return bool_to_yesno(shoe_patch.verify_property(""shoe"", shoe_patch.simple_query(""What is the color of the shoe?""))) and bool_to_yesno(tennis_racket_patch.verify_property(""tennis racket"", tennis_racket_patch.simple_query(""What is the color of the tennis racket?"")))"
12923946,What is on the black pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the black pole?"")"
5854800,Is the man to the right of the bacon wearing a cap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the bacon wearing a cap?"")"
16257710,Is the man wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing a hat?"")"
651073,How is the item of furniture that the flags are behind of called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the item of furniture that the flags are behind of called?"")"
1754031,On which side is the spoon?," # left or right
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""On which side is the spoon?"")
    return ""right"""
1253216,Is the chicken on a plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chicken on a plate?"")"
17830788,What's the dog doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the dog doing?"")"
8952477,How old is the boy that is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old is the boy that is wearing a hat?"")"
131010881,Is the woman to the right of the man carrying a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the man carrying a bag?"")"
4356308,Is there a bag to the right of the green vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag to the right of the green vehicle?"")"
1636556,Is the soup in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soup in the top of the picture?"")"
3593895,What is the catcher doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the catcher doing?"")"
3844966,Is there a cat or a dog in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat"") or image_patch.exists(""dog""))"
16451422,Do you see a sheep in front of the house?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a sheep in front of the house?"")"
613458,What is the color of the flag that is attached to the pole?," # contains a relation (attached to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the flag that is attached to the pole?"")"
18218393,What item of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is brown?"")"
9644041,On which side is the white coffee cup?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white coffee cup?"")"
17305044,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    for helmet_patch in helmet_patches:
        return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
6795422,Is the window open or closed?," # contains a relation (open, closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window open or closed?"")"
1448344,Are there either cars or doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_car or is_door)"
16584355,What kind of baked good is the person next to the wall eating?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is the person next to the wall eating?"")"
16665212,Do you see bowls to the left of the utensil on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see bowls to the left of the utensil on the right?"")"
6302957,Is the clock on top of the wood fence near the sign?," # contains a relation (on, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock on top of the wood fence near the sign?"")"
16860298,What is on the table cloth?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table cloth?"")"
15666085,Where is the man to the right of the bag walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the man to the right of the bag walking?"")"
41015590,What is in the tray in the bottom part of the picture?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the tray in the bottom part of the picture?"")"
5236974,Is there a cow to the right of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cow to the right of the fence?"")"
12267126,Is the woman to the right or to the left of the person on the left?," # assumes only one person on the left
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the right or to the left of the person on the left?"")
    for woman_patch in woman_patches:
        if woman_patch.horizontal_center > image_patch.find(""person"")[0].horizontal_center:
            return ""right""
    return ""left"""
5687208,What vehicle is to the right of the woman with the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the woman with the umbrella?"")"
8539698,Does the helmet to the left of the chair look blue or gold?," # helmet to the left of the chair
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the helmet to the left of the chair look blue or gold?"")
    helmet_patch = helmet_patches[0]
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return helmet_patch.simple_query(""Does the helmet to the left of the chair look blue or gold?"")
    chair_patch = chair_patches[0]
    if helmet_patch.horizontal_center < chair_patch.horizontal_center:
        return helmet_patch.best_text_match([""blue"", ""gold""])
    else:
        return helmet_patch.best_text_match([""blue"", ""gold""])"
4296795,What is the piece of furniture that is made of wood called?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is made of wood called?"")"
5192802,What is the vehicle in the photograph called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle in the photograph called?"")"
922877,What is on the meat on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the meat on the left?"")"
5639925,On which side of the picture is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
11731947,On which side is the black vehicle?," # left or right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""On which side is the black vehicle?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11381240,The water glass is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The water glass is on what?"")"
1959041,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
12142161,Does the person to the left of the children wear a suit?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person to the left of the children wear a suit?"")"
16937066,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
5306874,Which kind of device is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the table?"")"
1445144,Which kind of animal is resting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is resting?"")"
835788,Who is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding?"")"
18295763,What animal is in the park?," # contains a relation (in the park), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the park?"")"
636361,What is in front of the sofa that is to the left of the coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the sofa that is to the left of the coffee table?"")"
31037088,Is the garbage bin on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garbage bin on the left side or on the right?"")"
13199630,Is the bag on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag on the left side or on the right of the image?"")"
11314899,Is there any paper cup or plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""paper cup"") or image_patch.exists(""plate""))"
14723292,What vegetable is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on top of the table?"")"
1727229,How is the red vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the red vehicle called?"")"
11450578,Where is the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the train?"")"
9800623,Who is wearing the shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoe?"")"
7515948,On which side of the image is the painting?," # left or right
    image_patch = ImagePatch(image)
    painting_patches = image_patch.find(""painting"")
    # Question assumes only one painting patch
    if len(painting_patches) == 0:
        # If no painting is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the painting?"")
    return ""left"" if painting_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
5625,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
3856472,Who is standing in the window that the vine is growing along?," # contains a relation (along), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing in the window that the vine is growing along?"")"
10770726,Are there any motorcycles on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorcycle on the street"")) # crop would include the street so keep it in the query"
2701092,Is the dog large and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Is the dog large and brown?"")
    return bool_to_yesno(dog_patches[0].verify_property(""dog"", ""large"") and dog_patches[0].verify_property(""dog"", ""brown""))"
10336385,Do the shelves look full?," # assumes only one shelf
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""Do the shelves look full?"")
    return bool_to_yesno(shelf_patches[0].verify_property(""shelf"", ""full""))"
1497134,Are these towels or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these towels or pillows?"")"
1753082,Are the phones on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the phones on the right?""))"
13832956,What is the man that is sitting-down wearing?," # contains a relation (sitting-down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is sitting-down wearing?"")"
11869822,What is the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What is the clock on?"")
    return clock_patches[0].simple_query(""What is the clock on?"")"
12362402,Does the logo have the same color as the house?," # house is assumed to be the largest object
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""Does the logo have the same color as the house?"")
    logo_patch = logo_patches[0]
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        return ""no""
    house_patch = house_patches[0]
    return bool_to_yesno(logo_patch.verify_property(""logo"", ""color"") == house_patch.verify_property(""house"", ""color""))"
18789780,What is the color of the bike near the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bike near the man?"")"
687844,"Which place is pictured, a river or an ocean?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is pictured, a river or an ocean?"")"
17842431,On which side of the photo is the car?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the car?"")
    car_patch = car_patches[0]
    horizontal_center = image_patch.horizontal_center
    if car_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
4364616,What device is to the left of the American flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the American flag?"")"
8340045,What's on the post?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the post?"")"
261067,How big is the bowl on the right of the image?," # returns the size of the bowl
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""How big is the bowl on the right of the image?"")
    rightmost_bowl = max(bowl_patches, key=lambda x: x.horizontal_center)
    return rightmost_bowl.simple_query(""How big is the bowl on the right of the image?"") # crop would include the bowl so keep it in the query"
13242140,Do the sky and the bus have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the sky and the bus have a different colors?"")) # crop would include the bus so keep it in the query"
10128635,Is the man to the right of the cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the cars?"")"
13297,On which side of the image is the open book?," # left or right
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the open book?"")
    book_patch = book_patches[0]
    if book_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
171059564,What color is the vehicle the man is to the left of?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the vehicle the man is to the left of?"")"
7393598,Which color is the car that is parked on the street?," # contains a relation (parked on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the car that is parked on the street?"")"
1513952,Is the toilet paper in the bottom part or in the top of the picture?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toilet paper in the bottom part or in the top of the picture?"")"
7734432,Who does the man walk behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who does the man walk behind of?"")"
253606,Who is looking down?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is looking down?"")"
18825139,Who wears the helmet?," # helmet is a type of headgear
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who wears the helmet?"")
    return helmet_patches[0].simple_query(""Who wears the helmet?"") # crop would include the helmet so keep it in the query"
14145702,Is the book on the left side or on the right of the photo?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book on the left side or on the right of the photo?"")"
1039449,Is the traffic signal to the right or to the left of the lamp?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the traffic signal to the right or to the left of the lamp?"")"
1549659,"In which part of the image is the can, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the can, the top or the bottom?"")"
3194738,What is the color of the field?," # field is a specific object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the field?"")"
15631442,Do you see either a plate or a knife that are long?," # assumes only one object of each type
    image_patch = ImagePatch(image)
    is_plate_long = image_patch.exists(""plate"") and image_patch.find(""plate"")[0].verify_property(""plate"", ""long"")
    is_knife_long = image_patch.exists(""knife"") and image_patch.find(""knife"")[0].verify_property(""knife"", ""long"")
    return bool_to_yesno(is_plate_long or is_knife_long)"
5274620,Is the plane red and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plane red and small?"")"
18234150,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
18530244,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
4849183,What kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is blue?"")"
2660095,Is the boat white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat white?"")"
4851642,On which side of the picture is the surfboard?," # left or right
    image_patch = ImagePatch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    # Question assumes only one surfboard patch
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the surfboard?"")
    if surfboard_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7910552,Is the fence in the bottom part or in the top of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the bottom part or in the top of the picture?"")"
19786043,The person to the right of the bike is walking where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the right of the bike is walking where?"")"
18324636,What type of furniture is to the left of the blinds that cover the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the left of the blinds that cover the window?"")"
16302105,Which side is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2945363,Do you see either a black backpack or briefcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black backpack"") or image_patch.exists(""briefcase""))"
10478852,Is the sailboat on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sailboat on the right side of the picture?"")"
20229,What kind of animal is in the suitcase?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the suitcase?"")"
5910598,What is the boy that is to the right of the spectators leaning on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy that is to the right of the spectators leaning on?"")"
5695047,What is the vegetable to the left of the napkin that is on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the napkin that is on the right of the picture?"")"
16107408,Who is wearing a shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shoe?"")"
1550856,How is the animal that is sitting called?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal that is sitting called?"")"
17561814,Are both the cupboard that is to the left of the cabinet and the drawer in the photo black?," # contains a relation (left of, in), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cupboard that is to the left of the cabinet"") and image_patch.exists(""drawer"")) # contains a relation (in), so ask directly"
13874218,How big is the brown object in front of the trees?," # returns a string
    image_patch = ImagePatch(image)
    brown_patches = image_patch.find(""brown"")
    # Question assumes only one brown patch
    if len(brown_patches) == 0:
        # If no brown is found, query the image directly
        return image_patch.simple_query(""How big is the brown object in front of the trees?"")
    brown_patch = brown_patches[0]
    return brown_patch.simple_query(""How big is the brown object in front of the trees?"") # crop would include the trees so keep it in the query"
462163,Which color is that necklace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that necklace?"")"
5592026,Who is playing on the bench that is in front of the bushes?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing on the bench that is in front of the bushes?"")"
7104546,Is the picture to the left or to the right of the books?," # left or right
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture to the left or to the right of the books?"")
    for picture_patch in picture_patches:
        books_patches = image_patch.find(""books"")
        for books_patch in books_patches:
            if books_patch.horizontal_center > picture_patch.horizontal_center:
                return ""left""
    return ""right"""
18601990,Does the happy dog appear to be standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the happy dog appear to be standing?"")"
8461223,Is the bike to the right or to the left of the person that is wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bike to the right or to the left of the person that is wearing a coat?"")"
11805949,"In which part of the photo is the woman, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the woman, the top or the bottom?"")"
1089861,Is the meat to the right of a tomato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the meat to the right of a tomato?"")"
6733516,Is the man to the right of the curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the curtain?"")"
639560,What is the item of furniture to the right of the chair made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the chair made of wood?"")"
226908,What animal is the wall surrounding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the wall surrounding?"")"
121046376,What is under the airplane?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the airplane?"")"
4772134,What is on the white saucer?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white saucer?"")"
17321086,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
9233902,What color is the canopy that is behind the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the canopy that is behind the man?"")"
17991498,What color is the striped animal?," # returns the color of the striped animal
    image_patch = ImagePatch(image)
    striped_animal_patches = image_patch.find(""striped animal"")
    # Question assumes only one striped animal patch
    if len(striped_animal_patches) == 0:
        # If no striped animal is found, query the image directly
        return image_patch.simple_query(""What color is the striped animal?"")
    return striped_animal_patches[0].simple_query(""What color is the striped animal?"") # crop would include the stripes so keep it in the query"
1311316,Is there a woman in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman""))"
13253544,On which side of the image is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the woman?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13637694,What kind of furniture is not striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is not striped?"")"
5974732,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
10147914,What is surrounding the motorcycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is surrounding the motorcycle?"")"
7230312,Is the person that is to the right of the car riding a horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the right of the car riding a horse?"")"
6603648,Are there both a plate and a cupcake in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_cupcake = image_patch.exists(""cupcake"")
    return bool_to_yesno(is_plate and is_cupcake)"
2722556,Who lies on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who lies on the bed?"")"
12978936,How is the silver device called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the silver device called?"")"
18241575,What is the piece of furniture that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is not brown?"")"
14706283,What do you think are the fruits in the bags?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think are the fruits in the bags?"")"
709981,Is the player on the left or on the right?," # assumes only one player
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    if len(player_patches) == 0:
        return image_patch.simple_query(""Is the player on the left or on the right?"")
    player_patch = player_patches[0]
    if player_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11197002,"In which part of the photo is the duck, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the duck, the bottom or the top?"")"
16975990,Do you see any street sign in the photo that is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any street sign in the photo that is black?"")"
10840631,What color is the hat the person is in?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hat the person is in?"")"
9414018,What is the carrot in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the carrot in?"")"
8262327,What device is to the left of the printer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the printer?"")"
12470792,What color does the table have?," # table is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the table have?"")"
7295356,Is there any train on the bridge?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any train on the bridge?"")"
14333471,Is the plate to the right of the cat white and full?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the right of the cat white and full?"")"
462812,Is the man to the right of the person wearing a tie?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the person wearing a tie?"")"
7289153,Who is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding?"")"
887784,How is the food that is on the salad called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the food that is on the salad called?"")"
13511370,Is the bench in the top of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench in the top of the photo?"")"
4529423,What is the sidewalk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sidewalk made of?"")"
12239979,"What is she doing, sitting or walking?"," # contains a relation (sitting on, walking on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she doing, sitting or walking?"")"
12566992,Are there any garlands or shampoos?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""garland"") or image_patch.exists(""shampoo""))"
9641269,What is in front of the bathtub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the bathtub?"")"
1747127,Which type of device is in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of device is in the scene?"")"
9936379,Who is holding the surfboard?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the surfboard?"")"
5252375,Is the girl to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the woman?"")"
11215392,What is the man who is to the left of the flag holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man who is to the left of the flag holding?"")"
1811815,What is the trunk in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the trunk in front of?"")"
9462423,On which side of the picture is the lamp?," # left or right
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the lamp?"")
    return ""left"" if lamp_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
7747607,What vegetable is to the left of the carrot on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the carrot on the right?"")"
5799583,Which kind of fast food is to the right of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is to the right of the napkin?"")"
264205,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
13291109,"In which part is the stroller, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the stroller, the top or the bottom?"")"
9938153,Do you see any mouse pad to the right of the keyboard that is shown in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any mouse pad to the right of the keyboard that is shown in this photo?"")"
121010861,What is the fruit that the grapes are on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that the grapes are on called?"")"
1162448,What is the banana peel on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the banana peel on?"")"
13248716,Is the man to the right or to the left of the can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the can?"")"
7324509,What cooking utensil is dark?," # dark is a property of the object
    image_patch = ImagePatch(image)
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    # Question assumes only one cooking utensil patch
    if len(cooking_utensil_patches) == 0:
        # If no cooking utensil is found, query the image directly
        return image_patch.simple_query(""What cooking utensil is dark?"")
    for cooking_utensil_patch in cooking_utensil_patches:
        if cooking_utensil_patch.verify_property(""cooking utensil"", ""dark""):
            return cooking_utensil_patch.simple_query(""What cooking utensil is dark?"")
    return cooking_utensil_patches[0].simple_query(""What cooking utensil is dark?"")"
171002107,What is the name of the vehicle to the right of the glasses?," # glasses is a common object
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What is the name of the vehicle to the right of the glasses?"")
    for vehicle_patch in vehicle_patches:
        glasses_patches = image_patch.find(""glasses"")
        for glasses_patch in glasses_patches:
            if glasses_patch.horizontal_center < vehicle_patch.horizontal_center:
                return vehicle_patch.simple_query(""What is the name of the vehicle to the right of the glasses?"")
    # If no vehicle is to the right of the glasses, pick the first vehicle
    return vehicle_patches[0].simple_query(""What is the name of the vehicle to the right of the glasses?"")"
15852110,Do you see any bottles or containers in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle"") or image_patch.exists(""container""))"
3954770,The blanket is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The blanket is on what?"")"
328543,Is the fridge to the right or to the left of the oven in the middle?," # contains a relation (right, left, middle, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fridge to the right or to the left of the oven in the middle?"")"
4681709,Is the screen to the left or to the right of the person near the woman?," # contains a relation (left, right, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left or to the right of the person near the woman?"")"
6950873,Who is wearing shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shoes?"")"
13500309,Does the bird that looks black and white seem to be standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bird that looks black and white seem to be standing?"")"
16735705,Is the cheese to the right or to the left of the basil that is in the center?," # assumes only one basil patch
    image_patch = ImagePatch(image)
    basil_patches = image_patch.find(""basil"")
    # Question assumes only one basil patch
    if len(basil_patches) == 0:
        # If no basil is found, query the image directly
        return image_patch.simple_query(""Is the cheese to the right or to the left of the basil that is in the center?"")
    basil_patch = basil_patches[0]
    cheese_patches = image_patch.find(""cheese"")
    # Question assumes only one cheese patch
    if len(cheese_patches) == 0:
        return image_patch.simple_query(""Is the cheese to the right or to the left of the basil that is in the center?"")
    for cheese_patch in cheese_patches:
        if cheese_patch.horizontal_center > basil_patch.horizontal_center:
            return ""right""
        else:
            return ""left"""
14225944,What color is the sand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sand?"")"
134494,The ship is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The ship is where?"")"
8298394,Are there any gorillas or giraffes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""gorilla"") or image_patch.exists(""giraffe""))"
13857185,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
1783190,What kind of vegetable is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is green?"")"
249224,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
644487,Is the umbrella to the right or to the left of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the right or to the left of the man that is wearing a shirt?"")"
12583622,Which color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Which color is the jacket?"")
    return jacket_patches[0].simple_query(""Which color is the jacket?"") # crop would include the jacket so keep it in the query"
8631450,What is the cat doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat doing?"")"
11395582,Do the trees behind the boy look brown?," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the trees behind the boy look brown?"")"
19980377,Are there either candles or shopping carts in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_candle = image_patch.exists(""candle"")
    is_shopping_cart = image_patch.exists(""shopping cart"")
    return bool_to_yesno(is_candle or is_shopping_cart)"
14918489,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
16703232,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
5922118,Are there any black goggles or helmets?," # goggles or helmets
    image_patch = ImagePatch(image)
    is_black_goggles = image_patch.exists(""black goggles"")
    is_black_helmet = image_patch.exists(""black helmet"")
    return bool_to_yesno(is_black_goggles or is_black_helmet)"
13849044,Are there plates or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_plate or is_chair)"
2349972,What is the vegetable that is to the right of the cream?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is to the right of the cream?"")"
9517132,Is the man to the left or to the right of the people on the right of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the left or to the right of the people on the right of the image?"")
    man_patch = man_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch.simple_query(""Is the man to the left or to the right of the people on the right of the image?"")
    people_patch = people_patches[0]
    if people_patch.horizontal_center > image_patch.horizontal_center:
        if man_patch.horizontal_center < people_patch.horizontal_center:
            return ""left""
        else:
            return ""right""
    else:
        if man_patch.horizontal_center < people_patch.horizontal_center:
            return ""right""
        else:
            return ""left"""
1544842,What color is the pillow that is lying next to the other pillow?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the pillow that is lying next to the other pillow?"")"
6172062,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
5977595,Is the color of the pot different than the vase?," # returns yes or no
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Is the color of the pot different than the vase?"")
    pot_color = pot_patches[0].simple_query(""What is the color of the pot?"")
    vase_patches = image_patch.find(""vase"")
    # Question assumes only one vase patch
    if len(vase_patches) == 0:
        # If no vase is found, query the image directly
        return image_patch.simple_query(""Is the color of the pot different than the vase?"")
    vase_color = vase_patches[0].simple_query(""What is the color of the vase?"")
    return bool_to_yesno(pot_color != vase_color)"
5500561,Is there any laptop or phone in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""laptop"") or image_patch.exists(""phone""))"
1553230,What device is to the right of the computer monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the computer monitor?"")"
10305056,Does the boat that is sitting-down look long and white?," # contains a relation (sitting-down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boat that is sitting-down look long and white?"")"
161445,Are the containers silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Are the containers silver?"")
    return bool_to_yesno(container_patches[0].verify_property(""container"", ""silver""))"
8326967,Is there any food to the right of the lettuce that is in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any food to the right of the lettuce that is in the middle?"")"
4742301,Which kind of animal is the crowd watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the crowd watching?"")"
3521178,Does the picture look brown?," # image is a numpy array
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""picture"", ""brown""))"
18866965,Is the woman to the left or to the right of the book on the shelf?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the book on the shelf?"")"
8733949,What is the counter made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the counter made of?"")"
61056567,Which side of the picture is the napkin on?," # left or right
    image_patch = ImagePatch(image)
    napkin_patches = image_patch.find(""napkin"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the napkin on?"")
    if napkin_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6968662,Are there any couches or pillows?," # returns yes or no
    image_patch = ImagePatch(image)
    is_couch = image_patch.exists(""couch"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_couch or is_pillow)"
2509481,On which side of the picture is the umbrella?," # left or right
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the umbrella?"")
    if umbrella_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9695962,Are the animals of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.exists(""animals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
524574,Is the horse to the left of a cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse to the left of a cow?"")"
110427,On which side of the picture is the green box?," # left or right
    image_patch = ImagePatch(image)
    green_box_patches = image_patch.find(""green box"")
    # Question assumes only one green box patch
    if len(green_box_patches) == 0:
        # If no green box is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the green box?"")
    if green_box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5372130,Who is in front of the animal near the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the animal near the person?"")"
9566570,What is the person near the shower holding?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person near the shower holding?"")"
14221309,Is the long hair blond or light brown?," # contains a relation (blond or light brown), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long hair blond or light brown?"")"
19536708,What is the color of his hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of his hair?"")"
14720551,What is the mat in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mat in front of?"")"
327980,What place was the photo taken at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the photo taken at?"")"
8850721,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12611356,Is the step different in color than the bar stool?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the step different in color than the bar stool?"")"
1442720,Is the cheese on the food with the beef?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cheese on the food with the beef?"")"
1578964,Are there both window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
19727639,What kind of bird is in the nest?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of bird is in the nest?"")"
446114,Is the weather clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the weather clear?"")"
6271790,Which kind of fast food is sitting on the bench?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is sitting on the bench?"")"
688348,Which kind of baked good are the spots on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good are the spots on?"")"
1513509,Are the woman's pants black or white?," # contains a relation (woman's pants), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the woman's pants black or white?"")"
3887273,Is the purple vegetable in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the purple vegetable in the bottom part of the photo?"")"
2615718,Is the red bag to the left of the man that is to the right of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red bag to the left of the man that is to the right of the girl?"")"
9520433,Is there a blue train or bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a blue train or bus?"")"
5976871,What device is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is black?"")"
12434240,On which side of the picture is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
17136513,What is the piece of furniture to the right of the blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the blanket?"")"
2352520,How is this vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is this vehicle called?"")"
3324518,What animal pulls the cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal pulls the cart?"")"
19439915,Are there containers to the right of the white can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""container"") and image_patch.exists(""white can"")) # assumes only one white can"
10634129,Are there men to the left of the guy that is wearing sneakers?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the guy that is wearing sneakers?"")"
1355242,Is the utensil on the left?," # assumes only one utensil patch
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""utensil"")
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""Is the utensil on the left?"")
    utensil_patch = utensil_patches[0]
    if utensil_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
104503,What is the piece of furniture that is to the right of the man that is wearing shoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the right of the man that is wearing shoes?"")"
1058404,What's the snow covering?," # snow covering
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the snow covering?"")"
7942217,Is there a cow or a dog in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cow = image_patch.exists(""cow"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_cow or is_dog)"
12638397,What is in front of the building the clock is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building the clock is on?"")"
12373978,Is the girl on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl on the right of the picture?"")"
5216363,Is this room the living room or the kitchen?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this room the living room or the kitchen?"")"
9112234,What color are the apples held by the box?," # contains a relation (held by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the apples held by the box?"")"
2709194,Is the pigeon that is not up fat or thin?," # contains a relation (up, not up, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pigeon that is not up fat or thin?"")"
1441508,What is the animal on top of the chair?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on top of the chair?"")"
11472401,Is the stove to the right of the towel that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove to the right of the towel that is on the right?"")"
8284775,Is the animal different in color than the sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal different in color than the sign?"")"
3363238,What's the wire on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the wire on?"")"
12142031,Is the black bag to the left or to the right of the person that wears a hat?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the left or to the right of the person that wears a hat?"")"
1536297,The mirror is on what?," # mirror is a special case
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""The mirror is on what?"")
    return mirror_patches[0].simple_query(""The mirror is on what?"") # crop would include the mirror so keep it in the query"
11495391,What color is the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bench?"")"
1472518,Is there any dog that is eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dog eating""))"
11519772,Is the black device to the left of the man that is on the left?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black device to the left of the man that is on the left?"")"
8337927,Are the people the same gender?," # gender is not a property of people, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people the same gender?"")"
12958320,What is she eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she eating?"")"
386416,What device is dirty?," # dirty is a property of the device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What device is dirty?"")
    for device_patch in device_patches:
        if device_patch.verify_property(""device"", ""dirty""):
            return device_patch.simple_query(""What device is dirty?"")
    return ""no device is dirty"""
6245486,What clothing item is worn?," # returns the clothing item
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is worn?"")"
14240403,The person that is not old is sitting on what?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person that is not old is sitting on what?"")"
19121423,Is the sky both clear and blue?," # clear and blue
    image_patch = ImagePatch(image)
    is_clear = image_patch.verify_property(""sky"", ""clear"")
    is_blue = image_patch.verify_property(""sky"", ""blue"")
    return bool_to_yesno(is_clear and is_blue)"
856802,Is the plastic container on the left or on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic container on the left or on the right?"")"
1325144,What bag is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bag is the woman holding?"")"
14790144,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
14212111,Are the people in the top or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people in the top or in the bottom of the picture?"")"
1846830,Is the person near the trees wearing a suit?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person near the trees wearing a suit?"")"
3502874,Is the tail both black and long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""tail"", ""black"") and image_patch.verify_property(""tail"", ""long""))"
19959486,Does the hair look brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""hair"", ""brown""))"
15801050,Does the window look closed and black?," # returns yes or no
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""Does the window look closed and black?"")
    return bool_to_yesno(window_patches[0].verify_property(""window"", ""closed"") and window_patches[0].verify_property(""window"", ""black""))"
16769795,What is the meat to the left of the food that looks triangular?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat to the left of the food that looks triangular?"")"
3502721,What is the corn on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the corn on?"")"
1585894,Is the cabinet made of the same material as the collar?," # assumes only one cabinet and one collar
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    collar_patches = image_patch.find(""collar"")
    if len(cabinet_patches) == 0 or len(collar_patches) == 0:
        return image_patch.simple_query(""Is the cabinet made of the same material as the collar?"")
    cabinet_patch = cabinet_patches[0]
    collar_patch = collar_patches[0]
    return bool_to_yesno(cabinet_patch.verify_property(""cabinet"", ""material"") == collar_patch.verify_property(""collar"", ""material""))"
15918582,Is there any speaker that is large?," # speaker is a general term, so query directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""speaker"") and image_patch.simple_query(""Is the speaker large?"") == ""yes"")"
18749909,Are there any umbrellas or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_umbrella or is_fence)"
114713,Is the man standing or jumping?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man standing or jumping?"")"
3940749,Which color is the mane?," # mane is a horse's hair
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""Which color is the mane?"")
    horse_patch = horse_patches[0]
    return horse_patch.simple_query(""Which color is the mane?"") # crop would include the mane so keep it in the query"
623305,What is in the glass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass?"")"
14707472,Is the woman to the right of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of a car?"")"
19907175,What is on the truck that is on top of the cake?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the truck that is on top of the cake?"")"
1867049,What's the woman sitting in?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman sitting in?"")"
9922095,Is the man to the right or to the left of the green suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the green suitcase?"")"
11407697,Who is the horse looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the horse looking at?"")"
4527496,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
15752839,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
11921102,What color is the hydrant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hydrant?"")"
262776,Do you see any benches or mouse pads in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""mouse pad""))"
14712890,"On which side of the photo is the backpack, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the backpack, the left or the right?"")"
3140785,Are there kites in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite""))"
462976,What's the airplane hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the airplane hanging from?"")"
16683729,Is the man to the left or to the right of the woman that is to the left of the children?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the woman that is to the left of the children?"")"
14218501,Is the purple blanket on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the purple blanket on the left?"")"
41007020,Are there either any fences or traffic lights in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""traffic light"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
2686455,Is this a baseball or tennis player?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a baseball or tennis player?"")"
8746037,What is in front of the green trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the green trees?"")"
15452242,What is the dog on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog on?"")"
16494206,What is under the dining table near the chair?," # contains a relation (under, near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the dining table near the chair?"")"
6735550,What type of device is the same color as the phone cable?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is the same color as the phone cable?"")"
1302840,Which color is that liquid?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that liquid?"")"
2629015,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
8305577,Is there any cheese to the right of the hot dog in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cheese to the right of the hot dog in the center?"")"
9747908,Are there dogs or birds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_dog or is_bird)"
171059254,Is there either a pear or a banana in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pear"") or image_patch.exists(""banana""))"
13416982,What device is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on top of the table?"")"
3530352,Is the pillow to the right of a curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow to the right of a curtain?"")"
3157131,Are there any appliances to the right of the bulb made of glass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""appliance"") and image_patch.exists(""glass"") and image_patch.exists(""bulb"")) # assumes only one appliance and one bulb"
14468453,What kind of vegetable is to the left of the knife?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the left of the knife?"")"
12751221,"In which part of the photo is the cheese, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the cheese, the bottom or the top?"")"
3559693,Do you see a bottle that is not made of plastic?," # bottle is a general term, so query directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bottle that is not made of plastic?"")"
16132539,What is the size of the blue plate?," # returns the size of the blue plate
    image_patch = ImagePatch(image)
    blue_patches = image_patch.find(""blue"")
    # Question assumes only one blue patch
    if len(blue_patches) == 0:
        # If no blue is found, query the image directly
        return image_patch.simple_query(""What is the size of the blue plate?"")
    blue_patch = blue_patches[0]
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        return image_patch.simple_query(""What is the size of the blue plate?"")
    plate_patch = plate_patches[0]
    return blue_patch.simple_query(""What is the size of the blue plate?"") # crop would include the plate so keep it in the query"
7473520,Do you see any fences to the left of the bike that is to the left of her?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any fences to the left of the bike that is to the left of her?"")"
3574545,Which color is the dog's hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the dog's hair?"")"
14310694,What is in front of the person in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the person in the top of the image?"")"
2910892,Are there any plates to the right of the wine the brownies are to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any plates to the right of the wine the brownies are to the left of?"")"
5978313,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
13193588,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
3494505,What color is the car that is in the bottom of the image?," # contains a relation (bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the car that is in the bottom of the image?"")"
18281093,Are there any square ottomen or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_square_ottoman = image_patch.exists(""square ottoman"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_square_ottoman or is_mirror)"
101039814,Is there a black motorcycle or skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a black motorcycle or skateboard?"")"
5622365,Which side is the coffee cup on?," # left or right
    image_patch = ImagePatch(image)
    coffee_patches = image_patch.find(""coffee cup"")
    # Question assumes only one coffee patch
    if len(coffee_patches) == 0:
        # If no coffee cup is found, query the image directly
        return image_patch.simple_query(""Which side is the coffee cup on?"")
    if coffee_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16302551,What animal is in the green water?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the green water?"")"
7637552,How clean are the white shoes?," # returns a string describing the cleanliness of the shoes
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoes"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""How clean are the white shoes?"")
    for shoe_patch in shoe_patches:
        if shoe_patch.simple_query(""What color are the shoes?"") == ""white"":
            return shoe_patch.simple_query(""How clean are the white shoes?"")
    return image_patch.simple_query(""How clean are the white shoes?"") # if no white shoes are found, query the image directly"
19346120,What is he leaning against?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he leaning against?"")"
18715507,Who is wearing a belt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a belt?"")"
11259390,Are there both kites and boys in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kite = image_patch.exists(""kite"")
    is_boy = image_patch.exists(""boy"")
    return bool_to_yesno(is_kite and is_boy)"
11549583,Are there any shields or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_shield = image_patch.exists(""shield"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_shield or is_pillow)"
7113431,What vehicle is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is large?"")"
4135418,What's the bridge made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bridge made of?"")"
13381398,Are there any yellow cups or tomatoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_yellow_cup = image_patch.exists(""yellow cup"")
    is_tomato = image_patch.exists(""tomato"")
    return bool_to_yesno(is_yellow_cup or is_tomato)"
3112682,Who is holding the bear on the right?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the bear on the right?"")"
8133265,What kind of furniture is the elephant on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the elephant on?"")"
5672597,Is the bench made of stone?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench made of stone?"")"
11180842,Is the black bottle to the left of a faucet?," # bottle is black, faucet is white
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the black bottle to the left of a faucet?"")
    for bottle_patch in bottle_patches:
        faucet_patches = image_patch.find(""faucet"")
        for faucet_patch in faucet_patches:
            if bottle_patch.horizontal_center < faucet_patch.horizontal_center:
                return ""yes""
    return ""no"""
1797538,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
19860321,Which color is the fence?," # returns the color of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Which color is the fence?"")
    return fence_patches[0].simple_query(""Which color is the fence?"")"
523428,Do you see any people to the left of the bag that is to the left of the stroller?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any people to the left of the bag that is to the left of the stroller?"")"
1167688,Which color is the car to the right of the van?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the car to the right of the van?"")"
9469903,Is the painting to the right of the lamp that is on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the painting to the right of the lamp that is on the left side?"")"
10453382,"Which device is not flat, the laptop or the screen?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which device is not flat, the laptop or the screen?"")"
329029,What animal is in the green field?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the green field?"")"
18230697,How hard is the pretzel to the left of the other pretzel?," # assumes only two pretzels
    image_patch = ImagePatch(image)
    pretzel_patches = image_patch.find(""pretzel"")
    # Question assumes only two pretzel patches
    if len(pretzel_patches) < 2:
        # If less than two pretzels are found, query the image directly
        return image_patch.simple_query(""How hard is the pretzel to the left of the other pretzel?"")
    left_pretzel = pretzel_patches[0]
    right_pretzel = pretzel_patches[1]
    if left_pretzel.horizontal_center < right_pretzel.horizontal_center:
        return left_pretzel.simple_query(""How hard is the pretzel to the left of the other pretzel?"")
    else:
        return right_pretzel.simple_query(""How hard is the pretzel to the left of the other pretzel?"")"
17248261,Which vegetable is that?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which vegetable is that?"")"
9542731,What's the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What's the clock on?"")
    return clock_patches[0].simple_query(""What's the clock on?"")"
101026822,Is there any door or window that is made of glass?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    window_patches = image_patch.find(""window"")
    for door_patch in door_patches:
        if door_patch.verify_property(""door"", ""glass""):
            return ""yes""
    for window_patch in window_patches:
        if window_patch.verify_property(""window"", ""glass""):
            return ""yes""
    return ""no"""
13747308,Is the car to the left of a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the left of a truck?"")"
8976956,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4527557,Which color is the uniform?," # uniform is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the uniform?"")"
18639640,Is there a cup to the left of the utensil in the top?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cup to the left of the utensil in the top?"")"
15220624,What is the vehicle to the right of the bicycle that is in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the bicycle that is in the bottom part of the picture?"")"
18289554,What kind of vegetable is to the left of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the left of the bowl?"")"
8290098,What is the person to the left of the papers wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the papers wearing?"")"
41048958,Who is wearing a ring?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a ring?"")"
1020185,Is the knife in the top or in the bottom part of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the top or in the bottom part of the photo?"")"
15168323,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
5731331,Who is wearing the goggles?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the goggles?"")"
11954835,What is the lady wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady wearing?"")"
3455913,Do you see any silver DVD players or speakers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any silver DVD players or speakers?"")"
443166,Which side of the image is the garbage bin on?," # left or right
    image_patch = ImagePatch(image)
    garbage_bin_patches = image_patch.find(""garbage bin"")
    # Question assumes only one garbage bin patch
    if len(garbage_bin_patches) == 0:
        # If no garbage bin is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the garbage bin on?"")
    if garbage_bin_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1513435,"In which part of the image is the frisbee, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the frisbee, the top or the bottom?"")"
1745440,Is the toothbrush in the bottom of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toothbrush in the bottom of the image?"")"
16587714,What animal is sitting on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is sitting on the table?"")"
7607362,What color is the shirt the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the woman is wearing?"")"
1546474,How big is the fence to the left of the zebra?," # returns a string
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""How big is the fence to the left of the zebra?"")
    for fence_patch in fence_patches:
        zebra_patches = image_patch.find(""zebra"")
        for zebra_patch in zebra_patches:
            if zebra_patch.horizontal_center > fence_patch.horizontal_center:
                return fence_patch.simple_query(""How big is the fence to the left of the zebra?"")
    # If no fence is to the left of the zebra, query the image directly
    return image_patch.simple_query(""How big is the fence to the left of the zebra?"")"
5793149,What is the lady on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady on?"")"
15690573,Is the boy on the skateboard wearing a jacket?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy on the skateboard wearing a jacket?"")"
15178476,Are there washing machines or cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_washing_machine = image_patch.exists(""washing machine"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_washing_machine or is_cabinet)"
12169982,What place was the image taken at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the image taken at?"")"
91002940,Are the green curtains below the appliance in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the green curtains below the appliance in the top part of the image?"")"
15140679,What is the cat resting on?," # contains a relation (resting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat resting on?"")"
19953829,Are there both glasses and ties in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_tie = image_patch.exists(""tie"")
    return bool_to_yesno(is_glasses and is_tie)"
17972349,What fruit is to the left of the fruit that the raspberries are in the center of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the left of the fruit that the raspberries are in the center of?"")"
3269385,Is this airplane both small and blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""airplane"", ""small"") and image_patch.verify_property(""airplane"", ""blue""))"
11787953,Are there any brown nightstands or tables in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown nightstand"") or image_patch.exists(""brown table""))"
4696309,What kind of vehicle is the building behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is the building behind of?"")"
5303666,On which side of the image is the stone fence?," # left or right
    image_patch = ImagePatch(image)
    stone_fence_patches = image_patch.find(""stone fence"")
    # Question assumes only one stone_fence patch
    if len(stone_fence_patches) == 0:
        # If no stone_fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the stone fence?"")
    if stone_fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11465798,What is on the paper towel in the middle?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the paper towel in the middle?"")"
2776810,Are there ladies to the right of the man that is carrying luggage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there ladies to the right of the man that is carrying luggage?"")"
19519382,What device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the man holding?"")"
2174112,What food is to the right of the white cream that is on top of the leaves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the right of the white cream that is on top of the leaves?"")"
9828959,On which side is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11121813,Are there any cars or mouse pads in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_mouse_pad = image_patch.exists(""mouse pad"")
    return bool_to_yesno(is_car or is_mouse_pad)"
1141240,Is the small person on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small person on the right side?"")"
661997,What is on the building?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the building?"")"
16224197,Which pattern is the swim suit that the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which pattern is the swim suit that the woman is wearing?"")"
1799176,What color does the cellphone by the camera have?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the cellphone by the camera have?"")"
1257200,Is the white plate to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white plate to the right of the man?"")"
981297,Is the color of the wall the same as the sandwich?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the wall the same as the sandwich?"")"
15599715,Is the sandwich on the napkin?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sandwich on the napkin?"")"
1191765,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
26871,Are the trees on the hillside on or off?," # contains a relation (on, off), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trees on the hillside on or off?"")"
3328934,Is the man to the right of the device that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the device that is on the right?"")"
171030814,Are there snowboarders in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""snowboarder""))"
2220999,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
18227535,Is he wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he wearing shorts?"")"
23079,Is there a hydrant or a mousepad in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hydrant = image_patch.exists(""hydrant"")
    is_mousepad = image_patch.exists(""mousepad"")
    return bool_to_yesno(is_hydrant or is_mousepad)"
13169420,How large is the sausage to the left of the container?," # returns a string
    image_patch = ImagePatch(image)
    sausage_patches = image_patch.find(""sausage"")
    # Question assumes only one sausage patch
    if len(sausage_patches) == 0:
        # If no sausage is found, query the image directly
        return image_patch.simple_query(""How large is the sausage to the left of the container?"")
    for sausage_patch in sausage_patches:
        container_patches = image_patch.find(""container"")
        for container_patch in container_patches:
            if container_patch.horizontal_center > sausage_patch.horizontal_center:
                return sausage_patch.simple_query(""How large is the sausage to the left of the container?"")
    # If no container is to the right of the sausage, query the image directly
    return image_patch.simple_query(""How large is the sausage to the left of the container?"")"
15341652,Which kind of vehicle is not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.simple_query(""Is the vehicle red?"") == ""yes"":
            return vehicle_patch.simple_query(""What kind of vehicle is not red?"")
    return image_patch.simple_query(""Which kind of vehicle is not red?"")"
16802242,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
8679939,Which kind of fruit is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is the logo on?"")"
4253403,Do you see a bike there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike""))"
14405785,What is the man walking with?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man walking with?"")"
13117986,Is the meat that looks dark and brown raw or cooked?," # contains a relation (raw or cooked), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the meat that looks dark and brown raw or cooked?"")"
15331162,Are there any cows or fences in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cow = image_patch.exists(""cow"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_cow or is_fence)"
19338994,What is the item of furniture that is presented in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is presented in the picture?"")"
10467003,Is the white refrigerator to the right of the shelf that is to the right of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white refrigerator to the right of the shelf that is to the right of the cabinet?"")"
420519,The sticks are in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sticks are in front of what?"")"
4685007,Is the large box to the left or to the right of the person that is wearing a dress?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large box to the left or to the right of the person that is wearing a dress?"")"
9961522,What is the cross mounted on?," # contains a relation (mounted on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cross mounted on?"")"
21020755,What's on the platform?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the platform?"")"
17637736,What animal is on the gray pavement?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the gray pavement?"")"
13630252,On which side is the guy?," # left or right
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""On which side is the guy?"")
    guy_patch = guy_patches[0]
    if guy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8979308,Is the stroller on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stroller on the right or on the left?"")"
831447,What is the food that the toppings are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the toppings are on?"")"
16264635,On which side of the picture is the bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8537124,What is the man to the right of the backpack picking up?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the backpack picking up?"")"
6784722,Which kind of vegetable is to the right of the sheet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the right of the sheet?"")"
16796115,What is hanging above the bed?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging above the bed?"")"
592299,How thick is the pizza?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How thick is the pizza?"")"
19775445,Do you see any bears or candles there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bear"") or image_patch.exists(""candle""))"
19922984,The picture is what length?," # width
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The picture is what length?"")"
17699101,Is there a computer to the right of the cream that is in the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a computer to the right of the cream that is in the cup?"")"
13696635,Is the metal fence to the left or to the right of the giraffe that the spots are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal fence to the left or to the right of the giraffe that the spots are on?"")"
1915099,Are there mirrors to the right of the bus on the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there mirrors to the right of the bus on the road?"")"
2183882,The woman is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman is wearing what?"")"
5408273,Does the sky look clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the sky look clear?"")) # clear is the default"
13231896,Who is holding the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the horse?"")"
816085,Is the tail large and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tail large and white?"")"
2111479,Is that hill behind a cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that hill behind a cow?"")"
4314333,Does the hat have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""hat"", ""black""))"
9307188,Is there any grass that is short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is short?"")"
5333450,Do you see a fire hydrant in the picture that is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a fire hydrant in the picture that is red?"")"
10410035,What is the vehicle that is below the sky?," # contains a relation (below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is below the sky?"")"
15521514,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
12805349,Which side of the image is the yellow fruit on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the image is the yellow fruit on?"")"
680828,Are there both skateboards and fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_skateboard and is_fence)"
12368713,Where is the coffee table?," # returns the location of the coffee table
    image_patch = ImagePatch(image)
    coffee_table_patches = image_patch.find(""coffee table"")
    # Question assumes only one coffee table patch
    if len(coffee_table_patches) == 0:
        # If no coffee table is found, query the image directly
        return image_patch.simple_query(""Where is the coffee table?"")
    return coffee_table_patches[0].simple_query(""Where is the coffee table?"") # crop would include the coffee table so keep it in the query"
2261916,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
10259068,Do you see glasses to the right of the person on the left of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see glasses to the right of the person on the left of the image?"")"
1266022,What device is the same color as the liquid?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the same color as the liquid?"")"
161007679,What kind of vehicle is the van behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is the van behind of?"")"
8362885,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
18424731,What food is on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is on top of the pizza?"")"
18728220,What is the name of the item of furniture to the right of the pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture to the right of the pizza?"")"
6625899,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
14906984,Are there both bowls and vegetables in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""bowl"")
    is_vegetable = image_patch.exists(""vegetable"")
    return bool_to_yesno(is_bowl and is_vegetable)"
16256785,Does the train behind the window look green?," # contains a relation (behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the train behind the window look green?"")"
938574,Is he wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he wearing jeans?"")"
15222516,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
8764976,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
4100097,Who wears a cowboy hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a cowboy hat?"")"
19627024,Do you see a child by the net?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a child by the net?"")"
11845775,What color does the curtain in the top of the image have?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the curtain in the top of the image have?"")"
66464,What type of furniture do you think is to the right of the student?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture do you think is to the right of the student?"")"
2940315,Are there any horses or helmets that are gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse_gray = image_patch.exists(""horse"") and image_patch.exists(""gray"")
    is_helmet_gray = image_patch.exists(""helmet"") and image_patch.exists(""gray"")
    return bool_to_yesno(is_horse_gray or is_helmet_gray)"
13324219,What is the cat in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat in?"")"
1192738,On which side are the people?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""On which side are the people?"")
    people_patch = people_patches[0]
    if people_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1831662,Are there any fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
19475155,Which kind of furniture is to the left of the towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the towel?"")"
7941660,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
16665658,Do you see any drawers to the left of the plate?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any drawers to the left of the plate?"")"
1653293,What is the appliance that is in the kitchen?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance that is in the kitchen?"")"
18880075,Are both the cutting board to the left of the box and the cutting board that is not full made of wood?," # contains a relation (left of, made of) and a property (full), so ask directly
    image_patch = ImagePatch(image)
    cutting_board_patches = image_patch.find(""cutting board"")
    # Question assumes only two cutting board patches
    if len(cutting_board_patches) < 2:
        # If not two cutting board patches, query the image directly
        return image_patch.simple_query(""Are both the cutting board to the left of the box and the cutting board that is not full made of wood?"")
    left_cutting_board = cutting_board_patches[0]
    right_cutting_board = cutting_board_patches[1]
    is_left_cutting_board_to_the_left_of_the_box = left_cutting_board.horizontal_center < right_cutting_board.horizontal_center
    is_right_cutting_board_not_full = right_cutting_board.verify_property(""cutting board"", ""full"") == False
    return bool_to_yesno(is_left_cutting_board_to_the_left_of_the_box and is_right_cutting_board_not_full)"
2480006,Do you see any cameras near the phone on the table?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cameras near the phone on the table?"")"
2683765,What is the appliance to the right of the cupboard in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the right of the cupboard in the middle of the picture?"")"
7993641,What do you think is the color of the shirt the guy is wearing?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the shirt the guy is wearing?"")
    shirt_patches = image_patch.find(""shirt"")
    for shirt_patch in shirt_patches:
        if shirt_patch.horizontal_center > guy_patches[0].horizontal_center:
            return shirt_patch.simple_query(""What do you think is the color of the shirt the guy is wearing?"")
    return image_patch.simple_query(""What do you think is the color of the shirt the guy is wearing?"")"
10993348,What color is the tray that is carried by the orange?," # contains a relation (carried by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tray that is carried by the orange?"")"
15938059,Is the bicycle the same color as the ambulance?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle the same color as the ambulance?"")"
15138161,Are there any tables or chairs that are dark brown?," # dark brown is a property of the object
    image_patch = ImagePatch(image)
    is_table_dark_brown = image_patch.exists(""table"") and image_patch.verify_property(""table"", ""dark brown"")
    is_chair_dark_brown = image_patch.exists(""chair"") and image_patch.verify_property(""chair"", ""dark brown"")
    return bool_to_yesno(is_table_dark_brown or is_chair_dark_brown)"
1889818,The man is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is where?"")"
2745873,What do you think is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is in front of the trees?"")"
101049448,Are there either any scooters or ropes in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""scooter"") or image_patch.exists(""rope""))"
161053855,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
7188118,Who is the hot dog on the paper eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the hot dog on the paper eating?"")"
14492898,Is that mousepad red or blue?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that mousepad red or blue?"")"
11666270,Does the young girl hold the device that is to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the young girl hold the device that is to the right of the bag?"")"
18257654,Do the roof and the bush have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the roof and the bush have a different colors?"")) # crop would include the roof so keep it in the query"
3146398,What is located on top of the table made of wood?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the table made of wood?"")"
13352263,Is the man that is to the left of the bench watching a skateboarder?," # contains a relation (left of, watching, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the bench watching a skateboarder?"")"
2264284,What kind of fast food is to the right of the salad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is to the right of the salad?"")"
191021289,Who holds the apple?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the apple?"")"
8916389,What is the container on?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""What is the container on?"")
    return container_patches[0].simple_query(""What is the container on?"")"
19773092,Is the person in the top of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the top of the photo?"")"
11292264,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8778021,The car that is on the road is what color?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The car that is on the road is what color?"")"
8148983,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6536962,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
13685355,Which kind of vehicle is the dumpster behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is the dumpster behind of?"")"
4373802,Does the person on the motorbike wear a helmet?," # helmet is not a property of the motorbike
    image_patch = ImagePatch(image)
    motorbike_patches = image_patch.find(""motorbike"")
    # Question assumes only one motorbike patch
    if len(motorbike_patches) == 0:
        # If no motorbike is found, query the image directly
        return image_patch.simple_query(""Does the person on the motorbike wear a helmet?"")
    motorbike_patch = motorbike_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        return ""no""
    helmet_patch = helmet_patches[0]
    return helmet_patch.horizontal_center > motorbike_patch.horizontal_center and helmet_patch.horizontal_center < person_patch.horizontal_center"
545786,In which part is the computer monitor?," # returns the part of the image (left, right, top, bottom)
    image_patch = ImagePatch(image)
    computer_monitor_patches = image_patch.find(""computer monitor"")
    # Question assumes only one computer_monitor patch
    if len(computer_monitor_patches) == 0:
        # If no computer_monitor is found, query the image directly
        return image_patch.simple_query(""In which part is the computer monitor?"")
    if computer_monitor_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif computer_monitor_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        if computer_monitor_patches[0].vertical_center < image_patch.vertical_center:
            return ""bottom""
        else:
            return ""top"""
13577575,Does the umbrella have purple color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""umbrella"", ""purple""))"
11163591,What is on the tray to the right of the donuts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the tray to the right of the donuts?"")"
121031548,Is there either a sofa or a lamp in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sofa = image_patch.exists(""sofa"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_sofa or is_lamp)"
1266382,What fruits are on the tray?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits are on the tray?"")"
18937286,Who wears the skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the skirt?"")"
11897964,What is the color of the towel that hangs from the freezer?," # freezer is a fridge in this case
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""What is the color of the towel that hangs from the freezer?"")
    for towel_patch in towel_patches:
        if towel_patch.horizontal_center > image_patch.horizontal_center / 2: # freezer is in the left half
            return towel_patch.simple_query(""What is the color of the towel that hangs from the freezer?"")
    # If no towel is hanging from the freezer, pick the first towel
    return towel_patches[0].simple_query(""What is the color of the towel that hangs from the freezer?"")"
11968196,The fence is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The fence is in front of what?"")"
1316550,"What are the controllers on, a cabinet or an ottoman?"," # assumes only one controller patch
    image_patch = ImagePatch(image)
    controller_patches = image_patch.find(""controller"")
    if len(controller_patches) == 0:
        # If no controller is found, query the image directly
        return image_patch.simple_query(""What are the controllers on, a cabinet or an ottoman?"")
    controller_patch = controller_patches[0]
    return controller_patch.best_text_match([""cabinet"", ""ottoman""])"
1063540,What does the person on the surfboard wear?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person on the surfboard wear?"")"
8201169,Is the white van to the right or to the left of the person on the side walk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white van to the right or to the left of the person on the side walk?"")"
3690214,Which color do you think the trousers are?," # returns the color of the trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""Which color do you think the trousers are?"")
    return trousers_patches[0].simple_query(""Which color do you think the trousers are?"")"
18585049,On which side are the people?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""On which side are the people?"")
    people_patch = people_patches[0]
    if people_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1448973,Who do you think wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think wears a shirt?"")"
15564637,Is the clock in the top part or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock in the top part or in the bottom of the picture?"")"
15443098,What's the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the fence made of?"")"
807933,Is the umbrella blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella blue?"")"
2621767,What type of animal is behind the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is behind the wall?"")"
2468443,How large are the windows that are made of glass?," # returns a string
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""How large are the windows that are made of glass?"")
    for window_patch in window_patches:
        if window_patch.verify_property(""window"", ""glass""):
            return window_patch.simple_query(""How large are the windows that are made of glass?"") # crop would include the glass so keep it in the query
    # If no window is made of glass, query the image directly
    return image_patch.simple_query(""How large are the windows that are made of glass?"")"
9470136,Does the green grass near the bus look tall?," # bus is a vehicle, so it's not a relational verb
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Does the green grass near the bus look tall?"")
    for grass_patch in grass_patches:
        if grass_patch.horizontal_center < image_patch.horizontal_center: # near the bus
            return bool_to_yesno(grass_patch.verify_property(""grass"", ""tall""))
    return ""no"""
12125542,Who wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a shirt?"")"
18966266,On which side of the picture are the people?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the people?"")
    if people_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
377937,"Which type of food is brown, the meat or the cheese?"," # contains a relation (brown, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of food is brown, the meat or the cheese?"")"
10739421,Who is riding in the dark boat?," # contains a relation (riding in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding in the dark boat?"")"
17666940,What is the blue device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blue device?"")"
15876042,The man that is to the right of the surfboard is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man that is to the right of the surfboard is wearing what?"")"
9767953,Is the brown bridge above the vehicle that is not short?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bridge above the vehicle that is not short?"")"
19696631,Who is wearing the dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the dress?"")"
12826388,What type of food is to the left of the fruits that are on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the left of the fruits that are on the table?"")"
14354074,Which color is the vehicle on the right side?," # vehicle is on the right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which color is the vehicle on the right side?"")
    vehicle_patch = vehicle_patches[0]
    right_vehicle_patches = image_patch.find(""vehicle"")
    right_vehicle_patch = max(right_vehicle_patches, key=lambda x: x.horizontal_center)
    return vehicle_patch.simple_query(""What color is the vehicle on the right side?"") # crop would include the vehicle so keep it in the query"
10846058,Are there any pillowcases to the right of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillowcase"") and image_patch.find(""clock"")[0].horizontal_center < image_patch.find(""pillowcase"")[0].horizontal_center)"
14750297,Who is holding the device in the middle of the picture?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the device in the middle of the picture?"")"
32331,Is this a cat or a dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a cat or a dog?"")"
11825593,Who is reading the newspaper?," # contains a relation (reading), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is reading the newspaper?"")"
10739199,Which kind of fruit is in the kitchen?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is in the kitchen?"")"
18448875,"Which item of furniture is not brown, the dresser or the drawer?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which item of furniture is not brown, the dresser or the drawer?"")"
9649475,Who cuts the dessert in the box?," # contains a relation (cutting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who cuts the dessert in the box?"")"
13768472,What is located on top of the skateboard?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the skateboard?"")"
14585869,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
15573819,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
161003582,Do you think this television is on?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think this television is on?"")"
219391,Does the bandana look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bandana look blue?"")"
1168249,Is the white bread to the right or to the left of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bread to the right or to the left of the bowl?"")"
970141,Is the color of the apples different than the color of the peaches?," # contains a relation (different than, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the apples different than the color of the peaches?"")"
21002776,"Which part is the glass container in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the glass container in, the top or the bottom?"")"
4934384,Where is the surfer?," # returns the location of the surfer
    image_patch = ImagePatch(image)
    surfer_patches = image_patch.find(""surfer"")
    # Question assumes only one surfer patch
    if len(surfer_patches) == 0:
        # If no surfer is found, query the image directly
        return image_patch.simple_query(""Where is the surfer?"")
    return surfer_patches[0].simple_query(""Where is the surfer?"") # crop would include the surfer so keep it in the query"
13271793,Who is walking?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking?"")"
1749998,Is the head band white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the head band white?"")"
4807002,Is the man to the left of a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of a laptop?"")"
14563030,What type of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is on the plate?"")"
18352347,Is the train at the train station yellow or red?," # contains a relation (at, in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train at the train station yellow or red?"")"
9912827,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17502147,What is the item of furniture to the left of the computers in the middle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the computers in the middle called?"")"
15789864,Who wears the skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the skirt?"")"
3571934,What cooking utensil is to the right of the boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is to the right of the boy?"")"
9386789,Which kind of furniture is round?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is round?"")"
1968667,What the animal that is large is called?," # contains a relation (large, small, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What the animal that is large is called?"")"
19782989,Are there tennis balls or parachutes in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tennis_ball = image_patch.exists(""tennis ball"")
    is_parachute = image_patch.exists(""parachute"")
    return bool_to_yesno(is_tennis_ball or is_parachute)"
1633100,Is the wood table black or light brown?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood table black or light brown?"")"
7144540,Is there any stuffed bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stuffed bear""))"
17473931,What kind of bird is the man feeding?," # contains a relation (feeding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of bird is the man feeding?"")"
8614706,What is in front of the fence near the flower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the fence near the flower?"")"
11134960,Is there a white refrigerator or microwave in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white refrigerator or microwave in this photograph?"")"
6162749,"Who seems to be older, the child or the guy?"," # assumes only one child and one guy
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    guy_patches = image_patch.find(""guy"")
    if len(child_patches) == 0 or len(guy_patches) == 0:
        return image_patch.simple_query(""Who seems to be older, the child or the guy?"")
    child_patch = child_patches[0]
    guy_patch = guy_patches[0]
    if child_patch.simple_query(""Is the child older than the guy?"") == ""yes"":
        return ""child""
    else:
        return ""guy"""
16555504,"In which part of the picture is the meat, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the meat, the top or the bottom?"")"
8738719,Is the white animal in front or behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white animal in front or behind the fence?"")"
15109472,What kind of drink is to the left of the napkin on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of drink is to the left of the napkin on the right?"")"
6897922,Is the child to the right or to the left of the person that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child to the right or to the left of the person that is on the right?"")"
15511021,Are there both a window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
11278898,Does the hair look gray?," # gray or grey
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair look gray?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""gray""))"
10318269,Where do you think is the person near the bushes looking at?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where do you think is the person near the bushes looking at?"")"
14284118,What kind of furniture is in front of the table the laptop computer is at?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is in front of the table the laptop computer is at?"")"
6399460,Is the brown meat to the right or to the left of the fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown meat to the right or to the left of the fork?"")"
15791629,Are there any giraffes in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe in the field"")) # crop would include the field so keep it in the query"
15989378,On which side is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side is the woman?"")
    return ""left"" if woman_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
5437125,Which kind of device is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is white?"")"
8883565,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
896023,What type of baked good is to the right of the lemon on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of baked good is to the right of the lemon on the table?"")"
15770891,Is the color of the home plate different than the box?," # home plate and box are assumed to be in the same image
    image_patch = ImagePatch(image)
    home_plate_patches = image_patch.find(""home plate"")
    # Question assumes only one home plate patch
    if len(home_plate_patches) == 0:
        # If no home plate is found, query the image directly
        return image_patch.simple_query(""Is the color of the home plate different than the box?"")
    home_plate_patch = home_plate_patches[0]
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        return ""no""
    box_patch = box_patches[0]
    return bool_to_yesno(home_plate_patch.verify_property(""home plate"", ""color"") != box_patch.verify_property(""box"", ""color""))"
15769552,Which side is the metal utensil on?," # left or right
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""metal utensil"")
    # Question assumes only one utensil patch
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""Which side is the metal utensil on?"")
    utensil_patch = utensil_patches[0]
    if utensil_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5889986,The meat is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The meat is on what?"")"
16544610,Are there either pistachios or waffles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pistachio"") or image_patch.exists(""waffle""))"
784968,Is the pole behind the shrub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pole behind the shrub?"")"
1975590,Is the traffic signal to the right of the person black and long?," # black and long is a property of a blackboard
    image_patch = ImagePatch(image)
    traffic_signal_patches = image_patch.find(""traffic signal"")
    # Question assumes only one traffic signal patch
    if len(traffic_signal_patches) == 0:
        # If no traffic signal is found, query the image directly
        return image_patch.simple_query(""Is the traffic signal to the right of the person black and long?"")
    for traffic_signal_patch in traffic_signal_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if traffic_signal_patch.horizontal_center > person_patch.horizontal_center:
                return bool_to_yesno(traffic_signal_patch.verify_property(""traffic signal"", ""black"") and traffic_signal_patch.verify_property(""traffic signal"", ""long""))
    return ""no"""
16264895,On which side of the image is the red container?," # left or right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the red container?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14387106,Does the car to the right of the man look red?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the car to the right of the man look red?"")"
474660,How big is the pizza on the left of the photo?," # returns the size of the pizza
    image_patch = ImagePatch(image)
    pizza_patches = image_patch.find(""pizza"")
    # Question assumes only one pizza patch
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch.simple_query(""How big is the pizza on the left of the photo?"")
    leftmost_pizza = pizza_patches[0]
    if leftmost_pizza.horizontal_center < image_patch.horizontal_center:
        return leftmost_pizza.simple_query(""How big is the pizza on the left of the photo?"")
    return image_patch.find(""pizza"")[0].simple_query(""How big is the pizza on the left of the photo?"")"
739622,Who is holding the poster?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the poster?"")"
8179850,"How does the appliance to the right of the stove look, old or new?"," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the appliance to the right of the stove look, old or new?"")"
6373182,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
161074266,What is the color of the clouds?," # returns the color of the clouds
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the clouds?"")"
1193939,What animal is facing the camera?," # contains a relation (facing the camera), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is facing the camera?"")"
14540082,Do the glasses to the right of the person seem to be black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Do the glasses to the right of the person seem to be black?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > image_patch.horizontal_center:
        return bool_to_yesno(glasses_patch.verify_property(""glasses"", ""black""))
    return ""no"""
17352190,What is the rope connected to?," # contains a relation (connected to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the rope connected to?"")"
5616749,On which side of the image are the onions?," # left or right
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    # Question assumes only one onion patch
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the onions?"")
    if onion_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
889203,What is in front of the cabinets which are to the left of the banana?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the cabinets which are to the left of the banana?"")"
131063511,Is the catcher to the left or to the right of the person that is behind the home plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher to the left or to the right of the person that is behind the home plate?"")"
14892297,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
13982171,Is there a flag to the right of the person that is wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a flag to the right of the person that is wearing a coat?"")"
3533,Is the book to the right of the mug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book to the right of the mug?"")"
2265620,What hangs on the pole in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs on the pole in the scene?"")"
1725387,What animal is on the comforter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the comforter?"")"
1012637,Do you see players on the field?," # contains a relation (on the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see players on the field?"")"
18959240,Are there any buses in the image that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    for bus_patch in bus_patches:
        if bus_patch.verify_property(""bus"", ""black"") == False:
            return ""yes""
    return ""no"""
1212632,Is the person in the top part or in the bottom of the image?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the top part or in the bottom of the image?"")"
10240219,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
7943178,Are there both knives and plates in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_knife = image_patch.exists(""knife"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_knife and is_plate)"
11493162,What color do you think is the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What color do you think is the shirt?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What color do you think is the shirt?"") # crop would include the shirt so keep it in the query"
5486112,Does the person on the beach hold a flag?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person on the beach hold a flag?"")"
13446450,Is the silver device to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver device to the left of the computer?"")"
19630988,Is the blue boat on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue boat on the left?"")"
19831789,Are there any cars to the left of the train on the left?," # left is the horizontal axis
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""Are there any cars to the left of the train on the left?"")
    for car_patch in car_patches:
        for train_patch in train_patches:
            if train_patch.horizontal_center < car_patch.horizontal_center and train_patch.horizontal_center < image_patch.horizontal_center:
                return ""yes""
    return ""no"""
7741427,What is the color of the skateboard?," # returns the color of the skateboard
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the skateboard?"")"
1938842,Do you see vegetables next to the carrot?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see vegetables next to the carrot?"")"
13741450,"On which side is the umbrella, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the umbrella, the right or the left?"")"
18722242,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
51001873,What kind of clothing is pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is pink?"")"
1454916,Is the palm behind a giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the palm behind a giraffe?"")"
5583575,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
12297825,Does the empty bus seem to be blue?," # empty bus
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""Does the empty bus seem to be blue?"")
    return bool_to_yesno(bus_patches[0].verify_property(""bus"", ""blue""))"
17298398,Are both the cabinet and the shirt the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one cabinet and one shirt patch
    if len(cabinet_patches) == 0 or len(shirt_patches) == 0:
        # If no cabinet or shirt is found, query the image directly
        return image_patch.simple_query(""Are both the cabinet and the shirt the same color?"")
    cabinet_color = cabinet_patches[0].simple_query(""What color is the cabinet?"")
    shirt_color = shirt_patches[0].simple_query(""What color is the shirt?"")
    return bool_to_yesno(cabinet_color == shirt_color)"
19633643,What is the name of the device that is on the control panel?," # assumes only one device
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device that is on the control panel?"")"
16172012,What is common to the log and the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the log and the wall?"")"
13838478,Is the man to the left of the boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the boy?"")"
8803424,Is the white building on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white building on the left?"")"
801608,What color is the chicken on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the chicken on the plate?"")"
18799767,Is the traffic cone in the bottom or in the top?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the traffic cone in the bottom or in the top?"")"
6508347,Do you see any can or meat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""can"") or image_patch.exists(""meat""))"
15657553,What is the vehicle that is on the platform called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is on the platform called?"")"
1168366,Is that freezer to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that freezer to the left of a chair?"")"
519953,Is the blond woman to the right of the car that is to the right of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blond woman to the right of the car that is to the right of the helmet?"")"
6127000,What is the device that the man to the left of the couch is holding?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that the man to the left of the couch is holding?"")"
11586353,Is the tall grass green or gold?," # contains a relation (tall, green, gold), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tall grass green or gold?"")"
9684010,Do you see any cakes on the plate on the left side?," # contains a relation (on, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cakes on the plate on the left side?"")"
5196085,What type of device is to the left of the draperies?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the left of the draperies?"")"
8678918,What kind of animal is in the river?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the river?"")"
1185229,Does the shirt have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""blue""))"
13944175,Is the large bottle to the left or to the right of the bag?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large bottle to the left or to the right of the bag?"")"
5610499,What is the color of the mat that is in the bottom?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the mat that is in the bottom?"")"
171038056,Is the motorcycle to the right or to the left of the person on the left?," # left is the person on the left
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Is the motorcycle to the right or to the left of the person on the left?"")
    for motorcycle_patch in motorcycle_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if person_patch.horizontal_center < image_patch.horizontal_center: # left is the person on the left
                if motorcycle_patch.horizontal_center > person_patch.horizontal_center:
                    return ""right""
                else:
                    return ""left""
    return ""right"""
10355831,Which kind is the animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind is the animal?"")"
19882875,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12239049,Is the man to the left or to the right of the food in the pan?," # assumes only one man and one food patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    food_patches = image_patch.find(""food in the pan"")
    if len(man_patches) == 0 or len(food_patches) == 0:
        return image_patch.simple_query(""Is the man to the left or to the right of the food in the pan?"")
    man_patch = man_patches[0]
    food_patch = food_patches[0]
    if man_patch.horizontal_center < food_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1135433,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
14806376,Is the lady to the left or to the right of the man that is to the left of the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the left or to the right of the man that is to the left of the horse?"")"
645599,Is the dish washer to the right of a refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dish washer to the right of a refrigerator?"")"
5780630,"What color is the door, white or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the door, white or red?"")"
131057118,What is the animal behind the wood post?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal behind the wood post?"")"
6824003,Is the man to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the woman?"")"
14955454,What is the animal in front of the post drinking from?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in front of the post drinking from?"")"
4260425,Does that umbrella look large and white?," # contains a relation (large and white), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that umbrella look large and white?"")"
7791266,What are the words on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the words on?"")"
5223691,What is the name of the vegetable that is to the left of the potato with the sauce?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable that is to the left of the potato with the sauce?"")"
4165110,Which kind of device is to the left of the phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the phone?"")"
1319018,What is that girl wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that girl wearing?"")"
1390167,What color do you think the racket the man holds is?," # returns the color of the racket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color do you think the racket the man holds is?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return image_patch.simple_query(""What color do you think the racket the man holds is?"")
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > man_patch.horizontal_center:
            return racket_patch.simple_query(""What color is the racket?"")
    return image_patch.simple_query(""What color do you think the racket the man holds is?"")"
13850174,Are there any plastic bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plastic bag"")) # Question assumes only one patch"
10113739,What color is the steering wheel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the steering wheel?"")"
13489112,Which side is the bottle on?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Which side is the bottle on?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8211889,What kind of food is to the left of the tomato that is to the left of the food?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the tomato that is to the left of the food?"")"
18992525,What is the animal in the wet sand?," # contains a relation (in the wet sand), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the wet sand?"")"
6157666,Are there either any umbrellas or chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella"") or image_patch.exists(""chair""))"
9530007,What item of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is brown?"")"
1135267,Who is on the boat?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the boat?"")"
670142,The fence in front of the building has what color?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The fence in front of the building has what color?"")"
1829154,What kind of vegetable is to the right of the container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the container?"")"
19301950,Is the dirt below a puppy?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dirt below a puppy?"")"
11162458,On which side of the image is the metal utensil?," # left or right
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""metal utensil"")
    # Question assumes only one utensil patch
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the metal utensil?"")
    if utensil_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8870020,What does that sign hang from?," # contains a relation (hang from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does that sign hang from?"")"
1599616,Are the toys to the left of a pig?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""toy"") and image_patch.exists(""pig"") and image_patch.simple_query(""Are the toys to the left of a pig?"") == ""yes"")"
15341284,What kind of food isn't tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food isn't tan?"")"
4293594,Does the man in front of the building wear shorts?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man in front of the building wear shorts?"")"
17628751,Is the fence in the top of the image?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top of the image?"")"
21011163,What piece of furniture is to the right of the cell phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the right of the cell phone?"")"
17120344,The chair is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The chair is in front of what?"")"
8552819,What color is the cloudy sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cloudy sky?"")"
14293181,What's the trash can made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the trash can made of?"")"
11690107,What is the item of furniture that is below the artwork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is below the artwork?"")"
19915479,What animal is sitting in the chair?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is sitting in the chair?"")"
6303203,Are there both a horse and a wolf in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse = image_patch.exists(""horse"")
    is_wolf = image_patch.exists(""wolf"")
    return bool_to_yesno(is_horse and is_wolf)"
16623117,With what is the man on the grass playing?," # contains a relation (on, with, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""With what is the man on the grass playing?"")"
10106458,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
2959165,What color do you think the cat on the right side is?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the cat on the right side is?"")"
1265816,Does the banana that to the right of the bowl lie on top of the tray?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the banana that to the right of the bowl lie on top of the tray?"")"
161042134,Is the collar on the dog that is white and brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the collar on the dog that is white and brown?"")"
474419,Is there a cup to the left of the girl who is wearing a sweater?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cup to the left of the girl who is wearing a sweater?"")"
5719642,Is the lamp near the bed off or on?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp near the bed off or on?"")"
9359227,Is the white pillow to the right or to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white pillow to the right or to the left of the man?"")"
3280411,Which color is the vehicle that the car is to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the vehicle that the car is to the left of?"")"
11782600,Are there both bowls and vegetables in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""bowl"")
    is_vegetable = image_patch.exists(""vegetable"")
    return bool_to_yesno(is_bowl and is_vegetable)"
3532589,The person in front of the building is wearing what?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person in front of the building is wearing what?"")"
6745924,Is there a fence or a bird in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_fence or is_bird)"
51028939,What do you think is the name of the food on the plate?," # returns the name of the food
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the name of the food on the plate?"")"
5238070,Are there scooters or soap dishes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_scooter = image_patch.exists(""scooter"")
    is_soap_dish = image_patch.exists(""soap dish"")
    return bool_to_yesno(is_scooter or is_soap_dish)"
4436122,What is the tree in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tree in front of?"")"
11607258,Are there any white desks or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_desk = image_patch.exists(""white desk"")
    is_chair = image_patch.exists(""white chair"")
    return bool_to_yesno(is_desk or is_chair)"
15634300,The grass is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The grass is where?"")"
4702076,What's attached to the wall?," # contains a relation (attached to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's attached to the wall?"")"
261420,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5622198,Which kind of fruit is on top of the cream?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is on top of the cream?"")"
9688447,Where are the cars?," # returns a string
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Where are the cars?"")
    for car_patch in car_patches:
        return car_patch.simple_query(""Where are the cars?"") # crop would include the car so keep it in the query"
2960437,The shorts are which color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shorts are which color?"")"
15415377,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
11504996,Is it an outdoors or indoors picture?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors picture?"")"
5214733,Is the policeman in the bottom part or in the top of the photo?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the policeman in the bottom part or in the top of the photo?"")"
11459268,What type of device is sitting on the desk the computer is above?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is sitting on the desk the computer is above?"")"
16919639,What is common to the sheep and the rope?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the sheep and the rope?"")"
18842205,What kind of vehicle is to the left of the glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the glasses?"")"
5380383,Is the building behind a train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind a train?"")"
4456509,Is the white sofa behind the rug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white sofa behind the rug?"")"
18775192,What do both the man apron and the tee shirt have in common?," # returns a string
    image_patch = ImagePatch(image)
    man_apron_patches = image_patch.find(""man apron"")
    tee_shirt_patches = image_patch.find(""tee shirt"")
    # Question assumes only one man apron patch and one tee shirt patch
    if len(man_apron_patches) == 0 or len(tee_shirt_patches) == 0:
        # If no man apron or tee shirt is found, query the image directly
        return image_patch.simple_query(""What do both the man apron and the tee shirt have in common?"")
    man_apron_patch = man_apron_patches[0]
    tee_shirt_patch = tee_shirt_patches[0]
    common_properties = set(man_apron_patch.simple_query(""What properties does the man apron have?"").split("", "")) # split by comma
    common_properties.update(set(tee_shirt_patch.simple_query(""What properties does the tee shirt have?"").split("", "")))
    return common_properties.pop() # returns the first property in the set"
4380628,Who wears the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the pants?"")"
3620006,Is there any woman to the right of the person that is using a cellphone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any woman to the right of the person that is using a cellphone?"")"
10468900,What is in the crate?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the crate?"")"
21059216,Which side of the picture is the chair on?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the chair on?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15812383,Which side are the white pillows on?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which side are the white pillows on?"")
    for pillow_patch in pillow_patches:
        if pillow_patch.simple_query(""Is the pillow white?"") == ""yes"":
            if pillow_patch.horizontal_center < image_patch.horizontal_center:
                return ""left""
            else:
                return ""right""
    return ""left"" # default to left if no white pillow is found"
18892037,Is the chair to the left of the vase black or white?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the chair to the left of the vase black or white?"")
    chair_patch = chair_patches[0]
    vase_patches = image_patch.find(""vase"")
    # Question assumes only one vase patch
    if len(vase_patches) == 0:
        return image_patch.simple_query(""Is the chair to the left of the vase black or white?"")
    vase_patch = vase_patches[0]
    if chair_patch.horizontal_center < vase_patch.horizontal_center:
        return chair_patch.best_text_match([""black"", ""white""])
    return vase_patch.best_text_match([""black"", ""white""])"
11322291,"Where in the scene is the TV, on the right or on the left?"," # assumes only one TV patch
    image_patch = ImagePatch(image)
    tv_patches = image_patch.find(""TV"")
    if len(tv_patches) == 0:
        return image_patch.simple_query(""Where in the scene is the TV, on the right or on the left?"")
    if tv_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
2791329,What place was the image taken at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the image taken at?"")"
15440674,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
4205868,Are there any pizza slices or toothpastes in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pizza slice"") or image_patch.exists(""toothpaste""))"
903179,Who wears the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the jeans?"")"
13891749,Are there bags in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag""))"
13508361,Which color does the shirt the man is wearing have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the shirt the man is wearing have?"")"
19100302,What kind of vehicle are the mountains behind of?," # mountain is not a vehicle
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What kind of vehicle are the mountains behind of?"")"
610979,Is the girl to the left of the brown chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of the brown chair?"")"
71052419,Does the bag to the left of the tower look metallic and brown?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag to the left of the tower look metallic and brown?"")"
161048921,Is the white tablecloth to the right or to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white tablecloth to the right or to the left of the man?"")"
18517745,Of what color is the coat the person is wearing?," # returns the color of the coat
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Of what color is the coat the person is wearing?"")
    person_patch = person_patches[0]
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        return image_patch.simple_query(""Of what color is the coat the person is wearing?"")
    coat_patch = coat_patches[0]
    return coat_patch.simple_query(""What color is the coat?"") # crop would include the coat so keep it in the query"
2188073,Who is on the bike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bike?"")"
51060809,Is this a mirror or a bed?," # mirror or bed
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    bed_patches = image_patch.find(""bed"")
    if len(mirror_patches) > 0:
        return ""mirror""
    elif len(bed_patches) > 0:
        return ""bed""
    else:
        return image_patch.simple_query(""Is this a mirror or a bed?"")"
2261745,Is the pepper grinder on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pepper grinder on the left side or on the right?"")"
18990429,Is there a kite on the sand near the water?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a kite on the sand near the water?"")"
13262489,Are there any giraffes or elephants that are not small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe = image_patch.exists(""giraffe"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_giraffe or is_elephant)"
9513332,Is the green tree behind or in front of the stone building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green tree behind or in front of the stone building?"")"
6990184,What is the height of the chair?," # returns a string
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What is the height of the chair?"")
    return chair_patches[0].simple_query(""What is the height of the chair?"") # crop would include the chair so keep it in the query"
17824403,What piece of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is it?"")"
76689,Do you see both bikes and cars there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bike and is_car)"
14256118,Do you think these potatoes are brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think these potatoes are brown?"")"
11302304,What vehicle is to the left of the dark car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the dark car?"")"
6545294,Who is wearing an elbow pad?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing an elbow pad?"")"
3876362,What is the name of the dessert on the tray the girl holds?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the dessert on the tray the girl holds?"")"
189901,Is the open laptop on the left side of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the open laptop on the left side of the photo?"")"
16724593,What is the color of the sweater the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sweater the woman is wearing?"")"
16888502,What kind of vehicle is to the right of the person that is wearing a uniform?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the right of the person that is wearing a uniform?"")"
1137190,Is there either a door or a mirror that is round?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    mirror_patches = image_patch.find(""mirror"")
    for door_patch in door_patches:
        if door_patch.verify_property(""door"", ""round""):
            return ""yes""
    for mirror_patch in mirror_patches:
        if mirror_patch.verify_property(""mirror"", ""round""):
            return ""yes""
    return ""no"""
19253531,What piece of clothing is black?," # returns the first clothing patch that is black
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What piece of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What piece of clothing is black?"")
    return clothing_patch.simple_query(""What piece of clothing is black?"") # if no clothing is black, return the first clothing patch"
7737256,Is the backpack on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack on the left?"")"
7738520,What is common to the dress and the bouquet?," # assumes only one dress and one bouquet
    image_patch = ImagePatch(image)
    dress_patches = image_patch.find(""dress"")
    bouquet_patches = image_patch.find(""bouquet"")
    # Question assumes only one dress and one bouquet patch
    if len(dress_patches) == 0 or len(bouquet_patches) == 0:
        # If no dress or bouquet is found, query the image directly
        return image_patch.simple_query(""What is common to the dress and the bouquet?"")
    dress_patch = dress_patches[0]
    bouquet_patch = bouquet_patches[0]
    common_properties = dress_patch.verify_property(""dress"", ""red"") and bouquet_patch.verify_property(""bouquet"", ""red"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""blue"") and bouquet_patch.verify_property(""bouquet"", ""blue"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""green"") and bouquet_patch.verify_property(""bouquet"", ""green"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""yellow"") and bouquet_patch.verify_property(""bouquet"", ""yellow"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""purple"") and bouquet_patch.verify_property(""bouquet"", ""purple"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""pink"") and bouquet_patch.verify_property(""bouquet"", ""pink"")
    common_properties = common_properties or dress_patch.verify_property(""dress"", ""orange"") and bouquet_patch.verify_property(""bouquet"", ""orange"
111004352,Are there doors in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
16690289,Who is wearing glasses?," # contains a relation (wearing glasses), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing glasses?"")"
8949351,Is the brown horse to the left or to the right of the person that is sitting down?," # contains a relation (left, right, sitting down, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown horse to the left or to the right of the person that is sitting down?"")"
2604681,"In which part of the image is the water glass, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the water glass, the top or the bottom?"")"
2381879,Is that spoon metallic and green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that spoon metallic and green?"")"
12509112,Who is in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the fence?"")"
15596570,Is the poster on the telephone pole?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the poster on the telephone pole?"")"
281297,What is the person that is not sad wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is not sad wearing?"")"
16990568,Is the man on the left or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left or on the right of the picture?"")"
14794573,Which kind of furniture is below the pitcher?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is below the pitcher?"")"
928923,Is the color of the toaster the same as that of the pitcher?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the toaster the same as that of the pitcher?"")"
3526456,What type of furniture has the same color as the wall?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture has the same color as the wall?"")"
3549937,What color do you think the device in the middle is?," # device in the middle
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What color do you think the device in the middle is?"")
    device_patch = device_patches[0]
    if device_patch.horizontal_center == image_patch.horizontal_center:
        return device_patch.simple_query(""What color do you think the device in the middle is?"")
    return device_patch.simple_query(""What color do you think the device is?"") # crop would include the device so keep it in the query"
19167634,What clothing item is green?," # returns the clothing item that is green
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What clothing item is green?"")
    for clothing_patch in clothing_patches:
        is_green = clothing_patch.simple_query(""Is the clothing green?"") == ""yes""
        if is_green:
            return clothing_patch.simple_query(""What clothing item is green?"")
    # If no clothing is green, pick the first clothing
    return clothing_patches[0].simple_query(""What clothing item is green?"")"
5415455,What is before the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is before the grass?"")"
14973394,What is stuck in the ground?," # contains a relation (stuck in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is stuck in the ground?"")"
3705380,Who is on the skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the skateboard?"")"
19520223,Do you think the bowl of the watermelons is white or blue?," # contains a relation (bowl of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the bowl of the watermelons is white or blue?"")"
14940502,Are there both giraffes and fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe = image_patch.exists(""giraffe"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_giraffe and is_fence)"
8807945,Which side of the picture is the bench on?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the bench on?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5778323,What is the color of the wood chair?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the wood chair?"")"
1165548,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
3233347,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
1536907,Does the bread to the left of the man look baked and tan?," # assumes only one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the bread to the left of the man look baked and tan?"")
    man_patch = man_patches[0]
    bread_patches = image_patch.find(""bread"")
    for bread_patch in bread_patches:
        if bread_patch.horizontal_center < man_patch.horizontal_center:
            return bool_to_yesno(bread_patch.verify_property(""bread"", ""baked"") and bread_patch.verify_property(""bread"", ""tan""))
    return ""no"""
6447713,The sky is what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sky is what color?"")"
11506574,Is this cutting board on an ottoman?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this cutting board on an ottoman?"")"
421535,Are there surfboards in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""surfboard""))"
9715109,What is the fruit in the bagel to the right of the placemat called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit in the bagel to the right of the placemat called?"")"
8973199,On which side of the photo is the berry?," # left or right
    image_patch = ImagePatch(image)
    berry_patches = image_patch.find(""berry"")
    # Question assumes only one berry patch
    if len(berry_patches) == 0:
        # If no berry is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the berry?"")
    if berry_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11388899,What is on the chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the chair?"")"
16264193,Are there people to the right of the vehicle on the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the right of the vehicle on the road?"")"
5968721,Who is swinging the bat?," # contains a relation (swinging), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is swinging the bat?"")"
18356114,What color is the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag?"")"
115365,Which side is the ski on?," # left or right
    image_patch = ImagePatch(image)
    ski_patches = image_patch.find(""ski"")
    # Question assumes only one ski patch
    if len(ski_patches) == 0:
        # If no ski is found, query the image directly
        return image_patch.simple_query(""Which side is the ski on?"")
    if ski_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15725562,What is the color of the bowl to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bowl to the right of the man?"")"
10527748,On which side of the photo is the lady?," # left or right
    image_patch = ImagePatch(image)
    lady_patches = image_patch.find(""lady"")
    # Question assumes only one lady patch
    if len(lady_patches) == 0:
        # If no lady is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the lady?"")
    return ""left"" if lady_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1466724,Are there either books or suitcases in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""book"") or image_patch.exists(""suitcase""))"
2985914,Is there an apple to the right of the fence on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an apple to the right of the fence on the left?"")"
7764075,On which side of the image are the balls?," # left or right
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""balls"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no balls are found, query the image directly
        return image_patch.simple_query(""On which side of the image are the balls?"")
    if ball_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8957252,Where is the rug?," # returns the location of the rug
    image_patch = ImagePatch(image)
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""Where is the rug?"")
    return rug_patches[0].simple_query(""Where is the rug?"") # crop would include the rug so keep it in the query"
18145951,What kind of vehicle is on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is on the road?"")"
13175767,Is the umbrella closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella closed or open?"")"
41033585,Are the noodles in the top of the image?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the noodles in the top of the image?"") == ""yes"")"
14650337,On which side is the shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side is the shelf?"")
    return ""left"" if shelf_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
16587733,What is the animal in front of the large television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in front of the large television?"")"
13575898,Are there any umbrellas or dream catchers in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella"") or image_patch.exists(""dream catcher"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
3240344,Are these animals of different types?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different types?"")"
16112518,On which side are the blinds?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the blinds?"")"
16112558,Is the door different in color than the toilet paper?," # assumes only one door and one toilet paper
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    toilet_paper_patches = image_patch.find(""toilet paper"")
    # Question assumes only one door patch and one toilet paper patch
    if len(door_patches) == 0 or len(toilet_paper_patches) == 0:
        # If no door or toilet paper is found, query the image directly
        return image_patch.simple_query(""Is the door different in color than the toilet paper?"")
    door_patch = door_patches[0]
    toilet_paper_patch = toilet_paper_patches[0]
    return bool_to_yesno(door_patch.verify_property(""door"", ""color"") != toilet_paper_patch.verify_property(""toilet paper"", ""color""))"
2574053,The person to the right of the bags is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the right of the bags is wearing what?"")"
1865790,Is the building behind the giraffes above the ground?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind the giraffes above the ground?"")"
14142122,Are there both windows and chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_window and is_chair)"
10869178,What is the baby to the right of the bag sitting in?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the baby to the right of the bag sitting in?"")"
6563002,What kind of animal is standing on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is standing on the grass?"")"
17475227,"Where in this photo is the cup, on the right or on the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the cup, on the right or on the left?"")"
4121061,What is the shape of the coffee table?," # returns the shape of the coffee table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shape of the coffee table?"")"
7409728,Are there bombs or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bomb = image_patch.exists(""bomb"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_bomb or is_pillow)"
11637642,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
4440653,Are there both beds and nightstands in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_nightstand = image_patch.exists(""nightstand"")
    return bool_to_yesno(is_bed and is_nightstand)"
15683724,Do you see either a window or a door that are closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""window"") or image_patch.exists(""door""))"
11566653,Is the shirt different in color than the buoy?," # buoy is a type of object
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt different in color than the buoy?"")
    shirt_patch = shirt_patches[0]
    buoy_patches = image_patch.find(""buoy"")
    # Question assumes only one buoy patch
    if len(buoy_patches) == 0:
        return ""no""
    buoy_patch = buoy_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""color"") != buoy_patch.verify_property(""buoy"", ""color""))"
4349459,What do you think is the vegetable on the counter top that is made of wood called?," # contains a relation (on, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the vegetable on the counter top that is made of wood called?"")"
9247061,Which kind of food is to the left of the peppers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the peppers?"")"
71025570,What animal is lying in the umbrella?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is lying in the umbrella?"")"
17683389,Is there a nightstand to the right of the curtain that looks brown and pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a nightstand to the right of the curtain that looks brown and pink?"")"
9508517,What is filled with drinks?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is filled with drinks?"")"
4189294,What is the food that the avocado is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the avocado is on?"")"
8222659,What is the man to the right of the person wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the person wearing?"")"
6773076,Does the sky look cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""cloudy"") and image_patch.verify_property(""sky"", ""blue""))"
15644082,Which side is the spoon on?," # left or right
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""Which side is the spoon on?"")
    if spoon_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7331864,"Where in this scene is the alcohol, in the bottom or in the top?"," # contains a relation (in the bottom or in the top), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this scene is the alcohol, in the bottom or in the top?"")"
292102,What do the wire and the glove have in common?," # wire and glove are not in the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the wire and the glove have in common?"")"
15256171,Which kind of vehicle is left of the bench?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is left of the bench?"")"
18945026,Do the bed and the blanket have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one bed and one blanket patch
    if len(bed_patches) == 0 or len(blanket_patches) == 0:
        # If no bed or blanket is found, query the image directly
        return image_patch.simple_query(""Do the bed and the blanket have the same color?"")
    bed_patch = bed_patches[0]
    blanket_patch = blanket_patches[0]
    return bool_to_yesno(bed_patch.verify_property(""bed"", ""red"") == blanket_patch.verify_property(""blanket"", ""red""))"
16239431,The person is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person is on what?"")"
19547902,Who is wearing the necklace?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the necklace?"")"
16644994,Is there a helmet in this picture that is blue?," # helmet is a specific object, blue is a property
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is there a helmet in this picture that is blue?"")
    return helmet_patches[0].verify_property(""helmet"", ""blue"")"
3585448,Is there a brown nightstand or table in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a brown nightstand or table in the image?"")"
1886897,Which side is the book on?," # left or right
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Which side is the book on?"")
    if book_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
181656,Do you see a cow in the grass?," # contains a relation (in the grass), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a cow in the grass?"")"
3792956,What is the animal that is lying in the suitcase?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is lying in the suitcase?"")"
318876,Is the metal statue in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal statue in the bottom part of the photo?"")"
2951897,What is the brown item of furniture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown item of furniture called?"")"
11795131,Is the plastic bag to the left of the lemons that are in the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic bag to the left of the lemons that are in the box?"")"
16951774,Are the shelves to the left of the wallet the woman is holding?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shelves to the left of the wallet the woman is holding?"")"
18902552,Is the metal truck to the left or to the right of the red vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal truck to the left or to the right of the red vehicle?"")"
814744,Which kind of furniture is the dog sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the dog sitting on?"")"
5528420,Is the airplane gray and small?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Is the airplane gray and small?"")
    return bool_to_yesno(airplane_patches[0].verify_property(""airplane"", ""gray"") and airplane_patches[0].verify_property(""airplane"", ""small""))"
5723950,What is the tape on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tape on?"")"
16745583,"What fruit is not yellow, the orange or the banana?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is not yellow, the orange or the banana?"")"
9984421,Does the woman's hair look long?," # hair length is a property of the woman, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the woman's hair look long?"")"
167082,What animal is that man looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is that man looking at?"")"
14178777,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
17525084,Does the sink have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sink"", ""black""))"
17312670,Do you see any cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet""))"
13428640,Is there a cup to the right of the fruit inside the blender?," # blender is a container, so ask directly
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""Is there a cup to the right of the fruit inside the blender?"")"
14314703,Who is wearing the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jeans?"")"
970168,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
16781361,Is the man to the left of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of a bag?"")"
8957755,Which kind of furniture is to the left of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the bowl?"")"
1149315,Is the shelf on the left side of the image?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf on the left side of the image?"")"
14759268,Which side is the napkin dispenser on?," # left or right
    image_patch = ImagePatch(image)
    napkin_patches = image_patch.find(""napkin dispenser"")
    # Question assumes only one napkin patch
    if len(napkin_patches) == 0:
        # If no napkin is found, query the image directly
        return image_patch.simple_query(""Which side is the napkin dispenser on?"")
    return ""left"" if napkin_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13303935,Is the old man to the right or to the left of the bowl?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old man to the right or to the left of the bowl?"")"
19841159,The canopy is which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The canopy is which color?"")"
15365547,Is the long building high and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long building high and small?"")"
2424120,Are there cars or trains in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_car or is_train)"
3533799,Is the silver box to the right or to the left of the black book?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver box to the right or to the left of the black book?"")"
16421497,"On which side is the chair, the right or the left?"," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair, the right or the left?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
779966,Where is the bus?," # bus is a vehicle
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the bus?"")"
15506815,How old is the boy that is wearing a shoe?," # contains a relation (wearing a shoe), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old is the boy that is wearing a shoe?"")"
19709500,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4512072,What is on the chair to the left of the bed?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the chair to the left of the bed?"")"
679028,What animal has the same color as the wall?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal has the same color as the wall?"")"
8604322,Are there either any seals or horses that are brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_seal = image_patch.exists(""seal"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_seal or is_horse)"
10987624,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
3244898,Is the white bag to the left or to the right of the person on the right of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bag to the left or to the right of the person on the right of the picture?"")"
13698751,What is the food to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the bag?"")"
4610404,Who is looking at the cell phone?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is looking at the cell phone?"")"
31002275,What color does the water hose have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the water hose have?"")"
18425046,What's the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man doing?"")"
4985796,"Which device is black, the TV or the remote?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which device is black, the TV or the remote?"")"
1497051,What is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the wall?"")"
5453546,Who is kicking the soccer ball on the left of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is kicking the soccer ball on the left of the image?"")"
5997640,What kind of food isn't pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food isn't pink?"")"
17355186,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
8217864,"Which type of clothing is not black, the shirt or the uniform?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is not black, the shirt or the uniform?"")"
1656502,Do the truck and the fence have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the truck and the fence have a different colors?"")) # crop would include the fence so keep it in the query"
2450121,Which kind of vegetable is to the right of the fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the right of the fork?"")"
17200246,Is the sky above an airplane?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky above an airplane?"")"
4309776,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
10670389,Are there both trucks and mirrors in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_truck and is_mirror)"
8469632,Is the glove different in color than the shirt?," # returns yes or no
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Is the glove different in color than the shirt?"")
    glove_patch = glove_patches[0]
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return ""no""
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(glove_patch.verify_property(""glove"", ""different_color"") or shirt_patch.verify_property(""shirt"", ""different_color""))"
1201395,What color are the pants the man is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    man_patch = man_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""What color are the pants the man is wearing?"")
    for pants_patch in pants_patches:
        if pants_patch.horizontal_center > man_patch.horizontal_center:
            return pants_patch.simple_query(""What color are the pants the man is wearing?"")
    return image_patch.simple_query(""What color are the pants the man is wearing?"") # if no pants are found to the right of the man, query the image directly"
13912419,Is that a lamp or a mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a lamp or a mirror?"")"
10926572,Do you see either bags or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""car""))"
10800799,Who is playing with the soccer ball?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing with the soccer ball?"")"
13857252,Is this a bus or a train?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bus or a train?"")"
4474023,Are there both coats and skis in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coat = image_patch.exists(""coat"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_coat and is_ski)"
15634035,Who wears the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the jacket?"")"
16121290,Which side of the photo is the train on?," # left or right
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the train on?"")
    return ""left"" if train_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
7853185,Is there a child to the right of the Wii?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a child to the right of the Wii?"")"
1788589,Are there any black coffee pots or pans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black coffee pot"") or image_patch.exists(""black pan""))"
9833617,What dessert is below the painting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What dessert is below the painting?"")"
13843289,Does the door look closed?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Does the door look closed?"")
    return bool_to_yesno(door_patches[0].verify_property(""door"", ""closed""))"
16506447,Who is on the rug to the left of the man?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the rug to the left of the man?"")"
683901,The person to the left of the controller is holding what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the left of the controller is holding what?"")"
10124559,How's the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How's the weather?"")"
17422449,What are the blue clothing items called?," # returns a list of strings
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What are the blue clothing items called?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.best_text_match([""dress"", ""shirt"", ""pants"", ""skirt"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])
    return image_patch.simple_query(""What are the blue clothing items called?"") # if no blue clothing is found, query the image directly"
8341810,Which kind of device is to the right of the men?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the men?"")"
5808386,Which kind of food is in the bowl?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is in the bowl?"")"
1690665,What is located on top of the bridge?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the bridge?"")"
1326860,Which color does the car that the dog is riding in have?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the car that the dog is riding in have?"")"
15100669,What birds are on the sidewalk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What birds are on the sidewalk?"")"
18321267,What is in the container to the left of the pepper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the container to the left of the pepper?"")"
10703953,What kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is it?"")"
18355426,Is the pole made of the same material as the counter?," # assumes only one pole and counter patch
    image_patch = ImagePatch(image)
    pole_patches = image_patch.find(""pole"")
    counter_patches = image_patch.find(""counter"")
    if len(pole_patches) == 0 or len(counter_patches) == 0:
        return image_patch.simple_query(""Is the pole made of the same material as the counter?"")
    pole_patch = pole_patches[0]
    counter_patch = counter_patches[0]
    return bool_to_yesno(pole_patch.verify_property(""pole"", ""material"") == counter_patch.verify_property(""counter"", ""material""))"
5595129,What color is the small cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the small cow?"")"
3363026,What is the water in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the water in front of?"")"
1796665,What is the size of the mirror?," # returns a string
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""What is the size of the mirror?"")
    mirror_patch = mirror_patches[0]
    return mirror_patch.simple_query(""What is the size of the mirror?"") # crop would include the mirror so keep it in the query"
11612473,Is it an outdoors or indoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors scene?"")"
1423333,Which kind of vehicle is to the left of the van?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the van?"")"
14874139,Is there either any bike or mirror in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike"") or image_patch.exists(""mirror""))"
11154192,Is the house surrounded by the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house surrounded by the fence?"")"
13251581,The truck that is carrying a bike has what color?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The truck that is carrying a bike has what color?"")"
14684169,What animal is on the chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the chair?"")"
12314583,Do the tee shirt and the post have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    tee_shirt_patches = image_patch.find(""tee shirt"")
    # Question assumes only one tee shirt patch
    if len(tee_shirt_patches) == 0:
        # If no tee shirt is found, query the image directly
        return image_patch.simple_query(""Do the tee shirt and the post have a different colors?"")
    post_patches = image_patch.find(""post"")
    # Question assumes only one post patch
    if len(post_patches) == 0:
        return ""no""
    tee_shirt_patch = tee_shirt_patches[0]
    post_patch = post_patches[0]
    return bool_to_yesno(tee_shirt_patch.verify_property(""tee shirt"", ""blue"") != post_patch.verify_property(""post"", ""blue""))"
11218713,What is the name of the animal that is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal that is large?"")"
2262140,Where is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1466991,Which kind of cooking utensil is under the pizza?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of cooking utensil is under the pizza?"")"
19488290,What is the person to the left of the catcher holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the catcher holding?"")"
11187827,Is the red truck on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red truck on the left?"")"
19908982,What is in front of the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the water?"")"
4447695,What animals are standing?," # returns a string of animals
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are standing?"")"
12187103,What device is to the right of the bag on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the bag on the left?"")"
2239109,Is the man wearing a polo shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing a polo shirt?"")"
4945201,Are there any men to the left of the snowboard in the middle?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the snowboard in the middle?"")"
571222,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
8729718,Is that fork to the left of a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that fork to the left of a plate?"")"
12659356,Do you see faucets to the right of the bag on the left side of the image?," # left, right, top, bottom
    image_patch = ImagePatch(image)
    faucet_patches = image_patch.find(""faucets"")
    # Question assumes only one faucet patch
    if len(faucet_patches) == 0:
        # If no faucet is found, query the image directly
        return image_patch.simple_query(""Do you see faucets to the right of the bag on the left side of the image?"")
    for faucet_patch in faucet_patches:
        bag_patches = image_patch.find(""bag"")
        # Question assumes only one bag patch
        if len(bag_patches) == 0:
            # If no bag is found, query the image directly
            return image_patch.simple_query(""Do you see faucets to the right of the bag on the left side of the image?"")
        for bag_patch in bag_patches:
            if bag_patch.horizontal_center < image_patch.horizontal_center:
                if faucet_patch.horizontal_center > bag_patch.horizontal_center:
                    return ""yes""
    return ""no"""
5732472,Is there a bike in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike""))"
1721016,Do you see skis or benches there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skis"") or image_patch.exists(""bench""))"
9946733,What color is the logo?," # returns the color of the logo
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""What color is the logo?"")
    return logo_patches[0].simple_query(""What color is the logo?"") # crop would include the logo so keep it in the query"
14388324,Is the happy person wearing a bikini?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy person wearing a bikini?"")"
5715535,Is the towel in the top part or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel in the top part or in the bottom of the photo?"")"
994592,Do you see buses on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see buses on the street?"")"
12858078,What is the name of the piece of furniture that is to the left of the animal that is looking at the TV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that is to the left of the animal that is looking at the TV?"")"
71032275,Of which color is the ball to the right of the racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color is the ball to the right of the racket?"")"
7320949,Who is holding the banana?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the banana?"")"
391889,Is the color of the shirt different than the sink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the shirt different than the sink?"")"
181023474,"On which side of the photo is the cup, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the cup, the right or the left?"")"
5376871,Are there any toys or faucets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_toy = image_patch.exists(""toy"")
    is_faucet = image_patch.exists(""faucet"")
    return bool_to_yesno(is_toy or is_faucet)"
8759359,How is the cooking utensil that is made of same material as the outlet called?," # outlet is a specific object
    image_patch = ImagePatch(image)
    cooking_utensil_patches = image_patch.find(""cooking utensil"")
    # Question assumes only one cooking utensil patch
    if len(cooking_utensil_patches) == 0:
        # If no cooking utensil is found, query the image directly
        return image_patch.simple_query(""How is the cooking utensil that is made of same material as the outlet called?"")
    cooking_utensil_patch = cooking_utensil_patches[0]
    outlet_patches = image_patch.find(""outlet"")
    # Question assumes only one outlet patch
    if len(outlet_patches) == 0:
        return image_patch.simple_query(""How is the cooking utensil that is made of same material as the outlet called?"")
    outlet_patch = outlet_patches[0]
    return cooking_utensil_patch.simple_query(""How is the cooking utensil that is made of same material as the outlet called?"") # crop would include the outlet so keep it in the query"
6233934,Is the brown horse to the right of the person that the man is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown horse to the right of the person that the man is to the right of?"")"
10874573,Is there a mirror in the image?," # mirror
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mirror""))"
12745302,What the article of clothing that is white is called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What the article of clothing that is white is called?"")"
18240765,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
9131239,Who is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a glove?"")"
1202923,Who is in front of the motorbike on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the motorbike on the right side?"")"
18595310,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
8650978,Is there a child to the left of the Asian boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a child to the left of the Asian boy?"")"
7385110,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
14875344,Does the logo of the airplane have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""airplane logo"", ""white""))"
3375381,Which kind of animal is behind the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is behind the grass?"")"
17637128,Who is wearing the tie?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the tie?"")"
11782413,What cooking utensil is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is it?"")"
4571557,Who do you think is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a glove?"")"
3781949,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
6168697,What device is not open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is not open?"")"
18821845,What's the baseball bat made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the baseball bat made of?"")"
1850470,What are the flowers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the flowers on?"")"
7135955,Which color is the hat on the backpack?," # returns the color of the hat on the backpack
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Which color is the hat on the backpack?"")
    backpack_patch = backpack_patches[0]
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return image_patch.simple_query(""Which color is the hat on the backpack?"")
    hat_patch = hat_patches[0]
    return hat_patch.simple_query(""What color is the hat?"") # crop would include the hat so keep it in the query"
14369491,What is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the logo on?"")"
3963929,Do you see either a black backpack or brief case?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black backpack"") or image_patch.exists(""briefcase"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
16177698,What kind of clothing is small?," # contains a relation (small), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is small?"")"
5336629,What is the pepper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pepper on?"")"
14683480,What animal is looking in the camera?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is looking in the camera?"")"
5974393,What is the item of furniture that is in front of the TV that is above the shelf?," # contains a relation (above, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is in front of the TV that is above the shelf?"")"
16824850,What color does this bench have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does this bench have?"")"
9673578,Are there either any bananas or boxes in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""banana"") or image_patch.exists(""box""))"
9746414,Are there trains or trucks that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_truck = image_patch.exists(""truck"")
    is_train_not_white = image_patch.exists(""train"") and not image_patch.verify_property(""train"", ""white"")
    is_truck_not_white = image_patch.exists(""truck"") and not image_patch.verify_property(""truck"", ""white"")
    return bool_to_yesno(is_train_not_white or is_truck_not_white)"
1318768,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1911012,What vegetables are to the left of the container on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are to the left of the container on the right?"")"
1625666,How big is the flower that is in the vase?," # returns the size of the flower
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""How big is the flower that is in the vase?"")
    return flower_patches[0].simple_query(""How big is the flower that is in the vase?"") # crop would include the vase so keep it in the query"
9704461,What is under the window?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the window?"")"
1196728,What is in the pot?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the pot?"")"
18335310,Does the sky look cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""cloudy"") and image_patch.verify_property(""sky"", ""blue""))"
976656,Who is sitting on the vehicle that looks yellow and blue?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the vehicle that looks yellow and blue?"")"
332155,What is the person that is to the left of the kite wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the kite wearing?"")"
6575004,"Which part of the image is the salmon in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the image is the salmon in, the bottom or the top?"")"
17503398,Which kind of vegetable is to the right of the bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the right of the bottle?"")"
18850196,"How does the hair look, long or short?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the hair look, long or short?"")"
15108129,What is under the picture that is hanging on the wall?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the picture that is hanging on the wall?"")"
14461489,Does the animal that is to the left of the cow seem to be adult or baby?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal that is to the left of the cow seem to be adult or baby?"")"
18441256,What is the sink made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sink made of?"")"
1204761,Is the towel to the left of the other towel blue or white?," # contains a relation (left, right, blue, white, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel to the left of the other towel blue or white?"")"
11566338,What kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is blue?"")"
4616055,Is there any bus on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
9827439,Do the pants have green color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""pants"", ""green""))"
6832211,What animal is on top of the blanket that is on top of the sofa?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on top of the blanket that is on top of the sofa?"")"
1809010,What is on the pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pole?"")"
12260712,Is there a computer mouse or a desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mouse = image_patch.exists(""computer mouse"")
    is_desk = image_patch.exists(""desk"")
    return bool_to_yesno(is_mouse or is_desk)"
15314485,Do you see fire hydrants to the left of the person that is leaning on the stick?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see fire hydrants to the left of the person that is leaning on the stick?"")"
14287501,Is the grass tall?," # assumes only one grass patch
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Is the grass tall?"")
    return bool_to_yesno(grass_patches[0].verify_property(""grass"", ""tall""))"
17652085,Is the drum to the right or to the left of the man on the left side of the image?," # left or right
    image_patch = ImagePatch(image)
    drum_patches = image_patch.find(""drum"")
    # Question assumes only one drum patch
    if len(drum_patches) == 0:
        # If no drum is found, query the image directly
        return image_patch.simple_query(""Is the drum to the right or to the left of the man on the left side of the image?"")
    drum_patch = drum_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the drum to the right or to the left of the man on the left side of the image?"")
    man_patch = man_patches[0]
    if drum_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
7997921,Are these happy women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are these happy women?"") == ""yes"")"
17706077,What animal is the woman watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the woman watching?"")"
10384930,On which side is the white vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white vehicle?"")"
2790459,"What kind of animal is furry, the dog or the cat?"," # contains a relation (furry), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is furry, the dog or the cat?"")"
12532314,On which side of the photo is the small drink?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the small drink?"")"
18909215,On which side of the picture is the dog?," # left or right
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the dog?"")
    return ""left"" if dog_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
17865642,Is the man in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the bottom part or in the top of the image?"")
    man_patch = man_patches[0]
    if man_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
7732457,On which side are the skinny skis?," # left or right
    image_patch = ImagePatch(image)
    skis_patches = image_patch.find(""skis"")
    # Question assumes only one skis patch
    if len(skis_patches) == 0:
        # If no skis are found, query the image directly
        return image_patch.simple_query(""On which side are the skinny skis?"")
    if skis_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16834366,What color is the necktie?," # returns the color of the necktie
    image_patch = ImagePatch(image)
    necktie_patches = image_patch.find(""necktie"")
    # Question assumes only one necktie patch
    if len(necktie_patches) == 0:
        # If no necktie is found, query the image directly
        return image_patch.simple_query(""What color is the necktie?"")
    return necktie_patches[0].simple_query(""What color is the necktie?"")"
2679577,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
9943879,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
5982945,What's the symbol on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the symbol on?"")"
6662926,Does the carpet on the ground look green?," # carpet on the ground
    image_patch = ImagePatch(image)
    carpet_patches = image_patch.find(""carpet"")
    # Question assumes only one carpet patch
    if len(carpet_patches) == 0:
        # If no carpet is found, query the image directly
        return image_patch.simple_query(""Does the carpet on the ground look green?"")
    return bool_to_yesno(carpet_patches[0].verify_property(""carpet"", ""green""))"
19158358,What kind of furniture is the same color as the frame?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the same color as the frame?"")"
9953802,Which kind of appliance is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is large?"")"
5148761,Is the man on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the left side?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
10776924,What are the leaves on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the leaves on?"")"
4282484,What animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is this?"") # crop would include the animal so keep it in the query"
4787924,Does the book that looks red and blue look open or closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the book that looks red and blue look open or closed?"")"
3494730,On which side is the catcher?," # assumes only one catcher
    image_patch = ImagePatch(image)
    catcher_patches = image_patch.find(""catcher"")
    if len(catcher_patches) == 0:
        # If no catcher is found, query the image directly
        return image_patch.simple_query(""On which side is the catcher?"")
    catcher_patch = catcher_patches[0]
    if catcher_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12185857,What is the skier holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the skier holding?"")"
197729,What is the animal in the cage to the left of the person?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the cage to the left of the person?"")"
17694042,Is this table white or blue?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this table white or blue?"")"
1127640,Are there any plates or cups in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate"") or image_patch.exists(""cup""))"
18579776,Where is the man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    return man_patches[0].simple_query(""Where is the man?"")"
19106097,Do the people to the left of the woman appear to be walking?," # contains a relation (left of, walking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the people to the left of the woman appear to be walking?"")"
12438200,The person to the right of the coach is standing on what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the right of the coach is standing on what?"")"
8811647,What is the baby lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the baby lying on?"")"
161062042,Are there either tennis balls or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tennis_ball = image_patch.exists(""tennis ball"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_tennis_ball or is_fence)"
1940709,Does the calf look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the calf look white?"")"
12455594,"In which part of the image is the candle, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the candle, the bottom or the top?"")"
17931846,What is the color of the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What is the color of the jacket?"")
    return jacket_patches[0].simple_query(""What is the color of the jacket?"") # crop would include the jacket so keep it in the query"
18666543,Which kind of device is to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the computer?"")"
6385831,Does the shirt have a different color than the cap of man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt have a different color than the cap of man?"")"
13969606,Is the man in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the top part of the image?"")
    man_patch = man_patches[0]
    if man_patch.vertical_center > image_patch.vertical_center:
        return ""yes""
    else:
        return ""no"""
81015076,What kind of clothing is dark?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is dark?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.simple_query(""What kind of clothing is dark?"") # crop would include the dark clothing so keep it in the query"
6736552,Is the striped chair to the right of the wood coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the striped chair to the right of the wood coffee table?"")"
19937141,Do you see players to the right of the shelf in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see players to the right of the shelf in the top part of the image?"")"
1451784,Is the color of the van different than the crosswalk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the van different than the crosswalk?"")"
18403400,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3195453,What is on the flag?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the flag?"")"
18478108,What color is the box on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the box on the right of the picture?"")"
5953924,Which color is the chair behind the other chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the chair behind the other chair?"")"
946318,Is he on a skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he on a skateboard?"")"
5926363,What animal is grazing on leaves?," # contains a relation (grazing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is grazing on leaves?"")"
51045521,Is the blue blanket in the bottom of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue blanket in the bottom of the picture?"")"
10981135,What is that lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that lamp on?"")"
14626869,Is the yellow taxi in the top part of the photo?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow taxi in the top part of the photo?"")"
5843077,On which side of the photo is the blanket?," # left or right
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the blanket?"")
    return ""left"" if blanket_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1747552,Is the seagull above the cloud white or black?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the seagull above the cloud white or black?"")"
4562862,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
581896,Are there any plates to the right of the cup that is on the table?," # contains a relation (on, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any plates to the right of the cup that is on the table?"")"
11973989,Is this a mirror or a cabinet?," # mirror or cabinet
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    cabinet_patches = image_patch.find(""cabinet"")
    if len(mirror_patches) > 0:
        return ""mirror""
    elif len(cabinet_patches) > 0:
        return ""cabinet""
    else:
        return image_patch.simple_query(""Is this a mirror or a cabinet?"") # if no mirror or cabinet, query the image directly"
19402999,What food item is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food item is large?"")"
9860884,Is the curtain to the right of the peaches on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain to the right of the peaches on the left side?"")"
4260455,Is there a fridge in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fridge""))"
9565776,What kind of furniture is the bottle on?," # bottle is on a table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the bottle on?"")"
11209350,Is the snow on the trees white and bright?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the snow on the trees white and bright?"")"
12779196,Which kind of appliance is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    for appliance_patch in appliance_patches:
        if appliance_patch.simple_query(""Is the appliance white?"") == ""no"":
            return appliance_patch.simple_query(""Which kind of appliance is not white?"")
    return image_patch.simple_query(""Which kind of appliance is not white?"") # if no appliance is not white, query the image directly"
12525485,Is the woman to the left or to the right of the man that is wearing a shirt?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the man that is wearing a shirt?"")"
416617,What is around the people below the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the people below the umbrella?"")"
8185309,On which side of the photo is the young person?," # left or right
    image_patch = ImagePatch(image)
    young_patches = image_patch.find(""young"")
    # Question assumes only one young patch
    if len(young_patches) == 0:
        # If no young person is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the young person?"")
    young_patch = young_patches[0]
    if young_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
161073344,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
16485835,Is the yellow curtain to the left or to the right of the glasses?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow curtain to the left or to the right of the glasses?"")"
101007584,Are there any buses to the right of the bag that looks black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus"") and image_patch.exists(""bag"") and image_patch.find(""bag"")[0].simple_query(""Is the bag black?"") == ""yes"")"
748522,Is the man on the boat that is in the ocean?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the boat that is in the ocean?"")"
13429534,Does the shirt look black?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does the shirt look black?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""black""))"
4121429,What color is the couch to the left of the coffee table?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the couch to the left of the coffee table?"")"
8894095,Which side of the picture is the small vegetable on?," # left or right
    image_patch = ImagePatch(image)
    small_vegetable_patches = image_patch.find(""small vegetable"")
    # Question assumes only one small vegetable patch
    if len(small_vegetable_patches) == 0:
        # If no small vegetable is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the small vegetable on?"")
    small_vegetable_patch = small_vegetable_patches[0]
    if small_vegetable_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7482778,Who is jumping?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is jumping?"")"
820131,Are there any fences or chimneys in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""chimney""))"
8258782,What vehicle is the driver inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the driver inside of?"")"
81020508,What's the snow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the snow on?"")"
13922444,Do you see a cow that is not walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a cow that is not walking?"")"
12473284,What is the animal above the leaves walking through?," # contains a relation (above, walking through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal above the leaves walking through?"")"
17412646,Does the counter have a different color than the door frame?," # returns yes or no
    image_patch = ImagePatch(image)
    counter_patches = image_patch.find(""counter"")
    # Question assumes only one counter patch
    if len(counter_patches) == 0:
        # If no counter is found, query the image directly
        return image_patch.simple_query(""Does the counter have a different color than the door frame?"")
    counter_color = counter_patches[0].simple_query(""What color is the counter?"")
    door_frame_patches = image_patch.find(""door frame"")
    # Question assumes only one door frame patch
    if len(door_frame_patches) == 0:
        # If no door frame is found, query the image directly
        return image_patch.simple_query(""Does the counter have a different color than the door frame?"")
    door_frame_color = door_frame_patches[0].simple_query(""What color is the door frame?"")
    return bool_to_yesno(counter_color != door_frame_color)"
11542705,Is the bus window open?," # bus window open
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""Is the bus window open?"")
    bus_patch = bus_patches[0]
    return bus_patch.verify_property(""bus window"", ""open"")"
4147291,Do you see a kite or a lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a kite or a lamp?"")"
9662340,What clothing item is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is white?"")"
7453521,Is there meat in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""meat""))"
11566047,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
906187,Does the water look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the water look blue?"")"
111018673,Of which color is this table?," # table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color is this table?"")"
1557113,Is there any cup to the left of the wood chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cup to the left of the wood chair?"")"
11688228,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16748055,Do you see any blue balloons or kites?," # balloon or kite
    image_patch = ImagePatch(image)
    is_balloons = image_patch.exists(""balloons"")
    is_kites = image_patch.exists(""kites"")
    return bool_to_yesno(is_balloons or is_kites)"
18159390,Which kind of device is on the coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the coffee table?"")"
19407138,Which kind of clothing is made of leather?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is made of leather?"")"
5271968,Who is wearing the boots?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the boots?"")"
10438406,On which side of the image is the screen?," # left or right
    image_patch = ImagePatch(image)
    screen_patches = image_patch.find(""screen"")
    # Question assumes only one screen patch
    if len(screen_patches) == 0:
        # If no screen is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the screen?"")
    screen_patch = screen_patches[0]
    if screen_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17908142,What kind of device is not long?," # contains a relation (long, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is not long?"")"
7188320,Do you see any trucks or trains that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    train_patches = image_patch.find(""train"")
    for truck_patch in truck_patches:
        if truck_patch.verify_property(""truck"", ""red"") == False:
            return ""yes""
    for train_patch in train_patches:
        if train_patch.verify_property(""train"", ""red"") == False:
            return ""yes""
    return ""no"""
6381497,Is it a tennis game?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it a tennis game?"")"
1733460,Are there either plates or pancakes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_pancake = image_patch.exists(""pancake"")
    return bool_to_yesno(is_plate or is_pancake)"
18529404,Is the bowl on the right side?," # assumes only one bowl patch
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Is the bowl on the right side?"")
    for bowl_patch in bowl_patches:
        if bowl_patch.horizontal_center > image_patch.horizontal_center:
            return ""yes""
    return ""no"""
15252361,On which side of the image is the catcher?," # left or right
    image_patch = ImagePatch(image)
    catcher_patches = image_patch.find(""catcher"")
    # Question assumes only one catcher patch
    if len(catcher_patches) == 0:
        # If no catcher is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the catcher?"")
    if catcher_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2711950,Is the white vehicle to the right or to the left of the red car?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white vehicle to the right or to the left of the red car?"")"
6612394,Is the train's nose black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train's nose black?"")"
17263021,What is the animal lying on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal lying on top of?"")"
1353436,What type of device has the same color as the scarf?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device has the same color as the scarf?"")"
1496302,How long is the road?," # returns a string
    image_patch = ImagePatch(image)
    road_patches = image_patch.find(""road"")
    # Question assumes only one road patch
    if len(road_patches) == 0:
        # If no road is found, query the image directly
        return image_patch.simple_query(""How long is the road?"")
    return road_patches[0].simple_query(""How long is the road?"") # crop would include the road so keep it in the query"
8205229,What is in front of the trees in the park?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees in the park?"")"
10559409,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
15715333,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
18732526,On which side is the bicycle?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""On which side is the bicycle?"")
    return ""left"" if bicycle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
11856641,"In which part of the picture is the animal, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the animal, the top or the bottom?"")"
12675682,Is the bottle to the left of the other bottles made of glass?," # bottle is a general term, so query directly
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the left of the other bottles made of glass?"")
    bottle_patch = bottle_patches[0]
    other_bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one other bottle patch
    if len(other_bottle_patches) == 0:
        return ""yes""
    for other_bottle_patch in other_bottle_patches:
        if other_bottle_patch != bottle_patch and other_bottle_patch.horizontal_center > bottle_patch.horizontal_center:
            return bottle_patch.verify_property(""bottle"", ""glass"")
    return ""yes"""
1012090,Is the material of the street the same as the trash can?," # assumes only one trash can
    image_patch = ImagePatch(image)
    street_patches = image_patch.find(""street"")
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""Is the material of the street the same as the trash can?"")
    for street_patch in street_patches:
        trash_can_patch = trash_can_patches[0]
        if street_patch.simple_query(""What material is the street?"") != trash_can_patch.simple_query(""What material is the trash can?""):
            return ""no""
    return ""yes"""
4183618,Is this a dog or a cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a dog or a cat?"")"
2253634,Is the hydrant to the left or to the right of the car in the middle of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hydrant to the left or to the right of the car in the middle of the photo?"")"
16114489,What is the name of the piece of furniture that is white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that is white?"")"
769469,Who pulls luggage?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who pulls luggage?"")"
12286520,What is the device behind the person that is below the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device behind the person that is below the sky?"")"
1483205,What is the bottle made of?," # bottle is a common object
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""What is the bottle made of?"")
    return bottle_patches[0].simple_query(""What is the bottle made of?"") # crop would include the bottle so keep it in the query"
5570823,What fruit is to the left of the mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the left of the mirror?"")"
273551,Are the glass and the spoon made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the glass and the spoon made of the same material?"")"
18959185,What kind of vehicle has the same color as the sign?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle has the same color as the sign?"")"
1885114,What is the animal in the field that is presented in the scene?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the field that is presented in the scene?"")"
10599201,Is the house near the telephone pole white and large?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house near the telephone pole white and large?"")"
16622214,Are the toys on the shelf to the right of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the toys on the shelf to the right of the bird?"")"
14810203,Who is on the platform?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the platform?"")"
19920065,Are there flags or ropes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_flag or is_rope)"
818909,What's the mirror in?," # mirror is in a room
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""What's the mirror in?"")
    return mirror_patches[0].simple_query(""What's the mirror in?"") # crop would include the room so keep it in the query"
18403660,What device does the person that is not sad hold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device does the person that is not sad hold?"")"
3393654,Who is wearing skis?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing skis?"")"
91033135,Does the bike that is not large look red?," # contains a relation (is not large), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bike that is not large look red?"")"
13862557,Is the pine tree near the man tall and immature?," # immature is a property of pine trees
    image_patch = ImagePatch(image)
    pine_patches = image_patch.find(""pine tree"")
    # Question assumes only one pine patch
    if len(pine_patches) == 0:
        # If no pine is found, query the image directly
        return image_patch.simple_query(""Is the pine tree near the man tall and immature?"")
    for pine_patch in pine_patches:
        is_near_man = (pine_patch.horizontal_center > image_patch.horizontal_center)
        is_tall = (pine_patch.simple_query(""Is the pine tree tall?"") == ""yes"")
        is_immature = (pine_patch.simple_query(""Is the pine tree immature?"") == ""yes"")
        return bool_to_yesno(is_near_man and is_tall and is_immature)"
4660419,Where is the boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the boat?"")"
31044460,Are there mouse pads or ice cubes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mouse_pad = image_patch.exists(""mouse pad"")
    is_ice_cube = image_patch.exists(""ice cube"")
    return bool_to_yesno(is_mouse_pad or is_ice_cube)"
13534371,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
7920355,"Which part of the picture is the chair in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the picture is the chair in, the top or the bottom?"")"
636138,Is the tray on the right of the picture?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tray on the right of the picture?"")"
12955330,What animal is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the girl holding?"")"
17815997,Are there dish soaps or tennis rackets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dish_soap = image_patch.exists(""dish soap"")
    is_tennis_racket = image_patch.exists(""tennis racket"")
    return bool_to_yesno(is_dish_soap or is_tennis_racket)"
99425,What is covered by the white snow?," # snow is white
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the white snow?"")"
8310379,Are there animals below the large tree?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animals"") and image_patch.exists(""large tree"")) # contains a relation (below, above, etc), so ask directly"
11439240,Does the canopy look tan or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the canopy look tan or blue?"")"
18108548,Which side is the house on?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""Which side is the house on?"")
    house_patch = house_patches[0]
    if house_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11626836,What is the food on the dish?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the dish?"")"
2465096,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
14596869,Does the white plate appear to be curved and square?," # white plate
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Does the white plate appear to be curved and square?"")
    for plate_patch in plate_patches:
        is_curved = plate_patch.verify_property(""plate"", ""curved"")
        is_square = plate_patch.verify_property(""plate"", ""square"")
        return bool_to_yesno(is_curved and is_square)"
5646446,Does the remote control to the right of the other remote control look black?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the remote control to the right of the other remote control look black?"")"
10340790,On which side of the photo is the black bag?," # left or right
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the black bag?"")
    if black_bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8204297,Are there both lettuce and cheese in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lettuce = image_patch.exists(""lettuce"")
    is_cheese = image_patch.exists(""cheese"")
    return bool_to_yesno(is_lettuce and is_cheese)"
14290504,What's on the tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the tray?"")"
7699878,What food is to the right of the black bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the right of the black bag?"")"
18155097,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
889142,Do you see surfboards or tools?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""surfboard"") or image_patch.exists(""tool""))"
11959486,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
7888432,Are there any pillows on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow on bed"")) # crop would include the bed so keep it in the query"
13468788,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
528420,Is the man to the left or to the right of the boy?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the boy?"")"
8596837,What color is the fence?," # returns the color of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What color is the fence?"")
    return fence_patches[0].simple_query(""What color is the fence?"")"
9387340,Are the printers in the bottom part or in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the printers in the bottom part or in the top of the photo?"")"
8682173,What does the player wear?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the player wear?"")"
71044048,Does the animal to the right of the woman wear a boot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal to the right of the woman wear a boot?"")"
11649979,Are there mugs or bottles that are made of glass?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    is_mug = image_patch.exists(""mug"")
    is_bottle = image_patch.exists(""bottle"")
    is_mug_glass = False
    is_bottle_glass = False
    if is_mug:
        mug_patches = image_patch.find(""mug"")
        for mug_patch in mug_patches:
            is_mug_glass = mug_patch.verify_property(""mug"", ""glass"")
    if is_bottle:
        bottle_patches = image_patch.find(""bottle"")
        for bottle_patch in bottle_patches:
            is_bottle_glass = bottle_patch.verify_property(""bottle"", ""glass"")
    return bool_to_yesno(is_mug_glass or is_bottle_glass)"
16795571,What color does the bucket in the middle have?," # bucket in the middle
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""What color does the bucket in the middle have?"")
    bucket_patch = bucket_patches[0]
    if bucket_patch.horizontal_center == image_patch.horizontal_center:
        return bucket_patch.simple_query(""What color does the bucket in the middle have?"")
    return bucket_patch.simple_query(""What color does the bucket have?"") # crop would include the bucket so keep it in the query"
1083469,Is the blue car to the right of the vehicle that is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue car to the right of the vehicle that is white?"")"
1775363,How big are the trees?," # returns a string
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""How big are the trees?"")
    return tree_patches[0].simple_query(""How big are the trees?"") # crop would include the tree so keep it in the query"
2348143,Is there a keyboard or a remote control that is not black?," # keyboard or remote control
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    remote_control_patches = image_patch.find(""remote control"")
    # Question assumes only one keyboard or remote control patch
    if len(keyboard_patches) == 0 and len(remote_control_patches) == 0:
        # If no keyboard or remote control is found, query the image directly
        return image_patch.simple_query(""Is there a keyboard or a remote control that is not black?"")
    for keyboard_patch in keyboard_patches:
        if keyboard_patch.verify_property(""keyboard"", ""black"") == False:
            return ""keyboard""
    for remote_control_patch in remote_control_patches:
        if remote_control_patch.verify_property(""remote control"", ""black"") == False:
            return ""remote control""
    return ""no"""
11506991,Does the platter under the cake look large and white?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the platter under the cake look large and white?"")"
1724359,Is the house in the top part?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house in the top part?"")"
14907732,What is on the frame?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the frame?"")"
11662735,Is the field brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the field brown?"")"
51009878,Are there mirrors to the left of the animal with the frisbee?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there mirrors to the left of the animal with the frisbee?"")"
10550408,Where is the cat standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the cat standing?"")"
9918,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
1830731,Is the man riding a bike?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man riding a bike?"")"
12921749,Is the window closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window closed or open?"")"
561207,Is there a woman to the left of the man that is carrying a bottle?," # contains a relation (left of, carrying, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the left of the man that is carrying a bottle?"")"
9774939,What is the item of furniture in the large bedroom?," # contains a relation (in the large bedroom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture in the large bedroom?"")"
5354060,Does the old device appear to be on?," # assumes only one device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""old device"")
    if len(device_patches) == 0:
        return image_patch.simple_query(""Does the old device appear to be on?"")
    return bool_to_yesno(device_patches[0].verify_property(""old device"", ""on""))"
1726897,Is there a chair by the wall?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a chair by the wall?"")"
4494719,Who is wearing gloves?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing gloves?"")"
3367841,Does the floor look white and dirty?," # dirty is a property of the floor
    image_patch = ImagePatch(image)
    floor_patches = image_patch.find(""floor"")
    # Question assumes only one floor patch
    if len(floor_patches) == 0:
        # If no floor is found, query the image directly
        return image_patch.simple_query(""Does the floor look white and dirty?"")
    return bool_to_yesno(floor_patches[0].verify_property(""floor"", ""white"") and floor_patches[0].verify_property(""floor"", ""dirty""))"
171044359,What are the curtains before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the curtains before?"")"
7655743,What animal is young?," # contains a relation (young), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is young?"")"
13396215,What kind of animal is on the dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the dirt?"")"
1824022,What kind of baked good is to the left of the food on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is to the left of the food on the right?"")"
1422679,What is that woman in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that woman in front of?"")"
10507497,What is the person to the left of the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the man holding?"")"
8396812,What animal is the police officer in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the police officer in front of?"")"
6388303,Do you see both doors and windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
18195056,Are there both a zebra and a dinosaur in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_zebra = image_patch.exists(""zebra"")
    is_dinosaur = image_patch.exists(""dinosaur"")
    return bool_to_yesno(is_zebra and is_dinosaur)"
1318256,Is the bookcase to the left of a closet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bookcase to the left of a closet?"")"
14700151,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
1931957,What kind of baked good is to the right of the pepperoni?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is to the right of the pepperoni?"")"
12640125,"Where was the image taken, a park or a farm?"," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the image taken, a park or a farm?"")"
11506118,Is the chalkboard to the right or to the left of the man in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chalkboard to the right or to the left of the man in this scene?"")"
1351009,"In which part of the photo is the berry, the top or the bottom?"," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the berry, the top or the bottom?"")"
16556919,Which side of the photo is the black bag on?," # left or right
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the black bag on?"")
    if black_bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
447474,What is the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pillow on?"")"
5971389,Are the red raspberries on the right?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the red raspberries on the right?"")"
8111990,Are there any pictures or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_picture = image_patch.exists(""picture"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_picture or is_traffic_light)"
14882069,What color is the towel?," # returns the color of the towel
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""What color is the towel?"")
    return towel_patches[0].simple_query(""What color is the towel?"") # crop would include the towel so keep it in the query"
18471098,Do you see pillows to the right of the entertainment center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see pillows to the right of the entertainment center?"")"
2157159,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
439682,Is the umbrella to the right of the person closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the right of the person closed or open?"")"
16708659,What vehicle is the train station behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the train station behind of?"")"
1478167,What are the onions on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the onions on?"")"
12670453,Who is holding the scissors?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the scissors?"")"
11699338,Where is the animal?," # assumes only one animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    if len(animal_patches) == 0:
        return image_patch.simple_query(""Where is the animal?"")
    return animal_patches[0].simple_query(""Where is the animal?"")"
11427506,What is the color of the vehicle at the station?," # contains a relation (at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the vehicle at the station?"")"
2993701,Are there black fences or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_fence or is_train)"
15779880,What is in the water that is in the vase?," # contains a relation (in the water that is in the vase), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the water that is in the vase?"")"
16609996,Are there any carrots on the bag on the left?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any carrots on the bag on the left?"")"
8900837,Are there either napkins or forks in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""napkin"") or image_patch.exists(""fork""))"
7542371,How large is the white container?," # returns a string
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""How large is the white container?"")
    return container_patches[0].simple_query(""How large is the white container?"") # crop would include the container so keep it in the query"
7591521,Do you see any red fences in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red fence"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5303381,Who is in front of the trunk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the trunk?"")"
6514601,Is the silver device to the left or to the right of the person on the left?," # left of the person on the left
    image_patch = ImagePatch(image)
    silver_patches = image_patch.find(""silver device"")
    # Question assumes only one silver patch
    if len(silver_patches) == 0:
        # If no silver device is found, query the image directly
        return image_patch.simple_query(""Is the silver device to the left or to the right of the person on the left?"")
    for silver_patch in silver_patches:
        person_patches = image_patch.find(""person"")
        # Question assumes only one person patch
        if len(person_patches) == 0:
            # If no person is found, query the image directly
            return image_patch.simple_query(""Is the silver device to the left or to the right of the person on the left?"")
        for person_patch in person_patches:
            if person_patch.horizontal_center < image_patch.horizontal_center:
                if silver_patch.horizontal_center < person_patch.horizontal_center:
                    return ""left""
                else:
                    return ""right""
    return ""left"""
3974824,What is the wall in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wall in front of?"")"
14928489,Is there a brown chair or table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a brown chair or table?"")"
1012594,Are all these animals of the same type?," # contains a relation (all, some, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are all these animals of the same type?"")"
19286776,"Where in the photo is the brown bread, on the right or on the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the photo is the brown bread, on the right or on the left?"")"
11854500,Is the topping of the cupcake on a cupcake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the topping of the cupcake on a cupcake?"")"
5419064,Is the zebra in front of the tree both wild and striped?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra in front of the tree both wild and striped?"")"
3490663,What piece of furniture is to the left of the screen?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the left of the screen?"")"
11694217,Which kind of animal is playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is playing?"")"
9167466,Which kind of animal is the wall behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the wall behind of?"")"
17793818,On which side are the books?," # left or right
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""On which side are the books?"")
    book_patch = book_patches[0]
    if book_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17494212,What is the person wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person wearing?"")"
8887403,What is the man carrying?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man carrying?"")"
3912086,Do you see sheep or spiders there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see sheep or spiders there?"")"
1780444,Do you see either a fence or a can?," # contains a disjunction (or), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""can""))"
14187163,What food item is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food item is not large?"")"
1673389,Does the striped shirt have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""striped shirt"", ""black""))"
6603239,Does that hair look long?," # hair is a tricky one, as it can be long or short
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does that hair look long?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""long""))"
4198336,Are there any strollers to the left of the motorbike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stroller"") and image_patch.find(""stroller"")[0].horizontal_center < image_patch.find(""motorbike"")[0].horizontal_center)"
4498975,Is the van behind a bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the van behind a bus?"")"
19483303,What is the plane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plane in front of?"")"
141004703,Does the shirt have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""blue""))"
5800564,Are there bikes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike""))"
19335042,On which side is the metal pan?," # left or right
    image_patch = ImagePatch(image)
    metal_pan_patches = image_patch.find(""metal pan"")
    # Question assumes only one metal pan patch
    if len(metal_pan_patches) == 0:
        # If no metal pan is found, query the image directly
        return image_patch.simple_query(""On which side is the metal pan?"")
    metal_pan_patch = metal_pan_patches[0]
    horizontal_center = metal_pan_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6382334,What length is the girl's hair?," # returns a string
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""What length is the girl's hair?"")
    return girl_patches[0].simple_query(""What length is the girl's hair?"") # crop would include the hair so keep it in the query"
369254,What shape is the yellow vegetable?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What shape is the yellow vegetable?"")"
12820073,Who is wearing the elbow pad?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the elbow pad?"")"
10985435,Which kind of fruit is to the left of the salad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is to the left of the salad?"")"
14836936,Which kind of appliance is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is it?"")"
2150225,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
2689476,What is the name of the appliance on the counter?," # returns the name of the appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What is the name of the appliance on the counter?"")
    return appliance_patches[0].simple_query(""What is the name of the appliance on the counter?"") # crop would include the counter so keep it in the query"
14664867,What color is the dress?," # returns the color of the dress
    image_patch = ImagePatch(image)
    dress_patches = image_patch.find(""dress"")
    # Question assumes only one dress patch
    if len(dress_patches) == 0:
        # If no dress is found, query the image directly
        return image_patch.simple_query(""What color is the dress?"")
    return dress_patches[0].simple_query(""What color is the dress?"")"
7822054,Who is posing?," # contains a relation (posing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is posing?"")"
16607500,On which side of the photo is the oven?," # left or right
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the oven?"")
    return ""left"" if oven_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
6553,Are there either any rugs or bicycles in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""rug"") or image_patch.exists(""bicycle"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
15190822,What animal is to the left of the mat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the mat?"")"
11829934,Is the large mirror hanging over the sink?," # mirror is hanging over the sink
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is the large mirror hanging over the sink?"")
    mirror_patch = mirror_patches[0]
    return mirror_patch.simple_query(""Is the large mirror hanging over the sink?"") # crop would include the sink so keep it in the query"
16750323,Which kind of food isn't potted?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food isn't potted?"")"
2591685,Are there any helmets or waste baskets?," # helmet or waste basket
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_waste_basket = image_patch.exists(""waste basket"")
    return bool_to_yesno(is_helmet or is_waste_basket)"
13607658,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
9185475,Are there any large fences or pots in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"") and image_patch.simple_query(""Is the fence large?"") == ""yes""
    is_pot = image_patch.exists(""pot"") and image_patch.simple_query(""Is the pot large?"") == ""yes""
    return bool_to_yesno(is_fence or is_pot)"
3164917,What is the person that is not dry wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is not dry wearing?"")"
1812594,Is the bag yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag yellow?"")"
10341971,What is the piece of furniture that is in front of the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is in front of the door?"")"
10373694,What kind of animal has the same color as the shirt?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal has the same color as the shirt?"")"
17608691,"Which part of the image is the planter in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the image is the planter in, the bottom or the top?"")"
6998704,Are there dispensers or pots in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dispenser = image_patch.exists(""dispenser"")
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_dispenser or is_pot)"
383596,Is the blue van to the right of the people the shop is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue van to the right of the people the shop is behind of?"")"
978470,What is in the vase that is not short?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the vase that is not short?"")"
7794917,Which kind of furniture is to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the television?"")"
19556579,What's the cat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the cat on?"")"
1961869,Is the white couch to the right or to the left of the wood coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white couch to the right or to the left of the wood coffee table?"")"
2663142,What is the hat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the hat on?"")"
7700012,What kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is it?"")"
13271841,Do you see any cabinets to the right of the clock that is on the front of the church?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cabinets to the right of the clock that is on the front of the church?"")"
10303141,Is the cup on the left side or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup on the left side or on the right of the picture?"")"
19516204,What is this item of furniture called?," # returns the name of the object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this item of furniture called?"")"
1917180,Are there any cats or blankets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_blanket = image_patch.exists(""blanket"")
    return bool_to_yesno(is_cat or is_blanket)"
13335666,What is the person that is to the left of the chair holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the chair holding?"")"
377680,Who is in front of the large window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the large window?"")"
14124924,Are there brown bowls or towels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_bowl = image_patch.exists(""brown bowl"")
    is_towel = image_patch.exists(""towel"")
    return bool_to_yesno(is_brown_bowl or is_towel)"
2216057,Is the statue gold and large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue gold and large?"")"
51048111,On which side of the picture is the picture?," # picture is the picture
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the picture?"")"
3500082,Is the dresser to the left of the closet wooden and black?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dresser to the left of the closet wooden and black?"")"
12780263,Are there any tents or skateboards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tent = image_patch.exists(""tent"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_tent or is_skateboard)"
7150401,Are there both chairs and bags in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_chair and is_bag)"
854548,How long do you think is the brown hair?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How long do you think is the brown hair?"")"
1785103,Are there any horses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse""))"
16963544,What's the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What's the clock on?"")
    return clock_patches[0].simple_query(""What's the clock on?"")"
8578744,On which side of the picture is the fire hydrant?," # left or right
    image_patch = ImagePatch(image)
    firehydrant_patches = image_patch.find(""fire hydrant"")
    # Question assumes only one firehydrant patch
    if len(firehydrant_patches) == 0:
        # If no firehydrant is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the fire hydrant?"")
    firehydrant_patch = firehydrant_patches[0]
    horizontal_center = image_patch.horizontal_center
    if firehydrant_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
13823375,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
5346955,Is the picture to the left or to the right of the young man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture to the left or to the right of the young man?"")"
19642878,Do you see purple scarves or hats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see purple scarves or hats?"")"
6975040,What animal is in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the fence?"")"
15411238,Is there any lettuce in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lettuce""))"
17632710,Is there a zebra in the dry field?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a zebra in the dry field?"")"
652210,Is the plate in the top part of the picture?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in the top part of the picture?"")"
17910089,Do the tent and the canopy have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the tent and the canopy have a different colors?"")) # crop would include the colors so keep it in the query"
19671823,On which side of the image is the bicycle?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bicycle?"")
    return ""left"" if bicycle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
654470,Do you see a bat or a soccer ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bat or a soccer ball?"")"
3781999,What is in front of the building the fence is around of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building the fence is around of?"")"
15166895,Is the small bench in the bottom part?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small bench in the bottom part?"")"
9675524,Is the sink of the kitchen made of porcelain?," # contains a relation (kitchen, sink, porcelain), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sink of the kitchen made of porcelain?"")"
11408375,Who is inside the restaurant?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is inside the restaurant?"")"
7547739,Of what color is the ball the wine glass is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the ball the wine glass is to the right of?"")"
8286881,Does the bench look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bench look blue?"")"
18356537,What is the fork to the right of the other fork made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fork to the right of the other fork made of?"")"
3942210,Do the charger and the blanket have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    charger_patches = image_patch.find(""charger"")
    # Question assumes only one charger patch
    if len(charger_patches) == 0:
        # If no charger is found, query the image directly
        return image_patch.simple_query(""Do the charger and the blanket have the same color?"")
    charger_patch = charger_patches[0]
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        return ""yes""
    blanket_patch = blanket_patches[0]
    return bool_to_yesno(charger_patch.verify_property(""charger"", ""blue"") == blanket_patch.verify_property(""blanket"", ""blue""))"
2768734,Does the mirror that is not little seem to be silver?," # mirror is not little
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Does the mirror that is not little seem to be silver?"")
    for mirror_patch in mirror_patches:
        is_little = mirror_patch.verify_property(""mirror"", ""little"")
        if not is_little:
            return bool_to_yesno(mirror_patch.verify_property(""mirror"", ""silver""))"
13718203,What is the piece of furniture that is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is made of wood?"")"
101059968,Is the boy to the right of the striped bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the right of the striped bag?"")"
13548778,On which side is the boy?," # left or right
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""On which side is the boy?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14656352,What animal do you think is on the skateboard that is made of wood?," # contains a relation (on, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal do you think is on the skateboard that is made of wood?"")"
9788329,Are there any children in this picture that are walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""child"") and image_patch.exists(""walking"")) # assumes only one child and one walking patch"
8947535,What are the leaves on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the leaves on?"")"
17600293,Who is walking on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking on the grass?"")"
12964302,Who is standing on the boat?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing on the boat?"")"
5892334,Does the sofa look antique and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    sofa_patches = image_patch.find(""sofa"")
    # Question assumes only one sofa patch
    if len(sofa_patches) == 0:
        # If no sofa is found, query the image directly
        return image_patch.simple_query(""Does the sofa look antique and blue?"")
    return bool_to_yesno(sofa_patches[0].verify_property(""sofa"", ""antique"") and sofa_patches[0].verify_property(""sofa"", ""blue""))"
7111074,Do the elephants have large size and brown color?," # returns yes or no
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only one elephant patch
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch.simple_query(""Do the elephants have large size and brown color?"")
    return bool_to_yesno(elephant_patches[0].verify_property(""elephant"", ""large"") and elephant_patches[0].verify_property(""elephant"", ""brown""))"
16430318,Does the sheep to the left of the other sheep seem to be walking?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sheep to the left of the other sheep seem to be walking?"")"
11189227,Is the stroller to the left of a child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stroller to the left of a child?"")"
5112543,What color is the helmet to the left of the umpire?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the helmet to the left of the umpire?"")"
9928897,Which side of the picture is the pillow on?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the pillow on?"")
    pillow_patch = pillow_patches[0]
    if pillow_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9600718,Which kind of furniture is purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is purple?"")"
6766080,What's on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the wall?"")"
778982,What color do you think the hair band is?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the hair band is?"")"
11862521,"How does the clear glass look, empty or full?"," # contains a relation (empty or full), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the clear glass look, empty or full?"")"
8634896,Are there dogs or goats in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_goat = image_patch.exists(""goat"")
    return bool_to_yesno(is_dog or is_goat)"
16851389,What kind of fruit is to the left of the container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the left of the container?"")"
6338995,Are there any TVs or pictures?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tv = image_patch.exists(""TV"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_tv or is_picture)"
1285351,What kind of fruit is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is shown?"")"
1455329,Is the wood fence on the right side or on the left of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood fence on the right side or on the left of the picture?"")"
1629733,On which side is the bunny?," # left or right
    image_patch = ImagePatch(image)
    bunny_patches = image_patch.find(""bunny"")
    # Question assumes only one bunny patch
    if len(bunny_patches) == 0:
        # If no bunny is found, query the image directly
        return image_patch.simple_query(""On which side is the bunny?"")
    return ""left"" if bunny_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
6240749,Is the clock to the right of a shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock to the right of a shelf?"")"
9549112,Does the fence to the right of the helmet look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the fence to the right of the helmet look white?"")
    helmet_patch = helmet_patches[0]
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        return ""no""
    for fence_patch in fence_patches:
        if fence_patch.horizontal_center > helmet_patch.horizontal_center:
            return bool_to_yesno(fence_patch.verify_property(""fence"", ""white""))
    return ""no"""
1079185,What is the brown bear wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown bear wearing?"")"
612368,What's located on top of the spoon?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the spoon?"")"
184723,Is the pillow to the left or to the right of the chair in the middle of the image?," # image is assumed to be centered horizontally
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the left or to the right of the chair in the middle of the image?"")
    pillow_patch = pillow_patches[0]
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the left or to the right of the chair in the middle of the image?"")
    chair_patch = chair_patches[0]
    if pillow_patch.horizontal_center < chair_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8713132,Is the tall bookshelf to the left or to the right of the books?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tall bookshelf to the left or to the right of the books?"")"
71017699,Is the dirt red?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dirt red?"")"
6995238,Is the couch to the left of a cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch to the left of a cabinet?"")"
15399545,Is the sky gray and clear?," # gray and clear are mutually exclusive
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""gray"") and image_patch.verify_property(""sky"", ""clear""))"
9988412,What is the food to the right of the sandwich on the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the sandwich on the plate?"")"
6207438,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15755058,Is there either a red can or cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_can = image_patch.exists(""red can"")
    is_red_cup = image_patch.exists(""red cup"")
    return bool_to_yesno(is_red_can or is_red_cup)"
889235,Do you see any apples to the left of the fruit in the basket?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any apples to the left of the fruit in the basket?"")"
14724832,Are there both a door and a window in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
8111985,Is the car to the left or to the right of the bike?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the left or to the right of the bike?"")"
1572195,Is the picture on the wall both rectangular and brown?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""picture on the wall"", ""rectangular"") and image_patch.verify_property(""picture on the wall"", ""brown""))"
51020483,On which side of the image is the pizza?," # left or right
    image_patch = ImagePatch(image)
    pizza_patches = image_patch.find(""pizza"")
    # Question assumes only one pizza patch
    if len(pizza_patches) == 0:
        # If no pizza is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the pizza?"")
    return ""left"" if pizza_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
5778967,Is the computer behind a remote control?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer behind a remote control?"")"
9179253,Is the lettuce to the left or to the right of the veggies that are on the spoon?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lettuce to the left or to the right of the veggies that are on the spoon?"")"
2841244,Is there a surfboard in the ocean?," # contains a relation (in the ocean), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a surfboard in the ocean?"")"
5822924,What is in front of the person that the snow is under of?," # contains a relation (under, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the person that the snow is under of?"")"
1634389,"How do the buildings look, large or small?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How do the buildings look, large or small?"")"
12138469,Is that laptop both silver and open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that laptop both silver and open?"")"
19710044,Is the bag orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag orange?"")"
8409975,What does the person in the ocean used?," # contains a relation (in the ocean), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person in the ocean used?"")"
4662489,Who is wearing the vest?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the vest?"")"
6792532,Does the animal's mane seem to be white?," # mane is a property of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Does the animal's mane seem to be white?"")
    return bool_to_yesno(animal_patches[0].verify_property(""animal"", ""white""))"
15627000,What piece of furniture is below the sink?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is below the sink?"")"
11428173,Are there any napkins under the saucer to the right of the spoon?," # contains a relation (under, to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any napkins under the saucer to the right of the spoon?"")"
11933526,What is in front of the stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the stove?"")"
10920953,Is there a white cup or can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white cup or can?"")"
12929636,What animal is the water near the vine surrounding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the water near the vine surrounding?"")"
141018426,Is the shirt gray or red?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt gray or red?"")"
14196589,Are the horses to the right of the man white or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the horses to the right of the man white or brown?"")"
7532857,What is the device that sits on the floor?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that sits on the floor?"")"
8298791,Is there a woman to the right of the man the bag is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the right of the man the bag is to the left of?"")"
13679813,"Which color is the jacket, pink or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the jacket, pink or black?"")"
18357556,Are there any purple soaps or napkins in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""soap"") or image_patch.exists(""napkin"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1405893,"On which side of the image is the blue bag, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the blue bag, the right or the left?"")"
16741114,Do the skis have a different color than the shoes?," # returns yes or no
    image_patch = ImagePatch(image)
    skis_patches = image_patch.find(""skis"")
    # Question assumes only one skis patch
    if len(skis_patches) == 0:
        # If no skis are found, query the image directly
        return image_patch.simple_query(""Do the skis have a different color than the shoes?"")
    skis_color = skis_patches[0].simple_query(""What color are the skis?"")
    shoes_patches = image_patch.find(""shoes"")
    # Question assumes only one shoes patch
    if len(shoes_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""Do the skis have a different color than the shoes?"")
    shoes_color = shoes_patches[0].simple_query(""What color are the shoes?"")
    return bool_to_yesno(skis_color != shoes_color)"
12823432,Do you see dumplings to the left of the saucer in the bottom part of the image?," # dumplings are in the bottom part of the image
    image_patch = ImagePatch(image)
    dumpling_patches = image_patch.find(""dumplings"")
    # Question assumes only one dumpling patch
    if len(dumpling_patches) == 0:
        # If no dumpling is found, query the image directly
        return image_patch.simple_query(""Do you see dumplings to the left of the saucer in the bottom part of the image?"")
    for dumpling_patch in dumpling_patches:
        if dumpling_patch.horizontal_center < image_patch.horizontal_center and dumpling_patch.vertical_center < image_patch.vertical_center:
            return ""yes""
    return ""no"""
61040518,What type of fruit is to the right of the strawberry in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fruit is to the right of the strawberry in the middle?"")"
669129,What drink is to the left of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is to the left of the plate?"")"
13672748,Do you see tourists near the green tree?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see tourists near the green tree?"")"
12795600,The man is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is wearing what?"")"
4980898,Is the stove to the left of the mixer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove to the left of the mixer?"")"
17198215,How is the stained appliance called?," # appliance is stained
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""How is the stained appliance called?"")
    return appliance_patches[0].simple_query(""How is the stained appliance called?"") # crop would include the stain so keep it in the query"
9166570,What is on the hotdog bun?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the hotdog bun?"")"
18165921,Is the box in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box in the bottom part of the picture?"")"
11117493,Is the pot on the left part?," # left part is the left half of the image
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Is the pot on the left part?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
8786491,Are there either wooden doors or cabinets in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wooden_door = image_patch.exists(""wooden door"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_wooden_door or is_cabinet)"
356861,Is the color of the lamp different than the sock?," # returns yes or no
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Is the color of the lamp different than the sock?"")
    sock_patches = image_patch.find(""sock"")
    # Question assumes only one sock patch
    if len(sock_patches) == 0:
        # If no sock is found, query the image directly
        return image_patch.simple_query(""Is the color of the lamp different than the sock?"")
    return bool_to_yesno(lamp_patches[0].simple_query(""What is the color of the lamp?"") != sock_patches[0].simple_query(""What is the color of the sock?""))"
4748412,What's the man posing with?," # contains a relation (posing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man posing with?"")"
11787159,Is the color of the sky different than the airplane?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""Is the color of the sky different than the airplane?"")
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        return ""no""
    airplane_patch = airplane_patches[0]
    return bool_to_yesno(sky_patches[0].simple_query(""What is the color of the sky?"") != airplane_patch.simple_query(""What is the color of the airplane?""))"
5642419,What is the zebra in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the zebra in front of?"")"
8192403,Who is wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a cap?"")"
9394296,Who is holding the tennis racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the tennis racket?"")"
585105,On which side of the photo is the snowboard?," # left or right
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the snowboard?"")
    return ""left"" if snowboard_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1483120,On which side of the image is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the woman?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14197267,Is the white water behind the surf board the logo is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white water behind the surf board the logo is on?"")"
14995631,Is the green wall behind the brown suitcase near the paper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green wall behind the brown suitcase near the paper?"")"
972443,Do you see either white windows or doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white window"") or image_patch.exists(""white door"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
421968,"Where in the picture is the fence, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the fence, in the bottom or in the top?"")"
19912832,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
3270458,What is the woman dragging?," # contains a relation (dragging), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman dragging?"")"
14132398,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
8569846,What is the color of the coffee mug that is in front of the vase?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the coffee mug that is in front of the vase?"")"
13409760,Who is riding the bicycle on the left?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the bicycle on the left?"")"
5789126,Is the bedspread on a coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bedspread on a coffee table?"")"
1046749,Who is wearing a vest?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a vest?"")"
949561,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
11239913,On which side is the silver fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side is the silver fork?"")
    for fork_patch in fork_patches:
        if fork_patch.horizontal_center < image_patch.horizontal_center:
            return ""left""
        else:
            return ""right"""
12235941,Is she to the left or to the right of the pillow?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she to the left or to the right of the pillow?"")"
91022104,Do you see any plates to the left of the blue egg?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any plates to the left of the blue egg?"")"
9936590,Is the fence to the left or to the right of the bench on the right side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the left or to the right of the bench on the right side?"")"
13433652,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
14510716,What device is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is black?"")"
1184687,What item of furniture is to the left of the remote?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the left of the remote?"")"
3392830,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
6341787,Is the tablecloth checkered and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    tablecloth_patches = image_patch.find(""tablecloth"")
    # Question assumes only one tablecloth patch
    if len(tablecloth_patches) == 0:
        # If no tablecloth is found, query the image directly
        return image_patch.simple_query(""Is the tablecloth checkered and blue?"")
    return bool_to_yesno(tablecloth_patches[0].verify_property(""tablecloth"", ""checkered"") and tablecloth_patches[0].verify_property(""tablecloth"", ""blue""))"
7456658,Are there both a mirror and a trash bag in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_trash_bag = image_patch.exists(""trash bag"")
    return bool_to_yesno(is_mirror and is_trash_bag)"
12883535,Which side of the picture are the people on?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""Which side of the picture are the people on?"")
    if people_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2132082,Does the bowl sit next to the bed the pillow is on?," # contains a relation (next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bowl sit next to the bed the pillow is on?"")"
1765631,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
15775279,Is the sheep in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sheep in the top part of the image?"")"
14577717,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
933887,What is the color of the lips?," # returns the color of the lips
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the lips?"")"
7325869,Does the tomato to the right of the cheese look cooked and large?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tomato to the right of the cheese look cooked and large?"")"
8462133,Is the gray rug to the right or to the left of the man on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray rug to the right or to the left of the man on the left?"")"
6206480,What type of bag do you think is the cellphone on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of bag do you think is the cellphone on?"")"
13290271,What is the color of the utensil that is to the right of the mozzarella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the utensil that is to the right of the mozzarella?"")"
18447407,Does the man's hair seem to be brown or blond?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man's hair seem to be brown or blond?"")"
1322383,What is the animal that is to the right of the fence on the left called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is to the right of the fence on the left called?"")"
17490465,On which side of the image is the olive?," # left or right
    image_patch = ImagePatch(image)
    olive_patches = image_patch.find(""olive"")
    # Question assumes only one olive patch
    if len(olive_patches) == 0:
        # If no olive is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the olive?"")
    olive_patch = olive_patches[0]
    if olive_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14282840,Are there drawers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""drawer""))"
748025,Are there both a collar and a dog in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is-collar = image_patch.exists(""collar"")
    return bool_to_yesno(is_dog and is-collar)"
440175,Are there any women or police officers in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_police_officer = image_patch.exists(""police officer"")
    return bool_to_yesno(is_woman or is_police_officer)"
9976067,Are there white dishwashers or microwaves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_dishwasher = image_patch.exists(""white dishwasher"")
    is_microwave = image_patch.exists(""microwave"")
    return bool_to_yesno(is_white_dishwasher or is_microwave)"
11853442,What is the bird on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bird on?"")"
9106238,Is there a dining table near the chair on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a dining table near the chair on the right of the image?"")"
6795266,What color is the boat on the water?," # contains a relation (on the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the boat on the water?"")"
111006094,What's in the tray?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the tray?"")"
8403338,Is the man walking or lying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man walking or lying?"")"
852926,Are there both guitars and shelves in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_guitar = image_patch.exists(""guitar"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_guitar and is_shelf)"
6865520,"Where in this photo is the rug, on the right or on the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the rug, on the right or on the left?"")"
17943505,What item of furniture is to the right of the can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the right of the can?"")"
10917626,What color does the curtain that is to the left of the other curtain have?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the curtain that is to the left of the other curtain have?"")"
19126655,Is the wagon to the right of the motorcycle that is not small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wagon to the right of the motorcycle that is not small?"")"
15577501,What is the color of that floor?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of that floor?"")"
15274097,Is there a backpack to the right of the woman that is sitting on the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a backpack to the right of the woman that is sitting on the bench?"")"
7171829,What kind of animal is above the pole?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is above the pole?"")"
1957180,Which side of the image is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8126552,Of what color are the trees that the elephant is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color are the trees that the elephant is in?"")"
7884685,Are there any red couches or beds in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red couch"") or image_patch.exists(""red bed"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
12506093,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
357712,What does the man hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man hold?"")"
11984964,Does the carved bear that is to the left of the figurine look gray and small?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the carved bear that is to the left of the figurine look gray and small?"")"
6435273,Who is reading a book?," # contains a relation (reading), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is reading a book?"")"
17220018,What color does the bottle the shrimp is to the left of have?," # bottle is to the left of the shrimp
    image_patch = ImagePatch(image)
    shrimp_patches = image_patch.find(""shrimp"")
    # Question assumes only one shrimp patch
    if len(shrimp_patches) == 0:
        # If no shrimp is found, query the image directly
        return image_patch.simple_query(""What color does the bottle the shrimp is to the left of have?"")
    for shrimp_patch in shrimp_patches:
        bottle_patches = image_patch.find(""bottle"")
        for bottle_patch in bottle_patches:
            if bottle_patch.horizontal_center < shrimp_patch.horizontal_center:
                return bottle_patch.simple_query(""What color does the bottle the shrimp is to the left of have?"")
    # If no bottle is to the left of the shrimp, query the image directly
    return image_patch.simple_query(""What color does the bottle the shrimp is to the left of have?"")"
121015223,Which kind of food is to the right of the bacon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the bacon?"")"
6836218,What is that boat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that boat on?"")"
10201032,Are there either any fences or skis?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_fence or is_ski)"
12982882,Are the oven and the blender the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the oven and the blender the same color?"")) # crop would include the objects so keep them in the query"
10201832,What color do you think the ropes have?," # ropes are not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the ropes have?"")"
3266146,On which side of the image is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3794772,Which kind of furniture is not dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not dark?"")"
10233833,Is the soup on the right or on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soup on the right or on the left side of the image?"")"
5732678,Is the skateboard in the bottom part of the photo?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skateboard in the bottom part of the photo?"")"
9360771,Are there any umbrellas on the sand?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella"") and image_patch.exists(""sand""))"
14832476,Is there a truck or a bus in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_truck or is_bus)"
1920341,Is the white toilet to the left or to the right of him?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white toilet to the left or to the right of him?"")"
2887010,Are there any fences or kites in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_fence or is_kite)"
1920418,The pine is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The pine is where?"")"
5450709,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
10900781,Do you see either a open window or door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""open window"") or image_patch.exists(""door"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1754265,Are there players or rackets?," # tennis
    image_patch = ImagePatch(image)
    is_player = image_patch.exists(""player"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_player or is_racket)"
8688264,How wide are the trees the giraffe is above?," # returns a string
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch.simple_query(""How wide are the trees the giraffe is above?"")
    giraffe_patch = giraffe_patches[0]
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        return ""no""
    tree_patch = tree_patches[0]
    return tree_patch.simple_query(""How wide are the trees the giraffe is above?"") # crop would include the giraffe so keep it in the query"
6918482,Are there any skateboards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skateboard""))"
666875,Is the curtain to the right or to the left of the cat that is not down?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Is the curtain to the right or to the left of the cat that is not down?"")
    for cat_patch in cat_patches:
        if cat_patch.verify_property(""cat"", ""down"") == False:
            for curtain_patch in curtain_patches:
                if curtain_patch.horizontal_center > cat_patch.horizontal_center:
                    return ""right""
    return ""left"""
141001720,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
1761140,What is the container on?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""What is the container on?"")
    return container_patches[0].simple_query(""What is the container on?"")"
121004191,What is on the elephant?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the elephant?"")"
7282625,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
1309777,Which side is the fence on?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Which side is the fence on?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2245173,Are the white tables under the canopy?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white tables under the canopy?"")"
4941942,What's the bag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bag on?"")"
11306741,Is the kid wearing a helmet?," # helmet is a property of the kid
    image_patch = ImagePatch(image)
    kid_patches = image_patch.find(""kid"")
    # Question assumes only one kid patch
    if len(kid_patches) == 0:
        # If no kid is found, query the image directly
        return image_patch.simple_query(""Is the kid wearing a helmet?"")
    return kid_patches[0].verify_property(""kid"", ""helmet"")"
3989966,What is the athlete holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the athlete holding?"")"
15726458,What animal is to the left of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the monitor?"")"
8297463,Do you see a bag to the left of the man that is wearing shorts?," # contains a relation (left of, wearing) so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bag to the left of the man that is wearing shorts?"")"
4543014,What kind of furniture are the books lying on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture are the books lying on?"")"
4162798,Which kind of appliance is to the right of the wine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is to the right of the wine?"")"
51038805,Is the ball on the right or on the left part?," # left and right are relative to the center of the image
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch.simple_query(""Is the ball on the right or on the left part?"")
    if ball_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
17296026,Are there both a door and a window in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
19802769,Is the person to the left of the drawer wearing a helmet?," # helmet is not in the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person to the left of the drawer wearing a helmet?"")
    for person_patch in person_patches:
        drawer_patches = image_patch.find(""drawer"")
        for drawer_patch in drawer_patches:
            if drawer_patch.horizontal_center > person_patch.horizontal_center:
                return ""no""
    return ""yes"""
81010598,What is the device that is to the right of the mirror that is on the wall called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the mirror that is on the wall called?"")"
151019926,What is on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cake?"")"
4691187,Are there either any umbrellas or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_umbrella or is_bag)"
2429331,Are the magazines to the right of bananas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""magazines"") and image_patch.exists(""bananas""))"
4790557,Is the woman to the right of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of a bag?"")"
8179459,Is the woman to the left or to the right of the person that is sitting inside the train?," # contains a relation (left, right, inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the person that is sitting inside the train?"")"
19802940,Are both the drawer that is to the left of the box and the drawer to the right of the telephone made of aluminum?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""drawer that is to the left of the box and is made of aluminum"") and image_patch.exists(""drawer that is to the right of the telephone and is made of aluminum""))"
10868475,Are there bottles in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle""))"
10442487,The train car is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The train car is in front of what?"")"
91031161,Is she to the right or to the left of the container beneath the screen?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she to the right or to the left of the container beneath the screen?"")"
14583194,Are the computer monitor to the right of the box and the monitor to the right of the box both silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the computer monitor to the right of the box silver?"") == ""yes"" and image_patch.simple_query(""Is the monitor to the right of the box silver?"") == ""yes"")"
1514621,Is the mobile phone that looks black covering a man?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mobile phone that looks black covering a man?"")"
1471434,Is the tower orange or silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower orange or silver?"")"
31055106,On which side are the cabinets?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the cabinets?"")"
1731242,Which side is the small container on?," # left or right
    image_patch = ImagePatch(image)
    small_container_patches = image_patch.find(""small container"")
    # Question assumes only one small container patch
    if len(small_container_patches) == 0:
        # If no small container is found, query the image directly
        return image_patch.simple_query(""Which side is the small container on?"")
    small_container_patch = small_container_patches[0]
    if small_container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8608381,What food is to the left of the plate on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the left of the plate on the right?"")"
1999507,Do you see either any white hats or scarves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white hat"") or image_patch.exists(""scarf"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
19950396,Are there giraffes in the zoo?," # contains a relation (in the zoo), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"")) # assumes giraffe is a giraffe in the zoo"
1534394,What is the vegetable that is to the right of the baby that is sitting in the stroller?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is to the right of the baby that is sitting in the stroller?"")"
1948686,Is the thin bed to the right of a toilet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the thin bed to the right of a toilet?"")"
19328672,Are there pizzas near the knife in the center of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pizza"") and image_patch.exists(""knife""))"
7583130,Is the water clear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water clear?"")"
4142292,Is the beard red or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beard red or black?"")"
1777519,Is the man on the left side or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left side or on the right of the picture?"")"
3614336,What is covered in fog?," # contains a relation (covered in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered in fog?"")"
9250200,What is the vegetable on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable on the plate?"")"
191966,What is the piece of furniture that the book is on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the book is on called?"")"
18311117,What is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl holding?"")"
2314466,Do you see any tomatoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tomato""))"
14543278,What device is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the man?"")"
9799025,Which color is the pillow in the middle?," # returns the color of the pillow in the middle
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which color is the pillow in the middle?"")
    middle_index = len(pillow_patches) // 2
    return pillow_patches[middle_index].simple_query(""Which color is the pillow in the middle?"")"
6699661,Are there any books to the right of the drawer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""book"") and image_patch.exists(""drawer""))"
3853167,Is the screen in the bottom or in the top of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen in the bottom or in the top of the picture?"")"
7797936,What piece of furniture is not tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is not tan?"")"
201000,The scarf has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The scarf has which color?"")"
1308915,Is the phone in the top part or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone in the top part or in the bottom of the picture?"")"
19700049,On which side of the picture is the racket?," # left or right
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the racket?"")
    return ""left"" if racket_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1010787,Do you see black televisions or mobile phones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see black televisions or mobile phones?"")"
8697552,What animal is on the platform?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the platform?"")"
12352131,What is the vehicle that is parked next to the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is parked next to the building?"")"
15359384,Is this a large dog?," # returns yes or no
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Is this a large dog?"")
    return bool_to_yesno(dog_patches[0].verify_property(""dog"", ""large""))"
6181182,Are there mouse pads or shelves in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mouse_pad = image_patch.exists(""mouse pad"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_mouse_pad or is_shelf)"
7755537,What is the color of the bowl?," # returns the color of the bowl
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""What is the color of the bowl?"")
    return bowl_patches[0].simple_query(""What is the color of the bowl?"") # crop would include the bowl so keep it in the query"
3504381,"On which side of the photo are the people, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo are the people, the left or the right?"")"
174955,What color does the SUV that is not antique have?," # contains a relation (is not antique), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the SUV that is not antique have?"")"
14984891,What is the vehicle that is parked next to the side walk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is parked next to the side walk?"")"
11461562,Is the car dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car dark?"")"
1316628,What toy is on the couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is on the couch?"")"
6681888,"In which part of the image are the people, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the people, the bottom or the top?"")"
16765301,Which kind of vegetable is on the hot dog?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on the hot dog?"")"
10318789,"Which type of clothing is blue, the shirt or the hat?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is blue, the shirt or the hat?"")"
51023331,Is the color of the shirt the same as the wetsuit?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    wetsuit_patches = image_patch.find(""wetsuit"")
    # Question assumes only one shirt and one wetsuit patch
    if len(shirt_patches) == 0 or len(wetsuit_patches) == 0:
        # If no shirt or wetsuit is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt the same as the wetsuit?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    wetsuit_color = wetsuit_patches[0].simple_query(""What is the color of the wetsuit?"")
    return bool_to_yesno(shirt_color == wetsuit_color)"
31071704,Do you see ice makers or boxes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ice maker"") or image_patch.exists(""box""))"
8476656,How old is the girl on the field?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old is the girl on the field?"")"
19150704,What device is to the left of the pens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the pens?"")"
679250,Which kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is on the plate?"")"
2240189,What do you think is the man in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man in?"")"
8990408,Is this a table or a bed?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a table or a bed?"")"
16106005,Do you see monkeys inside the museum?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see monkeys inside the museum?"")"
3467152,On which side is the wine glass?," # left or right
    image_patch = ImagePatch(image)
    wine_glass_patches = image_patch.find(""wine glass"")
    # Question assumes only one wine glass patch
    if len(wine_glass_patches) == 0:
        # If no wine glass is found, query the image directly
        return image_patch.simple_query(""On which side is the wine glass?"")
    return ""left"" if wine_glass_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13883107,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
1434844,Is there a dog near the towel that is to the right of the toy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a dog near the towel that is to the right of the toy?"")"
1573749,Are there glasses or dry-erase boards in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_dry_eraser = image_patch.exists(""dry-erase board"")
    return bool_to_yesno(is_glasses or is_dry_eraser)"
5323429,What kind of device is to the left of the toys the kite is to the right of?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the toys the kite is to the right of?"")"
10646688,What's the lid made of?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the lid made of?"")"
15905941,What is on the trunk that looks white?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the trunk that looks white?"")"
15304472,What toy is to the right of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is to the right of the keyboard?"")"
2186828,Are there men to the left of the people that are walking in the street?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the people that are walking in the street?"")"
6512705,Which kind of food is in the bowl?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is in the bowl?"")"
12365767,Is the ball yellow or silver?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball yellow or silver?"")"
378633,Are there any towels that are green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel with green color"")) # crop would include the green color so keep it in the query"
9994730,Are there either buses or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_bus or is_mirror)"
10328121,On which side of the picture are the palm trees?," # left or right
    image_patch = ImagePatch(image)
    palm_patches = image_patch.find(""palm tree"")
    # Question assumes only one palm patch
    if len(palm_patches) == 0:
        # If no palm is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the palm trees?"")
    if palm_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18916342,Is the guy to the right or to the left of the bag on the right side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the right or to the left of the bag on the right side of the photo?"")"
2804555,"What color is the book that is to the right of the other books, purple or orange?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the book that is to the right of the other books, purple or orange?"")"
10213550,Do you see any motorbikes in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorbike""))"
7300322,Is the person wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing jeans?"")"
11399415,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
1868046,Are there either animals or squirrels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_animal = image_patch.exists(""animal"")
    is_squirrel = image_patch.exists(""squirrel"")
    return bool_to_yesno(is_animal or is_squirrel)"
5575484,Is the man on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the right of the image?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center > image_patch.horizontal_center / 2:
        return ""yes""
    return ""no"""
19317960,What is the animal in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the field?"")"
2184466,Who is sitting on the bench made of wood?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the bench made of wood?"")"
6601177,Does the mouse to the right of the bookcase seem to be white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the mouse to the right of the bookcase seem to be white?"")"
181039053,What is the train made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the train made of?"")"
14332318,Is it an indoors or outdoors picture?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors picture?"")"
33858,Which color does the shirt have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the shirt have?"")"
6628634,Where is that grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that grass?"")"
15885234,"On which side of the picture is the blue car, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the blue car, the right or the left?"")"
6388471,Is the blue bus to the right or to the left of the lady the bun is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue bus to the right or to the left of the lady the bun is to the left of?"")"
13899962,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11642496,What is the device that is under the desk the phone is on?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is under the desk the phone is on?"")"
6107483,Is the person to the left or to the right of the picture?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person to the left or to the right of the picture?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7248529,Which color is the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the umbrella?"")"
19112612,On which side of the image is the crate?," # left or right
    image_patch = ImagePatch(image)
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        # If no crate is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the crate?"")
    if crate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2780943,Which kind of food is to the right of the pan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the pan?"")"
1134768,Where is the airplane?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Where is the airplane?"")
    return airplane_patches[0].simple_query(""Where is the airplane?"") # crop would include the airplane so keep it in the query"
16433104,Is the cereal in the bottom of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cereal in the bottom of the image?"")"
474509,What kind of furniture is not beige?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is not beige?"")"
14466274,Are there either any candles or dish soaps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_candle = image_patch.exists(""candle"")
    is_dish_soap = image_patch.exists(""dish soap"")
    return bool_to_yesno(is_candle or is_dish_soap)"
11296509,What is the hose on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the hose on?"")"
1338158,Is there a pan to the left of the cooking utensil in the center?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pan to the left of the cooking utensil in the center?"")"
7486623,What is the gray clothing item?," # gray clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the gray clothing item?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing gray?"") == ""yes"":
            return clothing_patch.simple_query(""What is the clothing?"")
    return clothing_patch.simple_query(""What is the gray clothing item?"")"
7897185,Are there any drawers to the right of the dishwasher that is to the right of the trashcan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any drawers to the right of the dishwasher that is to the right of the trashcan?"")"
12522724,On which side of the picture is the racket?," # left or right
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the racket?"")
    if racket_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10798727,Is the racket on the right side or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket on the right side or on the left?"")"
2126482,What is in front of the sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the sign?"")"
1463438,Which kind of aircraft is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is it?"")"
4731901,Who is in the bathroom?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the bathroom?"")"
6981452,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
5821543,Are there clocks or windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_clock = image_patch.exists(""clock"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_clock or is_window)"
5599182,Is this a train or a bus?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a train or a bus?"")"
10405369,What's the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the pillow on?"")"
16321382,Does the shelf look wooden or metallic?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shelf look wooden or metallic?"")"
14875031,Which piece of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which piece of furniture is white?"")"
10525699,What is under the tree?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the tree?"")"
91031929,Is the zebra to the right of a giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra to the right of a giraffe?"")"
14188393,On which side of the image is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8165849,Which side is the flag on?," # left or right
    image_patch = ImagePatch(image)
    flag_patches = image_patch.find(""flag"")
    # Question assumes only one flag patch
    if len(flag_patches) == 0:
        # If no flag is found, query the image directly
        return image_patch.simple_query(""Which side is the flag on?"")
    if flag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18436412,"What type of furniture is not ornate, the bed or the table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is not ornate, the bed or the table?"")"
3548091,What is the woman to the left of the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the left of the man holding?"")"
15497978,Are there either chairs or computer mice?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_computer_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_chair or is_computer_mouse)"
171005777,What is the animal that is standing next to the zebras that are standing in the grass?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is standing next to the zebras that are standing in the grass?"")"
19623664,The forest that is not sparse has what color?," # contains a relation (not sparse), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The forest that is not sparse has what color?"")"
168341,What is the monkey on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the monkey on?"")"
1628049,Is this oven closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this oven closed or open?"")"
171045163,Which side of the picture is the mirror on?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the mirror on?"")
    return ""right"""
10519491,What's located on top of the dome?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the dome?"")"
14528557,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
11944943,What place was the picture taken at?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the picture taken at?"")"
10313265,Is the cap blue?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cap blue?"")"
17628091,Are there any doors or windows that are made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    window_patches = image_patch.find(""window"")
    for door_patch in door_patches:
        if door_patch.verify_property(""door"", ""metal""):
            return ""yes""
    for window_patch in window_patches:
        if window_patch.verify_property(""window"", ""metal""):
            return ""yes""
    return ""no"""
5942941,Who do you think wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think wears a shirt?"")"
19429477,How tall is the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the grass?"")"
4310032,Where is that man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is that man?"")
    return man_patches[0].simple_query(""Where is that man?"") # crop would include the man so keep it in the query"
16209879,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
623518,Are there any boys to the right of the skateboard that is in the center of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any boys to the right of the skateboard that is in the center of the picture?"")"
13196114,Is there any door in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
16441611,"Which color is that tail, orange or green?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that tail, orange or green?"")"
13403122,Is the helmet on the left or on the right of the image?," # helmet is on the right
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet on the left or on the right of the image?"")
    return ""right"""
14968835,What is in front of the animal that is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the animal that is in front of the building?"")"
273270,What is the color of the grass that looks short?," # contains a relation (looks short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the grass that looks short?"")"
7283411,Is the sky beautiful and blue?," # sky is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky beautiful and blue?"")"
16585583,Is the oven to the left of a stove?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the oven to the left of a stove?"")"
8741662,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
2781578,How big is the train?," # returns a string
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""How big is the train?"")
    return train_patches[0].simple_query(""How big is the train?"") # crop would include the train so keep it in the query"
101043593,Is the frisbee to the right or to the left of the man that wears a jacket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee to the right or to the left of the man that wears a jacket?"")"
1533227,Are the coffee cups on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the coffee cups on the left?"")"
1860037,What is the horse on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse on?"")"
6360157,What is in the bowl of ketchup?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl of ketchup?"")"
11495024,"What type of device is the woman to the right of the microphone looking at, a television or a cell phone?"," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is the woman to the right of the microphone looking at, a television or a cell phone?"")"
10916871,What kind of food is on top of the plate?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on top of the plate?"")"
8282436,What is the pitcher made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pitcher made of?"")"
191744,The animal in front of the monitor is looking at what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The animal in front of the monitor is looking at what?"")"
13603295,On which side of the image is the food?," # left or right
    image_patch = ImagePatch(image)
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        # If no food is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the food?"")
    if food_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6302954,What is located on top of the fence made of wood?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the fence made of wood?"")"
18316111,What color is the bus to the left of the fence?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bus to the left of the fence?"")"
963832,Are these animals all of the same type?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are these animals all of the same type?"")
    first_animal = animal_patches[0]
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What kind of animal is this?"") != first_animal.simple_query(""What kind of animal is this?""):
            return ""no""
    return ""yes"""
6571834,"In which part of the photo is the kettle, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the kettle, the bottom or the top?"")"
15760707,Are there any kites?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite""))"
4930707,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
2272691,What is the bear in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bear in front of?"")"
7656345,Are there both doors and windows in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
10896266,Are there both a bed and a table in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_bed and is_table)"
928009,The man to the right of the woman is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the right of the woman is wearing what?"")"
9242114,Are the women in the bottom?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the women in the bottom?"")"
15827085,Does the kite by the door seem to be colorful and small?," # contains a relation (by, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the kite by the door seem to be colorful and small?"")"
545603,What device isn't open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device isn't open?"")"
2752637,What is the vegetable on the plate that is on the left of the picture?," # contains a relation (on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable on the plate that is on the left of the picture?"")"
5374596,Does the house to the right of the tower seem to be yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the house to the right of the tower seem to be yellow?"")"
12724593,What's the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the fence made of?"")"
279966,Are all the animals the same species?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are all the animals the same species?"")
    species = animal_patches[0].simple_query(""What species is the animal?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What species is the animal?"") != species:
            return ""no""
    return ""yes"""
2376527,What does the male person to the left of the car ride?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the male person to the left of the car ride?"")"
3860736,Who is wearing the necklace?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the necklace?"")"
18145288,What color does the elbow pad in the bottom have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the elbow pad in the bottom have?"")"
16761297,Do the shorts look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the shorts look blue?"")"
1681084,Are the trousers khaki or tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trousers khaki or tan?"")"
19327721,Is there a cellphone or a remote control in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cellphone = image_patch.exists(""cellphone"")
    is_remote_control = image_patch.exists(""remote control"")
    return bool_to_yesno(is_cellphone or is_remote_control)"
16402475,Which piece of furniture is in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which piece of furniture is in the photo?"")"
721654,Are the pots to the right of the beans the fork is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pots to the right of the beans the fork is to the left of?"")"
4945114,What is the color of the snow in front of the men?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the snow in front of the men?"")"
14234267,What device is to the left of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the pillow?"")"
2812621,Are there curtains or towels in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_curtain = image_patch.exists(""curtain"")
    is_towel = image_patch.exists(""towel"")
    return bool_to_yesno(is_curtain or is_towel)"
1652031,Is the car in the top part or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the top part or in the bottom of the photo?"")"
19427377,"In which part is the woman, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the woman, the bottom or the top?"")"
5822971,What color is the backpack the person wears?," # returns the color of the backpack
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""What color is the backpack the person wears?"")
    return backpack_patches[0].simple_query(""What color is the backpack the person wears?"") # crop would include the backpack so keep it in the query"
1689145,What is the black item of clothing in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black item of clothing in this image?"")"
2274229,What is the field surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the field surrounded by?"")"
5884035,How big is the spoon the bowl is holding?," # returns the size of the spoon
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""How big is the spoon the bowl is holding?"")
    return spoon_patches[0].simple_query(""How big is the spoon the bowl is holding?"") # crop would include the bowl so keep it in the query"
16965023,Who is wearing the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jeans?"")"
17195562,Who is wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a cap?"")"
9233802,On which side of the picture is the drink?," # left or right
    image_patch = ImagePatch(image)
    drink_patches = image_patch.find(""drink"")
    # Question assumes only one drink patch
    if len(drink_patches) == 0:
        # If no drink is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the drink?"")
    if drink_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16686689,"What place could this be, a beach or a zoo?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be, a beach or a zoo?"")"
71048853,Is the chair different in color than the vase?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair different in color than the vase?"")"
5994388,Is the device on the wall large or is it small?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the device on the wall large or is it small?"")"
13651558,Does the onion that is to the right of the cheese have green color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the onion that is to the right of the cheese have green color?"")"
13502469,Does the car have a different color than the swan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the car have a different color than the swan?"")"
151037976,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
176004,What cooking utensil is in front of the banana peel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is in front of the banana peel?"")"
15518535,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
1665114,What animal is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the man on?"")"
15784966,Is the sky clear or overcast?," # clear or overcast
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky clear or overcast?"")"
19201835,Do the cars on the street seem to be driving?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the cars on the street seem to be driving?"")"
443498,Is that shirt green or light blue?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that shirt green or light blue?"")"
498165,Which side of the image is the red vehicle on?," # left or right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the red vehicle on?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17266371,Are there boys to the left of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy"") and image_patch.find(""box"")[0].horizontal_center > image_patch.horizontal_center)"
7396892,What is the person with the dog wearing?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person with the dog wearing?"")"
9252796,What does the person that to the right of the hydrant ride?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person that to the right of the hydrant ride?"")"
10765906,What is the color of the couch that is to the left of the other couch?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the couch that is to the left of the other couch?"")"
16526333,Do you see a fence or a kite in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""kite""))"
6802253,Are there both a blanket and a pillow in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket"") and image_patch.exists(""pillow""))"
15557210,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
7806624,What animal is presented in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is presented in this picture?"")"
131050050,"What type of clothing is not white, the coat or the blouse?"," # contains a relation (not, and, or, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is not white, the coat or the blouse?"")"
8456769,What is the name of the vehicle to the right of the backpack that the man is holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vehicle to the right of the backpack that the man is holding?"")"
8839818,What vehicle is to the left of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the bag?"")"
2560343,What do you think is holding the white thing that hangs on the stove?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is holding the white thing that hangs on the stove?"")"
304572,Is the cup to the right or to the left of the plate he is to the right of?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the right or to the left of the plate he is to the right of?"")"
499451,What is the fruit on the plate of the fruit?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit on the plate of the fruit?"")"
219277,Is the blue sky clear or cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue sky clear or cloudy?"")"
5986177,Does the man on the couch seem to be walking?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man on the couch seem to be walking?"")"
2911204,Is there a plate or a brownie in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_brownie = image_patch.exists(""brownie"")
    return bool_to_yesno(is_plate or is_brownie)"
8198701,What kind of animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is large?"")"
17561095,"In which part is the telephone, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the telephone, the bottom or the top?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
16673122,What comes from the black train?," # contains a relation (from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What comes from the black train?"")"
17381997,What do you think is the appliance under the counter the paper towels are on?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the appliance under the counter the paper towels are on?"")"
4175870,What kind of vehicle is not light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.simple_query(""Is the vehicle light?"") == ""no"":
            return vehicle_patch.simple_query(""What kind of vehicle is not light?"")
    return image_patch.simple_query(""What kind of vehicle is not light?"") # if no vehicle is not light, query the image directly"
3321191,What cooking utensil is the person to the left of the shelves looking down at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is the person to the left of the shelves looking down at?"")"
7455648,What is the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What is the clock on?"")
    return clock_patches[0].simple_query(""What is the clock on?"")"
11628711,Do the train tracks near the traffic light look clean and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the train tracks near the traffic light look clean and white?"")"
1671103,What is covered in snow?," # contains a relation (covered in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered in snow?"")"
4879976,Are the cabinets on the left?," # assumes only one cabinet patch
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinets"")
    if len(cabinet_patches) == 0:
        # If no cabinets are found, query the image directly
        return image_patch.simple_query(""Are the cabinets on the left?"")
    return bool_to_yesno(cabinet_patches[0].horizontal_center < image_patch.horizontal_center)"
11420802,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
14371671,Is there any grass that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is not brown?"")"
12511729,Is there any spoon on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any spoon on the plate?"")"
1688279,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
15944677,Is the flower on a sheet?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flower on a sheet?"")"
1865451,What is the little child holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the little child holding?"")"
18648493,Is the speaker to the left of a computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the speaker to the left of a computer?"")"
13613461,Who is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the man?"")"
5695779,On which side is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8371001,Which color is the book?," # returns the color of the book
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Which color is the book?"")
    return book_patches[0].simple_query(""Which color is the book?"")"
1739443,Is there a skateboard in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skateboard""))"
15930700,Is the bowl on the table clear or opaque?," # clear or opaque
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Is the bowl on the table clear or opaque?"")
    for bowl_patch in bowl_patches:
        if bowl_patch.verify_property(""bowl"", ""on_table"") and bowl_patch.verify_property(""bowl"", ""clear""):
            return ""clear""
        elif bowl_patch.verify_property(""bowl"", ""on_table"") and not bowl_patch.verify_property(""bowl"", ""clear""):
            return ""opaque""
    return ""clear"""
14240487,Does the door look yellow and wooden?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Does the door look yellow and wooden?"")
    door_patch = door_patches[0]
    return bool_to_yesno(door_patch.verify_property(""door"", ""yellow"") and door_patch.verify_property(""door"", ""wooden""))"
19618384,Do you see any dark sand or grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any dark sand or grass?"")"
3667706,How is the black article of clothing called?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    black_patches = image_patch.find(""black article of clothing"")
    # Question assumes only one black patch
    if len(black_patches) == 0:
        # If no black article of clothing is found, query the image directly
        return image_patch.simple_query(""How is the black article of clothing called?"")
    return black_patches[0].simple_query(""What is the black article of clothing called?"") # crop would include the black color so keep it in the query"
4639532,On which side of the picture is the baseball?," # left or right
    image_patch = ImagePatch(image)
    baseball_patches = image_patch.find(""baseball"")
    # Question assumes only one baseball patch
    if len(baseball_patches) == 0:
        # If no baseball is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the baseball?"")
    return ""left"" if baseball_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
12528274,Is the color of the bus white?," # bus is not found, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the bus white?"")"
15655982,"What kind of food is green, the rice or the broccoli?"," # contains a relation (green, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is green, the rice or the broccoli?"")"
5368900,Which type of material makes up the black bag?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of material makes up the black bag?"")"
189396,Are there any red cans or plates?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_can = image_patch.exists(""red can"")
    is_red_plate = image_patch.exists(""red plate"")
    return bool_to_yesno(is_red_can or is_red_plate)"
13575607,"What color is the helmet to the right of the person, white or green?"," # helmet is to the right of the person
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""What color is the helmet to the right of the person, white or green?"")
    helmet_patch = helmet_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return helmet_patch.simple_query(""What color is the helmet to the right of the person, white or green?"")
    for person_patch in person_patches:
        if helmet_patch.horizontal_center > person_patch.horizontal_center:
            return helmet_patch.best_text_match([""white"", ""green""])
    return helmet_patch.best_text_match([""white"", ""green""]) # if no person is found, query the helmet directly"
8854594,"What color is the bus on the road, cream colored or silver?"," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bus on the road, cream colored or silver?"")"
696348,What is the window made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the window made of?"")"
2878593,What does the bowl contain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the bowl contain?"")"
18797786,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
7106682,"What animal is walking, the cat or the dog?"," # contains a relation (walking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is walking, the cat or the dog?"")"
647568,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
14820990,Are there either cats or pillows in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat"") or image_patch.exists(""pillow""))"
4929585,Are the cabinets on the right side?," # assumes only one cabinet patch
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""Are the cabinets on the right side?"")
    cabinet_patch = cabinet_patches[0]
    if cabinet_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
3858053,Is the car to the right or to the left of the boat that is to the left of the traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the right or to the left of the boat that is to the left of the traffic lights?"")"
14886216,What is the frame around of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the frame around of?"")"
6870859,Does the bench appear to be large and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Does the bench appear to be large and brown?"")
    return bool_to_yesno(bench_patches[0].verify_property(""bench"", ""large"") and bench_patches[0].verify_property(""bench"", ""brown""))"
687536,What is pulled by the horse?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is pulled by the horse?"")"
4326459,Are there either any benches or frisbees in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""frisbee"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
2775784,What is the train on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the train on?"")"
1213043,What is located on top of the banana the grapes are to the right of?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the banana the grapes are to the right of?"")"
16438118,Which kind of device is to the left of the speakers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the speakers?"")"
6451881,What do the ground and the umbrella have in common?," # ground and umbrella
    image_patch = ImagePatch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch.simple_query(""What do the ground and the umbrella have in common?"")
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        return image_patch.simple_query(""What do the ground and the umbrella have in common?"")
    ground_patch = ground_patches[0]
    umbrella_patch = umbrella_patches[0]
    common_properties = set(ground_patch.verify_property(""ground"", property) for property in [""blue"", ""green"", ""brown"", ""gray"", ""white"", ""yellow"", ""red"", ""orange"", ""black"", ""pink"", ""purple"", ""brown"", ""beige"", ""tan"", ""gray"", ""white"", ""brown"", ""black"", ""blue"", ""green"", ""red"", ""orange"", ""yellow"", ""pink"", ""purple""])
    common_properties = common_properties.union(set(umbrella_patch.verify_property(""umbrella"", property) for property in [""blue"", ""green"", ""brown"", ""gray"", ""white"", ""yellow"", ""red"", ""orange"", ""black"", ""pink"", ""purple"", ""brown"", ""beige"", ""tan"", ""gray"", ""white"", ""brown"", ""black"", ""blue"", ""green"","
8927906,Is the sword large?," # sword is a large object
    image_patch = ImagePatch(image)
    sword_patches = image_patch.find(""sword"")
    # Question assumes only one sword patch
    if len(sword_patches) == 0:
        # If no sword is found, query the image directly
        return image_patch.simple_query(""Is the sword large?"")
    return bool_to_yesno(sword_patches[0].verify_property(""sword"", ""large""))"
9813038,Are there any houses near the large bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""house"") and image_patch.exists(""bush"") and image_patch.simple_query(""Is the bush large?"") == ""yes"")"
1700405,Is the man that is walking wearing glasses?," # contains a relation (walking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is walking wearing glasses?"")"
9676646,Which kind of appliance is to the left of the cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is to the left of the cabinets?"")"
31015320,What's the man looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man looking at?"")"
3483347,What is the vehicle to the left of the silver car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the left of the silver car?"")"
12713370,Where is the crosswalk?," # returns the location of the crosswalk
    image_patch = ImagePatch(image)
    crosswalk_patches = image_patch.find(""crosswalk"")
    # Question assumes only one crosswalk patch
    if len(crosswalk_patches) == 0:
        # If no crosswalk is found, query the image directly
        return image_patch.simple_query(""Where is the crosswalk?"")
    return crosswalk_patches[0].simple_query(""Where is the crosswalk?"") # crop would include the crosswalk so keep it in the query"
433778,What is the paved street made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the paved street made of?"")"
13218987,Is the tennis racket to the right or to the left of the player?," # assumes only one player and one racket
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    if len(player_patches) == 0:
        return image_patch.simple_query(""Is the tennis racket to the right or to the left of the player?"")
    player_patch = player_patches[0]
    racket_patches = image_patch.find(""tennis racket"")
    if len(racket_patches) == 0:
        return image_patch.simple_query(""Is the tennis racket to the right or to the left of the player?"")
    racket_patch = racket_patches[0]
    if racket_patch.horizontal_center > player_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
1703078,Is the palm near the horse green and short?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the palm near the horse green and short?"")"
4377815,Is the kite on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kite on the right?"")"
9657953,How long is the stump?," # returns the length of the stump
    image_patch = ImagePatch(image)
    stump_patches = image_patch.find(""stump"")
    # Question assumes only one stump patch
    if len(stump_patches) == 0:
        # If no stump is found, query the image directly
        return image_patch.simple_query(""How long is the stump?"")
    return stump_patches[0].simple_query(""How long is the stump?"")"
11654880,Are there either computer mice or remote controls in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""computer mouse"") or image_patch.exists(""remote control"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
19861925,What kind of animal is to the left of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the clock?"")"
9641363,Are there either avocadoes or carrots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_avocado = image_patch.exists(""avocado"")
    is_carrot = image_patch.exists(""carrot"")
    return bool_to_yesno(is_avocado or is_carrot)"
11010041,Is there a tea pot or a chair in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tea_pot = image_patch.exists(""tea pot"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_tea_pot or is_chair)"
17928243,Is the sofa to the right or to the left of the table made of wood?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sofa to the right or to the left of the table made of wood?"")"
128603,Who do you think is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a shirt?"")"
15484803,Is the woman to the right or to the left of the car that is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the car that is to the left of the person?"")"
61010915,Is the woman to the left of the child holding a cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left of the child holding a cup?"")"
5594505,What is the dog doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog doing?"")"
19749918,What is the food that is to the right of the kid on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the right of the kid on the left?"")"
15807880,On which side is the player?," # left or right
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    # Question assumes only one player patch
    if len(player_patches) == 0:
        # If no player is found, query the image directly
        return image_patch.simple_query(""On which side is the player?"")
    return ""left"" if player_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
17315612,Is the boat white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat white?"")"
13358971,What color is the water bottle that he is to the left of?," # contains a relation (he is to the left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the water bottle that he is to the left of?"")"
684782,What is on the car?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the car?"")"
10375410,Which kind of clothing is striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is striped?"")"
16870922,Which kind of furniture is the camera on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the camera on?"")"
13552165,What is the plate on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plate on?"")"
7412148,Are the utensils on the right side?," # assumes only one utensil patch
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""utensils"")
    if len(utensil_patches) == 0:
        # If no utensils are found, query the image directly
        return image_patch.simple_query(""Are the utensils on the right side?"")
    utensil_patch = utensil_patches[0]
    if utensil_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
15690956,Are there either any skaters or officers in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skater"") or image_patch.exists(""officer""))"
14996563,What is in the jar?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the jar?"")"
2396887,Do the sweater and the lid have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    lid_patches = image_patch.find(""lid"")
    # Question assumes only one sweater and one lid patch
    if len(sweater_patches) == 0 or len(lid_patches) == 0:
        # If no sweater or lid is found, query the image directly
        return image_patch.simple_query(""Do the sweater and the lid have the same color?"")
    sweater_color = sweater_patches[0].simple_query(""What color is the sweater?"")
    lid_color = lid_patches[0].simple_query(""What color is the lid?"")
    return bool_to_yesno(sweater_color == lid_color)"
3937909,Is the man to the right of the lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the lady?"")"
16101814,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
13519413,What do the bathroom and the toilet have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the bathroom and the toilet have in common?"")"
18288410,Is the ice cream in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ice cream in the bottom of the photo?"")"
9915972,Is the plate to the left or to the right of the woman?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the left or to the right of the woman?"")"
13614591,On which side of the photo is the television?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the television?"")"
17662551,Who is playing?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing?"")"
14703509,On which side of the image is the drink?," # left or right
    image_patch = ImagePatch(image)
    drink_patches = image_patch.find(""drink"")
    # Question assumes only one drink patch
    if len(drink_patches) == 0:
        # If no drink is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the drink?"")
    if drink_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14381481,What kind of furniture is to the left of the bedspread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the bedspread?"")"
18871314,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
11899292,On which side of the image are the papers?," # left or right
    image_patch = ImagePatch(image)
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        # If no paper is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the papers?"")
    if paper_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3705435,Which side of the picture is the skateboard on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture is the skateboard on?"")"
19370031,Are there any bags in the image that are green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.find(""bag"")[0].verify_property(""bag"", ""green""))"
6936416,The floor made of cement has what color?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The floor made of cement has what color?"")"
13482003,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
3249793,In which part is the onion?," # assumes only one onion patch
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""In which part is the onion?"")
    onion_patch = onion_patches[0]
    if onion_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
10909560,How is the clothing item that is not red called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""How is the clothing item that is not red called?"")
    for clothing_patch in clothing_patches:
        is_red = clothing_patch.verify_property(""clothing"", ""red"")
        if not is_red:
            return clothing_patch.simple_query(""How is the clothing item that is not red called?"") # crop would include the color so keep it in the query
    # If no clothing is not red, pick the first clothing
    return clothing_patches[0].simple_query(""How is the clothing item that is not red called?"")"
4877145,What is the ketchup bottle made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ketchup bottle made of?"")"
17204496,What is the red vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the red vehicle?"")"
1670499,What place is the picture in?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is the picture in?"")"
18162910,Are the boys on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the boys on the right?"")"
1183470,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
4231784,What kind of furniture is to the left of the towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the towel?"")"
8834588,What animal is standing on the ground?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the ground?"")"
15761704,Which kind of animal is to the left of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the left of the laptop?"")"
17179145,What vehicles are in the yard?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicles are in the yard?"")"
14540883,Are there any dishwashers in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dishwasher""))"
17969874,Where is the animal that looks beige lying?," # returns the position of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Where is the animal that looks beige lying?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""Is the animal beige?"") == ""yes"":
            return animal_patch.simple_query(""Where is the animal lying?"")
    return image_patch.simple_query(""Where is the animal that looks beige lying?"")"
10279365,Is the baseball batter below the frame that is made of metal?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baseball batter below the frame that is made of metal?"")"
13674678,Does the countertop look tan?," # assumes only one countertop patch
    image_patch = ImagePatch(image)
    countertop_patches = image_patch.find(""countertop"")
    if len(countertop_patches) == 0:
        # If no countertop is found, query the image directly
        return image_patch.simple_query(""Does the countertop look tan?"")
    return bool_to_yesno(countertop_patches[0].verify_property(""countertop"", ""tan""))"
19288774,Is the chair to the left or to the right of the computer that the man is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left or to the right of the computer that the man is with?"")"
6969290,"What is the man doing, posing or reading?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing, posing or reading?"")"
18442303,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
15422898,Is the cup to the left or to the right of the utensil on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""Is the cup to the left or to the right of the utensil on the left side?"")
    for cup_patch in cup_patches:
        utensil_patches = image_patch.find(""utensil"")
        # Question assumes only one utensil patch
        if len(utensil_patches) == 0:
            # If no utensil is found, query the image directly
            return image_patch.simple_query(""Is the cup to the left or to the right of the utensil on the left side?"")
        for utensil_patch in utensil_patches:
            if utensil_patch.horizontal_center < image_patch.horizontal_center:
                if cup_patch.horizontal_center < utensil_patch.horizontal_center:
                    return ""left""
                else:
                    return ""right""
    # If no cup or utensil is found, query the image directly
    return image_patch.simple_query(""Is the cup to the left or to the right of the utensil on the left side?"")"
1127024,Is the plastic spoon to the right of a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic spoon to the right of a bottle?"")"
9891344,Are the people on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people on the right side?"")"
13284923,"What is the building behind of, a bus or a truck?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the building behind of, a bus or a truck?"")"
1572206,What is hanging on the wall the lamp is mounted to?," # contains a relation (hanging on, mounted to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging on the wall the lamp is mounted to?"")"
11123413,Which kind of furniture is the vase on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the vase on?"")"
957076,Does the cart which is to the right of the girl look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cart which is to the right of the girl look red?"")"
3237520,Which kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is white?"")"
10934965,How wide is the door that is made of wood?," # width in pixels
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""How wide is the door that is made of wood?"")
    door_patch = door_patches[0]
    return door_patch.simple_query(""How wide is the door that is made of wood?"") # crop would include the door so keep it in the query"
16378711,Do the jacket and the glove have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one jacket and one glove patch
    if len(jacket_patches) == 0 or len(glove_patches) == 0:
        # If no jacket or glove is found, query the image directly
        return image_patch.simple_query(""Do the jacket and the glove have a different colors?"")
    jacket_color = jacket_patches[0].simple_query(""What is the color of the jacket?"")
    glove_color = glove_patches[0].simple_query(""What is the color of the glove?"")
    return bool_to_yesno(jacket_color != glove_color)"
15475020,What is the giraffe in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the giraffe in front of?"")"
13453779,What appliance is the sticker on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is the sticker on?"")"
3545762,Does the car that is to the left of the camera look yellow?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the car that is to the left of the camera look yellow?"")"
14444635,Are the backpack and the paper the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one backpack and one paper patch
    if len(backpack_patches) == 0 or len(paper_patches) == 0:
        # If no backpack or paper is found, query the image directly
        return image_patch.simple_query(""Are the backpack and the paper the same color?"")
    backpack_patch = backpack_patches[0]
    paper_patch = paper_patches[0]
    return bool_to_yesno(backpack_patch.verify_property(""backpack"", ""color"") == paper_patch.verify_property(""paper"", ""color""))"
2669249,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
13778064,Is the mobile phone large and dark?," # returns yes or no
    image_patch = ImagePatch(image)
    mobile_patches = image_patch.find(""mobile phone"")
    # Question assumes only one mobile phone patch
    if len(mobile_patches) == 0:
        # If no mobile phone is found, query the image directly
        return image_patch.simple_query(""Is the mobile phone large and dark?"")
    return bool_to_yesno(mobile_patches[0].verify_property(""mobile phone"", ""large"") and mobile_patches[0].verify_property(""mobile phone"", ""dark""))"
17787697,How is the black item of furniture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the black item of furniture called?"")"
3253556,What items of furniture are to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What items of furniture are to the right of the pillow?"")"
5164866,Which color do you think the vehicle to the left of the car is?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the vehicle to the left of the car is?"")"
131050218,Who is in the car?," # contains a relation (in the car), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the car?"")"
12828505,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
14480590,Who is wearing a scarf?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a scarf?"")"
2894965,What is the cart to the left of the person pulled by?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cart to the left of the person pulled by?"")"
9189070,What is the fenced animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fenced animal called?"")"
18101595,Who wears shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears shoes?"")"
542260,Which type of vehicle is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of vehicle is this?"")"
13390663,What animals stand in the field?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals stand in the field?"")"
141049848,Who in this scene is dressed in red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in this scene is dressed in red?"")"
1521456,What vehicle is to the right of the cab that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the cab that is to the right of the man?"")"
12732250,Are the plastic cups on the left side or on the right of the photo?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the plastic cups on the left side or on the right of the photo?"")"
10146928,Which kind of furniture is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the man?"")"
11006953,Which side of the picture is the wood cabinet on?," # left or right
    image_patch = ImagePatch(image)
    wood_cabinet_patches = image_patch.find(""wood cabinet"")
    # Question assumes only one wood cabinet patch
    if len(wood_cabinet_patches) == 0:
        # If no wood cabinet is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the wood cabinet on?"")
    if wood_cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3555349,What is located on top of the appliance that is to the left of the drawer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the appliance that is to the left of the drawer?"")"
1585550,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
5160759,What is the black dog wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black dog wearing?"")"
18538701,Are there any fences to the left of the man that is in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there any fences to the left of the man that is in the middle of the image?"")
    man_center = man_patches[0].horizontal_center
    if man_center == image_patch.horizontal_center:
        return bool_to_yesno(image_patch.exists(""fence"") and image_patch.find(""fence"")[0].horizontal_center < man_center)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.find(""fence"")[0].horizontal_center < man_center)"
1291458,Is the crust thick and brown?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the crust thick and brown?"")"
4432734,What is the toilet in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toilet in front of?"")"
13959010,Are there both bottles and shelves in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_shelf = image_patch.exists(""shelf"")
    return bool_to_yesno(is_bottle and is_shelf)"
15844114,What kind of vegetable is cooked in the onion?," # onion is a container
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    # Question assumes only one onion patch
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""What kind of vegetable is cooked in the onion?"")
    for onion_patch in onion_patches:
        vegetable_patches = image_patch.find(""vegetable"")
        for vegetable_patch in vegetable_patches:
            if vegetable_patch.horizontal_center > onion_patch.horizontal_center:
                return vegetable_patch.simple_query(""What kind of vegetable is cooked in the onion?"")
    return image_patch.simple_query(""What kind of vegetable is cooked in the onion?"") # crop would include the vegetable so keep it in the query"
5168335,What is the food to the right of the plate that looks white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the plate that looks white?"")"
12910336,Who is in front of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the clock?"")"
1699496,Is the small plate white and round?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small plate white and round?"")"
11641135,What is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bench?"")"
1765510,Do the leaves look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""leaves"", ""green""))"
176747,What color is the clock on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the clock on the wall?"")"
13827567,Are there wheelchairs or rackets in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wheelchair = image_patch.exists(""wheelchair"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_wheelchair or is_racket)"
7772007,Is the kid to the left or to the right of the person that is wearing a shirt?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid to the left or to the right of the person that is wearing a shirt?"")"
539548,In which part is the glass shelf?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the glass shelf?"")"
21026594,What color is the long hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the long hair?"")"
13301213,What is the color of the small pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the small pillows?"")"
15298044,Is the dress black or orange?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dress black or orange?"")"
11689040,Are the animals in this picture of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and len(image_patch.find(""animal"")) > 1)"
6479794,What is on the post?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the post?"")"
5816466,What type of device is to the left of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the left of the keyboard?"")"
18498783,What kind of vehicle is in the parking lot?," # contains a relation (in the parking lot), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is in the parking lot?"")"
8543676,What color is the trash bin?," # returns the color of the trash bin
    image_patch = ImagePatch(image)
    trash_bin_patches = image_patch.find(""trash bin"")
    # Question assumes only one trash bin patch
    if len(trash_bin_patches) == 0:
        # If no trash bin is found, query the image directly
        return image_patch.simple_query(""What color is the trash bin?"")
    return trash_bin_patches[0].simple_query(""What color is the trash bin?"") # crop would include the trash bin so keep it in the query"
15391827,Are there any chairs to the left of the book that is on the bookshelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any chairs to the left of the book that is on the bookshelf?"")"
10152445,On which side of the photo is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2349083,What is the device in front of the container that is made of cardboard?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device in front of the container that is made of cardboard?"")"
18555312,Does the stroller to the left of the kid look open?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the stroller to the left of the kid look open?"")"
17110135,Are there fences behind the batter that wears a helmet?," # batter is wearing a helmet
    image_patch = ImagePatch(image)
    batter_patches = image_patch.find(""batter"")
    # Question assumes only one batter patch
    if len(batter_patches) == 0:
        # If no batter is found, query the image directly
        return image_patch.simple_query(""Are there fences behind the batter that wears a helmet?"")
    for batter_patch in batter_patches:
        is_wearing_helmet = (batter_patch.simple_query(""Is the batter wearing a helmet?"") == ""yes"")
        if is_wearing_helmet:
            return bool_to_yesno(image_patch.exists(""fence"") and (batter_patch.horizontal_center < image_patch.horizontal_center))
    # If no batter is wearing a helmet, pick the first batter
    return bool_to_yesno(image_patch.exists(""fence"") and (batter_patches[0].horizontal_center < image_patch.horizontal_center))"
1747892,Is the curtain on the left side?," # left and right are relative to the center of the image
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Is the curtain on the left side?"")
    if curtain_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
4804135,Is the black chair to the left of the vase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black chair to the left of the vase?"")"
177816,Where is that keyboard?," # returns the location of the keyboard
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""Where is that keyboard?"")
    return keyboard_patches[0].simple_query(""Where is that keyboard?"")"
18203727,What is the wet road made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wet road made of?"")"
51067627,Does the racket look black?," # returns yes or no
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Does the racket look black?"")
    return bool_to_yesno(racket_patches[0].verify_property(""racket"", ""black""))"
16450592,Is the man to the left of the people that are in front of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the people that are in front of the bus?"")"
13807498,Is the woman to the right or to the left of the men that are sitting-down?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the men that are sitting-down?"")"
13750101,Is the crust wet or dry?," # assumes only one bread patch
    image_patch = ImagePatch(image)
    bread_patches = image_patch.find(""bread"")
    if len(bread_patches) == 0:
        # If no bread is found, query the image directly
        return image_patch.simple_query(""Is the crust wet or dry?"")
    return bread_patches[0].best_text_match([""wet"", ""dry""])"
5976612,What is the giraffe in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the giraffe in?"")"
8305506,What is on the yellow plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the yellow plate?"")"
217865,How big is the chair the boy is sitting in?," # returns the size of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""How big is the chair the boy is sitting in?"")
    return chair_patches[0].simple_query(""How big is the chair the boy is sitting in?"") # crop would include the boy so keep it in the query"
14901437,What is the name of the artificial vegetable?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the artificial vegetable?"")"
2364367,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
6437864,What is the person to the right of the plate wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the plate wearing?"")"
161062889,Who is wearing the sweater?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the sweater?"")"
786092,Is the man to the left or to the right of the woman that is wearing glasses?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the woman that is wearing glasses?"")"
16374339,The girl is on what?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The girl is on what?"")"
14244226,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
2365734,What is the food that is to the left of the black bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the left of the black bag?"")"
18280095,What is the drain in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drain in?"")"
417876,What is the person in front of the wall holding?," # contains a relation (in front of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person in front of the wall holding?"")"
8449870,Do you see either rackets or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""racket"") or image_patch.exists(""flag""))"
10989352,Is the ball on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball on the right or on the left?"")"
13784824,Is the fence on the left side?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left side?"")"
1167130,Do the minivan and the cloud have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    minivan_patches = image_patch.find(""minivan"")
    # Question assumes only one minivan patch
    if len(minivan_patches) == 0:
        # If no minivan is found, query the image directly
        return image_patch.simple_query(""Do the minivan and the cloud have the same color?"")
    minivan_patch = minivan_patches[0]
    cloud_patches = image_patch.find(""cloud"")
    # Question assumes only one cloud patch
    if len(cloud_patches) == 0:
        return ""yes""
    cloud_patch = cloud_patches[0]
    return bool_to_yesno(minivan_patch.verify_property(""minivan"", ""blue"") == cloud_patch.verify_property(""cloud"", ""blue""))"
15642380,Which kind of device is to the right of the cell phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the cell phone?"")"
18590259,What is the child holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child holding?"")"
9221231,"What type of furniture are the windows behind of, a couch or a bookcase?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture are the windows behind of, a couch or a bookcase?"")"
653162,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
10880658,Are there airplanes in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
10692429,Is the bottle to the right or to the left of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle to the right or to the left of the napkin?"")"
15513391,What color are the jeans the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the jeans the man is wearing?"")"
15209640,Is this a scooter or a skateboard?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a scooter or a skateboard?"")"
340936,What animal is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is white?"")"
13933523,What do you think is the vegetable that is to the left of the stainless steel bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the vegetable that is to the left of the stainless steel bowl?"")"
11227042,Which kind of clothing is not dark colored?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing dark colored?"") == ""no"":
            return clothing_patch.simple_query(""Which kind of clothing is not dark colored?"")
    return image_patch.simple_query(""Which kind of clothing is not dark colored?"") # if no clothing is not dark colored, query the image directly"
19514133,What is the color of the bag the person is holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bag the person is holding?"")"
6790345,Do the bird's feathers have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bird"", ""black""))"
14809730,What place was the picture taken at?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the picture taken at?"")"
852452,What are the windows covered with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the windows covered with?"")"
723883,Which kind of drink is to the left of the bottle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of drink is to the left of the bottle?"")"
2115592,Do the napkin and the table have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the napkin and the table have a different colors?"")) # crop would include the table so keep it in the query"
81015955,Is the flag in the top part or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flag in the top part or in the bottom of the picture?"")"
15411607,Is the red bag on the right side or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red bag on the right side or on the left?"")"
18352142,On which side of the image is the kite?," # left or right
    image_patch = ImagePatch(image)
    kite_patches = image_patch.find(""kite"")
    # Question assumes only one kite patch
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the kite?"")
    if kite_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17038,Do you see a plate near the container the beer is in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a plate near the container the beer is in?"")"
4872723,What is the person to the right of the car wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the car wearing?"")"
17960607,"What is the word on, a bookcase or a bed?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the word on, a bookcase or a bed?"")"
5450745,Is there any mirror in the scene?," # mirror is a tricky one because it can be a reflection
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    return bool_to_yesno(len(mirror_patches) > 0)"
13462473,Is the blue book in the bottom part?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue book in the bottom part?"")"
10505377,What is the package on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the package on?"")"
13743202,Are there both a plate and a cup in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_plate and is_cup)"
6583487,"What is the bald man pulled by, a cow or a horse?"," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bald man pulled by, a cow or a horse?"")"
6988460,Are there ladies to the right of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there ladies to the right of the man that is wearing a shirt?"")
    man_patch = man_patches[0]
    is_wearing_shirt = (man_patch.simple_query(""Is the man wearing a shirt?"") == ""yes"")
    if is_wearing_shirt:
        return image_patch.simple_query(""Are there ladies to the right of the man that is wearing a shirt?"")
    return ""no"""
841806,What is the bed cover on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bed cover on?"")"
13663860,What device is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is black?"")"
18219964,What are the magnets on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the magnets on?"")"
65055,Who is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a glove?"")"
16346932,Does the striped apron have white color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""striped apron"", ""white""))"
631012,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
12108595,What do you think is the vegetable on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the vegetable on the plate?"")"
11178112,Is the lady to the right of the umbrella carrying a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right of the umbrella carrying a bag?"")"
4302684,What device is to the left of the sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the sofa?"")"
9996072,Which side is the lady on?," # left or right
    image_patch = ImagePatch(image)
    lady_patches = image_patch.find(""lady"")
    # Question assumes only one lady patch
    if len(lady_patches) == 0:
        # If no lady is found, query the image directly
        return image_patch.simple_query(""Which side is the lady on?"")
    if lady_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13801730,Is the boy to the right or to the left of the bicycle on the left side?," # left side of the image
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Is the boy to the right or to the left of the bicycle on the left side?"")
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        return ""left""
    for bicycle_patch in bicycle_patches:
        if bicycle_patch.horizontal_center < image_patch.horizontal_center:
            if boy_patches[0].horizontal_center > bicycle_patch.horizontal_center:
                return ""right""
            else:
                return ""left""
    return ""left"""
4636675,Does the shirt appear to be short sleeved and blue?," # shirt is a predicate, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt appear to be short sleeved and blue?"")"
16949759,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
10181839,Is the animal that is not happy wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal that is not happy wearing a hat?"")"
5117368,On which side of the photo is the boat?," # left or right
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the boat?"")
    return ""left"" if boat_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
631765,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
41052166,What is the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cup made of?"")"
15159109,What is lying on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is lying on the table?"")"
13612100,Are there either any women or men that are playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman or is_man)"
19406324,Are there players in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""player in the field"")) # crop would include the field so keep it in the query"
15575087,Which color is the flower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the flower?"")"
9914410,Is the umbrella that is to the right of the other umbrella pink or maybe black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella that is to the right of the other umbrella pink or maybe black?"")"
12548364,Are the tower to the left of the giraffe and the barn both wooden?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the tower to the left of the giraffe wooden?"") == ""yes"" and image_patch.simple_query(""Is the barn wooden?"") == ""yes"")"
18733854,Is the snowboard short and red?," # returns yes or no
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""Is the snowboard short and red?"")
    return bool_to_yesno(snowboard_patches[0].verify_property(""snowboard"", ""red"") and snowboard_patches[0].verify_property(""snowboard"", ""short""))"
13999963,Does the helmet that is to the right of the horse look blue?," # helmet is to the right of the horse
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the helmet that is to the right of the horse look blue?"")
    helmet_patch = helmet_patches[0]
    horse_patches = image_patch.find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""Does the helmet that is to the right of the horse look blue?"")
    horse_patch = horse_patches[0]
    if helmet_patch.horizontal_center > horse_patch.horizontal_center:
        return helmet_patch.verify_property(""helmet"", ""blue"")
    return ""no"""
9816926,Are there both cheese and lettuce in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cheese = image_patch.exists(""cheese"")
    is_lettuce = image_patch.exists(""lettuce"")
    return bool_to_yesno(is_cheese and is_lettuce)"
13935573,Is the couch pillow to the right or to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch pillow to the right or to the left of the chair?"")"
11555417,What is on the white pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white pole?"")"
4541455,Which kind of animal is in the cage?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in the cage?"")"
19549614,What color is the kettle in the top of the photo?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the kettle in the top of the photo?"")"
18786816,Is the coffee table brown and metallic?," # returns yes or no
    image_patch = ImagePatch(image)
    coffee_table_patches = image_patch.find(""coffee table"")
    # Question assumes only one coffee table patch
    if len(coffee_table_patches) == 0:
        # If no coffee table is found, query the image directly
        return image_patch.simple_query(""Is the coffee table brown and metallic?"")
    return bool_to_yesno(coffee_table_patches[0].verify_property(""coffee table"", ""brown"") and coffee_table_patches[0].verify_property(""coffee table"", ""metallic""))"
13867339,Who is wearing an outfit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing an outfit?"")"
8692587,Is the girl to the left of the camera reflected in the mirror?," # mirror is to the right of the camera
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Is the girl to the left of the camera reflected in the mirror?"")
    for girl_patch in girl_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > girl_patch.horizontal_center:
                return ""yes""
    return ""no"""
1937690,Are there either silver DVD players or cameras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dvd_player = image_patch.exists(""silver DVD player"")
    is_camera = image_patch.exists(""camera"")
    return bool_to_yesno(is_dvd_player or is_camera)"
18346921,What piece of furniture is the lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is the lamp on?"")"
17315308,Are there chairs to the left of the kid that is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there chairs to the left of the kid that is to the left of the person?"")"
599518,On which side of the image is the lamp?," # left or right
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the lamp?"")
    if lamp_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6819627,Is the kid on the right side of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid on the right side of the image?"")"
1865108,What is the animal that is white called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is white called?"")"
1569926,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
10118409,What is the piece of furniture that the TV is on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the TV is on called?"")"
17673767,What's the mountain covered in?," # mountain is a predicate of a relational verb (covered in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the mountain covered in?"")"
524290,Is the dog in the top or in the bottom of the picture?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog in the top or in the bottom of the picture?"")"
15709981,Is there a fence or a kite in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_fence or is_kite)"
8781096,What's the bathtub in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bathtub in?"")"
131027732,Is the coat white or blue?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coat white or blue?"")"
15916496,What is the wire connected to?," # contains a relation (connected to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wire connected to?"")"
893362,What leans against the wall?," # contains a relation (leaning against), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What leans against the wall?"")"
402223,Are there red balls or frisbees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_ball = image_patch.exists(""red ball"")
    is_frisbee = image_patch.exists(""frisbee"")
    return bool_to_yesno(is_red_ball or is_frisbee)"
7257630,Are there bananas or vegetables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""banana"") or image_patch.exists(""vegetable""))"
8980760,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
17304671,Is there a bed to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bed to the left of the chair?"")"
13665485,Are there any drivers in the bus?," # contains a relation (in the bus), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""driver in the bus"")) # crop would include the bus so keep it in the query"
16512188,Are these bears or wolves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these bears or wolves?"")"
979768,"Which side is the nightstand on, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the nightstand on, the left or the right?"")"
17466587,Do you see any ice or mud there?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any ice or mud there?"")"
6382023,"On which side is the kite, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the kite, the right or the left?"")"
527556,Do you see pictures to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see pictures to the left of the woman?"")"
13960472,Who is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the man?"")"
894049,Are the fruits that are to the right of the lettuce green and unripe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the fruits that are to the right of the lettuce green and unripe?"")"
51034423,What is the person that is standing wearing?," # contains a relation (standing, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is standing wearing?"")"
14864117,Are there either dogs or fences in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dog"") or image_patch.exists(""fence""))"
4534007,What color is the coat that the people are wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the coat that the people are wearing?"")"
17833333,Is there an umbrella near the saucer in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an umbrella near the saucer in the bottom of the image?"")"
1383881,Who holds the bag on the right?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the bag on the right?"")"
7608869,What kind of baked good is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is the girl holding?"")"
10965173,Is the car below the wire?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car below the wire?"")"
12947676,Is the microphone to the left or to the right of the man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the microphone to the left or to the right of the man?"")"
3620034,Are there any picnic tables or pictures in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picnic table"") or image_patch.exists(""picture""))"
8507320,The giraffe is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The giraffe is in front of what?"")"
13664147,What color are the trousers the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the trousers the man is wearing?"")"
19298494,Is there a doughnut in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""doughnut""))"
101053674,Are the blinds to the left or to the right of the device that is to the right of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the blinds to the left or to the right of the device that is to the right of the computer?"")"
11657545,Does the woman's hair look blond and short?," # contains a relation (blond and short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the woman's hair look blond and short?"")"
19920455,Are there either men or women that are eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_man_eating = image_patch.exists(""man"") and image_patch.exists(""eating"")
    is_woman_eating = image_patch.exists(""woman"") and image_patch.exists(""eating"")
    return bool_to_yesno(is_man_eating or is_woman_eating)"
15116181,On which side is the tomato?," # left or right
    image_patch = ImagePatch(image)
    tomato_patches = image_patch.find(""tomato"")
    # Question assumes only one tomato patch
    if len(tomato_patches) == 0:
        # If no tomato is found, query the image directly
        return image_patch.simple_query(""On which side is the tomato?"")
    tomato_patch = tomato_patches[0]
    if tomato_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5628789,How big is the red bag?," # returns a string
    image_patch = ImagePatch(image)
    red_bag_patches = image_patch.find(""red bag"")
    # Question assumes only one red bag patch
    if len(red_bag_patches) == 0:
        # If no red bag is found, query the image directly
        return image_patch.simple_query(""How big is the red bag?"")
    return red_bag_patches[0].simple_query(""How big is the red bag?"") # crop would include the red bag so keep it in the query"
14700769,What kind of place is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of place is it?"")"
160024,What's the desk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the desk made of?"")"
161050547,Does the boy shirt look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boy shirt look white?"")"
12328382,What do the dress and the wetsuit have in common?," # returns a string
    image_patch = ImagePatch(image)
    dress_patches = image_patch.find(""dress"")
    # Question assumes only one dress patch
    if len(dress_patches) == 0:
        # If no dress is found, query the image directly
        return image_patch.simple_query(""What do the dress and the wetsuit have in common?"")
    wetsuit_patches = image_patch.find(""wetsuit"")
    # Question assumes only one wetsuit patch
    if len(wetsuit_patches) == 0:
        return ""They are both clothing.""
    dress_patch = dress_patches[0]
    wetsuit_patch = wetsuit_patches[0]
    common_properties = dress_patch.verify_property(""dress"", ""color"") and wetsuit_patch.verify_property(""wetsuit"", ""color"")
    if common_properties:
        return ""They are both "" + dress_patch.simple_query(""What color am I?"") # crop would include the color so keep it in the query
    return ""They are both clothing."""
4494061,What is in front of the pizza the purse is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the pizza the purse is to the right of?"")"
1372747,Is there a child in this image that is eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a child in this image that is eating?"")"
13529861,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
7954489,What is the elephant with the chain standing in?," # contains a relation (standing in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the elephant with the chain standing in?"")"
181111,Which color is the bath towel to the right of the hair dryer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bath towel to the right of the hair dryer?"")"
19761489,Is the stuffed bear both small and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""stuffed bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Is the stuffed bear both small and brown?"")
    return bool_to_yesno(bear_patches[0].verify_property(""stuffed bear"", ""small"") and bear_patches[0].verify_property(""stuffed bear"", ""brown""))"
7125273,The tree is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The tree is where?"")"
15774985,Who is wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a cap?"")"
4650901,What is the vehicle to the right of the person that is to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the person that is to the right of the people?"")"
14224768,Is there an airplane in the clear sky?," # clear sky is a property of the sky
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Is there an airplane in the clear sky?"")
    return bool_to_yesno(airplane_patches[0].verify_property(""airplane"", ""clear sky""))"
17259380,What hangs from the ceiling?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs from the ceiling?"")"
9346278,What is the name of the meat?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the meat?"")"
8913959,What is the color of the umbrella to the right of the other umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the umbrella to the right of the other umbrella?"")"
101050623,The truck has which color?," # contains a relation (has, is, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The truck has which color?"")"
141005498,What is the drink in the glass on the table?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink in the glass on the table?"")"
15926317,What is the grass growing on?," # contains a relation (growing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the grass growing on?"")"
17595996,"How do the windows look, full or empty?"," # contains a relation (full or empty), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How do the windows look, full or empty?"")"
10433375,Who is crouching?," # contains a relation (crouching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is crouching?"")"
11859109,What is the egg in?," # assumes only one egg patch
    image_patch = ImagePatch(image)
    egg_patches = image_patch.find(""egg"")
    if len(egg_patches) == 0:
        # If no egg is found, query the image directly
        return image_patch.simple_query(""What is the egg in?"")
    return egg_patches[0].simple_query(""What is the egg in?"")"
8506085,Which kind of clothing is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is red?"")"
18433184,Is there an apple that is not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an apple that is not red?"")"
141023124,Is the man in the top part or in the bottom of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the top part or in the bottom of the image?"")
    man_patch = man_patches[0]
    if man_patch.vertical_center > image_patch.vertical_center:
        return ""top""
    else:
        return ""bottom"""
14327715,What is the male person riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the male person riding?"")"
17203199,Is the microwave on a shelf?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the microwave on a shelf?"")"
6237980,Is the young girl to the left or to the right of the person that pushes the bicycle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young girl to the left or to the right of the person that pushes the bicycle?"")"
6382147,"Which part of the picture is the phone in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the picture is the phone in, the bottom or the top?"")"
8994960,Who is in the restaurant?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the restaurant?"")"
3938649,Does the mirror look square or round?," # mirror is a square
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Does the mirror look square or round?"")
    return mirror_patches[0].simple_query(""Does the mirror look square or round?"")"
1392758,Are there any beach umbrellas or napkins in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""beach umbrella"") or image_patch.exists(""napkin""))"
9835885,The man is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is holding what?"")"
9482517,Does the vest look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vest look green?"")"
9942963,What is the person next to the bike wearing?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person next to the bike wearing?"")"
11921818,What is the person that is to the left of the taxi cab looking in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the taxi cab looking in?"")"
18491193,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
16214857,On which side of the image is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16862251,Who is looking at the catcher the bench is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is looking at the catcher the bench is to the left of?"")"
2459433,"Where are the people, in the top or in the bottom part of the image?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where are the people, in the top or in the bottom part of the image?"")"
13654152,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14987,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
71025593,What is the flower on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the flower on?"")"
17268039,What is in front of the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the window?"")"
8883846,Are there any computer mousess to the left of the beer that is on the table?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any computer mousess to the left of the beer that is on the table?"")"
161004403,What food is in the red bowl?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is in the red bowl?"")"
7767145,What do both the plate and the table have in common?," # assumes only one plate and one table
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    table_patches = image_patch.find(""table"")
    # Question assumes only one plate and one table patch
    if len(plate_patches) == 0 or len(table_patches) == 0:
        # If no plate or table is found, query the image directly
        return image_patch.simple_query(""What do both the plate and the table have in common?"")
    plate_patch = plate_patches[0]
    table_patch = table_patches[0]
    common_properties = plate_patch.verify_property(""plate"", ""color"") and table_patch.verify_property(""table"", ""color"")
    common_properties = common_properties or plate_patch.verify_property(""plate"", ""material"") and table_patch.verify_property(""table"", ""material"")
    common_properties = common_properties or plate_patch.verify_property(""plate"", ""size"") and table_patch.verify_property(""table"", ""size"")
    return plate_patch.simple_query(""What do both the plate and the table have in common?"") # crop would include the common property so keep it in the query"
1865673,That mirror is on what?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That mirror is on what?"")"
9706402,Are there either any salt shakers or placemats in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""salt shaker"") or image_patch.exists(""placemat""))"
6769712,What is the table made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the table made of?"")"
19915501,What animal is sitting on the wood chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is sitting on the wood chair?"")"
13149406,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
17713162,What do both the clothes and the cloths have in common?," # clothes and cloths are the same object
    image_patch = ImagePatch(image)
    clothes_patches = image_patch.find(""clothes"")
    # Question assumes only one clothes patch
    if len(clothes_patches) == 0:
        # If no clothes are found, query the image directly
        return image_patch.simple_query(""What do both the clothes and the cloths have in common?"")
    return clothes_patches[0].simple_query(""What do both the clothes and the cloths have in common?"")"
2753419,Is there either a piano or a pillow in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""piano"") or image_patch.exists(""pillow""))"
4329716,Are there any urinals on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""urinal""))"
10181383,"Where in this photograph is the red umbrella, on the left or on the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photograph is the red umbrella, on the left or on the right?"")"
5449706,Are there both a bed and a pillow in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_bed and is_pillow)"
1751549,Which kind of furniture is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not blue?"")"
2969864,What kind of baked good is to the left of the knife?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is to the left of the knife?"")"
7704653,What is the item of furniture to the left of the man that wears a belt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the man that wears a belt?"")"
1843156,Is the shirt colorful or black and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt colorful or black and white?"")"
19936501,What is the vehicle to the right of the skateboard the person is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the skateboard the person is with?"")"
18453543,Are there any cabinets to the left of the remote?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet"") and image_patch.find(""remote"")[0].horizontal_center > image_patch.find(""cabinet"")[0].horizontal_center)"
4864603,What is that fire in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that fire in?"")"
11539034,What kind of furniture is to the right of the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the couch?"")"
18941567,What vegetables are to the right of the bottle on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are to the right of the bottle on the left?"")"
7380723,What is the person in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person in front of?"")"
10840872,Is the pillow on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow on the bed?"")"
7737480,What covers the window?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What covers the window?"")"
1379647,Where do you think is the motorcycle?," # returns the location of the motorcycle
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Where do you think is the motorcycle?"")
    return motorcycle_patches[0].simple_query(""Where do you think is the motorcycle?"") # crop would include the motorcycle so keep it in the query"
308704,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
19860357,What is the bird on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bird on?"")"
8173041,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11137558,Is the towel in the bottom part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel in the bottom part of the image?"")"
10277025,Are the animals in the picture of different species?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are the animals in the picture of different species?"")
    species = animal_patches[0].simple_query(""What species is the animal?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What species is the animal?"") != species:
            return ""yes""
    return ""no"""
17601898,Do the animals in the photo have different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the animals in the photo have different types?"")"
19697158,Is the house to the left or to the right of the man the water bottle is in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house to the left or to the right of the man the water bottle is in front of?"")"
18829138,Is the fence black and long?," # black and long
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the fence black and long?"")
    return bool_to_yesno(fence_patches[0].verify_property(""fence"", ""black"") and fence_patches[0].verify_property(""fence"", ""long""))"
14382702,Is the guy to the right or to the left of the man that looks at the frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the right or to the left of the man that looks at the frisbee?"")"
1662704,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
14231345,Are there soft drinks to the left of the person that is on the left?," # contains a relation (left of, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""soft drink"") and image_patch.simple_query(""Is the person on the left?"") == ""yes"")"
7647362,What is located on top of the cheese pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the cheese pizza?"")"
1870221,What do both the bowl and the plate have in common?," # assumes only one bowl and one plate
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    plate_patches = image_patch.find(""plate"")
    if len(bowl_patches) == 0 or len(plate_patches) == 0:
        # If no bowl or plate is found, query the image directly
        return image_patch.simple_query(""What do both the bowl and the plate have in common?"")
    bowl_patch = bowl_patches[0]
    plate_patch = plate_patches[0]
    common_properties = set(bowl_patch.simple_query(""What properties does the bowl have?"").split("", "")) & set(plate_patch.simple_query(""What properties does the plate have?"").split("", ""))
    return bowl_patch.simple_query(""What do both the bowl and the plate have in common?"") # crop would include the common properties so keep it in the query"
8446314,Do you see either a pillow or a bridge that are green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow_green = image_patch.exists(""pillow"") and image_patch.exists(""green"")
    is_bridge_green = image_patch.exists(""bridge"") and image_patch.exists(""green"")
    return bool_to_yesno(is_pillow_green or is_bridge_green)"
3245065,Are there benches in front of the building?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench in front of building"")) # crop would include the building so keep it in the query"
19506059,Is the lady wearing a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady wearing a skirt?"")"
7183250,Who is in front of the sky?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the sky?"")"
11601250,Is the squash in the bottom part or in the top of the picture?," # squash is a type of fruit
    image_patch = ImagePatch(image)
    squash_patches = image_patch.find(""squash"")
    # Question assumes only one squash patch
    if len(squash_patches) == 0:
        # If no squash is found, query the image directly
        return image_patch.simple_query(""Is the squash in the bottom part or in the top of the picture?"")
    if squash_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
3158814,Is the lush pasture both small and green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""lush pasture"", ""small"") and image_patch.verify_property(""lush pasture"", ""green""))"
19978485,What is located on top of the soft pretzel?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the soft pretzel?"")"
12977597,On which side of the picture are the glasses?," # left or right
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the glasses?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18676735,Is the tower made out of brick or steel?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower made out of brick or steel?"")"
8212802,Is there a surfboard to the right of the man in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a surfboard to the right of the man in the middle?"")"
8260727,Where is the snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the snow?"")"
1637957,"What color are the trousers, black or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the trousers, black or red?"")"
11765160,What animal is to the right of the white bucket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the white bucket?"")"
12754129,Which color is the box in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the box in the center?"")"
2740977,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
341120,Is the orange vegetable large or small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange vegetable large or small?"")"
13688639,Which color is the chair beside the other chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the chair beside the other chair?"")"
14259317,Is that shirt purple or gray?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that shirt purple or gray?"")"
8809515,What do you think is the man that is to the left of the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man that is to the left of the woman holding?"")"
87939,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
4787164,What is the batter holding?," # batter is a verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the batter holding?"")"
14987889,Is the tower on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower on the right side?"")"
18703744,What is the box holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box holding?"")"
13580202,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7731609,What's the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the floor made of?"")"
5105624,Is the utensil on the right side of the image?," # assumes only one utensil patch
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""utensil"")
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""Is the utensil on the right side of the image?"")
    utensil_patch = utensil_patches[0]
    if utensil_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
668891,"On which side of the picture is the stove, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the stove, the right or the left?"")"
4317075,Are there either paper plates or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_paper_plate = image_patch.exists(""paper plate"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_paper_plate or is_cup)"
11314012,Who is wearing the pajamas?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pajamas?"")"
2203475,On which side of the picture is the bun?," # left or right
    image_patch = ImagePatch(image)
    bun_patches = image_patch.find(""bun"")
    # Question assumes only one bun patch
    if len(bun_patches) == 0:
        # If no bun is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bun?"")
    if bun_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16169772,What's inside the refrigerator?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's inside the refrigerator?"")"
15514609,Which side of the picture are the beverages on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture are the beverages on?"")"
1054737,Does the ground have a different color than the skirt?," # ground and skirt are assumed to be in the same image
    image_patch = ImagePatch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch.simple_query(""Does the ground have a different color than the skirt?"")
    ground_color = ground_patches[0].simple_query(""What color is the ground?"")
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Does the ground have a different color than the skirt?"")
    skirt_color = skirt_patches[0].simple_query(""What color is the skirt?"")
    return bool_to_yesno(ground_color != skirt_color)"
467418,What is the man to the right of the helmet wearing?," # helmet is a headgear
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        return image_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    helmet_patch = helmet_patches[0]
    man_patch = man_patches[0]
    if helmet_patch.horizontal_center < man_patch.horizontal_center:
        return helmet_patch.simple_query(""What is the man to the right of the helmet wearing?"")
    return man_patch.simple_query(""What is the man to the right of the helmet wearing?"")"
11691835,What is the vehicle to the right of the flag that is on the wall called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the flag that is on the wall called?"")"
533141,"What animal is that, a giraffe or an elephant?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is that, a giraffe or an elephant?"")"
15126757,On which side is the entertainment center?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the entertainment center?"")"
16531298,What kind of appliance is the towel in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is the towel in front of?"")"
19221250,Are there guys at the table?," # contains a relation (at the table), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""guy at the table"")) # contains a relation (at the table), so ask directly"
8752768,Are there any remote controls in the photo that are not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""remote control"") and not image_patch.verify_property(""remote control"", ""blue""))"
2710426,Which color do you think the glove that the girl is wearing has?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the glove that the girl is wearing has?"")"
10575636,What is the person that is not old wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is not old wearing?"")"
7733740,What is the man sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man sitting on?"")"
16506611,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
19624408,Which kind of vegetable is on the hamburger?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on the hamburger?"")"
1545717,Are there any women or men that are surfing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman surfing"")
    is_man = image_patch.exists(""man surfing"")
    return bool_to_yesno(is_woman or is_man)"
436381,Is there a lamp to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a lamp to the left of the computer?"")"
3709692,Which kind of vegetable is on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on top of the pizza?"")"
131046523,What appliance is to the right of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the laptop?"")"
4926020,Do you see either gray vases or rackets there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gray_vase = image_patch.exists(""gray vase"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_gray_vase or is_racket)"
18605929,Are the trousers khaki and long?," # trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""Are the trousers khaki and long?"")
    return bool_to_yesno(trousers_patches[0].verify_property(""trousers"", ""khaki"") and trousers_patches[0].verify_property(""trousers"", ""long""))"
580264,Are there both windows and doors in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
12869258,What is the sink made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sink made of?"")"
1092206,Is the color of the coat black?," # coat is a common object
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Is the color of the coat black?"")
    return bool_to_yesno(coat_patches[0].verify_property(""coat"", ""black""))"
1549484,The man is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is wearing what?"")"
6809078,Which kind of animal is to the right of the dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the right of the dog?"")"
1066756,Are the donuts that look oval fresh and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the donuts that look oval fresh and white?"")"
1934965,"Which color is the tray that is to the left of the cutting board, yellow or black?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the tray that is to the left of the cutting board, yellow or black?"")"
811577,What animal is on the hill?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the hill?"")"
15230770,Is the cane to the right of the box that is made of plastic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cane to the right of the box that is made of plastic?"")"
7809597,Do you see any forks or bowls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork"") or image_patch.exists(""bowl""))"
15676601,Are there boxes on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""box on the ground"")) # crop would include the ground so keep it in the query"
1394695,Do you see any umbrellas to the left of the man in the middle of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any umbrellas to the left of the man in the middle of the image?"")"
1058659,What is the person sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person sitting on?"")"
8277743,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
19257912,What do you think is the white article of clothing in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the white article of clothing in this scene?"")"
7800820,What do you think is coming from the clock that is to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is coming from the clock that is to the right of the bag?"")"
1876870,The flowers are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The flowers are on what?"")"
6250236,What piece of furniture is leaning against the wall?," # contains a relation (leaning against), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is leaning against the wall?"")"
1406007,Is the dad to the left of a lion?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dad to the left of a lion?"")"
637226,What is the food container made of?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""What is the food container made of?"")
    return container_patches[0].simple_query(""What is the food container made of?"")"
3420226,What is the image showing?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the image showing?"") # image is a PIL Image"
8566636,"Where in this photo is the man, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the man, in the bottom or in the top?"")"
17521142,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
10338815,Is the grass behind a bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass behind a bench?"")"
7284603,"Where in the picture is the plane, in the top or in the bottom?"," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the plane, in the top or in the bottom?"")"
1460209,What is the kneeling man leaning on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kneeling man leaning on?"")"
17603914,What's on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the cake?"")"
12725482,What are the black items of clothing called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the black items of clothing called?"")"
21007710,Do the motorbike and the shoe have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    motorbike_patches = image_patch.find(""motorbike"")
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one motorbike and one shoe patch
    if len(motorbike_patches) == 0 or len(shoe_patches) == 0:
        # If no motorbike or shoe is found, query the image directly
        return image_patch.simple_query(""Do the motorbike and the shoe have a different colors?"")
    motorbike_patch = motorbike_patches[0]
    shoe_patch = shoe_patches[0]
    return bool_to_yesno(motorbike_patch.verify_property(""motorbike"", ""blue"") != shoe_patch.verify_property(""shoe"", ""blue""))"
6740341,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
81015024,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
3734260,"What vehicle is gray, the bus or the car?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is gray, the bus or the car?"")"
3583242,Is the container in the bottom or in the top of the image?," # container is a general term
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Is the container in the bottom or in the top of the image?"")
    if container_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
18257758,On which side of the image is the pine tree?," # left or right
    image_patch = ImagePatch(image)
    pine_patches = image_patch.find(""pine tree"")
    # Question assumes only one pine patch
    if len(pine_patches) == 0:
        # If no pine is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the pine tree?"")
    if pine_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14792523,Is the hair short and brown?," # hair is a tricky one, as it can be multiple patches
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Is the hair short and brown?"")
    return hair_patches[0].verify_property(""hair"", ""brown"") and hair_patches[0].verify_property(""hair"", ""short"")"
16628698,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
14511184,Is the raspberry to the left of a fruit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the raspberry to the left of a fruit?"")"
5714321,Are both these people female?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""female"") and image_patch.exists(""female""))"
9854807,Do you see any boxes to the right of the screen that is to the right of the water bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boxes to the right of the screen that is to the right of the water bottle?"")"
7899372,Are there any fences to the right of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there any fences to the right of the man that is wearing a shirt?"")
    man_patch = man_patches[0]
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        return ""no""
    for fence_patch in fence_patches:
        if fence_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
6493939,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
7439844,What is the animal that the woman sits on?," # contains a relation (sits on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the woman sits on?"")"
6676254,What is common to the boot and the coat?," # assumes only one boot and one coat
    image_patch = ImagePatch(image)
    boot_patches = image_patch.find(""boot"")
    coat_patches = image_patch.find(""coat"")
    if len(boot_patches) == 0 or len(coat_patches) == 0:
        return image_patch.simple_query(""What is common to the boot and the coat?"")
    boot_patch = boot_patches[0]
    coat_patch = coat_patches[0]
    common_properties = boot_patch.verify_property(""boot"", ""brown"") and coat_patch.verify_property(""coat"", ""brown"")
    common_properties = common_properties or boot_patch.verify_property(""boot"", ""leather"") and coat_patch.verify_property(""coat"", ""leather"")
    common_properties = common_properties or boot_patch.verify_property(""boot"", ""brown leather"") and coat_patch.verify_property(""coat"", ""brown leather"")
    return ""brown leather"" if common_properties else ""nothing"""
6141306,Which kind of food is not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not yellow?"")"
10472155,What is the box on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box on?"")"
13516324,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
10208150,Do you see cupboards to the left of the child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cupboards to the left of the child?"")"
14469491,What are the people that are to the right of the book watching?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the people that are to the right of the book watching?"")"
2368924,What kind of toy is on the pillow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of toy is on the pillow?"")"
13174352,Is the book in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book in the bottom part of the photo?"")"
6192603,Which kind of vehicle is to the left of the ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the ball?"")"
5520206,Is the box on the left of the photo?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box on the left of the photo?"")"
13817914,What is the motorcycle carrying?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the motorcycle carrying?"")"
5777268,What is the color of the grass the zebra is grazing on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the grass the zebra is grazing on?"")"
7340477,Which kind of device is on the clock?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the clock?"")"
3909327,Is this a cell phone or a television?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a cell phone or a television?"")"
944938,Is the catcher to the left of the man that is holding the baseball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher to the left of the man that is holding the baseball?"")"
2932202,Is this a white table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a white table?"")"
8203644,Do you see a desk or a lamp there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a desk or a lamp there?"")"
273580,Is the metal container to the left of the spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal container to the left of the spoon?"")"
11608326,What device is on the mat?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the mat?"")"
3615754,Do the counter and the dish have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    counter_patches = image_patch.find(""counter"")
    # Question assumes only one counter patch
    if len(counter_patches) == 0:
        # If no counter is found, query the image directly
        return image_patch.simple_query(""Do the counter and the dish have the same color?"")
    counter_patch = counter_patches[0]
    dish_patches = image_patch.find(""dish"")
    # Question assumes only one dish patch
    if len(dish_patches) == 0:
        return ""no""
    dish_patch = dish_patches[0]
    return bool_to_yesno(counter_patch.verify_property(""counter"", ""blue"") == dish_patch.verify_property(""dish"", ""blue""))"
8415126,Is the green bottle to the right or to the left of the black device?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green bottle to the right or to the left of the black device?"")"
11506073,Do you see any men to the right of the cup the chalkboard is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the right of the cup the chalkboard is to the right of?"")"
364913,Which side is the picture on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the picture on?"")"
12602199,How is the article of clothing that is blue called?," # returns the name of the article of clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""article of clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""How is the article of clothing that is blue called?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""article of clothing"", ""blue""):
            return clothing_patch.simple_query(""How is the article of clothing that is blue called?"")
    return clothing_patch.simple_query(""How is the article of clothing that is blue called?"") # if no blue clothing is found, query the image directly"
16712711,Is the shelf to the right of the small refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the right of the small refrigerator?"")"
18737242,What is that cooking utensil called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that cooking utensil called?"")"
16482479,Are there both a door and a window in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
11246723,Is the radiator in the top or in the bottom?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the radiator in the top or in the bottom?"")"
16798902,What type of food is inside the white plate?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is inside the white plate?"")"
2468297,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
15111293,Which color does the shirt that the boy is wearing have?," # shirt is not a property of the boy
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Which color does the shirt that the boy is wearing have?"")
    boy_patch = boy_patches[0]
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return image_patch.simple_query(""Which color does the shirt that the boy is wearing have?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What color is the shirt?"") # crop would include the shirt so keep it in the query"
1011051,Which kind of animal is purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is purple?"")"
191008708,How tall are the green trees?," # returns a string
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""green tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""How tall are the green trees?"")
    return tree_patches[0].simple_query(""How tall are the green trees?"")"
16283574,What is in front of the bridge?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the bridge?"")"
17493271,Are there brown plates or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_plate = image_patch.exists(""brown plate"")
    is_brown_chair = image_patch.exists(""brown chair"")
    return bool_to_yesno(is_brown_plate or is_brown_chair)"
13673698,What piece of furniture isn't brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture isn't brown?"")"
15198003,What is the watercraft that the water is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the watercraft that the water is behind of?"")"
3180706,On which side of the picture is the skier?," # left or right
    image_patch = ImagePatch(image)
    skier_patches = image_patch.find(""skier"")
    # Question assumes only one skier patch
    if len(skier_patches) == 0:
        # If no skier is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the skier?"")
    return ""left"" if skier_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
10845663,What is he on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he on?"")"
7549359,Is he to the left or to the right of the round plate?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the left or to the right of the round plate?"")"
18917746,Do you see any men to the left of the camera on the right?," # left of the camera on the right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Do you see any men to the left of the camera on the right?"")
    for man_patch in man_patches:
        if man_patch.horizontal_center < image_patch.horizontal_center:
            return ""yes""
    return ""no"""
244850,Who is in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the fence?"")"
10344864,What is the bottle cap on?," # bottle cap is on the bottle
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bottle cap on?"")"
6568334,Is the player in the top part of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the player in the top part of the photo?"")"
18267634,The helmet is on what?," # helmet is on what
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""The helmet is on what?"")
    return helmet_patches[0].simple_query(""The helmet is on what?"") # crop would include the helmet so keep it in the query"
13548513,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
131037538,Do you see any boys to the left of the racket on the left side of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boys to the left of the racket on the left side of the image?"")"
3136338,Where is the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the horse?"")"
11766435,Is the chair green or white?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair green or white?"")"
7175386,"Which is less healthy, the cake or the cheese?"," # assumes only one cake and one cheese
    image_patch = ImagePatch(image)
    cake_patches = image_patch.find(""cake"")
    cheese_patches = image_patch.find(""cheese"")
    if len(cake_patches) == 0 or len(cheese_patches) == 0:
        return image_patch.simple_query(""Which is less healthy, the cake or the cheese?"")
    cake = cake_patches[0]
    cheese = cheese_patches[0]
    if cake.verify_property(""cake"", ""healthy"") and cheese.verify_property(""cheese"", ""healthy""):
        return image_patch.simple_query(""Which is less healthy, the cake or the cheese?"")
    elif cake.verify_property(""cake"", ""healthy""):
        return ""cheese""
    elif cheese.verify_property(""cheese"", ""healthy""):
        return ""cake""
    else:
        return image_patch.simple_query(""Which is less healthy, the cake or the cheese?"")"
3127661,Are there any cars to the right of the motorcycle that looks yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    motorcycle_patches = image_patch.find(""motorcycle"")
    # Question assumes only one motorcycle patch
    if len(motorcycle_patches) == 0:
        # If no motorcycle is found, query the image directly
        return image_patch.simple_query(""Are there any cars to the right of the motorcycle that looks yellow?"")
    motorcycle_patch = motorcycle_patches[0]
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        return ""no""
    for car_patch in car_patches:
        if car_patch.horizontal_center > motorcycle_patch.horizontal_center:
            return bool_to_yesno(car_patch.verify_property(""car"", ""yellow""))
    return ""no"""
7132591,What is the girl on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl on?"")"
13308261,Do you see either any pots or lamps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pot"") or image_patch.exists(""lamp""))"
3188083,Do you see any rackets or umbrellas that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any rackets or umbrellas that are red?"")"
11508716,Are there clocks in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""clock""))"
10968113,Is the mouse that is to the left of the computer mouse large and black?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mouse that is to the left of the computer mouse large and black?"")"
1693519,Are there monitors near the laptop the book is in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there monitors near the laptop the book is in front of?"")"
3410325,Are there either small windows or doors in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_small_window = image_patch.exists(""small window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_small_window or is_door)"
395031,Are there both doors and windows in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
9962459,Who is riding on a skateboard?," # contains a relation (riding on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding on a skateboard?"")"
18855620,What is the boy throwing?," # contains a relation (throwing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy throwing?"")"
12929338,Is this a train or a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a train or a truck?"")"
16579867,Is the drawer to the left or to the right of the stove?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drawer to the left or to the right of the stove?"")"
12988624,What is the ring on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ring on?"")"
1712976,What is the material of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the material of the fence?"")"
33818,Which animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animal is this?"")"
7870592,Is the man in front of the side walk short and angry?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man in front of the side walk short and angry?"")"
18932539,Who is in front of the bus in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the bus in the center?"")"
18443801,Which kind of bag is on the platform?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of bag is on the platform?"")"
17237070,What color is the cap?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cap?"")"
10217761,Are the dogs white or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the dogs white or brown?"")"
3181597,Do you see either any black ovens or pots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_oven = image_patch.exists(""oven"")
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_oven or is_pot)"
1863836,What kind of furniture is the white food draped over?," # contains a relation (drape over), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the white food draped over?"")"
4764849,What kind of furniture is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is this?"")"
19751434,Is there any chair to the right of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any chair to the right of the laptop?"")"
9498680,Are there any shelves to the left of the clock that is in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelf"") and image_patch.find(""clock"")[0].vertical_center == image_patch.upper)"
3465862,Which side of the photo is the brown beverage on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the brown beverage on?"")"
8234088,Are there any peppers or eggs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pepper"") or image_patch.exists(""egg""))"
6638261,Does the table look wooden and white?," # returns yes or no
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Does the table look wooden and white?"")
    return bool_to_yesno(table_patches[0].verify_property(""table"", ""wooden"") and table_patches[0].verify_property(""table"", ""white""))"
13814962,"What kind of food is cut, the pizza or the tomato?"," # contains a relation (cut), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is cut, the pizza or the tomato?"")"
111019543,What is the person to the left of the player wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the player wearing?"")"
18956074,What devices are on the desk that is made of wood?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What devices are on the desk that is made of wood?"")"
10325617,Are there couches or cabinets that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_couch = image_patch.exists(""couch"")
    is_cabinet = image_patch.exists(""cabinet"")
    is_red_couch = image_patch.exists(""couch"") and image_patch.exists(""red"")
    is_red_cabinet = image_patch.exists(""cabinet"") and image_patch.exists(""red"")
    return bool_to_yesno(is_couch or is_cabinet) and not (is_red_couch or is_red_cabinet)"
2630682,What is the person that is to the right of the umbrella holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the right of the umbrella holding?"")"
8129271,What are the clothes in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the clothes in front of?"")"
121050681,The sky has what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sky has what color?"")"
17616553,Who is on the couch to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the couch to the right of the people?"")"
4565940,Is the meat on the sandwich both thick and pink?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the meat on the sandwich both thick and pink?"")"
2166037,"In which part of the photo is the bowl, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the bowl, the top or the bottom?"")"
7696413,Which color is the device to the left of the mouse?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the device to the left of the mouse?"")"
11489097,What is in front of the car that is to the right of the glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the car that is to the right of the glasses?"")"
19890002,Is there either a colorful scarf or hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_colorful_scarf = image_patch.exists(""colorful scarf"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_colorful_scarf or is_hat)"
12213544,Which color is the cat's nose?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the cat's nose?"")"
546059,Are there buses on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
19630793,What is the device that is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is wearing a shirt?"")"
13637952,On which side of the picture are the skis?," # left or right
    image_patch = ImagePatch(image)
    skis_patches = image_patch.find(""skis"")
    # Question assumes only one skis patch
    if len(skis_patches) == 0:
        # If no skis are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the skis?"")
    return ""left"" if skis_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3655942,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
13359467,What color is the shirt the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man is wearing?"")"
11107735,"Which part of the image is the frisbee in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the image is the frisbee in, the top or the bottom?"")"
4564952,Is there a keyboard to the left of the computer in the bottom?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a keyboard to the left of the computer in the bottom?"")"
10880618,Who is wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a cap?"")"
3237665,Is the leather bag to the left or to the right of the man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the leather bag to the left or to the right of the man?"")"
7940869,What vehicle is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is in front of the trees?"")"
11499085,What is the cliff surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cliff surrounded by?"")"
1582572,Is the knife in the top part or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the top part or in the bottom of the photo?"")"
225867,"Which side of the picture is the chair on, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture is the chair on, the left or the right?"")"
3475255,Is there any meat in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""meat""))"
14189200,What animal is carrying the baseball bat?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is carrying the baseball bat?"")"
1056721,What kind of device is the child holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the child holding?"")"
4270548,Are there both doors and windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
12128639,What is the man to the left of the computer wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the computer wearing?"")"
2966255,Are the speakers on a mirror?," # mirror is a tricky one, it's a reflective surface
    image_patch = ImagePatch(image)
    speaker_patches = image_patch.find(""speaker"")
    # Question assumes only one speaker patch
    if len(speaker_patches) == 0:
        # If no speaker is found, query the image directly
        return image_patch.simple_query(""Are the speakers on a mirror?"")
    for speaker_patch in speaker_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > speaker_patch.horizontal_center:
                return ""yes""
    return ""no"""
9774632,What is on the dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dirt?"")"
177224,On which side is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2534839,Is there any bear in the field?," # field is a common object
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Is there any bear in the field?"")
    return ""yes"""
14921848,What do both the cloths and the trousers have in common?," # returns a string
    image_patch = ImagePatch(image)
    cloth_patches = image_patch.find(""cloth"")
    # Question assumes only one cloth patch
    if len(cloth_patches) == 0:
        # If no cloth is found, query the image directly
        return image_patch.simple_query(""What do both the cloths and the trousers have in common?"")
    cloth_patch = cloth_patches[0]
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        return ""no""
    trousers_patch = trousers_patches[0]
    common_properties = set(cloth_patch.verify_property(""cloth"", property) for property in [""red"", ""blue"", ""green"", ""white"", ""black"", ""gray"", ""brown"", ""yellow"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""])
    common_properties = common_properties.union(set(trousers_patch.verify_property(""trousers"", property) for property in [""red"", ""blue"", ""green"", ""white"", ""black"", ""gray"", ""brown"", ""yellow"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""]))
    return common_properties.pop()"
17826327,What are the tires made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the tires made of?"")"
19217932,How long is the straight hair?," # returns a string
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""How long is the straight hair?"")
    return hair_patches[0].simple_query(""How long is the straight hair?"") # crop would include the straight hair so keep it in the query"
14650133,Are the boots red or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the boots red or black?"")"
1979098,How large is the trashcan the toilet is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How large is the trashcan the toilet is to the right of?"")"
2274139,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
9103439,Is the food on a platter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the food on a platter?"")"
7145984,Is the dumpster different in color than the vest?," # returns yes or no
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return bool_to_yesno(image_patch.simple_query(""Is the dumpster different in color than the vest?"") == ""yes"")"
16813526,Who is wearing a shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shoe?"")"
1716424,Who is looking at the ground?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is looking at the ground?"")"
8136303,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
6171894,Is the man on the left or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left or on the right of the picture?"")"
3150702,"On which side is the shower curtain, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the shower curtain, the left or the right?"")"
1344114,Is the picture to the left or to the right of the glasses on the left side?," # left and right are relative to the glasses
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture to the left or to the right of the glasses on the left side?"")
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""Is the picture to the left or to the right of the glasses on the left side?"")
    glasses_patch = glasses_patches[0]
    if picture_patches[0].horizontal_center < glasses_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
132926,What are the animals behind the fence on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals behind the fence on the right side?"")"
21056945,Is the surf board in front of a squirrel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the surf board in front of a squirrel?"")"
4351986,Is the car on the street large and yellow?," # returns yes or no
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Is the car on the street large and yellow?"")
    car_patch = car_patches[0]
    return bool_to_yesno(car_patch.verify_property(""car"", ""large"") and car_patch.verify_property(""car"", ""yellow""))"
14707931,Are there any magazines or batteries?," # battery is a small object
    image_patch = ImagePatch(image)
    is_magazine = image_patch.exists(""magazine"")
    is_battery = image_patch.exists(""battery"")
    return bool_to_yesno(is_magazine or is_battery)"
2851428,What is common to the crate and the trunk?," # common to crate and trunk
    image_patch = ImagePatch(image)
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        # If no crate is found, query the image directly
        return image_patch.simple_query(""What is common to the crate and the trunk?"")
    crate_patch = crate_patches[0]
    trunk_patches = image_patch.find(""trunk"")
    # Question assumes only one trunk patch
    if len(trunk_patches) == 0:
        return image_patch.simple_query(""What is common to the crate and the trunk?"")
    trunk_patch = trunk_patches[0]
    common_properties = set(crate_patch.verify_property(""crate"", property) for property in [""brown"", ""wooden"", ""square"", ""has a handle""]) & set(trunk_patch.verify_property(""trunk"", property) for property in [""brown"", ""wooden"", ""square"", ""has a handle""])
    if len(common_properties) == 0:
        return image_patch.simple_query(""What is common to the crate and the trunk?"")
    return common_properties.pop()"
9395559,Who holds the plastic brush?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the plastic brush?"")"
81017265,What hangs on the door?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs on the door?"")"
4419216,Which kind of furniture is the vase in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the vase in front of?"")"
385046,This laptop is in front of who?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""This laptop is in front of who?"")"
487485,What kind of furniture is the picture behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the picture behind of?"")"
19847079,Where is the trunk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the trunk?"")"
10355669,Is he to the right or to the left of the racket?," # assumes only one man and one racket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    racket_patches = image_patch.find(""racket"")
    if len(man_patches) == 0 or len(racket_patches) == 0:
        return image_patch.simple_query(""Is he to the right or to the left of the racket?"")
    man_patch = man_patches[0]
    racket_patch = racket_patches[0]
    if man_patch.horizontal_center > racket_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
16126710,Do you see frisbees to the right of the coach on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see frisbees to the right of the coach on the left?"")"
19243480,What does the person that is standing wear?," # contains a relation (standing, sitting, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person that is standing wear?"")"
13560829,Is that fence to the right of an elephant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that fence to the right of an elephant?"")"
9460509,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17737371,Do you see bears to the right of the mirror on the left side of the image?," # mirror is on the left
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Do you see bears to the right of the mirror on the left side of the image?"")
    for bear_patch in bear_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center < image_patch.horizontal_center and bear_patch.horizontal_center > mirror_patch.horizontal_center:
                return ""yes""
    return ""no"""
885505,Is the man that is to the right of the lady wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the right of the lady wearing a hat?"")"
13427234,Is the bear to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bear to the left of a chair?"")"
214743,Is there either a couch or a blanket in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_couch = image_patch.exists(""couch"")
    is_blanket = image_patch.exists(""blanket"")
    return bool_to_yesno(is_couch or is_blanket)"
9888807,Does the plate on the placemat look brown and square?," # returns yes or no
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Does the plate on the placemat look brown and square?"")
    for plate_patch in plate_patches:
        if plate_patch.verify_property(""plate"", ""brown"") and plate_patch.verify_property(""plate"", ""square""):
            return ""yes""
    return ""no"""
7569595,Is the cup on the left side?," # assumes only one cup
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    if len(cup_patches) == 0:
        return image_patch.simple_query(""Is the cup on the left side?"")
    cup_patch = cup_patches[0]
    if cup_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
9848811,Which kind of fruit is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is red?"")"
536830,Is he sniffing a bottle?," # contains a relation (sniffing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he sniffing a bottle?"")"
11912836,Are there hot dogs or cheese cubes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""hot dog"") or image_patch.exists(""cheese cube""))"
566355,Is the glass large and clear?," # contains a relation (large and clear), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass large and clear?"")"
11425711,How long is the hair?," # returns a string
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""How long is the hair?"")
    return hair_patches[0].simple_query(""How long is the hair?"") # crop would include the hair so keep it in the query"
9219461,Who is in front of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the bus?"")"
1019427,What is in front of the man that wears glasses?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the man that wears glasses?"")"
12306026,What device is to the right of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the monitor?"")"
16368866,Is there either a zebra or a hippo in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") or image_patch.exists(""hippo""))"
9852198,Is the green couch to the right or to the left of the yellow curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green couch to the right or to the left of the yellow curtain?"")"
7681889,What do you think is the man wearing?," # returns a string
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What do you think is the man wearing?"")
    return man_patches[0].simple_query(""What do you think is the man wearing?"") # crop would include the clothing so keep it in the query"
16892296,Is the flag different in color than the fan?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flag different in color than the fan?"")"
2320204,Is he Asian and old?," # contains a relation (Asian, old, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he Asian and old?"")"
5700925,What animal is the young person guiding?," # contains a relation (guiding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the young person guiding?"")"
4193953,Are there any cups that are not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cup"") and not image_patch.exists(""large cup"")) # assumes only one cup patch"
14376750,Do you see both chairs and pillows there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_chair and is_pillow)"
6642629,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
477552,Of what race is the person that is holding the pizza?," # race is a property of a person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Of what race is the person that is holding the pizza?"")
    for person_patch in person_patches:
        if person_patch.verify_property(""person"", ""holding_pizza""):
            return person_patch.simple_query(""Of what race is the person that is holding the pizza?"")
    return ""unknown"""
681067,What do you think is around the bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is around the bush?"")"
1022447,Which kind of animal is on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the grass?"")"
11713558,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
13429830,What is the animal underneath the palm tree that is not small called?," # contains a relation (underneath, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal underneath the palm tree that is not small called?"")"
16750459,Is the boy wearing a collar?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy wearing a collar?"")"
6493224,What type of furniture is the cat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the cat on?"")"
17451788,What type of device is behind the laptop that is not unopened?," # contains a relation (behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is behind the laptop that is not unopened?"")"
31071710,What is the cookie jar sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cookie jar sitting on?"")"
11317878,What animal is the mirror behind of?," # mirror is a relational verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the mirror behind of?"")"
3245353,Is the man to the right or to the left of the picture that is of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the picture that is of the woman?"")"
3568041,Where is that player?," # returns the position of the player
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    # Question assumes only one player patch
    if len(player_patches) == 0:
        # If no player is found, query the image directly
        return image_patch.simple_query(""Where is that player?"")
    return player_patches[0].simple_query(""Where is that player?"") # crop would include the player so keep it in the query"
18770043,What kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is blue?"")"
1528049,What is the person holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person holding?"")"
13831781,Do you see both window and a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_window and is_fence)"
876653,"What material is the statue to the left of the lady, bronze or stone?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the statue to the left of the lady, bronze or stone?"")"
3746409,What is the airplane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the airplane in front of?"")"
5812123,What is in front of the dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the dog?"")"
4459832,Are there tables or dressers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_table = image_patch.exists(""table"")
    is_dresser = image_patch.exists(""dresser"")
    return bool_to_yesno(is_table or is_dresser)"
6313171,On which side of the image is the driver?," # left or right
    image_patch = ImagePatch(image)
    driver_patches = image_patch.find(""driver"")
    # Question assumes only one driver patch
    if len(driver_patches) == 0:
        # If no driver is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the driver?"")
    driver_patch = driver_patches[0]
    if driver_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1159109,What color are the shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the shorts?"")"
447264,Are there either red rackets or motorbikes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_racket = image_patch.exists(""red rackets"")
    is_motorbike = image_patch.exists(""motorbike"")
    return bool_to_yesno(is_red_racket or is_motorbike)"
341084,Do you see a chair there that is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a chair there that is green?"")"
1942824,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
3923124,What is that man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man in front of?"")"
6357464,What kind of device is not off?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is not off?"")"
101018409,What is the ladder on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ladder on?"")"
11305521,Is there an orange in front of the textured wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an orange in front of the textured wall?"")"
10520471,On which side of the picture is the large tree?," # left or right
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""large tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the large tree?"")
    if tree_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
151021566,Do you see any benches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench""))"
108248,Do you see any blankets to the left of the couch?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any blankets to the left of the couch?"")"
18554141,Is the telephone on a desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the telephone on a desk?"")"
161056998,What kind of fast food is large?," # contains a relation (large), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is large?"")"
12186994,Which side of the image is the picture on?," # left or right
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the picture on?"")
    if picture_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11514694,What is the name of the fruit to the left of the lemon in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the fruit to the left of the lemon in the photo?"")"
2989763,Is the wood chair on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood chair on the left side of the picture?"")"
13320500,Is the knife to the left of a spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife to the left of a spoon?"")"
31068473,Is the teddy bear to the right or to the left of the man that wears pants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the teddy bear to the right or to the left of the man that wears pants?"")"
13416266,Is the picnic table in the top or in the bottom part?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picnic table in the top or in the bottom part?"")"
188970,Are there any puppys or lizards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_puppy = image_patch.exists(""puppy"")
    is_lizard = image_patch.exists(""lizard"")
    return bool_to_yesno(is_puppy or is_lizard)"
126263,Are there both a plate and a cup in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_plate and is_cup)"
928135,"What is the man to the left of the coffee table sitting on, a chair or a bed?"," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the coffee table sitting on, a chair or a bed?"")"
15236612,What appliance is to the left of the oven?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the oven?"")"
3122400,How long are the pines?," # returns a string
    image_patch = ImagePatch(image)
    pine_patches = image_patch.find(""pine"")
    # Question assumes only one pine patch
    if len(pine_patches) == 0:
        # If no pine is found, query the image directly
        return image_patch.simple_query(""How long are the pines?"")
    return pine_patches[0].simple_query(""How long are the pines?"") # crop would include the height so keep it in the query"
128108,"What type of animal is that boy leading, a horse or a sheep?"," # contains a relation (leading), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is that boy leading, a horse or a sheep?"")"
15666338,What are the boots made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the boots made of?"")"
14331621,What kind of animal is lying in the snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is lying in the snow?"")"
6852849,What color are the curtains?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the curtains?"")"
5976152,What animal is to the right of the palm tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the palm tree?"")"
997593,What is the name of the white vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the white vehicle?"")"
11016167,Is the cereal in the top part or in the bottom of the picture?," # contains a relation (on top of, in the bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cereal in the top part or in the bottom of the picture?"")"
12156088,Is the woman's umbrella both black and large?," # returns yes or no
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman's umbrella both black and large?"")
    woman_patch = woman_patches[0]
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        return ""no""
    umbrella_patch = umbrella_patches[0]
    is_black = umbrella_patch.verify_property(""umbrella"", ""black"")
    is_large = umbrella_patch.verify_property(""umbrella"", ""large"")
    return bool_to_yesno(is_black and is_large)"
14288342,Does the mirror look metallic?," # mirror is a tricky one, it's not always metallic
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Does the mirror look metallic?"")
    return bool_to_yesno(mirror_patches[0].verify_property(""mirror"", ""metallic""))"
12553347,What is the animal that the tree is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the tree is behind of?"")"
7520739,What kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is white?"")"
8571519,What kind of animal is in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the field?"")"
877072,How long is the hair?," # returns a string
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""How long is the hair?"")
    return hair_patches[0].simple_query(""How long is the hair?"") # crop would include the hair so keep it in the query"
5362823,Is there any bag or bicycle in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_bicycle = image_patch.exists(""bicycle"")
    return bool_to_yesno(is_bag or is_bicycle)"
10920723,What does the napkin next to the plate lie on top of?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the napkin next to the plate lie on top of?"")"
4685534,Are there women or catchers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_catcher = image_patch.exists(""catcher"")
    return bool_to_yesno(is_woman or is_catcher)"
16784281,The watermelon in the middle of the picture has what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The watermelon in the middle of the picture has what color?"")"
19914290,Is the hose silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hose silver?"")"
19528831,Are there mirrors or tables in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_mirror or is_table)"
21065481,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4932053,What kind of animal is to the left of the backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the backpack?"")"
13933934,"In which part of the image are the white cabinets, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the white cabinets, the top or the bottom?"")"
9814162,Are the flags red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    flag_patches = image_patch.find(""flag"")
    # Question assumes only one flag patch
    if len(flag_patches) == 0:
        # If no flag is found, query the image directly
        return image_patch.simple_query(""Are the flags red?"")
    return bool_to_yesno(flag_patches[0].verify_property(""flag"", ""red""))"
6932201,On which side of the image is the backpack?," # left or right
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the backpack?"")
    backpack_patch = backpack_patches[0]
    if backpack_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15255341,What vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is on the street?"")"
14225820,What kind of device is not on?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is not on?"")"
6577444,Does this frisbee look orange and round?," # returns yes or no
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""Does this frisbee look orange and round?"")
    return bool_to_yesno(frisbee_patches[0].verify_property(""frisbee"", ""orange"") and frisbee_patches[0].verify_property(""frisbee"", ""round""))"
17420814,Does the round plate appear to be large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the round plate appear to be large?"")"
41036235,Do you see either any tea or wine that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tea = image_patch.exists(""tea"")
    is_wine = image_patch.exists(""wine"")
    if is_tea or is_wine:
        return bool_to_yesno(image_patch.simple_query(""Is the tea or wine black?"") == ""yes"")
    return ""no"""
14852742,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
17289281,Does the man to the right of the chairs wear shorts?," # contains a relation (right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the right of the chairs wear shorts?"")"
6118577,What is the height of the trees behind the cow?," # returns a string
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is the height of the trees behind the cow?"")"
11642256,"Which part of the photo are the pillows in, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the photo are the pillows in, the top or the bottom?"")"
1074156,On which side is the black vehicle?," # left or right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""On which side is the black vehicle?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13268194,On which side of the picture is the scooter?," # left or right
    image_patch = ImagePatch(image)
    scooter_patches = image_patch.find(""scooter"")
    # Question assumes only one scooter patch
    if len(scooter_patches) == 0:
        # If no scooter is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the scooter?"")
    if scooter_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16202554,What is full of the luggage?," # contains a relation (full of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is full of the luggage?"")"
15840427,What animal is on top of the suitcase?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on top of the suitcase?"")"
18913558,Is the blue dress checkered and sleeveless?," # returns yes or no
    image_patch = ImagePatch(image)
    blue_dress_patches = image_patch.find(""blue dress"")
    # Question assumes only one blue dress patch
    if len(blue_dress_patches) == 0:
        # If no blue dress is found, query the image directly
        return image_patch.simple_query(""Is the blue dress checkered and sleeveless?"")
    blue_dress_patch = blue_dress_patches[0]
    is_checkered = blue_dress_patch.verify_property(""blue dress"", ""checkered"")
    is_sleeveless = blue_dress_patch.verify_property(""blue dress"", ""sleeveless"")
    return bool_to_yesno(is_checkered and is_sleeveless)"
4603397,Is the red car on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red car on the left of the image?"")"
19743625,What place is the picture in?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is the picture in?"")"
1869878,Is there a woman to the left of the umbrella in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the left of the umbrella in the image?"")"
41013774,Who wears trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears trousers?"")"
10408976,Is the sink white and metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sink white and metallic?"")"
719046,What is the cow doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cow doing?"")"
1000064,What is the helmet on?," # helmet is on the head
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""What is the helmet on?"")
    return helmet_patches[0].simple_query(""What is the helmet on?"") # crop would include the head so keep it in the query"
19553245,What color is the flag that is hanging on the pole?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the flag that is hanging on the pole?"")"
8992090,What vehicle is maroon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is maroon?"")"
15799701,Are there pictures on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture on the wall"")) # contains a relation (on the wall), so ask directly"
4931685,What color is the bag that is on the left side?," # contains a relation (on the left, on the right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag that is on the left side?"")"
16818923,Is the white taxi on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white taxi on the left of the photo?"")"
7255609,Which kind of dessert is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of dessert is on the table?"")"
61000675,Are there remote controls or TVs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_remote_control = image_patch.exists(""remote control"")
    is_tv = image_patch.exists(""TV"")
    return bool_to_yesno(is_remote_control or is_tv)"
3116671,Where is the bench?," # returns the location of the bench
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Where is the bench?"")
    return bench_patches[0].simple_query(""Where is the bench?"") # crop would include the bench so keep it in the query"
10725208,Is there a blanket to the left of the boy that wears a hat?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a blanket to the left of the boy that wears a hat?"")"
19229603,Which kind of furniture is the dirt in?," # dirt is not a piece of furniture
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the dirt in?"")"
18732897,What kind of clothing is made of leather?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is made of leather?"")"
14430213,How is the brown clothing item called?," # clothing item is brown
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""How is the brown clothing item called?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.simple_query(""How is the brown clothing item called?"") # crop would include the brown clothing item so keep it in the query"
16943324,What kind of meat is on the hot dog?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of meat is on the hot dog?"")"
13587530,Is the container snowy?," # container is a general term
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Is the container snowy?"")
    return bool_to_yesno(container_patches[0].verify_property(""container"", ""snowy""))"
4518592,What color do you think the pants that are not small have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the pants that are not small have?"")"
12647888,Is the shelf on the right side of the photo?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf on the right side of the photo?"")"
16795095,What is the color of the sweater that the lady is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sweater that the lady is wearing?"")"
11131650,Which kind of vehicle is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is in front of the trees?"")"
10863457,Is the oven in the kitchen silver or black?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the oven in the kitchen silver or black?"")"
11529371,Are there any benches near the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") and image_patch.exists(""fence""))"
4259987,Does the lamp have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""lamp"", ""black""))"
1990675,Do you see any boys to the left of the person in the middle of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boys to the left of the person in the middle of the photo?"")"
41048961,Who is sitting on the bench on the right side?," # contains a relation (on, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the bench on the right side?"")"
6989201,"On which side of the image is the green kite, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the green kite, the left or the right?"")"
13922621,Are there chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
16622298,What's the ship sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the ship sitting on?"")"
14650692,What do you think is the animal on the carpet called?," # returns the name of the animal
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the animal on the carpet called?"")"
18905377,Are there any panda bears in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""panda bear in the water"")) # crop would include the water so keep it in the query"
18847765,What is the blue article of clothing in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blue article of clothing in this photo?"")"
182690,Do you see any fences that are not made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any fences that are not made of wood?"")"
4531159,What is the table on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the table on?"")"
12708977,Which kind of furniture is not wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not wooden?"")"
12317178,Does the animal in front of the boats sit on the bench?," # contains a relation (in front of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal in front of the boats sit on the bench?"")"
805857,What piece of furniture is yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is yellow?"")"
6644274,Which color is the hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the hair?"")"
181050034,What is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building?"")"
1673473,What is in front of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the lamp?"")"
1747666,What is the item of furniture to the right of the toothbrush called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the toothbrush called?"")"
17194812,Is the cabinet to the left of the desk?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet to the left of the desk?"")"
657397,How old is she?," # age is a property of a person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""How old is she?"")
    return person_patches[0].simple_query(""How old is she?"") # crop would include the face so keep it in the query"
1788788,Who is walking with the skateboard?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking with the skateboard?"")"
1910745,Are there plates to the right of the device that is plugged into the laptop computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there plates to the right of the device that is plugged into the laptop computer?"")"
11105355,Do you see either any chairs or TVs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""TV""))"
1625467,What is he holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he holding?"")"
18661366,Are there dogs or cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dog"") or image_patch.exists(""cat""))"
8394428,What animal is the bag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the bag on?"")"
10500714,What do both the TV stand and the television have in common?," # assumes only one TV stand and one TV
    image_patch = ImagePatch(image)
    tv_stand_patches = image_patch.find(""TV stand"")
    # Question assumes only one TV stand patch
    if len(tv_stand_patches) == 0:
        # If no TV stand is found, query the image directly
        return image_patch.simple_query(""What do both the TV stand and the television have in common?"")
    tv_patches = image_patch.find(""television"")
    # Question assumes only one TV patch
    if len(tv_patches) == 0:
        return ""no""
    tv_patch = tv_patches[0]
    return tv_stand_patches[0].simple_query(""What do both the TV stand and the television have in common?"") # crop would include the TV so keep it in the query"
195601,Which kind of furniture is the notebook on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the notebook on?"")"
12562558,What is the basket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the basket on?"")"
6771333,What is located on top of the tray?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the tray?"")"
10489458,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
13165873,Are there any carts or locks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cart = image_patch.exists(""cart"")
    is_lock = image_patch.exists(""lock"")
    return bool_to_yesno(is_cart or is_lock)"
14300527,What is the bowl on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl on?"")"
5448986,Are the people in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch.simple_query(""Are the people in the bottom or in the top part of the image?"")
    if people_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
3892363,Are there any skis or letters that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ski = image_patch.exists(""ski"")
    is_letter = image_patch.exists(""letters"")
    is_black_ski = image_patch.exists(""ski"") and image_patch.exists(""black"")
    is_black_letter = image_patch.exists(""letters"") and image_patch.exists(""black"")
    return bool_to_yesno(is_ski or is_letter or is_black_ski or is_black_letter)"
6209842,Do the bed and the wall have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    wall_patches = image_patch.find(""wall"")
    # Question assumes only one bed and one wall patch
    if len(bed_patches) == 0 or len(wall_patches) == 0:
        # If no bed or wall is found, query the image directly
        return image_patch.simple_query(""Do the bed and the wall have a different colors?"")
    bed_patch = bed_patches[0]
    wall_patch = wall_patches[0]
    return bool_to_yesno(bed_patch.verify_property(""bed"", ""blue"") != wall_patch.verify_property(""wall"", ""blue""))"
18789667,What kind of vehicle is the same color as the helmet?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is the same color as the helmet?"")"
13915841,What's the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the floor made of?"")"
3858175,Is the boat to the left of the traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat to the left of the traffic lights?"")"
3242518,Are there both a pear and a melon in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pear = image_patch.exists(""pear"")
    is_melon = image_patch.exists(""melon"")
    return bool_to_yesno(is_pear and is_melon)"
6166032,What is on the meat on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the meat on the left?"")"
13104917,What is on the doughnut that is in the middle?," # assumes only one doughnut patch
    image_patch = ImagePatch(image)
    doughnut_patches = image_patch.find(""doughnut"")
    if len(doughnut_patches) == 0:
        # If no doughnut is found, query the image directly
        return image_patch.simple_query(""What is on the doughnut that is in the middle?"")
    doughnut_patch = doughnut_patches[0]
    if doughnut_patch.horizontal_center == image_patch.horizontal_center and doughnut_patch.vertical_center == image_patch.vertical_center:
        return doughnut_patch.simple_query(""What is on the doughnut that is in the middle?"")
    return ""nothing"""
18506683,What is the person to the left of the person looking at?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the person looking at?"")"
19667093,Is the white stove to the right or to the left of the fridge the chair is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white stove to the right or to the left of the fridge the chair is to the left of?"")"
10726594,Which direction is the person that is to the right of the woman looking at?," # contains a relation (right of, looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which direction is the person that is to the right of the woman looking at?"")"
131020433,What is the color of the device on the shelf?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the device on the shelf?"")"
13768668,What is the color of the t-shirt?," # returns the color of the t-shirt
    image_patch = ImagePatch(image)
    tshirt_patches = image_patch.find(""t-shirt"")
    # Question assumes only one t-shirt patch
    if len(tshirt_patches) == 0:
        # If no t-shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the t-shirt?"")
    return tshirt_patches[0].simple_query(""What is the color of the t-shirt?"") # crop would include the shirt so keep it in the query"
6918388,Is the chair on the right side?," # assumes only one chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        return image_patch.simple_query(""Is the chair on the right side?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
700385,Are the wood chairs in the bottom?," # contains a relation (on, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the wood chairs in the bottom?"")"
2130393,Are both the rock and the scarf the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    rock_patches = image_patch.find(""rock"")
    # Question assumes only one rock patch
    if len(rock_patches) == 0:
        # If no rock is found, query the image directly
        return image_patch.simple_query(""Are both the rock and the scarf the same color?"")
    rock_patch = rock_patches[0]
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        return ""yes""
    scarf_patch = scarf_patches[0]
    return bool_to_yesno(rock_patch.verify_property(""rock"", ""color"") == scarf_patch.verify_property(""scarf"", ""color""))"
6942688,Is the bench black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench black?"")"
17994707,Is the bear that is to the right of the pencil wearing a boot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bear that is to the right of the pencil wearing a boot?"")"
12799463,Is the chair to the left of a bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left of a bed?"")"
2622867,Which color does the cup to the right of the lettuce have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the cup to the right of the lettuce have?"")"
822657,What's the toothpaste on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the toothpaste on?"")"
9395356,What is the green tray made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the green tray made of?"")"
4611966,Is the vase on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vase on the left?"")"
10285106,Is the man on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right of the photo?"")"
16933298,What's on the bread?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the bread?"")"
2954916,What is the white object of the fruit made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white object of the fruit made of?"")"
10225324,"What color is the racket to the left of the man, white or black?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the racket to the left of the man, white or black?"")"
16126281,Who wears a vest?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a vest?"")"
16587118,Do the remote control and the scarf have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    # Question assumes only one remote control patch
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch.simple_query(""Do the remote control and the scarf have a different colors?"")
    remote_control_patch = remote_control_patches[0]
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        return ""no""
    for scarf_patch in scarf_patches:
        if remote_control_patch.verify_property(""remote control"", ""blue"") != scarf_patch.verify_property(""scarf"", ""blue""):
            return ""yes""
    return ""no"""
8927117,What animal is to the right of the figurine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the figurine?"")"
11738751,What is the vegetable that is to the right of the olives on the pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is to the right of the olives on the pizza?"")"
9534193,Do you see people on the elephant on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see people on the elephant on the left?"")"
440871,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
15110708,"What is the pillow on, a bed or a sofa?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pillow on, a bed or a sofa?"")"
4897751,Which side of the image is the skier on?," # left or right
    image_patch = ImagePatch(image)
    skier_patches = image_patch.find(""skier"")
    # Question assumes only one skier patch
    if len(skier_patches) == 0:
        # If no skier is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the skier on?"")
    skier_patch = skier_patches[0]
    if skier_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11959276,Is the television to the left of the blinds on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    television_patches = image_patch.find(""television"")
    # Question assumes only one television patch
    if len(television_patches) == 0:
        # If no television is found, query the image directly
        return image_patch.simple_query(""Is the television to the left of the blinds on the left side?"")
    for television_patch in television_patches:
        blinds_patches = image_patch.find(""blinds"")
        for blinds_patch in blinds_patches:
            if television_patch.horizontal_center < blinds_patch.horizontal_center:
                return ""yes""
    return ""no"""
6221513,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
113419,Which color is the counter the bottle is on?," # bottle is on the counter
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Which color is the counter the bottle is on?"")
    bottle_patch = bottle_patches[0]
    counter_patches = image_patch.find(""counter"")
    # Question assumes only one counter patch
    if len(counter_patches) == 0:
        return image_patch.simple_query(""Which color is the counter the bottle is on?"")
    counter_patch = counter_patches[0]
    return counter_patch.simple_query(""What color is the counter the bottle is on?"") # crop would include the bottle so keep it in the query"
1228840,Which vegetable is large?," # contains a relation (larger/smaller than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which vegetable is large?"")"
11334907,Is the young man to the left of a closet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young man to the left of a closet?"")"
285783,Are there both helmets and wigs in this image?," # helmet and wig are the same object
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_wig = image_patch.exists(""wig"")
    return bool_to_yesno(is_helmet and is_wig)"
11323031,Does the white shirt look short sleeved or sleeveless?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the white shirt look short sleeved or sleeveless?"")"
6599582,What vegetable is to the left of the fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the fork?"")"
11509132,Are there any bears or sea gulls in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bear = image_patch.exists(""bear"")
    is_sea_gull = image_patch.exists(""sea gull"")
    return bool_to_yesno(is_bear or is_sea_gull)"
13647489,What is the hot dog on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the hot dog on?"")"
1739335,Do you see letters or fences that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_letters_black = image_patch.exists(""letters"") and image_patch.verify_property(""letters"", ""black"")
    is_fence_black = image_patch.exists(""fence"") and image_patch.verify_property(""fence"", ""black"")
    return bool_to_yesno(is_letters_black or is_fence_black)"
1087715,What kind of furniture is tall?," # contains a relation (tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is tall?"")"
14891617,Is the black bag in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag in the bottom part or in the top of the photo?"")"
1484202,Is the flag to the left or to the right of the umbrella that looks dark and black?," # contains a relation (left, right, etc) and a property (dark, black, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flag to the left or to the right of the umbrella that looks dark and black?"")"
10397456,Does the small dog look tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the small dog look tan?"")"
192747,Is the black device on the right part or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black device on the right part or on the left?"")"
5845662,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
5958598,What clothing item is black?," # returns the clothing item that is black
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What clothing item is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What clothing item is black?"")
    return clothing_patches[0].simple_query(""What clothing item is black?"") # if no clothing is black, pick the first clothing"
2893662,Do the yellow lemons look ripe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the yellow lemons look ripe?"")"
18401703,What is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the logo on?"")"
790240,Does the flag on the pole look red?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the flag on the pole look red?"")"
8599477,What animal is walking by the building that looks white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is walking by the building that looks white?"")"
12501017,What is the cooking utensil to the right of the cooker that looks silver called?," # assumes only one cooker and one utensil
    image_patch = ImagePatch(image)
    cooker_patches = image_patch.find(""cooker"")
    # Question assumes only one cooker patch
    if len(cooker_patches) == 0:
        # If no cooker is found, query the image directly
        return image_patch.simple_query(""What is the cooking utensil to the right of the cooker that looks silver called?"")
    cooker_patch = cooker_patches[0]
    utensil_patches = image_patch.find(""cooking utensil"")
    # Question assumes only one utensil patch
    if len(utensil_patches) == 0:
        return image_patch.simple_query(""What is the cooking utensil to the right of the cooker that looks silver called?"")
    for utensil_patch in utensil_patches:
        if utensil_patch.horizontal_center > cooker_patch.horizontal_center:
            return utensil_patch.simple_query(""What is the cooking utensil to the right of the cooker that looks silver called?"")
    return utensil_patches[0].simple_query(""What is the cooking utensil to the right of the cooker that looks silver called?"")"
12690108,What is in front of the audience?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the audience?"")"
14815529,Are the people in the top part or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people in the top part or in the bottom of the picture?"")"
16199994,Is that knife to the right of a bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that knife to the right of a bread?"")"
3725435,Is there a kite to the left of the man on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a kite to the left of the man on the right?"")"
10632861,What is the person on the ski holding onto?," # contains a relation (holding onto), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on the ski holding onto?"")"
14163979,What are the animals on the road leaving?," # contains a relation (on the road, leaving), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals on the road leaving?"")"
8458018,What is the piece of furniture that is on the floor called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is on the floor called?"")"
9159850,"What is the passenger on, a bus or a train?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the passenger on, a bus or a train?"")"
5812448,What is the vegetable to the right of the pepper that the cabbage is to the left of called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the right of the pepper that the cabbage is to the left of called?"")"
16913149,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
507956,Does the hair look short and black?," # returns yes or no
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair look short and black?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""black"") and hair_patches[0].verify_property(""hair"", ""short""))"
2648174,Is the bench wooden and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench wooden and black?"")"
474326,Is the spoon on the right side or on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the spoon on the right side or on the left?"")"
468190,What kind of fruit is in the bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is in the bowl?"")"
141049247,"What type of furniture is not wooden, the drawer or the cabinet?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is not wooden, the drawer or the cabinet?"")"
1377450,Which side of the photo is the woman on?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the woman on?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12348362,She is using what?," # assumes only one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        return image_patch.simple_query(""She is using what?"")
    woman_patch = woman_patches[0]
    return woman_patch.simple_query(""She is using what?"")"
10991966,What's on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the wall?"")"
1676874,Do you see any bottles to the left of the man on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any bottles to the left of the man on the right?"")"
2929729,On which side are the curtains?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the curtains?"")"
14454258,Which venue is this?," # venue is a broad category
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which venue is this?"")"
14596160,Are there cabinets or chairs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_cabinet or is_chair)"
8787959,Is the black bag on the left or on the right side of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag on the left or on the right side of the image?"")"
1199697,Is the blue vehicle to the right or to the left of the lady that is to the left of the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue vehicle to the right or to the left of the lady that is to the left of the bike?"")"
17546255,Does the device that is not closed look black?," # contains a relation (is not closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device that is not closed look black?"")"
17781154,Is the pig in the top of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pig in the top of the photo?"")"
13589374,Do you see ropes to the right of the carrots that are to the right of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see ropes to the right of the carrots that are to the right of the plate?"")"
11345273,What color is the brief case?," # returns the color of the briefcase
    image_patch = ImagePatch(image)
    briefcase_patches = image_patch.find(""briefcase"")
    # Question assumes only one briefcase patch
    if len(briefcase_patches) == 0:
        # If no briefcase is found, query the image directly
        return image_patch.simple_query(""What color is the brief case?"")
    return briefcase_patches[0].simple_query(""What color is the brief case?"") # crop would include the briefcase so keep it in the query"
8400352,Are there toilets to the right of the rug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""toilet"") and image_patch.exists(""rug"")) # Question assumes only one rug patch"
3121621,What is the animal to the right of the person in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the right of the person in the middle?"")"
17133576,What color is the parachute to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the parachute to the left of the man?"")"
938414,Which color are the shorts?," # returns the color of the shorts
    image_patch = ImagePatch(image)
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one shorts patch
    if len(shorts_patches) == 0:
        # If no shorts are found, query the image directly
        return image_patch.simple_query(""Which color are the shorts?"")
    return shorts_patches[0].simple_query(""Which color are the shorts?"") # crop would include the shorts so keep it in the query"
1594955,What is the name of the animal that is eating the hay?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal that is eating the hay?"")"
13297089,What color is the striped wallpaper?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the striped wallpaper?"")"
8885795,Are the coat and the radio the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    radio_patches = image_patch.find(""radio"")
    # Question assumes only one coat and one radio patch
    if len(coat_patches) == 0 or len(radio_patches) == 0:
        # If no coat or radio is found, query the image directly
        return image_patch.simple_query(""Are the coat and the radio the same color?"")
    coat_color = coat_patches[0].simple_query(""What color is the coat?"")
    radio_color = radio_patches[0].simple_query(""What color is the radio?"")
    return bool_to_yesno(coat_color == radio_color)"
13618033,What does the white cup contain?," # contains a relation (contains, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the white cup contain?"")"
6416025,"What device is not dark, the laptop computer or the screen?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is not dark, the laptop computer or the screen?"")"
458867,Is there a bed to the left of the suitcase in the center of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bed to the left of the suitcase in the center of the image?"")"
9644069,Which kind of drink is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of drink is on the table?"")"
8211973,Are there bags in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag""))"
9217386,Does the guy to the right of the glasses wear shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Does the guy to the right of the glasses wear shorts?"")
    glasses_patch = glasses_patches[0]
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""Does the guy to the right of the glasses wear shorts?"")
    for guy_patch in guy_patches:
        if guy_patch.horizontal_center > glasses_patch.horizontal_center:
            return guy_patch.simple_query(""Does the guy wear shorts?"") # crop would include the shorts so keep it in the query
    return ""no"""
1737547,Is the tree in front of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree in front of the car?"")"
19925706,What animal is standing?," # contains a relation (standing, sitting, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing?"")"
2323609,Which side of the photo is the cart on?," # left or right
    image_patch = ImagePatch(image)
    cart_patches = image_patch.find(""cart"")
    # Question assumes only one cart patch
    if len(cart_patches) == 0:
        # If no cart is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the cart on?"")
    cart_patch = cart_patches[0]
    if cart_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9810763,"In which part of the image is the cup, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the cup, the top or the bottom?"")"
11920879,Is the man to the right of the woman that is to the left of the hydrant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the woman that is to the left of the hydrant?"")"
4258919,Is the speaker different in color than the tie?," # speaker and tie are assumed to be in the same image
    image_patch = ImagePatch(image)
    speaker_patches = image_patch.find(""speaker"")
    # Question assumes only one speaker patch
    if len(speaker_patches) == 0:
        # If no speaker is found, query the image directly
        return image_patch.simple_query(""Is the speaker different in color than the tie?"")
    speaker_patch = speaker_patches[0]
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        return ""no""
    tie_patch = tie_patches[0]
    return bool_to_yesno(speaker_patch.verify_property(""speaker"", ""different_color"") or tie_patch.verify_property(""tie"", ""different_color""))"
12606069,What is the batter that is playing playing with?," # batter is playing with something
    image_patch = ImagePatch(image)
    batter_patches = image_patch.find(""batter"")
    # Question assumes only one batter patch
    if len(batter_patches) == 0:
        # If no batter is found, query the image directly
        return image_patch.simple_query(""What is the batter that is playing playing with?"")
    for batter_patch in batter_patches:
        return batter_patch.simple_query(""What is the batter that is playing playing with?"") # crop would include the batter so keep it in the query"
2456501,What vegetables is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables is the man holding?"")"
9873471,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
8614159,Is the man to the left or to the right of the woman that is riding a horse?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the woman that is riding a horse?"")"
12309448,Is the person to the left of the cabinets wearing a watch?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the cabinets wearing a watch?"")"
19985679,Is the person that is to the left of the woman wearing a jacket?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the left of the woman wearing a jacket?"")"
9804694,Is the color of the pavement different than the SUV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the pavement different than the SUV?"")"
506614,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
10612902,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1176830,Is the keyboard on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the keyboard on the left?"")"
13576393,Is the person that is playing holding a camera?," # contains a relation (playing, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is playing holding a camera?"")"
5268302,Is the trash bin near the bench silver and metallic?," # trash bin is near the bench
    image_patch = ImagePatch(image)
    trash_bin_patches = image_patch.find(""trash bin"")
    # Question assumes only one trash bin patch
    if len(trash_bin_patches) == 0:
        # If no trash bin is found, query the image directly
        return image_patch.simple_query(""Is the trash bin near the bench silver and metallic?"")
    trash_bin_patch = trash_bin_patches[0]
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        return ""no""
    bench_patch = bench_patches[0]
    return bool_to_yesno(trash_bin_patch.horizontal_center > bench_patch.horizontal_center and trash_bin_patch.verify_property(""trash bin"", ""silver"") and trash_bin_patch.verify_property(""trash bin"", ""metallic""))"
4492969,What is in front of the zebra?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the zebra?"")"
7729848,"What was used to make the pipe, concrete or chrome?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What was used to make the pipe, concrete or chrome?"")"
18300032,Which side is the shelf on?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""Which side is the shelf on?"")
    if shelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14390084,Are the shorts beige or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shorts beige or black?"")"
15200020,Is there a woman below the leaf?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman below the leaf?"")"
12170579,Do you see any helmets?," # helmet
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""helmet""))"
11140131,Who is riding on the skateboard?," # contains a relation (riding on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding on the skateboard?"")"
10355978,"Which color is the pillow to the left of the cat, red or white?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the pillow to the left of the cat, red or white?"")"
13291435,Which color is the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""Which color is the hat?"")
    return hat_patches[0].simple_query(""Which color is the hat?"")"
8953207,Are there any plates to the left of the glasses behind the pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plates"") and image_patch.exists(""glasses"") and image_patch.exists(""pizza""))"
2841039,Is the black animal holding the frisbee?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black animal holding the frisbee?"")"
13153856,Are there both a dog and a cat in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_dog and is_cat)"
2959610,Is there a motorcycle in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorcycle""))"
18428212,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
1340367,What is on the suitcase to the right of the briefcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the suitcase to the right of the briefcase?"")"
2953750,Is the can on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the can on the left?"")"
8119261,Do you see a potato in this image that is light brown?," # potato is a root vegetable
    image_patch = ImagePatch(image)
    potato_patches = image_patch.find(""potato"")
    # Question assumes only one potato patch
    if len(potato_patches) == 0:
        # If no potato is found, query the image directly
        return image_patch.simple_query(""Do you see a potato in this image that is light brown?"")
    return bool_to_yesno(potato_patches[0].verify_property(""potato"", ""light brown""))"
9817627,What's the catcher wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the catcher wearing?"")"
19155826,What kind of furniture is to the right of the fruit the juice is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the fruit the juice is to the left of?"")"
1629314,Who is wearing the watch?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the watch?"")"
6231517,"Which part of the picture is the toolbox in, the bottom or the top?"," # toolbox
    image_patch = ImagePatch(image)
    toolbox_patches = image_patch.find(""toolbox"")
    # Question assumes only one toolbox patch
    if len(toolbox_patches) == 0:
        # If no toolbox is found, query the image directly
        return image_patch.simple_query(""Which part of the picture is the toolbox in, the bottom or the top?"")
    if toolbox_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
1442407,What type of food is to the right of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the right of the napkin?"")"
12309300,What appliance is the pot on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is the pot on?"")"
131001052,What's on the coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the coffee table?"")"
1948764,On which side of the photo is the white toilet paper?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white toilet paper?"")"
843284,Is this a cat or a dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a cat or a dog?"")"
6764485,Is the black backpack on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black backpack on the left side or on the right?"")"
18242402,What kind of furniture do you think is to the left of the chair on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture do you think is to the left of the chair on the right?"")"
12887666,What is the food that is to the right of the wine in the glass called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the right of the wine in the glass called?"")"
8715138,Is the man to the left or to the right of the person in the center?," # assumes center is the vertical center
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the left or to the right of the person in the center?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1413649,Who is walking?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking?"")"
11796517,What is on the yellow sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the yellow sign?"")"
31048994,On which side of the picture is the flag?," # left or right
    image_patch = ImagePatch(image)
    flag_patches = image_patch.find(""flag"")
    # Question assumes only one flag patch
    if len(flag_patches) == 0:
        # If no flag is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the flag?"")
    flag_patch = flag_patches[0]
    if flag_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
141040807,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2490952,Do you see bananas in the basket?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see bananas in the basket?"")"
930983,What fruits is the bicycle full of?," # bicycle is full of fruits
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits is the bicycle full of?"")"
17525166,What item of furniture is to the left of the toilet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the left of the toilet?"")"
18424789,What is the pizza sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pizza sitting on?"")"
2568165,Which side is the picture on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the picture on?"")"
759486,What do you think is the lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the lamp on?"")"
6424571,Which kind of fast food is to the left of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is to the left of the box?"")"
7754055,Which side is the box on?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Which side is the box on?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13670113,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
15195287,What is the vehicle behind the fence made of metal?," # contains a relation (behind, made of metal), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle behind the fence made of metal?"")"
6127905,What is the item of furniture to the left of the sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the sofa?"")"
10458354,What is the piece of furniture to the right of the wood chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the wood chair?"")"
17705307,Do you see both fences and rackets in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_fence and is_racket)"
18658974,What is the fruit that is to the right of the blueberry near the sandwich called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that is to the right of the blueberry near the sandwich called?"")"
9810656,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
15105689,Is the onion on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the onion on the right side?"")"
151981,What color is the uniform the player is wearing?," # uniform is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the uniform the player is wearing?"")"
11701251,Are there both a helmet and a bike in the image?," # helmet and bike
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_bike = image_patch.exists(""bike"")
    return bool_to_yesno(is_helmet and is_bike)"
1481858,The pants have what color?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""The pants have what color?"")
    return pants_patches[0].simple_query(""The pants have what color?"")"
17883000,What is the color of the towel?," # returns the color of the towel
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""What is the color of the towel?"")
    return towel_patches[0].simple_query(""What is the color of the towel?"") # crop would include the towel so keep it in the query"
12214379,What kind of vegetable is to the right of the pickles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the pickles?"")"
6591396,Who is holding the boy that is feeding the animals?," # contains a relation (holding, feeding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the boy that is feeding the animals?"")"
10185541,Does the dog's fur look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog's fur look white?"")"
2586950,What's flying in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's flying in the sky?"")"
6790870,Do you think the coat is black?," # coat is a specific type of clothing
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Do you think the coat is black?"")
    return bool_to_yesno(coat_patches[0].verify_property(""coat"", ""black""))"
14714925,What is that man lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man lying on?"")"
14703913,Does the toilet lid look closed and white?," # toilet lid
    image_patch = ImagePatch(image)
    toilet_lid_patches = image_patch.find(""toilet lid"")
    # Question assumes only one toilet lid patch
    if len(toilet_lid_patches) == 0:
        # If no toilet lid is found, query the image directly
        return image_patch.simple_query(""Does the toilet lid look closed and white?"")
    return bool_to_yesno(toilet_lid_patches[0].verify_property(""toilet lid"", ""closed"") and toilet_lid_patches[0].verify_property(""toilet lid"", ""white""))"
3772961,Is the gravy in a box?," # gravy is a liquid so it's not in a box
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gravy in a box?"")"
12170763,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
17119351,Is there either a metal fence or clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""metal fence"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_fence or is_clock)"
3785106,Are the glasses to the right or to the left of the boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the glasses to the right or to the left of the boy?"")"
5954068,What is the fence in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence in front of?"")"
10541972,What type of vehicle has the same color as the building in this photograph?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle has the same color as the building in this photograph?"")"
81032615,Is the color of the oven different than the color of the floor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the oven different than the color of the floor?"")"
91053291,Is the horse sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse sitting?"")"
17342082,Are these people all of the same gender?," # gender is not a property of a person, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these people all of the same gender?"")"
5220286,Are there white cars or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_car = image_patch.exists(""white car"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_white_car or is_train)"
2128829,"What color is the tshirt that is made of cotton, green or red?"," # contains a relation (made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tshirt that is made of cotton, green or red?"")"
2160306,Is there a bag to the left of the small girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag to the left of the small girl?"")"
15631184,On which side of the picture is the placemat?," # left or right
    image_patch = ImagePatch(image)
    placemat_patches = image_patch.find(""placemat"")
    # Question assumes only one placemat patch
    if len(placemat_patches) == 0:
        # If no placemat is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the placemat?"")
    if placemat_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2225475,What is the name of the animal that is standing?," # contains a relation (standing, sitting, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal that is standing?"")"
7878104,Is there a kite or a clock in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kite = image_patch.exists(""kite"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_kite or is_clock)"
981655,Who is wearing the shoe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoe?"")"
4184957,Is the faucet to the right of the cooking utensils on the countertop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the faucet to the right of the cooking utensils on the countertop?"")"
15672291,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3129193,Does the plastic water bottle have large size?," # returns yes or no
    image_patch = ImagePatch(image)
    water_bottle_patches = image_patch.find(""water bottle"")
    # Question assumes only one water bottle patch
    if len(water_bottle_patches) == 0:
        # If no water bottle is found, query the image directly
        return image_patch.simple_query(""Does the plastic water bottle have large size?"")
    return bool_to_yesno(water_bottle_patches[0].verify_property(""water bottle"", ""large""))"
18149958,Is the sky gray and clear?," # gray and clear are mutually exclusive
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""gray"") and image_patch.verify_property(""sky"", ""clear""))"
10984824,What color are the curtains on the left of the image?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the curtains on the left of the image?"")"
8702778,Is that outfit khaki or brown?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that outfit khaki or brown?"")"
6930,Where are the elephants that look brown standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where are the elephants that look brown standing on?"")"
4834034,How is the vehicle in the street called?," # contains a relation (in the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle in the street called?"")"
19270185,Is there any grass or sand that is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    sand_patches = image_patch.find(""sand"")
    for grass_patch in grass_patches:
        if grass_patch.verify_property(""grass"", ""brown""):
            return ""yes""
    for sand_patch in sand_patches:
        if sand_patch.verify_property(""sand"", ""brown""):
            return ""yes""
    return ""no"""
4184894,Which kind of cooking utensil is on the countertop?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of cooking utensil is on the countertop?"")"
15880403,Does the fence to the left of the person seem to be black and metallic?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fence to the left of the person seem to be black and metallic?"")"
101043465,Is the hat yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hat yellow?"")"
1323639,What color are the flowers?," # returns the color of the flowers
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch.simple_query(""What color are the flowers?"")
    return flower_patches[0].simple_query(""What color are the flowers?"")"
10211792,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
1535018,Do you see any people in the carriage that is to the left of the motorcycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any people in the carriage that is to the left of the motorcycle?"")"
15692098,What device is to the right of the chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the chairs?"")"
8357009,"Which seems to be younger, the woman or the child?"," # assumes only one woman and one child
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    child_patches = image_patch.find(""child"")
    if len(woman_patches) == 0 or len(child_patches) == 0:
        return image_patch.simple_query(""Which seems to be younger, the woman or the child?"")
    woman_age = woman_patches[0].simple_query(""How old is the woman?"")
    child_age = child_patches[0].simple_query(""How old is the child?"")
    if int(woman_age) < int(child_age):
        return ""the woman""
    else:
        return ""the child"""
12846134,What kind of food is to the left of the plate the bread is on?," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the plate the bread is on?"")"
4940973,Is the banana to the left or to the right of the cup?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the banana to the left or to the right of the cup?"")"
91053078,What is under the person?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the person?"")"
6771640,Is the color of the backpack the same as the glove?," # returns yes or no
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Is the color of the backpack the same as the glove?"")
    backpack_color = backpack_patches[0].simple_query(""What is the color of the backpack?"")
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Is the color of the backpack the same as the glove?"")
    glove_color = glove_patches[0].simple_query(""What is the color of the glove?"")
    return bool_to_yesno(backpack_color == glove_color)"
3540654,What is on the wall in the picture?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall in the picture?"")"
450368,What color does that tray have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does that tray have?"")"
575784,Is this a new train?," # contains a relation (new, old, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a new train?"")"
16603787,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
13182232,What's the rope tying?," # contains a relation (tying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the rope tying?"")"
352114,Which kind of device is to the left of the boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the boy?"")"
427689,Do you see any fireplaces below the mirror in the middle?," # mirror is in the middle
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Do you see any fireplaces below the mirror in the middle?"")
    mirror_center = mirror_patches[0].horizontal_center
    for fireplace_patch in image_patch.find(""fireplace""):
        if fireplace_patch.horizontal_center < mirror_center and fireplace_patch.vertical_center < mirror_patches[0].vertical_center:
            return ""yes""
    return ""no"""
41046819,What is the item of furniture that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is not brown?"")"
17147774,Is there either a white ball or frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_ball = image_patch.exists(""white ball"")
    is_frisbee = image_patch.exists(""frisbee"")
    return bool_to_yesno(is_white_ball or is_frisbee)"
17664130,Are both the obstacle and the bowl of the dog made of the same material?," # material is a property
    image_patch = ImagePatch(image)
    obstacle_patches = image_patch.find(""obstacle"")
    bowl_patches = image_patch.find(""bowl of dog"")
    # Question assumes only one obstacle and one bowl patch
    if len(obstacle_patches) == 0 or len(bowl_patches) == 0:
        # If no obstacle or bowl is found, query the image directly
        return image_patch.simple_query(""Are both the obstacle and the bowl of the dog made of the same material?"")
    obstacle_patch = obstacle_patches[0]
    bowl_patch = bowl_patches[0]
    return bool_to_yesno(obstacle_patch.verify_property(""obstacle"", ""material"") == bowl_patch.verify_property(""bowl of dog"", ""material""))"
695349,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
6247208,Is the pepper on the right of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pepper on the right of the image?"")"
5324776,Is the weather cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the weather cloudy?"")"
4216282,What is the appliance that is silver called?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance that is silver called?"")"
520500,What vegetable is on the left of the squash?," # squash is a type of vegetable
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What vegetable is on the left of the squash?"")"
18553788,What is the girl wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl wearing?"")"
10826920,Is the green pepper to the right or to the left of the carrot on the left side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green pepper to the right or to the left of the carrot on the left side of the photo?"")"
13943300,Which kind of animal is above the dirt?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is above the dirt?"")"
2683981,Are there white letters or numbers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_letter = image_patch.exists(""white letter"")
    is_white_number = image_patch.exists(""white number"")
    return bool_to_yesno(is_white_letter or is_white_number)"
3153592,What is the color of the bench?," # returns the color of the bench
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""What is the color of the bench?"")
    return bench_patches[0].simple_query(""What is the color of the bench?"")"
564777,What is the name of the meat on top of the pizza the wall is behind of?," # contains a relation (on top of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the meat on top of the pizza the wall is behind of?"")"
3448190,Where is the chair?," # returns the location of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Where is the chair?"")
    return chair_patches[0].simple_query(""Where is the chair?"") # crop would include the chair so keep it in the query"
19882184,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
12263937,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17298651,On which side is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
191030517,Is the table to the right of the guy that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table to the right of the guy that is wearing a shirt?"")"
18740541,What is on the ceiling?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the ceiling?"")"
542846,What do the radiator and the toy have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the radiator and the toy have in common?"")"
1757957,What kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is made of wood?"")"
11311500,Do you see a polar bear to the right of the man that is wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a polar bear to the right of the man that is wearing a hat?"")"
12749055,The books are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The books are on what?"")"
1134934,Is the person to the left or to the right of the device that is on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left or to the right of the device that is on the left of the photo?"")"
12586201,Is that man holding a surfboard?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that man holding a surfboard?"")"
361721,What color are the rocks?," # returns the color of the rocks
    image_patch = ImagePatch(image)
    rock_patches = image_patch.find(""rock"")
    # Question assumes only one rock patch
    if len(rock_patches) == 0:
        # If no rock is found, query the image directly
        return image_patch.simple_query(""What color are the rocks?"")
    return rock_patches[0].simple_query(""What color are the rocks?"") # crop would include the rock so keep it in the query"
18209359,Is the pan to the right of a bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pan to the right of a bowl?"")"
11253303,Does the brown hair look long?," # hair is not a single object, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the brown hair look long?"")"
320499,How big is the vegetable to the left of the cucumber?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How big is the vegetable to the left of the cucumber?"")"
8297553,What cooking utensil has the same color as the large fruit?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil has the same color as the large fruit?"")"
141049119,What is the item of furniture to the right of the fridge the drawer is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the fridge the drawer is to the left of?"")"
975671,What vehicle is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is pictured?"")"
4760180,Is the computer mouse to the right of a computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer mouse to the right of a computer?"")"
12743486,Are there any buses on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
3720387,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
151044514,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
2118026,What's going through the table?," # contains a relation (through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's going through the table?"")"
13463102,Is the coffee mug brown or blue?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee mug brown or blue?"")"
15206124,Are the letters white or gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the letters white or gold?"")"
8897915,What is the tan clothing item called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tan clothing item called?"")"
9775404,Is the flower both large and pink?," # returns yes or no
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""Is the flower both large and pink?"")
    return bool_to_yesno(flower_patches[0].verify_property(""flower"", ""large"") and flower_patches[0].verify_property(""flower"", ""pink""))"
11100268,Does the car on the walkway have silver color?," # contains a relation (on the walkway), so ask directly
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Does the car on the walkway have silver color?"")
    return bool_to_yesno(car_patches[0].verify_property(""car"", ""silver""))"
391337,How is the animal in the photograph called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal in the photograph called?"")"
292293,What is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees?"")"
6303432,Are these birds or cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these birds or cats?"")"
17449469,Who is in front of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the chair?"")"
10661743,Is the white device in the top or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white device in the top or in the bottom of the picture?"")"
1628663,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
6656168,Are there trains or fire extinguishers in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_fire_extinguisher = image_patch.exists(""fire extinguisher"")
    return bool_to_yesno(is_train or is_fire_extinguisher)"
10591796,Is the tomato on the left side of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tomato on the left side of the photo?"")"
10604241,Are there fences or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_fence or is_car)"
296285,Is there either a chair or a desk in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""desk""))"
18324231,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
10929575,What is on the appliance that is to the right of the pot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the appliance that is to the right of the pot?"")"
5679174,Is there a computer mouse next to the bottle the straw is in?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a computer mouse next to the bottle the straw is in?"")"
6430613,What meat is to the right of the white food?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What meat is to the right of the white food?"")"
1437972,What is the person to the left of the umpire holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the umpire holding?"")"
7216589,What color is the uniform the catcher is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the uniform the catcher is wearing?"")"
7913700,What piece of furniture is to the right of the armchair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the right of the armchair?"")"
17578606,Is the crust white and thin?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the crust white and thin?"")"
3934404,What item of clothing is blue?," # returns the first clothing item that is blue
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What item of clothing is blue?"")
    return image_patch.simple_query(""What item of clothing is blue?"")"
17595962,What are the characters on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the characters on?"")"
91019314,What kind of animal is under the man?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is under the man?"")"
11707344,Is he wearing glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he wearing glasses?"")"
7930203,Who is wearing the wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the wetsuit?"")"
3984776,What food is on the refrigerator?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is on the refrigerator?"")"
7619494,Does the vehicle that is to the right of the person look blue and large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle that is to the right of the person look blue and large?"")"
15525907,Is there a refrigerator or an oven that is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_refrigerator = image_patch.exists(""refrigerator"")
    is_oven = image_patch.exists(""oven"")
    if is_refrigerator:
        return bool_to_yesno(not image_patch.find(""refrigerator"")[0].verify_property(""refrigerator"", ""black""))
    elif is_oven:
        return bool_to_yesno(not image_patch.find(""oven"")[0].verify_property(""oven"", ""black""))
    else:
        return ""no"""
161054966,What vegetable is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is it?"")"
3940583,What animal is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is not white?"")"
11965497,Is the red car to the right or to the left of the person that holds the shield?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red car to the right or to the left of the person that holds the shield?"")"
15317385,What is the color of the chair in the bottom?," # bottom is a relation, so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What is the color of the chair in the bottom?"")
    for chair_patch in chair_patches:
        if chair_patch.vertical_center < image_patch.vertical_center:
            return chair_patch.simple_query(""What is the color of the chair in the bottom?"")
    return chair_patch.simple_query(""What is the color of the chair in the bottom?"")"
15406920,What is on the pillow the pot is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pillow the pot is to the right of?"")"
181031136,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
16465346,Is the man to the right of the tennis racket wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the tennis racket wearing a coat?"")"
2353963,What do you think are the fruits to the right of the peaches in the crate called?," # crate called
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What do you think are the fruits to the right of the peaches in the crate called?"")"
9549909,Does the heart appear to be blue or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the heart appear to be blue or red?"")"
11737866,Is the bag to the right of the cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the right of the cow?"")"
13818755,What is the bag in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag in?"")"
4301533,Is the tail yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tail yellow?"")"
9587957,Do the sink and the collar have the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the sink and the collar have the same color?"")) # crop would include the collar so keep it in the query"
15689044,What kind of animal is to the left of the rope?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the rope?"")"
131057172,What is in front of the small bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the small bush?"")"
15421814,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
12686761,Is the man that is walking wearing jeans?," # contains a relation (walking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is walking wearing jeans?"")"
15113667,What's she doing?," # assumes only one woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        return image_patch.simple_query(""What's she doing?"")
    return woman_patches[0].simple_query(""What's she doing?"")"
17816700,What kind of furniture is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the chair?"")"
1073395,"Which material is used to make the fence, wood or cement?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material is used to make the fence, wood or cement?"")"
14430231,Which kind of clothing is not short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is not short?"")"
9218787,What is the appliance to the left of the small microwave?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the small microwave?"")"
12909977,Does the balcony look gray?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the balcony look gray?"")"
2479982,Do you see a bottle on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bottle on the table?"")"
19817888,Do you see both a surfboard and a wetsuit in this photograph?," # contains a relation (and, or, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_wetsuit = image_patch.exists(""wetsuit"")
    return bool_to_yesno(is_surfboard and is_wetsuit)"
1930310,Is the computer to the left or to the right of the laptop?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer to the left or to the right of the laptop?"")"
12132719,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
11899596,What color is the large vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the large vehicle?"")"
8626026,On which side of the photo is the bus?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the bus?"")"
9616431,What is the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cup made of?"")"
9818735,Is the mirror on the left side?," # mirror
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is the mirror on the left side?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
875083,Are there any shoppers in the market?," # contains a relation (in, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shopper""))"
2422547,Are there any airplanes in the blue sky?," # contains a relation (in the blue sky), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
3671800,What is the toaster made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toaster made of?"")"
10793751,Do you see either any bikes or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike"") or image_patch.exists(""umbrella""))"
361162,Is the cab red or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cab red or white?"")"
948067,Which side of the image is the soap dispenser on?," # left or right
    image_patch = ImagePatch(image)
    soap_patches = image_patch.find(""soap dispenser"")
    # Question assumes only one soap patch
    if len(soap_patches) == 0:
        # If no soap is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the soap dispenser on?"")
    soap_patch = soap_patches[0]
    if soap_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
161011428,What is the person to the right of the surfboard wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the surfboard wearing?"")"
1543445,Do you see shelves to the left of the lamp on the left of the picture?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see shelves to the left of the lamp on the left of the picture?"")"
19946752,On which side of the photo is the tap?," # left or right
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the tap?"")
    if tap_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18262321,Is the black bag to the left or to the right of the man on the left side?," # left side is the left of the image
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""Is the black bag to the left or to the right of the man on the left side?"")
    for black_bag_patch in black_bag_patches:
        man_patches = image_patch.find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            # If no man is found, query the image directly
            return image_patch.simple_query(""Is the black bag to the left or to the right of the man on the left side?"")
        man_patch = man_patches[0]
        if black_bag_patch.horizontal_center < man_patch.horizontal_center:
            return ""left""
    return ""right"""
17953157,What color do you think the vest is?," # returns the color of the vest
    image_patch = ImagePatch(image)
    vest_patches = image_patch.find(""vest"")
    # Question assumes only one vest patch
    if len(vest_patches) == 0:
        # If no vest is found, query the image directly
        return image_patch.simple_query(""What color do you think the vest is?"")
    return vest_patches[0].simple_query(""What color do you think the vest is?"") # crop would include the vest so keep it in the query"
9511737,Is the white cake to the left of a candle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white cake to the left of a candle?"")"
546606,Is the door open or closed?," # contains a relation (open, closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the door open or closed?"")"
17562424,What is the door made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the door made of?"")"
11989579,Are the shirt and the wall the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Are the shirt and the wall the same color?"")
    shirt_color = shirt_patches[0].simple_query(""What color is the shirt?"")
    wall_patches = image_patch.find(""wall"")
    # Question assumes only one wall patch
    if len(wall_patches) == 0:
        # If no wall is found, query the image directly
        return image_patch.simple_query(""Are the shirt and the wall the same color?"")
    wall_color = wall_patches[0].simple_query(""What color is the wall?"")
    return bool_to_yesno(shirt_color == wall_color)"
7103312,Is the girl to the left of the handbag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of the handbag?"")"
711210,What is the horse doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse doing?"")"
9545625,Is the brown bag to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bag to the right or to the left of the woman?"")"
2636780,Do the carpet and the blanket have the same color?," # carpet and blanket
    image_patch = ImagePatch(image)
    carpet_patches = image_patch.find(""carpet"")
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one carpet and one blanket patch
    if len(carpet_patches) == 0 or len(blanket_patches) == 0:
        # If no carpet or blanket is found, query the image directly
        return image_patch.simple_query(""Do the carpet and the blanket have the same color?"")
    carpet_color = carpet_patches[0].simple_query(""What color is the carpet?"")
    blanket_color = blanket_patches[0].simple_query(""What color is the blanket?"")
    return bool_to_yesno(carpet_color == blanket_color)"
16101324,On which side of the photo is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
527944,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
4512735,Which color is the fence on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the fence on the left?"")"
3816904,What is the vehicle to the right of the table that is made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the table that is made of wood?"")"
43158,What is the animal that the wall is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the wall is behind of?"")"
371846,Is the grass behind an elephant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass behind an elephant?"")"
10727955,What kind of animal does the woman play with?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal does the woman play with?"")"
9272868,Who is holding the tennis racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the tennis racket?"")"
7766681,What is the color of the tennis racket?," # returns the color of the racket
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""What is the color of the tennis racket?"")
    return racket_patches[0].simple_query(""What is the color of the tennis racket?"") # crop would include the racket so keep it in the query"
1032031,Is the chair to the left of the cat light brown or is it red?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left of the cat light brown or is it red?"")"
122463,Which color is the shirt the people are wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt the people are wearing?"")"
1144933,On which side are the peppers?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the peppers?"")"
17796514,What do you think is the device to the left of the pens that are on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the device to the left of the pens that are on the right?"")"
12760437,Who is working on the beach?," # contains a relation (working on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is working on the beach?"")"
5255532,What kind of food is not steamed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is not steamed?"")"
18989739,What is the animal to the left of the book on the left called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the book on the left called?"")"
10910033,What color is the blanket?," # returns the color of the blanket
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What color is the blanket?"")
    return blanket_patches[0].simple_query(""What color is the blanket?"")"
686060,Is the person on the right side?," # assumes only one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Is the person on the right side?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
17503319,Is the lemon to the right of an onion?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lemon to the right of an onion?"")"
19891239,"In which part of the photo is the small container, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the small container, the bottom or the top?"")"
7278254,How large is the can?," # returns a string
    image_patch = ImagePatch(image)
    can_patches = image_patch.find(""can"")
    # Question assumes only one can patch
    if len(can_patches) == 0:
        # If no can is found, query the image directly
        return image_patch.simple_query(""How large is the can?"")
    return can_patches[0].simple_query(""How large is the can?"") # crop would include the can so keep it in the query"
5394296,Is there a cup to the left of the food the sprinkles are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cup to the left of the food the sprinkles are on?"")"
19274250,Are there both coffee tables and bookshelves in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coffee_table = image_patch.exists(""coffee table"")
    is_bookshelf = image_patch.exists(""bookshelf"")
    return bool_to_yesno(is_coffee_table and is_bookshelf)"
18980822,Who is wearing a bikini?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a bikini?"")"
71005232,"On which side of the photo is the white truck, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white truck, the left or the right?"")"
11316986,Do the clouds look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the clouds look white?"") == ""yes"")"
1000317,On which side of the picture is the bicycle?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bicycle?"")
    return ""left"" if bicycle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
14705483,Is the blanket to the right of the pillowcase orange or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blanket to the right of the pillowcase orange or blue?"")"
121002201,What is the white appliance called?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white appliance called?"")"
14984911,What is the lock on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lock on?"")"
17407967,What is the food that is to the right of the dessert in the top part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the right of the dessert in the top part of the picture?"")"
6992591,What is the color of the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What is the color of the hat?"")
    return hat_patches[0].simple_query(""What is the color of the hat?"")"
8363482,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3673041,Which color is the kite to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the kite to the right of the person?"")"
482504,What type of baked good is to the left of the fork next to the plate?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of baked good is to the left of the fork next to the plate?"")"
15255481,Are there people to the right of the palm by the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the right of the palm by the truck?"")"
12710378,What type of material is the cooking utensil to the left of the stove made of?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the cooking utensil to the left of the stove made of?"")"
8152715,What is the color of the spoon?," # returns the color of the spoon
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""What is the color of the spoon?"")
    return spoon_patches[0].simple_query(""What is the color of the spoon?"") # crop would include the spoon so keep it in the query"
19226243,Is the glass on top of a tablecloth?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass on top of a tablecloth?"")"
12520489,The snowboard that is in the bottom of the photo has what color?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The snowboard that is in the bottom of the photo has what color?"")"
19599342,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
11508216,What is this girl eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this girl eating?"")"
12706155,Is the figure small or large?," # contains a relation (small, large, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the figure small or large?"")"
10989017,What is the color of the water?," # returns the color of the water
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the water?"")"
11365525,What color is the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What color is the chair?"")
    return chair_patches[0].simple_query(""What color is the chair?"") # crop would include the chair so keep it in the query"
8608463,What is the name of the food to the right of the plate the cheese cube is on top of?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the food to the right of the plate the cheese cube is on top of?"")"
11695919,What is in front of the white cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the white cow?"")"
499021,Do you see any cows or cats that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cow = image_patch.exists(""cow"")
    is_cat = image_patch.exists(""cat"")
    is_black = image_patch.exists(""black"")
    return bool_to_yesno(is_cow or is_cat) and bool_to_yesno(is_black)"
7355708,What does the young girl wear?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the young girl wear?"")"
6400797,Where is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the grass?"")"
2431117,Which color does the dirt have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the dirt have?"")"
9658671,How tall is the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the grass?"")"
8982278,What is the piece of furniture that is to the left of the man that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the left of the man that is wearing a shirt?"")"
26647,"In which part is the blanket, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the blanket, the bottom or the top?"")"
7630174,Is the water dirty?," # dirty is a property of water
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""Is the water dirty?"")
    return bool_to_yesno(water_patches[0].verify_property(""water"", ""dirty""))"
15985892,What color is the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What color is the chair?"")
    return chair_patches[0].simple_query(""What color is the chair?"") # crop would include the chair so keep it in the query"
12138704,Are there both headphones and cups in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_headphones = image_patch.exists(""headphones"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_headphones and is_cup)"
12478985,What is on the sandwich?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sandwich?"")"
20283,What type of vehicle is to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is to the right of the woman?"")"
10488688,Is the camera in the top part or in the bottom of the picture?," # contains a relation (on top of, in the bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the camera in the top part or in the bottom of the picture?"")"
19972729,Where is that snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that snow?"")"
13629983,Is there a keyboard in this image that is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    for keyboard_patch in keyboard_patches:
        if keyboard_patch.verify_property(""keyboard"", ""black""):
            return ""yes""
    return ""no"""
8447443,Are there either bags or cars in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""car""))"
7237248,What are the fruits to the left of the lemons that are not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits to the left of the lemons that are not large?"")"
8126868,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
198664,Does the snow board to the right of the helmet look black?," # returns yes or no
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""Does the snow board to the right of the helmet look black?"")
    for snowboard_patch in snowboard_patches:
        helmet_patches = image_patch.find(""helmet"")
        # Question assumes only one helmet patch
        if len(helmet_patches) == 0:
            # If no helmet is found, query the image directly
            return image_patch.simple_query(""Does the snow board to the right of the helmet look black?"")
        helmet_patch = helmet_patches[0]
        if snowboard_patch.horizontal_center > helmet_patch.horizontal_center:
            return bool_to_yesno(snowboard_patch.verify_property(""snowboard"", ""black""))"
858967,Where is the animal to the left of the camera standing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the animal to the left of the camera standing?"")"
604607,Are the chopsticks to the right of the meal on the placemat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the chopsticks to the right of the meal on the placemat?"")"
1370144,Who is eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is eating?"")"
1148460,Who is wearing the skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the skirt?"")"
751114,Which side is the picture on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the picture on?"")"
3541787,Is the large animal white or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large animal white or brown?"")"
306512,Does the boat made of wood look blue?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boat made of wood look blue?"")"
7515729,On which side is the white bookcase?," # left or right
    image_patch = ImagePatch(image)
    bookcase_patches = image_patch.find(""bookcase"")
    # Question assumes only one bookcase patch
    if len(bookcase_patches) == 0:
        # If no bookcase is found, query the image directly
        return image_patch.simple_query(""On which side is the white bookcase?"")
    bookcase_patch = bookcase_patches[0]
    if bookcase_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3728366,Is the red chair in the top part or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red chair in the top part or in the bottom of the photo?"")"
12199468,What is in front of the white lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the white lamp?"")"
10154589,What color is the tall tower?," # contains a relation (tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tall tower?"")"
15768536,Is the helmet on the right of the image?," # helmet is on the right
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet on the right of the image?"")
    return ""yes"""
9267297,Is the shirt white or blue?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt white or blue?"")"
412757,"Which type of animal is not large, the bird or the elephant?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of animal is not large, the bird or the elephant?"")"
6916467,Which cooking utensil is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which cooking utensil is this?"")"
1881062,Do you see statues on the tower?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see statues on the tower?"")"
15324212,The mane has what length?," # mane is a horse's hair
    image_patch = ImagePatch(image)
    mane_patches = image_patch.find(""mane"")
    # Question assumes only one mane patch
    if len(mane_patches) == 0:
        # If no mane is found, query the image directly
        return image_patch.simple_query(""The mane has what length?"")
    return mane_patches[0].simple_query(""The mane has what length?"") # crop would include the mane so keep it in the query"
12735688,What is the man to the left of the elephant holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the elephant holding?"")"
7416413,Who is in front of the catcher?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the catcher?"")"
317835,How is the black item of furniture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the black item of furniture called?"")"
789156,Are there wolves or players?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wolf = image_patch.exists(""wolf"")
    is_player = image_patch.exists(""player"")
    return bool_to_yesno(is_wolf or is_player)"
7234992,What is the item of furniture that that dog is lying on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that that dog is lying on called?"")"
4621247,Are there eagles or sharks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""eagle"") or image_patch.exists(""shark""))"
315056,Is it a beach?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it a beach?"")"
923222,What animal is looking at the person that is standing on the dirt?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is looking at the person that is standing on the dirt?"")"
19716384,Is the person wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing a hat?"")"
11693269,Is the stove on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove on the right or on the left?"")"
7138997,What's in front of the gate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the gate?"")"
131046581,Is the microwave to the right of a stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the microwave to the right of a stove?"")"
16478999,Are there any girls to the right of the laptop that is to the left of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any girls to the right of the laptop that is to the left of the pillow?"")"
7545337,What is in front of the dry plants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the dry plants?"")"
16567724,What animal is to the right of the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the bike?"")"
14990003,Was the photo taken at the city or in the village?," # contains a relation (in, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was the photo taken at the city or in the village?"")"
8742045,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
5460466,Is there a table that is made of concrete?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a table that is made of concrete?"")"
11773644,Is the man to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the woman?"")"
18575407,Is the color of the spoon different than that of the knife?," # contains a relation (different than, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the spoon different than that of the knife?"")"
8173348,Is there a toothbrush or a kite in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_toothbrush = image_patch.exists(""toothbrush"")
    is_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_toothbrush or is_kite)"
15978844,Are there women to the left of the man that is on the left side of the photo?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there women to the left of the man that is on the left side of the photo?"")"
10249833,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
1026993,Is the boy on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy on the right side?"")"
11229884,Is the bench on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench on the right of the photo?"")"
5181014,What kind of animal is looking at the bowl?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is looking at the bowl?"")"
10976084,Is the blond woman carrying an umbrella?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blond woman carrying an umbrella?"")"
3760032,What is the animal on the trunk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on the trunk?"")"
10847526,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
11515706,Who is on the street?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the street?"")"
19367910,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
17341334,Is the animal on the table wearing a hat?," # contains a relation (on, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal on the table wearing a hat?"")"
12730219,Is the hair curly or straight?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair curly or straight?"")"
8567815,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
13459999,Are there any keyboards to the left of the device that looks black?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""keyboard"") and image_patch.simple_query(""Is the device black?"") == ""yes"")"
9642428,Are there either men or women in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") or image_patch.exists(""woman""))"
8990888,Do the Asian men seem to be sitting?," # contains a relation (Asian men, sitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the Asian men seem to be sitting?"")"
19865177,Is the man that is to the right of the chair wearing a cap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the right of the chair wearing a cap?"")"
6458657,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
19915535,Which kind of furniture is rustic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is rustic?"")"
18664288,On which side of the image is the chocolate?," # left or right
    image_patch = ImagePatch(image)
    chocolate_patches = image_patch.find(""chocolate"")
    # Question assumes only one chocolate patch
    if len(chocolate_patches) == 0:
        # If no chocolate is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the chocolate?"")
    if chocolate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13258332,Are there both a bus and a fence in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_bus and is_fence)"
16904135,What vehicle is to the right of the ladder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the ladder?"")"
12702827,Which color is the grass that the animal is eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the grass that the animal is eating?"")"
8683016,Are there books on the shelf in the top part of the picture?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there books on the shelf in the top part of the picture?"")"
9581367,Are there boats or ropes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_boat = image_patch.exists(""boat"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_boat or is_rope)"
1985355,Who is wearing the scarf?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the scarf?"")"
8460134,Is the happy person to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy person to the right or to the left of the woman?"")"
199924,Is the curtain different in color than the clock?," # clock is not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Is the curtain different in color than the clock?"")
    for curtain_patch in curtain_patches:
        clock_patches = image_patch.find(""clock"")
        # Question assumes only one clock patch
        if len(clock_patches) == 0:
            return image_patch.simple_query(""Is the curtain different in color than the clock?"")
        clock_patch = clock_patches[0]
        if curtain_patch.simple_query(""What color is the curtain?"") != clock_patch.simple_query(""What color is the clock?""):
            return ""yes""
    return ""no"""
13203762,Does the jacket look black?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Does the jacket look black?"")
    return bool_to_yesno(jacket_patches[0].verify_property(""jacket"", ""black""))"
10921281,What is in the cup?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the cup?"")"
161778,What is in the food near the fries?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the food near the fries?"")"
97275,"What is this, a cabinet or a table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a cabinet or a table?"")"
11559174,Is the pot to the right of a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pot to the right of a bottle?"")"
4749156,What is in the salad that is shown in this image?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the salad that is shown in this image?"")"
13927703,What is the crowd watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the crowd watching?"")"
1765302,Is there any rice to the left of the meat in the top of the photo?," # contains a relation (left of, top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any rice to the left of the meat in the top of the photo?"")"
14579181,What do you think is the bush in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the bush in front of?"")"
10108067,"Where in this picture is the fence, in the top or in the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this picture is the fence, in the top or in the bottom?"")"
41025557,What type of food is lying on the white plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is lying on the white plate?"")"
17654202,Is the sign different in color than the lid?," # contains a relation (different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sign different in color than the lid?"")"
111039626,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12552522,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
12694531,Does the baby giraffe appear to be resting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the baby giraffe appear to be resting?"")"
416151,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
15420011,What device is to the right of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the laptop?"")"
9668642,What is the green clothing item called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the green clothing item called?"")"
446598,Are there any wigs or ropes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wig = image_patch.exists(""wig"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_wig or is_rope)"
667651,Does the belt look wide?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the belt look wide?"")"
1186574,What's the girl using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the girl using?"")"
5331092,Which side is the fat candle on?," # left or right
    image_patch = ImagePatch(image)
    candle_patches = image_patch.find(""candle"")
    # Question assumes only one candle patch
    if len(candle_patches) == 0:
        # If no candle is found, query the image directly
        return image_patch.simple_query(""Which side is the fat candle on?"")
    fat_candle_patch = candle_patches[0]
    if fat_candle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
316356,Which kind of vegetable is to the left of the frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the left of the frisbee?"")"
3349677,Is the pizza to the right of a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pizza to the right of a bottle?"")"
19566322,Do you see any mirrors on the wall?," # mirror
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    return bool_to_yesno(len(mirror_patches) > 0)"
719127,What is the cow looking into?," # contains a relation (looking into), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cow looking into?"")"
17448127,Is the color of the fence different than the bird?," # bird is not eating
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Is the color of the fence different than the bird?"")
    for fence_patch in fence_patches:
        bird_patches = image_patch.find(""bird"")
        for bird_patch in bird_patches:
            if fence_patch.verify_property(""fence"", ""color"") != bird_patch.verify_property(""bird"", ""color""):
                return ""yes""
    return ""no"""
15926049,Do you see any black hats or gloves?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_hat = image_patch.exists(""black hat"")
    is_black_glove = image_patch.exists(""black glove"")
    return bool_to_yesno(is_black_hat or is_black_glove)"
5418692,Which kind of fruit is to the right of the tangerine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is to the right of the tangerine?"")"
8433647,Are there bags or cars in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bag or is_car)"
357203,Which kind of animal is the building behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the building behind of?"")"
683469,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
4249317,Is there a tall fence in this photo?," # contains a relation (tall, in this photo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a tall fence in this photo?"")"
4762295,What is mounted on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is mounted on the wall?"")"
86857,What animal is to the right of the zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the zebras?"")"
18498448,What color is the lid?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the lid?"")"
668604,Does the person to the right of the helmet carry an umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person to the right of the helmet carry an umbrella?"")"
970945,"On which side of the image is the fence, the right or the left?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the fence, the right or the left?"")"
8790426,What does the man wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man wear?"")"
973235,Is the shirt long and purple?," # shirt is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt long and purple?"")"
6119148,Is the car in the top part of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the top part of the picture?"")"
6469266,Is the trash can to the right or to the left of the car that is in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the trash can to the right or to the left of the car that is in the middle of the photo?"")"
1376153,Is the blue shirt long sleeved or short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue shirt long sleeved or short sleeved?"")"
13854718,What is the label on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the label on?"")"
12856003,What vehicle is pulled by the train?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is pulled by the train?"")"
8856448,Where is the animal near the plants walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the animal near the plants walking?"")"
12915199,Does the woman look young?," # age is a property of a person
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Does the woman look young?"")
    return bool_to_yesno(woman_patches[0].verify_property(""woman"", ""young""))"
14856745,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
4833981,Is the blue SUV to the right or to the left of the vehicle that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue SUV to the right or to the left of the vehicle that is to the right of the man?"")"
9785210,Is the man to the left of the bike wearing jeans?," # contains a relation (left of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the bike wearing jeans?"")"
8904732,Does the container on the ground look brown?," # container on the ground
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Does the container on the ground look brown?"")
    return bool_to_yesno(container_patches[0].verify_property(""container"", ""brown""))"
16913203,Are there any helmets or bulbs in the picture?," # helmet or bulb
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_bulb = image_patch.exists(""bulb"")
    return bool_to_yesno(is_helmet or is_bulb)"
8922921,On which side are the glasses?," # left or right
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""On which side are the glasses?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8926125,What kind of vegetable is to the right of the celery?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the celery?"")"
14461469,What kind of device is in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is in the picture?"")"
777330,Is there any mirror or bus in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_mirror or is_bus)"
18649238,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
3571909,On which side of the image is the paper towel?," # left or right
    image_patch = ImagePatch(image)
    paper_towel_patches = image_patch.find(""paper towel"")
    # Question assumes only one paper towel patch
    if len(paper_towel_patches) == 0:
        # If no paper towel is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the paper towel?"")
    if paper_towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15404157,On which side is the wood cabinet?," # left or right
    image_patch = ImagePatch(image)
    wood_cabinet_patches = image_patch.find(""wood cabinet"")
    # Question assumes only one wood cabinet patch
    if len(wood_cabinet_patches) == 0:
        # If no wood cabinet is found, query the image directly
        return image_patch.simple_query(""On which side is the wood cabinet?"")
    wood_cabinet_patch = wood_cabinet_patches[0]
    horizontal_center = wood_cabinet_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4801908,Does the baby that is to the right of the remote control have small size and brunette color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""baby with small size and brunette color"") and image_patch.exists(""remote control"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
17588010,Is the helmet on the right side or on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet on the right side or on the left of the image?"")
    helmet_patch = helmet_patches[0]
    if helmet_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
8364990,What is the color of the shirt the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the woman is wearing?"")"
19862864,Is there a tie in the image that is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    for tie_patch in tie_patches:
        if not tie_patch.verify_property(""tie"", ""blue""):
            return ""yes""
    return ""no"""
3778538,What is on the sink?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sink?"")"
18389007,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
714863,What kind of baked good is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is on the table?"")"
14686625,Do you see pineapples to the right of the plastic bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see pineapples to the right of the plastic bags?"")"
12175994,Which kind of animal is in the grass?," # contains a relation (in the grass), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in the grass?"")"
4666878,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
1530307,What item of furniture is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the left of the woman?"")"
7342847,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13534839,Which clothing item is white?," # returns the first clothing item that is white
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which clothing item is white?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""white""):
            return clothing_patch.simple_query(""Which clothing item is white?"")
    return clothing_patch.simple_query(""Which clothing item is white?"") # if no clothing is white, return the first clothing item"
10406172,How clean is the ground?," # ground is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How clean is the ground?"")"
10881976,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
8378054,Are there both doors and windows in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
5174663,Which color is the van?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the van?"")"
1128601,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
10759927,Is the woman on the right part?," # assumes only one woman patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman on the right part?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
12187636,What color is the blanket?," # returns the color of the blanket
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What color is the blanket?"")
    return blanket_patches[0].simple_query(""What color is the blanket?"")"
8656675,Are there any phones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""phone""))"
172737,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
980313,Is the clear bowl in the top part or in the bottom of the photo?," # clear bowl
    image_patch = ImagePatch(image)
    clear_bowl_patches = image_patch.find(""clear bowl"")
    # Question assumes only one clear bowl patch
    if len(clear_bowl_patches) == 0:
        # If no clear bowl is found, query the image directly
        return image_patch.simple_query(""Is the clear bowl in the top part or in the bottom of the photo?"")
    if clear_bowl_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
15360450,"Which color are the trees, brown or green?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the trees, brown or green?"")"
16995202,What kind of vehicle is parked at the house?," # contains a relation (parked at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is parked at the house?"")"
8617421,Is the cheese in the bottom part of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cheese in the bottom part of the image?"")"
171057136,What's on the sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the sign?"")"
16249246,Is the tree behind a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind a boy?"")"
19989243,Is the catcher to the left or to the right of the person that is wearing socks?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher to the left or to the right of the person that is wearing socks?"")"
1973457,Is the woman to the right of the screen looking at the phone in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the screen looking at the phone in the middle?"")"
8207827,What vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is it?"")"
18483057,Who is wearing hats?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing hats?"")"
14697513,Which color do you think the animal that grazes on grass has?," # green
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Which color do you think the animal that grazes on grass has?"")
    return animal_patches[0].simple_query(""Which color do you think the animal that grazes on grass has?"")"
5109863,Do you see either any chairs or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""bag""))"
4298898,Which side of the photo is the van on?," # left or right
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the van on?"")
    van_patch = van_patches[0]
    horizontal_center = van_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1817397,Are there both beds and pillows in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_bed and is_pillow)"
8845318,Do you see any umbrellas or balls that are yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_ball = image_patch.exists(""ball"")
    is_yellow_umbrella = image_patch.exists(""yellow umbrella"")
    is_yellow_ball = image_patch.exists(""yellow ball"")
    return bool_to_yesno(is_umbrella or is_ball or is_yellow_umbrella or is_yellow_ball)"
2840347,Who is on the elephant in the middle of the image?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the elephant in the middle of the image?"")"
11880937,Do you see either castles or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_castle = image_patch.exists(""castle"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_castle or is_flag)"
7112245,Which kind of furniture isn't large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture isn't large?"")"
17721190,On which side of the image is the bus?," # left or right
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bus?"")
    bus_patch = bus_patches[0]
    if bus_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18110750,Do you see both kangaroos and cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_kangaroo = image_patch.exists(""kangaroo"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_kangaroo and is_cat)"
12887866,On which side of the photo is the green bag?," # left or right
    image_patch = ImagePatch(image)
    green_bag_patches = image_patch.find(""green bag"")
    # Question assumes only one green bag patch
    if len(green_bag_patches) == 0:
        # If no green bag is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the green bag?"")
    green_bag_patch = green_bag_patches[0]
    if green_bag_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11271145,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
5666941,What is on the roof?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the roof?"")"
688091,Are the boxes to the right of the mannequin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the boxes to the right of the mannequin?"")"
5532036,Do you see any catchers to the right of the batter?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any catchers to the right of the batter?"")"
11783735,Do you see any toast to the left of the white drink?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any toast to the left of the white drink?"")"
17878810,On which side is the horse?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the horse?"")"
12292672,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    for helmet_patch in helmet_patches:
        return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
3930101,Are there either kettles or ovens in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kettle"") or image_patch.exists(""oven""))"
4997812,What are the video games on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the video games on?"")"
8443462,Where is the decoration hanging?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the decoration hanging?"")"
19933437,Is the flower in a bottle?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flower in a bottle?"")"
12168785,Do you see both a window and a door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
5415901,What color do you think is the sweater?," # returns the color of the sweater
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        # If no sweater is found, query the image directly
        return image_patch.simple_query(""What color do you think is the sweater?"")
    return sweater_patches[0].simple_query(""What color do you think is the sweater?"") # crop would include the sweater so keep it in the query"
5910163,"Who is older, the girl or the man?"," # assumes only one girl and one man
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    man_patches = image_patch.find(""man"")
    if len(girl_patches) == 0 or len(man_patches) == 0:
        return image_patch.simple_query(""Who is older, the girl or the man?"")
    girl_age = girl_patches[0].simple_query(""How old is the girl?"")
    man_age = man_patches[0].simple_query(""How old is the man?"")
    if girl_age < man_age:
        return ""the girl""
    else:
        return ""the man"""
8673780,Do you see a fence or a ball there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a fence or a ball there?"")"
7540375,The umbrella on the right has what color?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The umbrella on the right has what color?"")"
6237460,What is the vegetable in the bowl to the left of the orange called?," # contains a relation (left of, in the bowl, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable in the bowl to the left of the orange called?"")"
5547910,What kind of furniture is the platter on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the platter on?"")"
9718885,Who is on the boat in the water?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the boat in the water?"")"
10450069,Do you see an elephant or a giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see an elephant or a giraffe?"")"
479562,What is the building in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the building in front of?"")"
4677053,"Where is the white couch, on the right or on the left of the image?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the white couch, on the right or on the left of the image?"")"
4562598,Is the fence to the right or to the left of the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the right or to the left of the truck?"")"
19568742,Are there either any windows or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window or is_car)"
13785690,In which part of the photo is the telephone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the telephone?"")"
18997841,What animal is the person riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the person riding?"")"
12406860,Are there boys on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy on grass"")) # crop would include the grass so keep it in the query"
51002254,What device is illuminated?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is illuminated?"")"
15952096,Are there any white gloves or scarves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glove = image_patch.exists(""white glove"")
    is_scarf = image_patch.exists(""scarf"")
    return bool_to_yesno(is_glove or is_scarf)"
19445391,What is the name of the vehicles to the left of the person in the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vehicles to the left of the person in the train?"")"
7885660,What type of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is white?"")"
18883329,Do you see any players to the left of the helmet that looks green?," # helmet is green
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you see any players to the left of the helmet that looks green?"")
    helmet_patch = helmet_patches[0]
    player_patches = image_patch.find(""player"")
    # Question assumes only one player patch
    if len(player_patches) == 0:
        return ""no""
    for player_patch in player_patches:
        if player_patch.horizontal_center < helmet_patch.horizontal_center:
            return ""yes""
    return ""no"""
7147364,Which kind of fast food is in the paper?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is in the paper?"")"
12975947,Are there any cars to the left of the glasses the man is wearing?," # glasses are to the left of the face
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there any cars to the left of the glasses the man is wearing?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""no""
    glasses_patch = glasses_patches[0]
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        return ""no""
    for car_patch in car_patches:
        if car_patch.horizontal_center < glasses_patch.horizontal_center and car_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
5714853,What is the name of the animal that is sitting in the green plant?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal that is sitting in the green plant?"")"
2953073,What is full of fruit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is full of fruit?"")"
2424047,Is there a cat or a bird that is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    bird_patches = image_patch.find(""bird"")
    for cat_patch in cat_patches:
        if cat_patch.verify_property(""cat"", ""white"") == False:
            return ""yes""
    for bird_patch in bird_patches:
        if bird_patch.verify_property(""bird"", ""white"") == False:
            return ""yes""
    return ""no"""
19335649,In which part of the image is the mirror?," # mirror
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the mirror?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
15119535,What appliance is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is it?"")"
2484537,What is the cooking utensil that is made of metal called?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil that is made of metal called?"")"
19800765,Are there either any silver faucets or pots in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_silver_faucet = image_patch.exists(""faucet"") and image_patch.simple_query(""Is the faucet silver?"") == ""yes""
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_silver_faucet or is_pot)"
3931350,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
19745329,Is there a orange backpack or briefcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a orange backpack or briefcase?"")"
178429,What is the jacket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the jacket on?"")"
6377180,Is the shirt gray or red?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt gray or red?"")"
8401837,Does the carpet look dirty and beige?," # dirty and beige are properties
    image_patch = ImagePatch(image)
    carpet_patches = image_patch.find(""carpet"")
    # Question assumes only one carpet patch
    if len(carpet_patches) == 0:
        # If no carpet is found, query the image directly
        return image_patch.simple_query(""Does the carpet look dirty and beige?"")
    return bool_to_yesno(carpet_patches[0].verify_property(""carpet"", ""dirty"") and carpet_patches[0].verify_property(""carpet"", ""beige""))"
5895586,On which side is the rug?," # left or right
    image_patch = ImagePatch(image)
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""On which side is the rug?"")
    if rug_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13881406,Is the phone on the left side of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone on the left side of the photo?"")"
16543808,What is the color of the bowl that is made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bowl that is made of metal?"")"
11489816,Where is the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the truck?"")"
10617432,Is the fence yellow or gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence yellow or gray?"")"
2332237,"Which kind of clothing is black, the cap or the shirt?"," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black, the cap or the shirt?"")"
19404273,What are the gray glasses made out of?," # returns a string
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""What are the gray glasses made out of?"")
    glasses_patch = glasses_patches[0]
    return glasses_patch.simple_query(""What are the gray glasses made out of?"") # crop would include the glasses so keep it in the query"
4772184,What is the tea pot on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tea pot on?"")"
3753245,What are the giraffes in front of the rocks sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the giraffes in front of the rocks sitting on?"")"
14831525,Is the fried food to the right or to the left of the hot dog?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fried food to the right or to the left of the hot dog?"")"
151005116,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
131016123,Who is on the lawn?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the lawn?"")"
11574924,On which side is the computer?," # left or right
    image_patch = ImagePatch(image)
    computer_patches = image_patch.find(""computer"")
    # Question assumes only one computer patch
    if len(computer_patches) == 0:
        # If no computer is found, query the image directly
        return image_patch.simple_query(""On which side is the computer?"")
    return ""left"" if computer_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
2762255,In which part of the photo is the bedding?," # returns the part of the image (top, bottom, left, right)
    image_patch = ImagePatch(image)
    bedding_patches = image_patch.find(""bedding"")
    # Question assumes only one bedding patch
    if len(bedding_patches) == 0:
        # If no bedding is found, query the image directly
        return image_patch.simple_query(""In which part of the photo is the bedding?"")
    if bedding_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    elif bedding_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    elif bedding_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""top"""
197086,Who is wearing the chef hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the chef hat?"")"
210066,Is the fire hydrant green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fire hydrant green?"")"
1322694,Is the skateboard to the right or to the left of the man that is wearing pants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skateboard to the right or to the left of the man that is wearing pants?"")"
11028986,What fruit is to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the right of the woman?"")"
10493493,Do you see any white vases or letters?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_vase = image_patch.exists(""vase"")
    is_letter = image_patch.exists(""letters"")
    return bool_to_yesno(is_vase or is_letter)"
9463689,Is the stuffed bear on a desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stuffed bear on a desk?"")"
1948306,What is that oven in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that oven in front of?"")"
38844,Which side is the catcher on?," # assumes only one catcher
    image_patch = ImagePatch(image)
    catcher_patches = image_patch.find(""catcher"")
    if len(catcher_patches) == 0:
        # If no catcher is found, query the image directly
        return image_patch.simple_query(""Which side is the catcher on?"")
    catcher_patch = catcher_patches[0]
    if catcher_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1345134,Which color are the trees that are not short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the trees that are not short?"")"
17253711,Is the chair on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair on the right side of the picture?"")"
8764396,What is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
3567012,Is the man on the right side or on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right side or on the left of the photo?"")"
17990412,Is the small kite to the left of the boy that is wearing shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small kite to the left of the boy that is wearing shorts?"")"
13737959,"What type of furniture is this, a table or a chair?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is this, a table or a chair?"")"
1726136,What is common to the van and the road?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the van and the road?"")"
5542111,Who is skateboarding?," # contains a relation (skateboarding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skateboarding?"")"
1511201,What toy is to the left of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is to the left of the clock?"")"
9972897,What is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the man?"")"
161049107,Is the building behind a train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind a train?"")"
951192,Is there a blanket or a bed in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket"") or image_patch.exists(""bed""))"
5935514,What's on the bookshelf?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the bookshelf?"")"
6655807,Is the white plate to the left of a pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white plate to the left of a pizza?"")"
8774227,What is the fence in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence in front of?"")"
125201,Which kind of vehicle is to the left of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the bag?"")"
5740717,Is the television to the left or to the right of the curtains that are white and pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the television to the left or to the right of the curtains that are white and pink?"")"
13605282,What fruit is yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is yellow?"")"
8706080,What does the sign hang from?," # contains a relation (hang from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the sign hang from?"")"
13575701,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
14771285,Is there a bear in front of the large rocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bear in front of the large rocks?"")"
13397111,What is the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cup made of?"")"
18541626,What is the piece of furniture that the young child is sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the young child is sitting on?"")"
731241,Which kind of vehicle is the car in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is the car in front of?"")"
10354,Is the trash in a plate?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the trash in a plate?"")"
18625011,Does that statue seem to be white or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that statue seem to be white or red?"")"
9434698,What color does the utensil have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the utensil have?"")"
161067318,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
17325170,What is the child wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child wearing?"")"
10501527,Are the onions to the right or to the left of the yellow pepper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the onions to the right or to the left of the yellow pepper?"")"
8713868,What is the vegetable to the right of the boy that is wearing a jacket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the right of the boy that is wearing a jacket?"")"
5269427,Who do you think is the water in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is the water in front of?"")"
15461649,What is hanging on the white wall?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging on the white wall?"")"
3448654,On which side of the image is the mirror?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the mirror?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
708015,In which part are the lamps?," # assumes only one lamp
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""In which part are the lamps?"")
    if lamp_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
1349001,Is the large cabinet in the top part or in the bottom of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large cabinet in the top part or in the bottom of the image?"")"
2797839,Is the ipod to the right or to the left of the laptop that is to the right of the notebook?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ipod to the right or to the left of the laptop that is to the right of the notebook?"")"
3914627,What vehicle is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is this?"")"
17242118,Are there cups that are made of plastic?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cup made of plastic"")) # crop would include the material so keep it in the query"
18698158,What is the item of furniture to the right of the lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the lady?"")"
11300203,Are there any computers or printers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_computer = image_patch.exists(""computer"")
    is_printer = image_patch.exists(""printer"")
    return bool_to_yesno(is_computer or is_printer)"
18804895,What device is to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the television?"")"
2671069,"Who is younger, the lady or the boy?"," # contains a relation (older, younger, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is younger, the lady or the boy?"")"
1476500,Is the box to the left or to the right of the keyboard that is on the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box to the left or to the right of the keyboard that is on the desk?"")"
302993,Is the lamp to the left of a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the left of a laptop?"")"
16631094,Who is riding a horse?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding a horse?"")"
19384823,Does the hair look long and dark?," # hair is a tricky one
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair look long and dark?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""long"") and hair_patches[0].verify_property(""hair"", ""dark""))"
11405268,Which side of the image is the white device on?," # left or right
    image_patch = ImagePatch(image)
    white_device_patches = image_patch.find(""white device"")
    # Question assumes only one white device patch
    if len(white_device_patches) == 0:
        # If no white device is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the white device on?"")
    white_device_patch = white_device_patches[0]
    if white_device_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17747789,Are there trays above the white table?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tray"") and image_patch.exists(""white table"")) # contains a relation (above, below, etc), so ask directly"
10242231,Is there a flag in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""flag""))"
161010756,What's the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the sign on?"")"
17637423,The young person is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The young person is holding what?"")"
9173782,What's in the water?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the water?"")"
3192124,Is there a pizza or a doughnut that is not round?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pizza = image_patch.exists(""pizza"")
    is_doughnut = image_patch.exists(""doughnut"")
    return bool_to_yesno(is_pizza or is_doughnut)"
1117389,The suitcase is lying on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The suitcase is lying on what?"")"
15371869,Are the skis to the right or to the left of the people that are walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the skis to the right or to the left of the people that are walking?"")"
2522655,Are there both a keyboard and a mouse in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_keyboard = image_patch.exists(""keyboard"")
    is_mouse = image_patch.exists(""mouse"")
    return bool_to_yesno(is_keyboard and is_mouse)"
14731705,Which kind of food is to the left of the cheese?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the cheese?"")"
13326418,On which side of the picture is the binder?," # left or right
    image_patch = ImagePatch(image)
    binder_patches = image_patch.find(""binder"")
    # Question assumes only one binder patch
    if len(binder_patches) == 0:
        # If no binder is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the binder?"")
    if binder_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
386333,"What device is thick, the TV or the screen?"," # contains a relation (thick, thin, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is thick, the TV or the screen?"")"
6703174,"On which side of the image is the ladder, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the ladder, the right or the left?"")"
921,Who is wearing a jump suit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jump suit?"")"
3635780,Is the safety vest in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the safety vest in the bottom or in the top part of the image?"")"
3949739,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
7966355,Which kind of clothing is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing brown?"") == ""no"":
            return clothing_patch.simple_query(""Which kind of clothing is not brown?"")
    return clothing_patch.simple_query(""Which kind of clothing is not brown?"") # if no clothing is not brown, query the clothing directly"
6753144,Is it overcast or cloudless?," # contains a relation (over, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it overcast or cloudless?"")"
16372795,Does the remote to the left of the book have black color and small size?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the remote to the left of the book have black color and small size?"")"
1150031,Are there any nightstands or lamps in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nightstand"") or image_patch.exists(""lamp""))"
13652526,What kind of appliance is on the small desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is on the small desk?"")"
1091313,Which shape is the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which shape is the clock?"")"
14345045,"What is he doing, playing or eating?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he doing, playing or eating?"")"
4145194,Is the fence in the top or in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top or in the bottom of the image?"")"
756067,On which side of the image is the fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fork?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13191196,Where is the platform?," # platform is a type of object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the platform?"")"
103084,The cross on the road has which color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cross on the road has which color?"")"
1968258,Does the hat on the bear look beige or blue?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the hat on the bear look beige or blue?"")"
7739901,What is that ground made of?," # ground is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that ground made of?"")"
12647738,What color do you think the traffic cone that is not small is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the traffic cone that is not small is?"")"
14457433,Is there either any hippo or panda bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""hippo"") or image_patch.exists(""panda bear""))"
9716774,Are there tennis balls or gifts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tennis_ball = image_patch.exists(""tennis ball"")
    is_gift = image_patch.exists(""gift"")
    return bool_to_yesno(is_tennis_ball or is_gift)"
1118242,What is the man that looks happy doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that looks happy doing?"")"
12813867,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
13889269,"On which side is the white vehicle, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white vehicle, the right or the left?"")"
5530973,Which kind of animal is to the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the right of the picture?"")"
383977,Which side is the stroller on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the stroller on?"")"
2809920,On which side of the image is the white candle?," # left or right
    image_patch = ImagePatch(image)
    candle_patches = image_patch.find(""candle"")
    # Question assumes only one candle patch
    if len(candle_patches) == 0:
        # If no candle is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the white candle?"")
    if candle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5825364,Who is looking over the wall?," # contains a relation (looking over), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is looking over the wall?"")"
15642650,Do you see a motorbike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorbike""))"
19421357,Is the long paddle to the right or to the left of the man that is to the left of the life vest?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long paddle to the right or to the left of the man that is to the left of the life vest?"")"
13471896,Do you see any cars or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_car or is_fence)"
1673712,What kind of furniture is the lamp behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the lamp behind of?"")"
19548541,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
257234,What color is the sink the tap is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sink the tap is on?"")"
16236153,What is the vehicle that is to the right of the car in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is to the right of the car in the middle of the image?"")"
8509556,"How do the pants look like, black or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How do the pants look like, black or red?"")"
13997044,What device is on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the desk?"")"
5504640,Is the green kite on the left side?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green kite on the left side?"")"
17830558,What is on the appliance in the bottom?," # assumes only one appliance in the bottom
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What is on the appliance in the bottom?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.vertical_center < image_patch.vertical_center:
        return appliance_patch.simple_query(""What is on the appliance in the bottom?"")
    else:
        return appliance_patch.simple_query(""What is on the appliance in the top?"")"
450106,Does the counter have black color?," # counter
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""counter"", ""black""))"
10817576,Is the person to the right of the boy wearing a jacket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the boy wearing a jacket?"")"
2880505,Is the blue blanket to the left or to the right of the animal that is sitting down?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue blanket to the left or to the right of the animal that is sitting down?"")"
13918206,What is the branch full of?," # contains a relation (full of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the branch full of?"")"
10539668,What is the length of the trees above the stick?," # returns a string
    image_patch = ImagePatch(image)
    stick_patches = image_patch.find(""stick"")
    # Question assumes only one stick patch
    if len(stick_patches) == 0:
        # If no stick is found, query the image directly
        return image_patch.simple_query(""What is the length of the trees above the stick?"")
    stick_patch = stick_patches[0]
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        return image_patch.simple_query(""What is the length of the trees above the stick?"")
    tree_patch = tree_patches[0]
    return tree_patch.simple_query(""What is the length of the trees above the stick?"") # crop would include the stick so keep it in the query"
18262427,Does the bucket to the right of the people seem to be blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""Does the bucket to the right of the people seem to be blue?"")
    for bucket_patch in bucket_patches:
        if bucket_patch.horizontal_center > image_patch.horizontal_center:
            return bool_to_yesno(bucket_patch.verify_property(""bucket"", ""blue""))
    return ""no"""
4596738,Do you see any coffee or plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""coffee"") or image_patch.exists(""plate""))"
177223,Are there any people to the right of the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.find(""train"")[0].horizontal_center < image_patch.horizontal_center)"
1465233,Which kind of food is the gravy on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is the gravy on?"")"
309280,What is the standing man that is to the right of the rope holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the standing man that is to the right of the rope holding?"")"
1123333,Are there horses in the picture that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white horse"")) # crop would include the color so keep it in the query"
10486031,Is the black can in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black can in the top of the picture?"")"
10818605,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
1082760,Is the utensil on top of the table made of plastic?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the utensil on top of the table made of plastic?"")"
10138059,Is the giraffe on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the giraffe on the left side?"")"
1908085,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12431743,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
605272,Is there any giraffe near the fence made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any giraffe near the fence made of wood?"")"
442157,Is the stove to the left of a knife?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove to the left of a knife?"")"
11756728,The vehicle that is to the right of the people is pulled by what animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The vehicle that is to the right of the people is pulled by what animal?"")"
111975,Which kind of aircraft is in front of the trash can?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is in front of the trash can?"")"
16403123,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
171043426,What are the strawberries inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the strawberries inside of?"")"
18934883,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
6651327,What is the color of the shorts?," # returns the color of the shorts
    image_patch = ImagePatch(image)
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one shorts patch
    if len(shorts_patches) == 0:
        # If no shorts are found, query the image directly
        return image_patch.simple_query(""What is the color of the shorts?"")
    return shorts_patches[0].simple_query(""What is the color of the shorts?"") # crop would include the shorts so keep it in the query"
16715527,Which side is the beef on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the beef on?"")"
492709,Do you see any clocks there that are not gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any clocks there that are not gold?"")"
12218393,Is the black vehicle to the right or to the left of the person that is holding the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black vehicle to the right or to the left of the person that is holding the man?"")"
166068,What are the bags to the right of the man that is on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the bags to the right of the man that is on the left?"")"
2317848,Do the tank top and the dress have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the tank top and the dress have a different colors?"")) # crop would include the shirt so keep it in the query"
2838563,What is in the white bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the white bowl?"")"
7544518,What is the cable on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cable on?"")"
9670553,Does that belt look blue and thick?," # belt is a common object, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that belt look blue and thick?"")"
1681005,What is sitting on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the table?"")"
8292229,Who is holding the purse that the dispenser is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the purse that the dispenser is to the right of?"")"
6704774,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
1497025,Is this a couch or a desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a couch or a desk?"")"
1130067,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
8602378,Is the saucer to the left of a cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the saucer to the left of a cup?"")"
15809668,Who do you think wears jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think wears jeans?"")"
5212628,Who is sitting on the sofa?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the sofa?"")"
9849973,What is the speaker on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the speaker on?"")"
6559834,Which color are the pants the woman is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which color are the pants the woman is wearing?"")
    woman_patch = woman_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""Which color are the pants the woman is wearing?"")
    for pants_patch in pants_patches:
        if pants_patch.horizontal_center > woman_patch.horizontal_center:
            return pants_patch.simple_query(""What color are the pants?"")
    return image_patch.simple_query(""Which color are the pants the woman is wearing?"") # if no pants are found to the right of the woman, query the image directly"
12361845,Is there a dog near the tent that looks white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a dog near the tent that looks white?"")"
5730128,Are there either any white ottomen or beds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_ottoman = image_patch.exists(""white ottoman"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_white_ottoman or is_bed)"
3852456,Do you see both fences and bowls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bowl = image_patch.exists(""bowl"")
    return bool_to_yesno(is_fence and is_bowl)"
17524789,What is underneath the bed?," # contains a relation (underneath, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is underneath the bed?"")"
9909748,Which kind of clothing is not dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing dark?"") == ""no"":
            return clothing_patch.simple_query(""What kind of clothing is not dark?"")
    return image_patch.simple_query(""Which kind of clothing is not dark?"")"
6870217,Are there both a fence and a helmet in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_fence and is_helmet)"
15236252,What kind of furniture is in front of the wall?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is in front of the wall?"")"
18634408,Is the flower that looks purple potted or wild?," # contains a relation (potted or wild), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flower that looks purple potted or wild?"")"
1021601,Does the player above the dirt hold a baseball bat?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the player above the dirt hold a baseball bat?"")"
10189428,Are there both zebras and rhinos in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_zebra = image_patch.exists(""zebra"")
    is_rhino = image_patch.exists(""rhino"")
    return bool_to_yesno(is_zebra and is_rhino)"
10952251,Are there any planters or umbrellas in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""planter"") or image_patch.exists(""umbrella""))"
192117,What piece of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is made of wood?"")"
10779340,Is the woman to the left or to the right of the clear vase?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the clear vase?"")"
15103806,Who is wearing a tshirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a tshirt?"")"
4788009,Is the red bowl on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red bowl on the left?"")"
15666391,Which color are the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""Which color are the pants?"")
    return pants_patches[0].simple_query(""Which color are the pants?"")"
18652634,Is the woman to the left or to the right of the man in the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the man in the image?"")"
3224957,Where is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
6235236,Which kind of device is the man in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the man in front of?"")"
6947334,What is the device that is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is on?"")"
15302436,Which side is the bowl on?," # left or right
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Which side is the bowl on?"")
    if bowl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5292510,Is the metal utensil on the left?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal utensil on the left?"")"
17835372,Are there any taxis or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_taxi = image_patch.exists(""taxi"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_taxi or is_mirror)"
5153228,Is the beach near the water both rocky and brown?," # beach is near the water
    image_patch = ImagePatch(image)
    beach_patches = image_patch.find(""beach"")
    # Question assumes only one beach patch
    if len(beach_patches) == 0:
        # If no beach is found, query the image directly
        return image_patch.simple_query(""Is the beach near the water both rocky and brown?"")
    beach_patch = beach_patches[0]
    is_rocky = beach_patch.verify_property(""beach"", ""rocky"")
    is_brown = beach_patch.verify_property(""beach"", ""brown"")
    return bool_to_yesno(is_rocky and is_brown)"
1558716,What color do you think are the sneakers that the players are wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think are the sneakers that the players are wearing?"")"
101052378,How is this aircraft called?," # aircraft
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is this aircraft called?"")"
15148647,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
5783017,Are the palm trees in the bottom or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the palm trees in the bottom or in the top of the image?"")"
171008872,Is the hay under a cow?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hay under a cow?"")"
12240220,Is the white bus to the left of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bus to the left of a bag?"")"
19270457,The little island is surrounded by what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The little island is surrounded by what?"")"
2316995,Who wears a life vest?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a life vest?"")"
1728527,Is there either a chair or a cup in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""cup""))"
17624896,What kind of animal is chasing a ball?," # contains a relation (chasing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is chasing a ball?"")"
3749709,How is the animal that is white called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal that is white called?"")"
131060306,Is the tail green and bushy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tail green and bushy?"")"
1342259,What fruits are to the right of the bacon in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits are to the right of the bacon in the center?"")"
905263,Are there pictures to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pictures"") and image_patch.exists(""man"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
2541847,What type of vegetable is to the right of the candy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is to the right of the candy?"")"
4338722,Is the person that is to the left of the safety cone wearing a hat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the left of the safety cone wearing a hat?"")"
7784676,Are there airplanes in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
19189477,On which side is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5560898,Which side of the picture is the strawberry on?," # left or right
    image_patch = ImagePatch(image)
    strawberry_patches = image_patch.find(""strawberry"")
    # Question assumes only one strawberry patch
    if len(strawberry_patches) == 0:
        # If no strawberry is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the strawberry on?"")
    strawberry_patch = strawberry_patches[0]
    if strawberry_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2919952,How big are the windows?," # returns a string
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""How big are the windows?"")
    return window_patches[0].simple_query(""How big are the windows?"")"
7580851,Does the happy person appear to be posing?," # returns yes or no
    image_patch = ImagePatch(image)
    happy_patches = image_patch.find(""happy"")
    # Question assumes only one happy patch
    if len(happy_patches) == 0:
        # If no happy person is found, query the image directly
        return image_patch.simple_query(""Does the happy person appear to be posing?"")
    return bool_to_yesno(happy_patches[0].verify_property(""happy"", ""posing""))"
18283750,Are there either any doors or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_door or is_chair)"
8172705,Which kind of drink is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of drink is it?"")"
2549153,Is the old woman to the right or to the left of the person that is holding the racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old woman to the right or to the left of the person that is holding the racket?"")"
3673113,Is the color of the hat different than the sky?," # returns yes or no
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""Is the color of the hat different than the sky?"")
    hat_color = hat_patches[0].simple_query(""What is the color of the hat?"")
    sky_color = image_patch.simple_query(""What is the color of the sky?"")
    return bool_to_yesno(hat_color != sky_color)"
8620105,What is located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the table?"")"
17896530,What color is the pot that is in the top of the photo?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the pot that is in the top of the photo?"")"
17637156,How old is the man that is on the left?," # contains a relation (on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old is the man that is on the left?"")"
8218460,Are there pictures above the fireplace the pots are on?," # contains a relation (above, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there pictures above the fireplace the pots are on?"")"
7962908,Are there any bags to the left of the person on the right of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any bags to the left of the person on the right of the picture?"") # contains a relation (left, right, etc), so ask directly"
9317295,Which kind of vehicle is to the left of the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the train?"")"
1845665,What is the vehicle in front of the brick building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle in front of the brick building?"")"
4291306,Is the bottle in the bottom of the picture?," # bottle
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle in the bottom of the picture?"")
    if bottle_patches[0].vertical_center < image_patch.vertical_center:
        return ""yes""
    else:
        return ""no"""
13968939,What is located on top of the bun?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the bun?"")"
8103496,What kind of animal is on the rope?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the rope?"")"
6163382,Is the person that is to the right of the palm wearing shorts?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the right of the palm wearing shorts?"")"
11001044,What is holding the apples that the fruit is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is holding the apples that the fruit is to the left of?"")"
18253463,Is the curtain to the left or to the right of the plastic bottle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain to the left or to the right of the plastic bottle?"")"
7423358,Is the white bed to the left of a cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bed to the left of a cat?"")"
4752185,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
19882329,Which color is the glass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the glass?"")"
13124061,What is on the white table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white table?"")"
4537019,What is the bird sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bird sitting on?"")"
845724,Which kind of watercraft is the dog sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of watercraft is the dog sitting on?"")"
15570464,The woman is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman is wearing what?"")"
13788684,Which side of the photo is the little person on?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""little person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the little person on?"")
    return ""left"" if person_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
6801553,Are there chairs or televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_tv = image_patch.exists(""television"")
    return bool_to_yesno(is_chair or is_tv)"
957513,Do the people next to the graffiti appear to be walking?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the people next to the graffiti appear to be walking?"")"
51048421,Are both the chair to the left of the cabinet and the desk made of wood?," # contains a relation (left of, made of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair to the left of the cabinet and made of wood"") and image_patch.exists(""desk and made of wood""))"
11572823,Is there a couch to the right of the device in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a couch to the right of the device in the middle of the image?"")"
4624065,Do you see any clocks there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""clock""))"
661899,Is the woman on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right side?"")"
760135,Are there both glasses and ties in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_tie = image_patch.exists(""tie"")
    return bool_to_yesno(is_glasses and is_tie)"
844938,Are there briefcases in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""briefcase""))"
4540583,What is the item of furniture that is made of same material as the roof called?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is made of same material as the roof called?"")"
19891941,Are the eyes open or shut?," # assumes only one face
    image_patch = ImagePatch(image)
    face_patches = image_patch.find(""face"")
    if len(face_patches) == 0:
        return image_patch.simple_query(""Are the eyes open or shut?"")
    face_patch = face_patches[0]
    return face_patch.simple_query(""Are the eyes open or shut?"")"
8358786,On which side of the picture is the bus?," # left or right
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bus?"")
    bus_patch = bus_patches[0]
    horizontal_center = image_patch.horizontal_center
    if bus_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
5767064,Is the napkin to the right or to the left of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin to the right or to the left of the plate?"")"
122687,Which side of the photo is the girl on?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the girl on?"")
    if girl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1577769,Is the laptop to the right or to the left of the speaker on the left side?," # assumes only one speaker on the left
    image_patch = ImagePatch(image)
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        # If no laptop is found, query the image directly
        return image_patch.simple_query(""Is the laptop to the right or to the left of the speaker on the left side?"")
    for laptop_patch in laptop_patches:
        speaker_patches = image_patch.find(""speaker"")
        for speaker_patch in speaker_patches:
            if speaker_patch.horizontal_center < image_patch.horizontal_center:
                if laptop_patch.horizontal_center > speaker_patch.horizontal_center:
                    return ""right""
                else:
                    return ""left""
    return ""right"""
3988610,What is on the can?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the can?"")"
11747985,The shoes are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shoes are on what?"")"
11359735,Which color is the jacket the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the jacket the woman is wearing?"")"
9642409,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
1346032,"What color is the plate, white or blue?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the plate, white or blue?"")"
1290553,Which kind of furniture is under the sink?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is under the sink?"")"
13684866,Where is the girl standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the girl standing on?"")"
1293200,What kind of aircraft is small?," # contains a relation (small), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of aircraft is small?"")"
248920,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8825052,Are there people to the left of the bottle that looks green?," # bottle is green
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Are there people to the left of the bottle that looks green?"")
    for bottle_patch in bottle_patches:
        if bottle_patch.simple_query(""Is the bottle green?"") == ""yes"":
            people_patches = image_patch.find(""people"")
            # Question assumes only one people patch
            if len(people_patches) == 0:
                # If no people is found, query the image directly
                return image_patch.simple_query(""Are there people to the left of the bottle that looks green?"")
            for people_patch in people_patches:
                if people_patch.horizontal_center < bottle_patch.horizontal_center:
                    return ""yes""
    return ""no"""
6191203,Is the painting large and white?," # contains a relation (large, white, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the painting large and white?"")"
5271646,Are there any trucks or vehicles in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""truck"") or image_patch.exists(""vehicle""))"
81006354,Who is wearing the uniform?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the uniform?"")"
13260153,Do you see chairs that are not made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see chairs that are not made of metal?"")"
836682,Is the white napkin to the right or to the left of the blond woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white napkin to the right or to the left of the blond woman?"")"
12725029,What's the dispenser mounted on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the dispenser mounted on?"")"
9251014,Where is that man standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that man standing?"")"
5363984,What is the device that this cup is in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that this cup is in front of?"")"
6817084,Are there guys to the right of the player that is in the top part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there guys to the right of the player that is in the top part of the photo?"")"
9226283,"On which side of the picture is the palm tree, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the palm tree, the left or the right?"")"
18734747,Is the statue on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue on the left?"")"
5402487,What animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is this?"")"
11406479,What is the woman in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman in front of?"")"
19983959,Do you see any umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella""))"
5762250,Who is wearing sneakers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing sneakers?"")"
1189286,Is there either a white pillow or flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_pillow = image_patch.exists(""white pillow"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_white_pillow or is_flag)"
2670277,What kind of food is on the plate that is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the plate that is on the table?"")"
1772474,What is the animal that is walking on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is walking on the grass?"")"
1642122,What's the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man holding?"")"
17248022,What is the bowl on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl on?"")"
1537323,Are there any fences or fire hydrants that are made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    firehydrant_patches = image_patch.find(""fire hydrant"")
    for fence_patch in fence_patches:
        if fence_patch.verify_property(""fence"", ""metal""):
            return ""yes""
    for firehydrant_patch in firehydrant_patches:
        if firehydrant_patch.verify_property(""fire hydrant"", ""metal""):
            return ""yes""
    return ""no"""
5204536,What kind of place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of place is pictured?"")"
7992424,Who is the sitting down man that is to the left of the people wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the sitting down man that is to the left of the people wearing?"")"
7341935,What color is the bird on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bird on the sand?"")"
15373508,Who do you think is watching the catcher?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is watching the catcher?"")"
19788304,Are there any women to the left of the banana in the middle of the photo?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any women to the left of the banana in the middle of the photo?"")"
13367931,What animal is in front of the device that is in front of the cable?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the device that is in front of the cable?"")"
10196203,What is the device called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device called?"")"
1530987,What is the man in the water using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in the water using?"")"
7542178,Is the book on the right side?," # assumes only one book patch
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Is the book on the right side?"")
    book_patch = book_patches[0]
    if book_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
13559676,Who is standing on the skis that are on the right side?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing on the skis that are on the right side?"")"
2470903,What is in front of the trunk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trunk?"")"
11174914,Do you see either any silver faucets or balls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_silver_faucet = image_patch.exists(""silver faucet"")
    is_ball = image_patch.exists(""ball"")
    return bool_to_yesno(is_silver_faucet or is_ball)"
13134252,Is the person on the left part?," # left and right are relative to the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person on the left part?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
840390,Are there any small desks or nightstands?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""small desk"") or image_patch.exists(""nightstand""))"
7625677,Do you see cars or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_car or is_train)"
1184369,Is the boy waiting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy waiting?"")"
12916306,Does the man by the building wear glasses?," # contains a relation (by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man by the building wear glasses?"")"
12461487,Which type of animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of animal is this?"")"
151019983,"What food item is not small, the marshmallow or the cake?"," # contains a relation (small, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food item is not small, the marshmallow or the cake?"")"
17806717,What is the food that the woman is holding called?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the woman is holding called?"")"
598950,Is the green vehicle pulled by the brown animal that is to the left of the man?," # contains a relation (pulled by, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green vehicle pulled by the brown animal that is to the left of the man?"")"
8137188,What is that TV on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that TV on?"")"
40432,What is the color of the zebra's tail?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the zebra's tail?"")"
4540589,Are the ground and the chair made of the same material?," # ground and chair are assumed to be in the same image
    image_patch = ImagePatch(image)
    ground_patches = image_patch.find(""ground"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one ground and one chair patch
    if len(ground_patches) == 0 or len(chair_patches) == 0:
        # If no ground or chair is found, query the image directly
        return image_patch.simple_query(""Are the ground and the chair made of the same material?"")
    ground_patch = ground_patches[0]
    chair_patch = chair_patches[0]
    return bool_to_yesno(ground_patch.verify_property(""ground"", ""material"") == chair_patch.verify_property(""chair"", ""material""))"
13217255,Do you see carrots to the right of the vegetable in the center of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see carrots to the right of the vegetable in the center of the image?"")"
11914528,"What is the truck in front of, an orange or a banana?"," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the truck in front of, an orange or a banana?"")"
12937771,What is the color of the cardboard box to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the cardboard box to the right of the chair?"")"
17482481,Do you see men to the left of the car that the person is riding on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see men to the left of the car that the person is riding on?"")"
16839069,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9527932,Is the yellow vehicle in the bottom or in the top part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow vehicle in the bottom or in the top part?"")"
14357366,Which side of the photo is the drapery on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the drapery on?"")"
1353545,Does the man appear to be standing?," # returns yes or no
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the man appear to be standing?"")
    return bool_to_yesno(man_patches[0].verify_property(""man"", ""standing""))"
17408156,What is in the bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl?"")"
11178433,What device is the cat lying on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the cat lying on?"")"
10706626,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
328844,Does the cow to the right of the bell look brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cow_patches = image_patch.find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch.simple_query(""Does the cow to the right of the bell look brown?"")
    for cow_patch in cow_patches:
        if cow_patch.horizontal_center > image_patch.horizontal_center / 2: # center of the bell
            return cow_patch.simple_query(""Does the cow look brown?"") # crop would include the cow so keep it in the query
    return ""no"""
4959489,What vehicle is in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is in the field?"")"
2376420,Are there any buses in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
18493773,Who wears glasses?," # contains a relation (wearing glasses), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears glasses?"")"
14462240,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
6830883,What is the color of the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What is the color of the hat?"")
    return hat_patches[0].simple_query(""What is the color of the hat?"")"
4841028,Who is talking?," # contains a relation (talking to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is talking?"")"
10458786,On which side of the image is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12121797,What is this cat in?," # contains a relation (in, on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this cat in?"")"
7475705,On which side is the person?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""On which side is the person?"")
    return ""left"" if person_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
19251681,Is the phone in the bottom part or in the top of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone in the bottom part or in the top of the image?"")"
3690449,Who in the photo is playing?," # contains a relation (playing with, playing against, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in the photo is playing?"")"
11378094,What do both the table and the mat have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the table and the mat have in common?"")"
6917487,What kind of animal is on the chalkboard?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the chalkboard?"")"
18383630,What animal does the man to the right of the person ride on?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal does the man to the right of the person ride on?"")"
14249357,How is the meat that is shown in the image called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the meat that is shown in the image called?"")"
4890074,Are there any men to the left of the bag that is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the bag that is to the left of the woman?"")"
14841513,Is the lady to the right or to the left of the bag made of leather?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right or to the left of the bag made of leather?"")"
11568846,The people that are walking are playing in what?," # contains a relation (walking, playing in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The people that are walking are playing in what?"")"
7675493,Do you see meat that is pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see meat that is pink?"")"
18205332,Is the black bat made of wood or metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bat made of wood or metal?"")"
1333000,What vegetables are it?," # contains a relation (is it), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are it?"")"
4427712,What is the toy that is to the left of the device that is on top of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toy that is to the left of the device that is on top of the desk?"")"
2339654,On which side of the image is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4241652,What kind of fast food is to the left of the food with the bacon?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is to the left of the food with the bacon?"")"
10992269,Is the orange next to the apple sitting on a mirror?," # contains a relation (next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange next to the apple sitting on a mirror?"")"
156523,Is there a cookie or a mango in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cookie = image_patch.exists(""cookie"")
    is_mango = image_patch.exists(""mango"")
    return bool_to_yesno(is_cookie or is_mango)"
1337468,What do you think is the device to the left of the blinds that the bag is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the device to the left of the blinds that the bag is to the right of?"")"
2111758,Are the carrots to the left of a spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the carrots to the left of a spoon?"")"
17291205,What is the name of the device to the left of the person that is sitting-down?," # contains a relation (left of, sitting down, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device to the left of the person that is sitting-down?"")"
2759035,What is the animal to the left of the ice cubes the glass is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the ice cubes the glass is with?"")"
18811617,Which color is the kite to the left of the other kite?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the kite to the left of the other kite?"")"
16323892,What are the animals that are to the left of the guy that is to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals that are to the left of the guy that is to the left of the car?"")"
884205,What is the piece of furniture to the left of the sheet that is in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the sheet that is in the middle of the image?"")"
91008803,What type of fruit is to the left of the kiwi in the middle of the picture?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fruit is to the left of the kiwi in the middle of the picture?"")"
5614391,Are there glasses or motorcycles that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses_black = image_patch.exists(""glasses"") and image_patch.exists(""black"")
    is_motorcycle_black = image_patch.exists(""motorcycle"") and image_patch.exists(""black"")
    return bool_to_yesno(is_glasses_black or is_motorcycle_black)"
463581,On which side of the photo is the trash bin?," # left or right
    image_patch = ImagePatch(image)
    trash_bin_patches = image_patch.find(""trash bin"")
    # Question assumes only one trash bin patch
    if len(trash_bin_patches) == 0:
        # If no trash bin is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the trash bin?"")
    trash_bin_patch = trash_bin_patches[0]
    if trash_bin_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12285616,Which kind of animal is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is standing?"")"
8109154,Are there both trucks and cars in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_truck and is_car)"
4319013,What animal is eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating?"")"
11469289,Who plays with the knife?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who plays with the knife?"")"
8976253,What color is the sweater?," # returns the color of the sweater
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        # If no sweater is found, query the image directly
        return image_patch.simple_query(""What color is the sweater?"")
    return sweater_patches[0].simple_query(""What color is the sweater?"") # crop would include the sweater so keep it in the query"
8292695,Are there both couches and lamps in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_couch = image_patch.exists(""couch"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_couch and is_lamp)"
17389702,Is there an umbrella in the photograph that is not pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an umbrella in the photograph that is not pink?"")"
8126531,What animal is in front of the water?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the water?"")"
16709483,On which side of the picture is the girl?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the girl?"")
    return ""left"" if girl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
9733472,What color is the statue in front of the tree?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the statue in front of the tree?"")"
1257388,Is the wetsuit red or dark?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wetsuit red or dark?"")"
18303941,"In which part of the photo is the bird, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the bird, the bottom or the top?"")"
617582,"In which part of the image is the chair, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the chair, the top or the bottom?"")"
4507604,Is the orange cone on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange cone on the left or on the right?"")"
12120364,Is the truck in the bottom of the image?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck in the bottom of the image?"")"
16531293,What is in front of the appliance that is to the right of the container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the appliance that is to the right of the container?"")"
14700236,What is the train on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the train on?"")"
5565511,What is the bird standing in?," # contains a relation (standing in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bird standing in?"")"
2821601,Do the sweater and the gate have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    gate_patches = image_patch.find(""gate"")
    # Question assumes only one sweater and one gate patch
    if len(sweater_patches) == 0 or len(gate_patches) == 0:
        # If no sweater or gate is found, query the image directly
        return image_patch.simple_query(""Do the sweater and the gate have the same color?"")
    sweater_color = sweater_patches[0].simple_query(""What color is the sweater?"")
    gate_color = gate_patches[0].simple_query(""What color is the gate?"")
    return bool_to_yesno(sweater_color == gate_color)"
1858162,Is the animal that is lying-down little or large?," # contains a relation (lying-down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal that is lying-down little or large?"")"
1118233,Do you see dogs or cats there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see dogs or cats there?"")"
2543553,Is the young man to the left or to the right of the vehicle on the right part of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young man to the left or to the right of the vehicle on the right part of the photo?"")"
8176944,Who wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a shirt?"")"
19696311,Does the boat have the same color as the dress?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boat have the same color as the dress?"")"
16926195,What kind of vehicle is to the right of the boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the right of the boat?"")"
17133514,What's connected to the kite?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's connected to the kite?"")"
8683183,Are there any boxes to the left of the clock in the center?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any boxes to the left of the clock in the center?"")"
4150292,Which side of the image is the dog on?," # left or right
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the dog on?"")
    if dog_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2154053,What kind of food is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is not brown?"")"
5233678,How is the device to the left of the glasses in the middle of the photo called?," # contains a relation (left of, in the middle of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the device to the left of the glasses in the middle of the photo called?"")"
3526596,Are there pictures on the white wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pictures on white wall"")) # contains a relation (on, next to, etc), so ask directly"
99435,What toy wears the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy wears the shirt?"")"
368253,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
15275965,Is there any coat in the image that is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    for coat_patch in coat_patches:
        if coat_patch.verify_property(""coat"", ""black""):
            return ""yes""
    return ""no"""
185343,Is the toothbrush to the right of the toothpaste standing on a counter?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toothbrush to the right of the toothpaste standing on a counter?"")"
3640091,What is the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What is the clock on?"")
    return clock_patches[0].simple_query(""What is the clock on?"")"
4450446,Which kind of furniture is to the right of the blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the blanket?"")"
15558079,What is under the desk the water bottle is on?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the desk the water bottle is on?"")"
9843012,Are there any peppers or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pepper = image_patch.exists(""pepper"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_pepper or is_cup)"
17335207,Is this a city or a village?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a city or a village?"")"
5436615,Are there either any chairs or keyboards in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""keyboard""))"
18545448,The container is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The container is on what?"")"
1256522,Which vehicle is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which vehicle is not blue?"")"
5220512,Are there any toothbrushes or parachutes in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_toothbrush = image_patch.exists(""toothbrush"")
    is_parachute = image_patch.exists(""parachute"")
    return bool_to_yesno(is_toothbrush or is_parachute)"
10882127,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
16633412,What color is the floor?," # returns the color of the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the floor?"")"
171037459,Are there any drapes to the left of the pillow?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""drapes"") and image_patch.find(""pillow"")[0].horizontal_center > image_patch.find(""drapes"")[0].horizontal_center)"
1052315,What kind of device do you think is to the right of the small device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device do you think is to the right of the small device?"")"
13698637,Is the green apple to the right or to the left of the yellow fruit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green apple to the right or to the left of the yellow fruit?"")"
3176749,What is the material of the figure?," # material of the figure
    image_patch = ImagePatch(image)
    figure_patches = image_patch.find(""figure"")
    # Question assumes only one figure patch
    if len(figure_patches) == 0:
        # If no figure is found, query the image directly
        return image_patch.simple_query(""What is the material of the figure?"")
    return figure_patches[0].simple_query(""What is the material of the figure?"") # crop would include the figure so keep it in the query"
5765976,Does the vehicle near the road look purple and small?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle near the road look purple and small?"")"
14349321,What color are the pants?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""What color are the pants?"")
    return pants_patches[0].simple_query(""What color are the pants?"")"
11800623,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    return ""left"" if woman_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
19163805,Is the man to the left of the vehicle wearing a coat?," # contains a relation (left of, wearing a coat, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the vehicle wearing a coat?"")"
17889192,The paper is in what?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The paper is in what?"")"
5808819,Where is the trash can?," # returns the location of the trash can
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""Where is the trash can?"")
    return trash_can_patches[0].simple_query(""Where is the trash can?"") # crop would include the trash can so keep it in the query"
13451536,Are there any kites in the park?," # contains a relation (in the park), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite"")) # contains a relation (in the park), so ask directly"
17977229,Are the feathers black or yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the feathers black or yellow?"")"
1498420,What do both the book and the backpack have in common?," # returns a string
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one book patch and one backpack patch
    if len(book_patches) == 0 or len(backpack_patches) == 0:
        # If no book or backpack is found, query the image directly
        return image_patch.simple_query(""What do both the book and the backpack have in common?"")
    book_patch = book_patches[0]
    backpack_patch = backpack_patches[0]
    common_properties = set(book_patch.simple_query(""What properties does the book have?"").split("", "")) & set(backpack_patch.simple_query(""What properties does the backpack have?"").split("", ""))
    return common_properties[0]"
7415257,Are there either any cabinets or refrigerators in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet"") or image_patch.exists(""refrigerator""))"
13359372,What is the device on the white table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the white table?"")"
5311209,Which color is the curly hair?," # returns the color of the curly hair
    image_patch = ImagePatch(image)
    curly_hair_patches = image_patch.find(""curly hair"")
    # Question assumes only one curly hair patch
    if len(curly_hair_patches) == 0:
        # If no curly hair is found, query the image directly
        return image_patch.simple_query(""Which color is the curly hair?"")
    return curly_hair_patches[0].simple_query(""Which color is the curly hair?"")"
7199744,Which side of the picture is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1040454,Does the sky look cloudless?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sky look cloudless?"")"
966823,Are there glasses or women in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_glasses or is_woman)"
18563368,Is the sandwich on a tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sandwich on a tray?"")"
16418348,What device is to the left of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the keyboard?"")"
19424053,Is the backpack on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack on the left or on the right?"")"
15914446,"On which side of the picture is the medicine cabinet, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the medicine cabinet, the left or the right?"")"
161049164,What's the fence in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the fence in front of?"")"
3247510,What is the fruit that is to the right of the dog the woman is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that is to the right of the dog the woman is to the left of?"")"
16443093,Do you see a woman to the right of the person that wears a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a woman to the right of the person that wears a shirt?"")"
3396740,How hard is the icing on the bread?," # returns a string
    image_patch = ImagePatch(image)
    bread_patches = image_patch.find(""bread"")
    # Question assumes only one bread patch
    if len(bread_patches) == 0:
        # If no bread is found, query the image directly
        return image_patch.simple_query(""How hard is the icing on the bread?"")
    for bread_patch in bread_patches:
        icing_patches = image_patch.find(""icing"")
        for icing_patch in icing_patches:
            if icing_patch.horizontal_center > bread_patch.horizontal_center:
                return icing_patch.simple_query(""How hard is the icing on the bread?"")
    # If no icing is found, query the image directly
    return image_patch.simple_query(""How hard is the icing on the bread?"")"
4603084,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
191041203,Is the sky sunny?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky sunny?"")"
1625485,Is the man in front of the goats wearing glasses?," # contains a relation (in front of, wearing glasses, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man in front of the goats wearing glasses?"")"
6250158,What is the cat in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat in front of?"")"
10403541,How big is the sheep in the middle?," # returns the size of the sheep in the middle
    image_patch = ImagePatch(image)
    sheep_patches = image_patch.find(""sheep"")
    # Question assumes only one sheep patch
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch.simple_query(""How big is the sheep in the middle?"")
    middle_index = len(sheep_patches) // 2
    return sheep_patches[middle_index].simple_query(""How big is the sheep in the middle?"")"
14826789,What animal is in front of the shrub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the shrub?"")"
18656774,On which side of the picture are the oranges?," # left or right
    image_patch = ImagePatch(image)
    orange_patches = image_patch.find(""orange"")
    # Question assumes only one orange patch
    if len(orange_patches) == 0:
        # If no orange is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the oranges?"")
    orange_patch = orange_patches[0]
    if orange_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11282393,The umbrella is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The umbrella is where?"")"
1230681,What is the computer made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer made of?"")"
5743216,Does the glove look tan or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the glove look tan or black?"")"
12284497,Are there spectators to the right of the man on the left of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there spectators to the right of the man on the left of the photo?"")"
14391038,What does the girl that to the left of the man look at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the girl that to the left of the man look at?"")"
6483050,What type of fast food is to the left of the food on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fast food is to the left of the food on the right?"")"
17666075,What is the person to the right of the pine holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the pine holding?"")"
4498220,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
4269875,What is the animal that sniffs the lid?," # contains a relation (sniffs), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that sniffs the lid?"")"
71015595,Is this a square plate?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""plate"", ""square""))"
121004590,Is the cake to the right or to the left of the little person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake to the right or to the left of the little person that is wearing a shirt?"")"
18475574,Is the clock in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock in the bottom or in the top part of the image?"")"
2949718,Are there any black briefcases or backpacks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_briefcase = image_patch.exists(""black briefcase"")
    is_black_backpack = image_patch.exists(""black backpack"")
    return bool_to_yesno(is_black_briefcase or is_black_backpack)"
3586375,What is the boy on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy on?"")"
19411747,Is the rope that is to the right of the ladder tied to the boat above the water?," # contains a relation (above, below, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rope that is to the right of the ladder tied to the boat above the water?"")"
5648061,Which kind of aircraft is in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is in the air?"")"
18296364,Are there either black cameras or cellphones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_camera = image_patch.exists(""black camera"")
    is_black_cellphone = image_patch.exists(""black cellphone"")
    return bool_to_yesno(is_black_camera or is_black_cellphone)"
11940047,Where is the lamp?," # returns the location of the lamp
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Where is the lamp?"")
    return lamp_patches[0].simple_query(""Where is the lamp?"")"
2278205,Does the square box to the left of the champagne look yellow?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the square box to the left of the champagne look yellow?"")"
14808621,Are there mirrors on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mirror""))"
12788396,Do you see any towels on the blue wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any towels on the blue wall?"")"
1930175,What device is to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the computer?"")"
270587,What is sitting on the dining table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the dining table?"")"
4972426,Which vehicle is not driving?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which vehicle is not driving?"")"
161918,Are there either light bulbs or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_light_bulb = image_patch.exists(""light bulb"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_light_bulb or is_flag)"
19250215,Are there either forks or bowls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fork = image_patch.exists(""fork"")
    is_bowl = image_patch.exists(""bowl"")
    return bool_to_yesno(is_fork or is_bowl)"
11366,What is covered with the snow?," # snow is a verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with the snow?"")"
7395149,Is the building behind a giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind a giraffe?"")"
7745532,Are the animals dogs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the animals dogs?"")) # crop would include the animal so keep it in the query"
5887190,Are there boys to the right of the skateboard on the left side?," # left side is the left of the image
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Are there boys to the right of the skateboard on the left side?"")
    for boy_patch in boy_patches:
        skateboard_patches = image_patch.find(""skateboard"")
        for skateboard_patch in skateboard_patches:
            if boy_patch.horizontal_center > skateboard_patch.horizontal_center:
                return ""yes""
    return ""no"""
616542,What is in front of the zebra?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the zebra?"")"
13113908,Is the phone on the left part of the picture?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone on the left part of the picture?"")"
611032,Do you see white mushrooms or onions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see white mushrooms or onions?"")"
3848756,On which side of the image is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5325164,Which color is the broth that is to the right of the carrot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the broth that is to the right of the carrot?"")"
16905936,Is the white vehicle to the left or to the right of the man that wears pants?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white vehicle to the left or to the right of the man that wears pants?"")"
5872935,Does the glass window seem to be large and round?," # returns yes or no
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""Does the glass window seem to be large and round?"")
    return bool_to_yesno(window_patches[0].verify_property(""window"", ""large"") and window_patches[0].verify_property(""window"", ""round""))"
12221996,Is the TV to the right or to the left of the man that is to the left of the folding chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the TV to the right or to the left of the man that is to the left of the folding chair?"")"
35185,What animal is the window behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the window behind of?"")"
12452692,Is there a bird in the painting?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bird""))"
10326102,Is the bag to the left or to the right of the tray the man is holding?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left or to the right of the tray the man is holding?"")"
433214,Is the food to the left or to the right of the woman?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the food to the left or to the right of the woman?"")"
5628906,"In which part of the image is the white bird, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the white bird, the bottom or the top?"")"
17779859,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
3624134,What is the topping on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the topping on?"")"
6581294,Is the snow both deep and white?," # snow is a predicate
    image_patch = ImagePatch(image)
    is_deep = image_patch.verify_property(""snow"", ""deep"")
    is_white = image_patch.verify_property(""snow"", ""white"")
    return bool_to_yesno(is_deep and is_white)"
5308651,What color is the plate that the spoon is underneath of?," # contains a relation (underneath of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the plate that the spoon is underneath of?"")"
121020515,Which side is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10769177,What is the name of the item of furniture to the right of the bag in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture to the right of the bag in the middle of the picture?"")"
14623293,Which kind of furniture is the towel hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the towel hanging from?"")"
1529624,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1374247,Who wears a backpack?," # returns the first person wearing a backpack
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Who wears a backpack?"")
    for person_patch in person_patches:
        backpack_patches = image_patch.find(""backpack"")
        for backpack_patch in backpack_patches:
            if backpack_patch.horizontal_center > person_patch.horizontal_center:
                return person_patch.simple_query(""Who wears a backpack?"")
    return person_patches[0].simple_query(""Who wears a backpack?"")"
17287014,What is the color of the road?," # returns the color of the road
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the road?"")"
14779492,Is the coffee cup on top of the saucer yellow or blue?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee cup on top of the saucer yellow or blue?"")"
16826593,Do you see either balls or rackets?," # tennis
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_ball or is_racket)"
332029,Does the sand look gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sand look gold?"")"
499430,Does the fruit on the platter have green color?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fruit on the platter have green color?"")"
4616585,Does the red backpack look large or small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the red backpack look large or small?"")"
1937532,What kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is white?"")"
10548802,On which side of the photo is the house?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the house?"")
    house_patch = house_patches[0]
    horizontal_center = image_patch.horizontal_center
    if house_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
7480237,Do you see any bottle to the left of the bag that is blue and purple?," # bottle, bag, blue, purple
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Do you see any bottle to the left of the bag that is blue and purple?"")
    for bottle_patch in bottle_patches:
        bag_patches = image_patch.find(""bag"")
        for bag_patch in bag_patches:
            if bottle_patch.horizontal_center < bag_patch.horizontal_center:
                is_blue = bottle_patch.verify_property(""bottle"", ""blue"")
                is_purple = bottle_patch.verify_property(""bottle"", ""purple"")
                return bool_to_yesno(is_blue and is_purple)
    return ""no"""
2688601,What's the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man on?"")"
181064817,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
18467631,Are there men to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the right of the woman?"")"
9396529,Are there comforters to the left of the tall mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""comforter"") and image_patch.exists(""tall mirror"")) # assumes only one mirror patch"
14134413,Is the baseball player to the right or to the left of the red helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baseball player to the right or to the left of the red helmet?"")"
12101267,Do you see cell phones in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cell phone"")) # Question assumes only one cell phone patch"
11187189,Do you see people to the left of the pillow on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see people to the left of the pillow on the left?"")"
5425329,Is there a skateboard in this picture that is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a skateboard in this picture that is not blue?"")"
18401486,What is the food to the left of the blue bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the left of the blue bowl?"")"
3954910,Which kind of furniture is to the right of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the television?"")"
16584036,What does the person to the right of the taxi wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person to the right of the taxi wear?"")"
4826334,What kind of device is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is not black?"")"
6463636,Are there either any cars or fire hydrants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    return bool_to_yesno(is_car or is_fire_hydrant)"
13991389,What kind of clothing is long?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is long?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing long?"") == ""yes"":
            return clothing_patch.simple_query(""What kind of clothing is long?"")
    return clothing_patch.simple_query(""What kind of clothing is long?"") # if no clothing is long, pick the first clothing"
11309828,"What is the woman in the park doing, playing or sleeping?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman in the park doing, playing or sleeping?"")"
4408284,Which color is the helmet on the left?," # helmet on the left
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Which color is the helmet on the left?"")
    helmet_patch = helmet_patches[0]
    if helmet_patch.horizontal_center < image_patch.horizontal_center:
        return helmet_patch.simple_query(""Which color is the helmet on the left?"")
    return helmet_patch.simple_query(""Which color is the helmet on the right?"")"
19646109,What is around the refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the refrigerator?"")"
14463825,Is the phone rectangular and white?," # returns yes or no
    image_patch = ImagePatch(image)
    phone_patches = image_patch.find(""phone"")
    # Question assumes only one phone patch
    if len(phone_patches) == 0:
        # If no phone is found, query the image directly
        return image_patch.simple_query(""Is the phone rectangular and white?"")
    return bool_to_yesno(phone_patches[0].verify_property(""phone"", ""rectangular"") and phone_patches[0].verify_property(""phone"", ""white""))"
11207062,What are these shelves made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are these shelves made of?"")"
1572489,Are there any towels or paper towels in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel"") or image_patch.exists(""paper towel""))"
15475701,Who is in front of the tree the leaves are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the tree the leaves are on?"")"
11273280,Does the cat look gray?," # cat is eating, so keep it in the query
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Does the cat look gray?"")
    return bool_to_yesno(cat_patches[0].verify_property(""cat"", ""gray""))"
14161434,Are the shorts blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shorts"", ""blue""))"
18453078,Are there pots on the floor?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pot"") and image_patch.exists(""floor""))"
17733808,Which kind of device is on the left of the screen?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the left of the screen?"")"
465562,What's on the floor?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the floor?"")"
12131014,Do you see any books to the right of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any books to the right of the computer?"")"
873902,What is the color of that trash bin?," # returns the color of the trash bin
    image_patch = ImagePatch(image)
    trash_bin_patches = image_patch.find(""trash bin"")
    # Question assumes only one trash bin patch
    if len(trash_bin_patches) == 0:
        # If no trash bin is found, query the image directly
        return image_patch.simple_query(""What is the color of that trash bin?"")
    return trash_bin_patches[0].simple_query(""What is the color of that trash bin?"") # crop would include the trash bin so keep it in the query"
5672582,Are there any locks or chess pieces?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lock = image_patch.exists(""lock"")
    is_chess_piece = image_patch.exists(""chess piece"")
    return bool_to_yesno(is_lock or is_chess_piece)"
13836832,Is the powder on a cookie?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the powder on a cookie?"")"
15295274,Is the curled tail dark or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curled tail dark or white?"")"
2841190,Is it cloudless?," # cloudless is a property of the weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""cloudless""))"
7852109,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16466937,Is there any clock in the scene that is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any clock in the scene that is green?"")"
12101056,Which kind of clothing is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""Which kind of clothing is not blue?"")
    return image_patch.simple_query(""Which kind of clothing is not blue?"") # if no clothing is blue, query the image directly"
17999204,Is the white toilet to the left or to the right of the toilet paper on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white toilet to the left or to the right of the toilet paper on the right?"")"
5260169,Is the woman to the left of a man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left of a man?"")"
4718759,What is the name of the piece of clothing that is not black?," # returns the name of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the piece of clothing that is not black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.simple_query(""Is the clothing black?"") == ""no"":
            return clothing_patch.simple_query(""What is the name of the piece of clothing that is not black?"")
    # If no clothing is not black, pick the first clothing
    return clothing_patches[0].simple_query(""What is the name of the piece of clothing that is not black?"")"
3762752,On which side of the picture is the glass jar?," # left or right
    image_patch = ImagePatch(image)
    glass_jar_patches = image_patch.find(""glass jar"")
    # Question assumes only one glass jar patch
    if len(glass_jar_patches) == 0:
        # If no glass jar is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the glass jar?"")
    if glass_jar_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6157815,Is the person that is to the right of the motorbike carrying a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the right of the motorbike carrying a bag?"")"
8297507,Is there a boat in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat in the water?"")"
1896531,Of which color is the parking meter?," # parking meter is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color is the parking meter?"")"
16321992,Is there any boat in the river the grass is in front of?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any boat in the river the grass is in front of?"")"
571681,Are there airplanes near the mat in the bottom part?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there airplanes near the mat in the bottom part?"")"
1658369,What is the name of the food?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the food?"")"
12958486,Is it the parking lot or maybe the garage?," # parking lot or garage
    image_patch = ImagePatch(image)
    is_parking_lot = image_patch.exists(""parking lot"")
    is_garage = image_patch.exists(""garage"")
    return ""parking lot"" if is_parking_lot else ""garage"""
16864644,The person by the woman is carrying what?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person by the woman is carrying what?"")"
91055030,What is the color of the grass?," # returns the color of the grass
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the grass?"")"
16176420,What is the color of the vest the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the vest the man is wearing?"")"
6283138,Is the man to the right of the beverage holding a surfboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the beverage holding a surfboard?"")"
14498079,Is the picnic table to the right or to the left of the person that talks on the phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picnic table to the right or to the left of the person that talks on the phone?"")"
18942406,What is the piece of furniture to the right of the man with the glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the man with the glasses?"")"
7128591,What animal is in front of the painting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the painting?"")"
19201005,On which side of the picture is the trashcan?," # left or right
    image_patch = ImagePatch(image)
    trashcan_patches = image_patch.find(""trashcan"")
    # Question assumes only one trashcan patch
    if len(trashcan_patches) == 0:
        # If no trashcan is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the trashcan?"")
    trashcan_patch = trashcan_patches[0]
    if trashcan_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9191054,Is it cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it cloudy?"")"
15274758,Is the man wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing jeans?"")"
12875453,What is the color of the pepper that is to the left of the other pepper?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the pepper that is to the left of the other pepper?"")"
13565578,Are there keyboards that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""keyboard"") and image_patch.find(""keyboard"")[0].verify_property(""keyboard"", ""white"")) # crop would include the keyboard so keep it in the query"
10456515,What is the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cup made of?"")"
11336730,How tall is the green field?," # height in pixels
    image_patch = ImagePatch(image)
    field_patches = image_patch.find(""green field"")
    # Question assumes only one field patch
    if len(field_patches) == 0:
        # If no field is found, query the image directly
        return image_patch.simple_query(""How tall is the green field?"")
    return field_patches[0].height"
12969509,Are there suitcases to the left of the cart on the pavement?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there suitcases to the left of the cart on the pavement?"")"
18315370,Is there any giraffe or fence in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe = image_patch.exists(""giraffe"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_giraffe or is_fence)"
17393290,What item of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is made of wood?"")"
2858251,What color is the cloudy sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cloudy sky?"")"
1836960,What is the device that is to the right of the device on the left?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the device on the left?"")"
597219,Are the racket and the ball the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Are the racket and the ball the same color?"")
    racket_patch = racket_patches[0]
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        return ""no""
    ball_patch = ball_patches[0]
    return bool_to_yesno(racket_patch.verify_property(""racket"", ""color"") == ball_patch.verify_property(""ball"", ""color""))"
5811398,Does the plane seem to be low and gray?," # contains a relation (low, gray, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the plane seem to be low and gray?"")"
12903363,What is in front of the vehicle that is to the left of the cabin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the vehicle that is to the left of the cabin?"")"
637283,Is the bracelet white or gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bracelet white or gold?"")"
12543990,Are there any clocks or chess pieces?," # returns yes or no
    image_patch = ImagePatch(image)
    is_clock = image_patch.exists(""clock"")
    is_chess_piece = image_patch.exists(""chess piece"")
    return bool_to_yesno(is_clock or is_chess_piece)"
17273779,On which side of the photo is the blue fence?," # left or right
    image_patch = ImagePatch(image)
    blue_fence_patches = image_patch.find(""blue fence"")
    # Question assumes only one blue_fence patch
    if len(blue_fence_patches) == 0:
        # If no blue_fence is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the blue fence?"")
    blue_fence_patch = blue_fence_patches[0]
    if blue_fence_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8590093,Is the racket to the left of the house white and antique?," # returns yes or no
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Is the racket to the left of the house white and antique?"")
    for racket_patch in racket_patches:
        house_patches = image_patch.find(""house"")
        for house_patch in house_patches:
            if house_patch.horizontal_center > racket_patch.horizontal_center:
                return bool_to_yesno(racket_patch.verify_property(""racket"", ""white"") and racket_patch.verify_property(""racket"", ""antique""))
    return ""no"""
7649328,On which side of the image is the old person?," # left or right
    image_patch = ImagePatch(image)
    old_patches = image_patch.find(""old person"")
    # Question assumes only one old patch
    if len(old_patches) == 0:
        # If no old person is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the old person?"")
    old_patch = old_patches[0]
    if old_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7732068,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
17287079,Is the person to the left of the car wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the car wearing a hat?"")"
4461609,Is the tower on top of the brown building?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower on top of the brown building?"")"
9534871,Do the cup and the napkin have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the cup and the napkin have a different colors?"")) # crop would include the colors so keep it in the query"
171030669,What color is the coat the woman is wearing?," # coat is not a property of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What color is the coat the woman is wearing?"")
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        return image_patch.simple_query(""What color is the coat the woman is wearing?"")
    coat_patch = coat_patches[0]
    return coat_patch.simple_query(""What color is the coat the woman is wearing?"") # crop would include the woman so keep it in the query"
1143150,What do the container and the pole have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the container and the pole have in common?"")"
4256696,What vehicle is in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is in front of the tree?"")"
1216375,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
18768130,Is this a bookcase or a lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bookcase or a lamp?"")"
13532949,Are there fences or cows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_fence or is_cow)"
147159,Is the broccoli in the bottom of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the broccoli in the bottom of the photo?"")"
5666008,Is the hotdog bun toasted?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hotdog bun toasted?"")"
15542705,What is the resting animal on the sand doing?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the resting animal on the sand doing?"")"
8166265,What animal does the person that to the right of the van sit on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal does the person that to the right of the van sit on?"")"
5709221,Does the parrot to the right of the bowl look blue or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    parrot_patches = image_patch.find(""parrot"")
    # Question assumes only one parrot patch
    if len(parrot_patches) == 0:
        # If no parrot is found, query the image directly
        return image_patch.simple_query(""Does the parrot to the right of the bowl look blue or white?"")
    parrot_patch = parrot_patches[0]
    if parrot_patch.horizontal_center > image_patch.horizontal_center:
        return parrot_patch.best_text_match([""blue"", ""white""])
    return image_patch.best_text_match([""blue"", ""white""])"
8472341,Does the plate look empty?," # assumes only one plate
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Does the plate look empty?"")
    return bool_to_yesno(plate_patches[0].verify_property(""plate"", ""empty""))"
1757798,Is the woman to the right or to the left of the people who are using tables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the people who are using tables?"")"
12439175,Is the chair on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the chair on the left side?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
15645786,What animal is to the right of the toy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the toy?"")"
9443858,Are there both a fence and a racket in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_fence and is_racket)"
18462185,What type of food is on the potato with the carrot?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is on the potato with the carrot?"")"
18703078,Is the young person to the right or to the left of the woman?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young person to the right or to the left of the woman?"")"
1526208,What is the man to the left of the truck wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the truck wearing?"")"
9684367,Are there controllers to the left of the magazine that is on the right side?," # contains a relation (on the right side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there controllers to the left of the magazine that is on the right side?"")"
14384283,Which side of the image is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9821284,Do you see either boxes or cans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""box"") or image_patch.exists(""can""))"
8246252,What type of device is to the right of the lamp on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the lamp on the left?"")"
15609774,Are there both windows and cars in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window and is_car)"
11146161,Is the lady to the right of the wine holding the glasses on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right of the wine holding the glasses on the right side?"")"
881090,Are there pizzas in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pizza""))"
6763600,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
14513048,Does the sky appear to be white and bright?," # sky is a special case
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""white"") and image_patch.verify_property(""sky"", ""bright""))"
6257241,What is the person to the left of the person wearing?," # wearing is a relational verb
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is the person to the left of the person wearing?"")"
3903242,On which side of the photo is the car?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the car?"")
    car_patch = car_patches[0]
    horizontal_center = image_patch.horizontal_center
    if car_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
10393958,Are the shorts blue or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shorts blue or black?"")"
7259145,What is in the juice?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the juice?"")"
17868924,Who is wearing a sweater?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a sweater?"")"
10902649,What is the dessert that the Styrofoam cup is filled with?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dessert that the Styrofoam cup is filled with?"")"
5695488,"In which part of the image is the flag, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the flag, the top or the bottom?"")"
10493204,"What kind of furniture is the man on, a bed or a chair?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the man on, a bed or a chair?"")"
18548405,Is the towel on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel on the left side or on the right of the image?"")"
3992648,Is the white fence on the right or on the left side of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white fence on the right or on the left side of the image?"")"
1892359,Is the coffee maker to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee maker to the left of a chair?"")"
9102927,"What color is the necklace, gold or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the necklace, gold or red?"")"
1039130,What is in the window?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the window?"")"
6789525,Is the car on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car on the left?"")"
1219140,Is the sink white or black?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sink white or black?"")"
3429655,Do you see boats there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
13891228,"How do the chairs to the left of the cart look, brown or white?"," # contains a relation (to the left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How do the chairs to the left of the cart look, brown or white?"")"
15498166,Is the cup to the right or to the left of the black device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the right or to the left of the black device?"")"
237933,Does the vase that looks short look gray?," # contains a relation (looks short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vase that looks short look gray?"")"
9594577,Are there benches or glasses in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_glass = image_patch.exists(""glass"")
    return bool_to_yesno(is_bench or is_glass)"
1420386,What is common to the shirt and the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the shirt and the umbrella?"")"
8518160,What type of food is to the left of the dessert that is to the left of the pastry?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the left of the dessert that is to the left of the pastry?"")"
12569059,Is that grass short and green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that grass short and green?"")"
651435,Is the bottle of liquid to the right or to the left of the fruit that is above the counter?," # contains a relation (above, to the right of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle of liquid to the right or to the left of the fruit that is above the counter?"")"
16604717,Are there benches to the right of the vehicle on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there benches to the right of the vehicle on the left side?"")"
1311968,Do you see any snowboarders on the snow board below the person?," # snowboarders on the snowboard
    image_patch = ImagePatch(image)
    snowboarder_patches = image_patch.find(""snowboarder"")
    # Question assumes only one snowboarder patch
    if len(snowboarder_patches) == 0:
        # If no snowboarder is found, query the image directly
        return image_patch.simple_query(""Do you see any snowboarders on the snow board below the person?"")
    snowboarder_patch = snowboarder_patches[0]
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        return ""no""
    snowboard_patch = snowboard_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return ""no""
    person_patch = person_patches[0]
    if snowboard_patch.vertical_center < person_patch.vertical_center:
        return ""yes""
    return ""no"""
9692456,What is the boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy holding?"")"
982977,Is the silver napkin in the bottom part of the photo?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver napkin in the bottom part of the photo?"")"
19794048,Is the lamp on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp on the right?"")"
18705496,What kind of food is cooked?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is cooked?"")"
1702006,Is the painting in the bottom part or in the top of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the painting in the bottom part or in the top of the picture?"")"
11929129,Does the bus appear to be blue?," # bus is a vehicle
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""Does the bus appear to be blue?"")
    return bool_to_yesno(bus_patches[0].verify_property(""bus"", ""blue""))"
13315997,What is on the dresser?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dresser?"")"
2794307,What is the dog carrying?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog carrying?"")"
101054556,Does the on laptop to the left of the mouse pad sit on a bed?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the on laptop to the left of the mouse pad sit on a bed?"")"
1954370,Is the pillow on the right or on the left of the image?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow on the right or on the left of the image?"")
    if pillow_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
3388709,Where are the trees?," # returns the location of the trees
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""Where are the trees?"")
    return tree_patches[0].simple_query(""Where are the trees?"") # crop would include the tree so keep it in the query"
8510184,Do you see any beds or dressers?," # returns yes or no
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_dresser = image_patch.exists(""dresser"")
    return bool_to_yesno(is_bed or is_dresser)"
65069,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
7414553,On which side are the jars?," # left or right
    image_patch = ImagePatch(image)
    jar_patches = image_patch.find(""jar"")
    # Question assumes only one jar patch
    if len(jar_patches) == 0:
        # If no jar is found, query the image directly
        return image_patch.simple_query(""On which side are the jars?"")
    if jar_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9914535,What is the color of the pants the person is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""What is the color of the pants the person is wearing?"")
    person_patch = person_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""What is the color of the pants the person is wearing?"")
    for pants_patch in pants_patches:
        if pants_patch.horizontal_center > person_patch.horizontal_center:
            return pants_patch.simple_query(""What is the color of the pants the person is wearing?"")
    return image_patch.simple_query(""What is the color of the pants the person is wearing?"")"
14575923,"Which are less healthy, the bananas or the potato chips?"," # contains a relation (less healthy, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which are less healthy, the bananas or the potato chips?"")"
91024721,What device is rectangular?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is rectangular?"")"
8716226,What is the basket holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the basket holding?"")"
727850,What is the name of the sign that is made of the same material as the streetlight?," # contains a relation (made of the same material as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the sign that is made of the same material as the streetlight?"")"
18260500,Do you see either any fences or mats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_mat = image_patch.exists(""mat"")
    return bool_to_yesno(is_fence or is_mat)"
1667879,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
2948587,What do you think the red benches are made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think the red benches are made of?"")"
8996397,Is the moss on the rock?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the moss on the rock?"")"
10523233,Is the black bag on the left of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag on the left of the picture?"")"
11024701,Are there any buckets or safety jackets in the image?," # bucket or safety jacket
    image_patch = ImagePatch(image)
    is_bucket = image_patch.exists(""bucket"")
    is_safety_jacket = image_patch.exists(""safety jacket"")
    return bool_to_yesno(is_bucket or is_safety_jacket)"
1746993,Are there both pillows and beds in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_pillow and is_bed)"
11429597,Are there small hot dogs or pizzas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hot_dog = image_patch.exists(""hot dog"")
    is_pizza = image_patch.exists(""pizza"")
    return bool_to_yesno(is_hot_dog or is_pizza)"
4330738,How tall is that closet?," # returns a string
    image_patch = ImagePatch(image)
    closet_patches = image_patch.find(""closet"")
    # Question assumes only one closet patch
    if len(closet_patches) == 0:
        # If no closet is found, query the image directly
        return image_patch.simple_query(""How tall is that closet?"")
    return closet_patches[0].simple_query(""How tall is that closet?"") # crop would include the height so keep it in the query"
14780674,"Which kind of furniture is made of leather, the table or the couch?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of leather, the table or the couch?"")"
12484032,What animal is in the pen?," # contains a relation (in the pen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the pen?"")"
13298307,Are there any bicycles or skateboards in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bicycle"") or image_patch.exists(""skateboard""))"
2253236,What kind of clothing is khaki?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is khaki?"")"
6435439,Is the backpack that is to the left of the other backpack blue or black?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack that is to the left of the other backpack blue or black?"")"
173036,Is the white vehicle to the left or to the right of the man next to the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white vehicle to the left or to the right of the man next to the car?"")"
8388316,Is the skateboard on the right or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skateboard on the right or on the left?"")"
1576169,"In which part of the image are the glasses, the top or the bottom?"," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the glasses, the top or the bottom?"")"
3365682,What color are the tennis shoes?," # returns the color of the shoes
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoes"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""What color are the tennis shoes?"")
    return shoe_patches[0].simple_query(""What color are the tennis shoes?"") # crop would include the shoes so keep it in the query"
7596125,On which side of the photo is the umbrella?," # left or right
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the umbrella?"")
    if umbrella_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1552612,On which side is the towel?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side is the towel?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4200838,Is he to the right or to the left of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the right or to the left of the cup?"")"
18847313,Are there any cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat""))"
41368,What is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees?"")"
10314463,Of which color are the picnic tables that are on the dock?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color are the picnic tables that are on the dock?"")"
17277441,Does the device to the left of the flag look white or blue?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device to the left of the flag look white or blue?"")"
13419257,What are the people to the right of the boat wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the people to the right of the boat wearing?"")"
14309077,"What is the necklace on, a horse or a donkey?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the necklace on, a horse or a donkey?"")"
821096,Are there fences behind the boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.exists(""boy""))"
216440,Which side is the fork on?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Which side is the fork on?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9374454,Do you see any rackets to the right of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any rackets to the right of the girl?"")"
2185704,Is the grass in front or behind the giraffe that is eating from the tree?," # contains a relation (in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass in front or behind the giraffe that is eating from the tree?"")"
19566447,What does the man to the right of the people push?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man to the right of the people push?"")"
4912964,Is the young woman on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young woman on the left side of the picture?"")"
9265244,Who is lying?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is lying?"")"
2560810,Are the small tables to the right of a blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the small tables to the right of a blanket?"")"
17787593,On which side of the picture is the shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the shelf?"")
    if shelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1972950,Are there both stars and pictures in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_star = image_patch.exists(""star"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_star and is_picture)"
886217,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
9938302,The wire is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The wire is on what?"")"
9514395,Which side of the photo is the cup of coffee on?," # left or right
    image_patch = ImagePatch(image)
    cup_of_coffee_patches = image_patch.find(""cup of coffee"")
    # Question assumes only one cup of coffee patch
    if len(cup_of_coffee_patches) == 0:
        # If no cup of coffee is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the cup of coffee on?"")
    if cup_of_coffee_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17303139,Is the tree behind or in front of the zebra the grass is under of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind or in front of the zebra the grass is under of?"")"
9690103,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
14811643,What item of furniture is beige?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is beige?"")"
10179045,Are there shelves to the left of the clock on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there shelves to the left of the clock on the right?"")"
8206631,Are both the jacket and the coat the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one jacket and one coat patch
    if len(jacket_patches) == 0 or len(coat_patches) == 0:
        # If no jacket or coat is found, query the image directly
        return image_patch.simple_query(""Are both the jacket and the coat the same color?"")
    jacket_color = jacket_patches[0].simple_query(""What color is the jacket?"")
    coat_color = coat_patches[0].simple_query(""What color is the coat?"")
    return bool_to_yesno(jacket_color == coat_color)"
2564408,Which color is the pepper on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the pepper on the left of the photo?"")"
19462019,Is the person to the left of the ladder holding a surfboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the ladder holding a surfboard?"")"
12649296,Are there both cars and buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_car and is_bus)"
50843,What animal is to the left of the toys?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the toys?"")"
18146029,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
18752218,"Which color is the shirt, orange or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt, orange or black?"")"
19879914,Who is in front of the mountain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the mountain?"")"
7351795,Are the pants below a woman?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pants below a woman?"")"
11834228,Are there both meat and lettuce in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_meat = image_patch.exists(""meat"")
    is_lettuce = image_patch.exists(""lettuce"")
    return bool_to_yesno(is_meat and is_lettuce)"
11770425,What is located on top of the food that is to the right of the lettuce?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the food that is to the right of the lettuce?"")"
19787078,Do you see a wetsuit there that is pink?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a wetsuit there that is pink?"")"
18659835,Is the pedestrian to the left or to the right of the car on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pedestrian to the left or to the right of the car on the right?"")"
13310237,Is the clock on the wall white and square?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the clock on the wall white and square?"")
    return clock_patches[0].verify_property(""clock"", ""white"") and clock_patches[0].verify_property(""clock"", ""square"")"
14543638,Do you see blue clocks or cans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_clock = image_patch.exists(""blue clock"")
    is_blue_can = image_patch.exists(""blue can"")
    return bool_to_yesno(is_blue_clock or is_blue_can)"
4350676,Does the purse made of leather look large and tan?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the purse made of leather look large and tan?"")"
15403163,Do you see a bear behind the twig?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bear behind the twig?"")"
3147335,On which side is the white napkin?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white napkin?"")"
13176081,Are there any cows on top of the sand on the beach?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any cows on top of the sand on the beach?"")"
11415650,What type of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is made of wood?"")"
15331900,Is the black animal to the left or to the right of the bull in the bottom part of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black animal to the left or to the right of the bull in the bottom part of the image?"")"
8632427,What do you think is the item of furniture to the right of the person that is to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the item of furniture to the right of the person that is to the right of the woman?"")"
9676566,Is the door made of the same material as the table?," # assumes only one door and one table
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    table_patches = image_patch.find(""table"")
    if len(door_patches) == 0 or len(table_patches) == 0:
        return ""no""
    door_patch = door_patches[0]
    table_patch = table_patches[0]
    return bool_to_yesno(door_patch.verify_property(""door"", ""material"") == table_patch.verify_property(""table"", ""material""))"
550647,On which side of the image is the wood fence?," # left or right
    image_patch = ImagePatch(image)
    wood_fence_patches = image_patch.find(""wood fence"")
    # Question assumes only one wood_fence patch
    if len(wood_fence_patches) == 0:
        # If no wood_fence is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the wood fence?"")
    if wood_fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1928034,Do the shoes have a different color than the socks?," # returns yes or no
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoes"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""Do the shoes have a different color than the socks?"")
    shoe_color = shoe_patches[0].simple_query(""What color are the shoes?"")
    sock_patches = image_patch.find(""socks"")
    # Question assumes only one sock patch
    if len(sock_patches) == 0:
        # If no socks are found, query the image directly
        return image_patch.simple_query(""Do the shoes have a different color than the socks?"")
    sock_color = sock_patches[0].simple_query(""What color are the socks?"")
    return bool_to_yesno(shoe_color != sock_color)"
171059811,Is the fence white and wire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence white and wire?"")"
10487054,Is the color of the bun different than that of the sandwich?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the bun different than that of the sandwich?"")"
5907321,What is the umbrella in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the umbrella in front of?"")"
7518805,What is the olive in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the olive in?"")"
791885,Is there a giraffe to the left of the baby at the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a giraffe to the left of the baby at the table?"")"
151009251,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
17905865,What is the cooking utensil to the left of the knives the container is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil to the left of the knives the container is to the right of?"")"
15305894,"What is the barrier behind of, a bus or a train?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the barrier behind of, a bus or a train?"")"
14232341,Is the man to the right of the umbrella wearing boots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the umbrella wearing boots?"")"
15918047,Are there both a coat and a helmet in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coat = image_patch.exists(""coat"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_coat and is_helmet)"
15332125,Who is wearing uniforms?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing uniforms?"")"
693245,What's the donut on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the donut on?"")"
46531,Are there both a baseball bat and a racket in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_baseball_bat = image_patch.exists(""baseball bat"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_baseball_bat and is_racket)"
14117961,Which color is the napkin that the person is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the napkin that the person is to the right of?"")"
6955273,What are the spots on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the spots on?"")"
10862091,Does the cooker have small size?," # assumes only one cooker patch
    image_patch = ImagePatch(image)
    cooker_patches = image_patch.find(""cooker"")
    if len(cooker_patches) == 0:
        # If no cooker is found, query the image directly
        return image_patch.simple_query(""Does the cooker have small size?"")
    return bool_to_yesno(cooker_patches[0].verify_property(""cooker"", ""small""))"
13174647,What is the cat in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat in?"")"
3716418,Does the rope have large size?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""rope"", ""large"")) # crop would include the rope so keep it in the query"
8580258,Is the catcher on the right of the image?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher on the right of the image?"")"
5101300,What is hanging from the table?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging from the table?"")"
15137568,Is the cup to the left of a bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the left of a bowl?"")"
5847116,Is the boat on the left or on the right side of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat on the left or on the right side of the image?"")"
2820118,Is the water in front of the buildings blue or black?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water in front of the buildings blue or black?"")"
5978847,Is the chair to the left or to the right of the wine on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left or to the right of the wine on the left side?"")"
1633944,Are there nightstands or ottomen in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_nightstand = image_patch.exists(""nightstand"")
    is_ottoman = image_patch.exists(""ottoman"")
    return bool_to_yesno(is_nightstand or is_ottoman)"
350121,Does the blazer look gray?," # blazer is a type of coat
    image_patch = ImagePatch(image)
    blazer_patches = image_patch.find(""blazer"")
    # Question assumes only one blazer patch
    if len(blazer_patches) == 0:
        # If no blazer is found, query the image directly
        return image_patch.simple_query(""Does the blazer look gray?"")
    return bool_to_yesno(blazer_patches[0].verify_property(""blazer"", ""gray""))"
2771665,Are there either elbow pads or umbrellas in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""elbow pads"") or image_patch.exists(""umbrella"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
111013611,Is this a photo of the desert?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a photo of the desert?"")"
1572352,Do you see blankets there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket""))"
970191,What is hanging from the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging from the pole?"")"
4755594,Are there both bikes and cars in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bike and is_car)"
12779680,What appliance is to the left of the white cabinets under the drawer?," # contains a relation (under, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the white cabinets under the drawer?"")"
7910474,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
10885317,What is on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cake?"")"
19537852,Are there elephants or giraffes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""elephant"") or image_patch.exists(""giraffe""))"
2669470,"Which is healthier, the pepper or the pizza?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which is healthier, the pepper or the pizza?"")"
13837390,Is the shelf to the left of a mirror?," # mirror is a special case
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""Is the shelf to the left of a mirror?"")
    for shelf_patch in shelf_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > shelf_patch.horizontal_center:
                return ""yes""
    return ""no"""
737851,On which side is the hose?," # left or right
    image_patch = ImagePatch(image)
    hose_patches = image_patch.find(""hose"")
    # Question assumes only one hose patch
    if len(hose_patches) == 0:
        # If no hose is found, query the image directly
        return image_patch.simple_query(""On which side is the hose?"")
    hose_patch = hose_patches[0]
    if hose_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14883021,Who is wearing a suit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a suit?"")"
10661848,Do you think the animal that looks black and tan is colorful or black and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the animal that looks black and tan is colorful or black and white?"")"
10710664,Are the paper towels to the left of a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the paper towels to the left of a bottle?"") == ""yes"")"
16591840,Is there a train near the device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a train near the device?"")"
9674667,Is there any white coffee or wine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white coffee"") or image_patch.exists(""wine""))"
70274,Are the leaves green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""leaves"", ""green""))"
5913102,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4432775,What appliance is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is it?"")"
13343176,Is the player in front of the fence wearing a helmet?," # contains a relation (in front of, wearing a helmet), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the player in front of the fence wearing a helmet?"")"
897129,Which kind of vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is on the street?"")"
4478944,"What color is the airplane, red or white?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the airplane, red or white?"")"
15200560,"What type of clothing is white, the polo shirt or the hat?"," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is white, the polo shirt or the hat?"")"
9860107,How is the appliance called?," # appliance is a general term
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""How is the appliance called?"")
    return appliance_patches[0].simple_query(""What is the appliance called?"") # crop would include the appliance so keep it in the query"
11558270,"Where is the glass jar, in the bottom or in the top of the image?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the glass jar, in the bottom or in the top of the image?"")"
17215605,What type of furniture is to the right of the can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the right of the can?"")"
9262307,Is the trash can silver?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the trash can silver?"")"
16587688,What animal is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on top of the table?"")"
4726511,"What color are the clothes, black or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the clothes, black or red?"")"
141043345,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10956529,Is the bag to the left of a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left of a boy?"")"
9688492,The window of the train has what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The window of the train has what color?"")"
17855325,Do the gloves have a different color than the clouds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    gloves_patches = image_patch.find(""gloves"")
    # Question assumes only one gloves patch
    if len(gloves_patches) == 0:
        # If no gloves are found, query the image directly
        return image_patch.simple_query(""Do the gloves have a different color than the clouds?"")
    gloves_color = gloves_patches[0].simple_query(""What color are the gloves?"")
    clouds_patches = image_patch.find(""clouds"")
    # Question assumes only one clouds patch
    if len(clouds_patches) == 0:
        # If no clouds are found, query the image directly
        return image_patch.simple_query(""Do the gloves have a different color than the clouds?"")
    clouds_color = clouds_patches[0].simple_query(""What color are the clouds?"")
    return bool_to_yesno(gloves_color != clouds_color)"
14448846,On which side of the image is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2908574,"On which side of the image is the mirror, the right or the left?"," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the mirror, the right or the left?"")
    if mirror_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
11730770,What color is the container near the sink?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the container near the sink?"")"
6984757,Is there a bird on the boat that is in the bottom of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bird on the boat that is in the bottom of the image?"")"
10975954,Are there cats on the blue rug?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat"") and image_patch.exists(""blue rug"")) # crop would include the rug so keep it in the query"
12791282,What is the apple on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the apple on?"")"
1932568,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
118700,Is the man to the right or to the left of the woman on the left side of the picture?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the man to the right or to the left of the woman on the left side of the picture?"")
    woman_patch = woman_patches[0]
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right or to the left of the woman on the left side of the picture?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center > woman_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
16773279,What color is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the grass?"")"
18639656,What is the brown food called?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown food called?"")"
11417521,What is on the white dog?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white dog?"")"
11012436,On which side of the picture is the picture?," # picture is the picture itself
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the picture?"")"
14529201,Which color does the metal ladder have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the metal ladder have?"")"
561779,Is the tshirt white or black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tshirt white or black?"")"
5940946,Which kind of appliance is not dirty?," # dirty is a property of appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Which kind of appliance is not dirty?"")
    for appliance_patch in appliance_patches:
        if not appliance_patch.verify_property(""appliance"", ""dirty""):
            return appliance_patch.simple_query(""What kind of appliance is dirty?"")
    # If all appliances are dirty, query the image directly
    return image_patch.simple_query(""Which kind of appliance is not dirty?"")"
2808941,Do you see either tables or drawers in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table"") or image_patch.exists(""drawer""))"
13232521,Is the monitor to the left or to the right of the man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the monitor to the left or to the right of the man?"")"
14303587,Is the cellphone black or yellow?," # cellphone is the object, black or yellow is the property
    image_patch = ImagePatch(image)
    cellphone_patches = image_patch.find(""cellphone"")
    # Question assumes only one cellphone patch
    if len(cellphone_patches) == 0:
        # If no cellphone is found, query the image directly
        return image_patch.simple_query(""Is the cellphone black or yellow?"")
    return cellphone_patches[0].best_text_match([""black"", ""yellow""])"
6938576,Are these animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different species?"")"
15526879,The person to the right of the person is holding what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the right of the person is holding what?"")"
17175192,Is the laptop to the right or to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop to the right or to the left of the man?"")"
7305870,What the white vehicle is called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What the white vehicle is called?"")"
13815532,What color is the hat that the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hat that the man is wearing?"")"
15560762,What is the vehicle to the right of the bag the woman is carrying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the bag the woman is carrying?"")"
9104082,Is the plane near the cart white and small?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plane near the cart white and small?"")"
11949117,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
1525619,Do you think the socks are black?," # returns a boolean
    image_patch = ImagePatch(image)
    sock_patches = image_patch.find(""socks"")
    # Question assumes only one sock patch
    if len(sock_patches) == 0:
        # If no sock is found, query the image directly
        return bool_to_yesno(image_patch.simple_query(""Do you think the socks are black?""))
    return bool_to_yesno(sock_patches[0].verify_property(""socks"", ""black""))"
18901224,Do you see an umbrella in the photograph that is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    for umbrella_patch in umbrella_patches:
        if umbrella_patch.simple_query(""What color is the umbrella?"") != ""black"":
            return ""yes""
    return ""no"""
1667737,Is the cell phone to the right or to the left of the man on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cell phone to the right or to the left of the man on the right of the image?"")"
16563079,What is the table made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the table made of?"")"
8521970,What is the small animal sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the small animal sitting on?"")"
519523,Is the fence made of metal or stone?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence made of metal or stone?"")"
1764275,What is the vehicle to the left of the trailer called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the left of the trailer called?"")"
6368718,Is the house behind the green tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house behind the green tree?"")"
4846723,What color is the shirt the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man is wearing?"")"
9879380,What is under the pastry?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the pastry?"")"
11392189,Are there flowers on the vase that is brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there flowers on the vase that is brown?"")"
716928,In which part is the egg?," # assumes only one egg
    image_patch = ImagePatch(image)
    egg_patches = image_patch.find(""egg"")
    if len(egg_patches) == 0:
        # If no egg is found, query the image directly
        return image_patch.simple_query(""In which part is the egg?"")
    egg_patch = egg_patches[0]
    if egg_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
8175888,What sauce is in the tray?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sauce is in the tray?"")"
8745445,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
18552928,What food is the man eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is the man eating?"")"
8865970,Are there both surfboards and cages in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_cage = image_patch.exists(""cage"")
    return bool_to_yesno(is_surfboard and is_cage)"
16745453,What is the fruit underneath the banana?," # contains a relation (underneath, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit underneath the banana?"")"
14308741,Is the color of the necklace the same as the decoration?," # returns yes or no
    image_patch = ImagePatch(image)
    necklace_patches = image_patch.find(""necklace"")
    # Question assumes only one necklace patch
    if len(necklace_patches) == 0:
        # If no necklace is found, query the image directly
        return image_patch.simple_query(""Is the color of the necklace the same as the decoration?"")
    decoration_patches = image_patch.find(""decoration"")
    # Question assumes only one decoration patch
    if len(decoration_patches) == 0:
        return ""no""
    decoration_patch = decoration_patches[0]
    return bool_to_yesno(necklace_patches[0].verify_property(""necklace"", ""color"") == decoration_patch.verify_property(""decoration"", ""color""))"
1117412,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3393048,What animal is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the trees?"")"
19711380,"Which side is the American flag on, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the American flag on, the left or the right?"")"
14605681,What kind of device is to the right of the laptop that is on top of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the right of the laptop that is on top of the desk?"")"
6187533,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
11494085,What's on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the plate?"")"
15571535,Is there a bag that is not made of leather?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bag that is not made of leather?"")"
1539258,What is the woman doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman doing?"")"
8524344,Does the vase look white or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vase look white or red?"")"
17205077,Where is the brown dog playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the brown dog playing?"")"
599078,What is the brown animal pulling?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown animal pulling?"")"
775337,"In which part of the photo are the cabinets, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo are the cabinets, the top or the bottom?"")"
6680923,Are there any men or women that are not walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    for man_patch in man_patches:
        if not man_patch.verify_property(""man"", ""walking""):
            return ""yes""
    for woman_patch in woman_patches:
        if not woman_patch.verify_property(""woman"", ""walking""):
            return ""yes""
    return ""no"""
16564995,What kind of furniture is light colored?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is light colored?"")"
6780915,What do you think is on the post the bicycle is chained to?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the post the bicycle is chained to?"")"
17897268,On which side of the image is the silver fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the silver fork?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14838641,Is the black book in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black book in the bottom of the photo?"")"
111039788,Is there any wine in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""wine""))"
171024650,What is on the red boots?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the red boots?"")"
3475296,Are there either any brooms or ropes in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""broom"") or image_patch.exists(""rope""))"
18719350,Are there black trucks or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_truck = image_patch.exists(""black truck"")
    is_black_car = image_patch.exists(""black car"")
    return bool_to_yesno(is_black_truck or is_black_car)"
2880510,Are there both cats and couches in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_couch = image_patch.exists(""couch"")
    return bool_to_yesno(is_cat and is_couch)"
19330839,"In which part of the photo is the chair, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the chair, the bottom or the top?"")"
19304479,What is the depth of the plate?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the depth of the plate?"")"
7149326,Are there calculators to the right of the papers the laptop is above?," # contains a relation (above, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there calculators to the right of the papers the laptop is above?"")"
4137973,What fruit is to the right of the drawers that are to the right of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the right of the drawers that are to the right of the bowl?"")"
11200305,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
14881620,What is the cooking utensil that is behind the plastic display called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil that is behind the plastic display called?"")"
3732320,Is the van different in color than the word?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the van different in color than the word?"")"
4516833,Is there a black mirror or motorcycle?," # mirror or motorcycle
    image_patch = ImagePatch(image)
    is_black_mirror = image_patch.exists(""black mirror"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_black_mirror or is_motorcycle)"
4971540,Do you see either shelves or cats in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelves"") or image_patch.exists(""cat"")) # Question assumes only one cat patch"
10338845,Is the tree behind a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind a fence?"")"
1204916,What watercraft is to the right of the ladder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What watercraft is to the right of the ladder?"")"
10720548,Are there mirrors or beds that are not large?," # mirror or bed
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_mirror or is_bed)"
6146942,Where is the box?," # returns the location of the box
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Where is the box?"")
    return box_patches[0].simple_query(""Where is the box?"") # crop would include the box so keep it in the query"
3678169,What is the vehicle to the left of the person on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the left of the person on the right of the image?"")"
8387733,What is the black clothing item?," # black clothing item
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black clothing item?"")"
1498745,Which kind of meat is on the left of the skillet?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is on the left of the skillet?"")"
8351124,Is that table long and black?," # table
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Is that table long and black?"")
    return bool_to_yesno(table_patches[0].verify_property(""table"", ""long"") and table_patches[0].verify_property(""table"", ""black""))"
11014150,Which kind of food is to the right of the bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the bread?"")"
620814,Is the sky orange or gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky orange or gray?"")"
15750084,Are there both doors and windows in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
17315270,Is the pink crown on the right?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pink crown on the right?"")"
7274452,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
8977032,What is the white vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white vehicle called?"")"
7230277,Where is the man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    return man_patches[0].simple_query(""Where is the man?"") # crop would include the man so keep it in the query"
1482318,Do you see either any peaches or pears?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""peach"") or image_patch.exists(""pear""))"
10688246,Is there any couch in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""couch""))"
5576201,What is the kite lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kite lying on?"")"
13532379,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
843110,Are there any red hats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red hat"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
111007234,Which side is the pizza on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the pizza on?"")"
10144456,How big is the bench in the top of the photo?," # image is the original image
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""How big is the bench in the top of the photo?"")
    return bench_patches[0].simple_query(""How big is the bench in the top of the photo?"") # crop would include the top of the image so keep it in the query"
898503,Is the car yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car yellow?"")"
6556976,What is the man to the right of the chair doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the chair doing?"")"
191037576,Who is in front of the boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the boat?"")"
19561292,Who is sitting on the chair in front of the tree?," # contains a relation (sitting on, in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the chair in front of the tree?"")"
837128,Are the men on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the men on the left?"")"
17286563,Are there either white beds or tables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bed = image_patch.exists(""white bed"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_white_bed or is_table)"
71001770,Are there either balls or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_ball or is_fence)"
159993,What piece of furniture is metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is metallic?"")"
99414,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
6925109,What is in front of the bench that is presented in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the bench that is presented in this scene?"")"
15752044,Is the paper in a box?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the paper in a box?"")"
13488126,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12129743,Which color is the dress?," # returns the color of the dress
    image_patch = ImagePatch(image)
    dress_patches = image_patch.find(""dress"")
    # Question assumes only one dress patch
    if len(dress_patches) == 0:
        # If no dress is found, query the image directly
        return image_patch.simple_query(""Which color is the dress?"")
    return dress_patches[0].simple_query(""Which color is the dress?"")"
13363467,Is the car to the right or to the left of the sheep that is in the center of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the right or to the left of the sheep that is in the center of the photo?"")"
15397162,Which kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is white?"")"
2715779,Is the color of the watch silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the watch silver?"")"
16876392,"On which side is the drawer, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the drawer, the right or the left?"")"
18612608,Is there a plate near the utensil to the right of the potato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate near the utensil to the right of the potato?"")"
4879961,Is there a cabinet or a towel in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"")
    is_towel = image_patch.exists(""towel"")
    return bool_to_yesno(is_cabinet or is_towel)"
4750608,Who wears a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a hat?"")"
3703853,Is the rug in front of the bed that is to the right of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rug in front of the bed that is to the right of the lamp?"")"
6545288,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
6812161,What kind of clothing is black?," # returns the clothing type of the first black clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What kind of clothing is black?"")
    return image_patch.simple_query(""What kind of clothing is black?"") # if no black clothing is found, query the image directly"
8963725,What animal is in the water that looks blue?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water that looks blue?"")"
13866307,Which kind is this item of furniture?," # assumes only one item of furniture
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind is this item of furniture?"")"
10126681,Is the red box to the right of a man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red box to the right of a man?"")"
61009193,Of which color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Of which color is the jacket?"")
    return jacket_patches[0].simple_query(""Of which color is the jacket?"")"
5784733,What is the color of the umbrella that is held by the girl?," # contains a relation (held by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the umbrella that is held by the girl?"")"
17404972,Is the speaker to the left or to the right of the monitor?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the speaker to the left or to the right of the monitor?"")"
6515401,"What is the round plate made of, plastic or paper?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the round plate made of, plastic or paper?"")"
18500755,Which kind of vegetable is to the right of the banana?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the right of the banana?"")"
2418028,Are there any cups or plates that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    plate_patches = image_patch.find(""plate"")
    for cup_patch in cup_patches:
        if cup_patch.verify_property(""cup"", ""red"") == False:
            return ""yes""
    for plate_patch in plate_patches:
        if plate_patch.verify_property(""plate"", ""red"") == False:
            return ""yes""
    return ""no"""
12590001,Do you see any fences or pictures there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""picture""))"
17584758,On which side of the picture are the drawers?," # left or right
    image_patch = ImagePatch(image)
    drawer_patches = image_patch.find(""drawer"")
    # Question assumes only one drawer patch
    if len(drawer_patches) == 0:
        # If no drawer is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the drawers?"")
    if drawer_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3935690,Does the bear to the left of the other bear have brown color and little size?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bear to the left of the other bear have brown color and little size?"")"
171000956,Who is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the water?"")"
131045726,What is the device that the person types on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that the person types on?"")"
9970576,What kind of furniture is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is large?"")"
15322404,Is the lock on the door?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lock on the door?"")"
8937486,"What type of food is not white, the bun or the bread?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is not white, the bun or the bread?"")"
14213920,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
606078,What is the animal that is lying on the ground?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is lying on the ground?"")"
17838154,Which side of the photo is the fridge on?," # left or right
    image_patch = ImagePatch(image)
    fridge_patches = image_patch.find(""fridge"")
    # Question assumes only one fridge patch
    if len(fridge_patches) == 0:
        # If no fridge is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the fridge on?"")
    if fridge_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
91035333,How old are the trees that are not big?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old are the trees that are not big?"")"
8722441,Are there any cars or ambulances in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_ambulance = image_patch.exists(""ambulance"")
    return bool_to_yesno(is_car or is_ambulance)"
16979749,How is the drink to the right of the napkin called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the drink to the right of the napkin called?"")"
6630510,The books are lying on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The books are lying on what?"")"
1632489,"Who is younger, the man or the boy?"," # assumes only one man and one boy
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    boy_patches = image_patch.find(""boy"")
    if len(man_patches) == 0 or len(boy_patches) == 0:
        return image_patch.simple_query(""Who is younger, the man or the boy?"")
    man_age = man_patches[0].simple_query(""How old is the man?"")
    boy_age = boy_patches[0].simple_query(""How old is the boy?"")
    if int(man_age) < int(boy_age):
        return ""the man""
    else:
        return ""the boy"""
15642038,On which side is the shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side is the shelf?"")
    return ""left"" if shelf_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
131023463,What kind of clothing is black?," # returns the clothing type of the first black clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What kind of clothing is black?"")
    return image_patch.simple_query(""What kind of clothing is black?"") # if no black clothing is found, query the image directly"
4315451,Are there any square cakes or bowls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_square_cake = image_patch.exists(""square cake"")
    is_square_bowl = image_patch.exists(""square bowl"")
    return bool_to_yesno(is_square_cake or is_square_bowl)"
18538993,What vehicle is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is this?"")"
91035316,What is the snow covering?," # snow is covering something
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the snow covering?"")"
61055756,What is the person on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on?"")"
3530620,What color does the cow that is eating grass have?," # contains a relation (eating grass), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the cow that is eating grass have?"")"
15520501,Do you see bottles on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see bottles on the ground?"")"
6872892,What is the color of the sneakers?," # returns the color of the sneakers
    image_patch = ImagePatch(image)
    sneakers_patches = image_patch.find(""sneakers"")
    # Question assumes only one sneakers patch
    if len(sneakers_patches) == 0:
        # If no sneakers are found, query the image directly
        return image_patch.simple_query(""What is the color of the sneakers?"")
    return sneakers_patches[0].simple_query(""What is the color of the sneakers?"") # crop would include the sneakers so keep it in the query"
15847328,What is the color of the grass that is covering the field?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the grass that is covering the field?"")"
6271582,What is stuck in the grass?," # contains a relation (stuck in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is stuck in the grass?"")"
9741104,"On which side is the pillow, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the pillow, the right or the left?"")"
15880150,What is the policeman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the policeman wearing?"")"
3190261,Which kind of animal is playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is playing?"")"
17301499,What piece of furniture is to the left of the man the sheep is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the left of the man the sheep is to the right of?"")"
17872403,What color is the table?," # table is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the table?"")"
11230692,What do both the pole and the fence have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the pole and the fence have in common?"")"
5673573,Which color are the pillows to the right of the magazine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the pillows to the right of the magazine?"")"
14228156,On which side of the picture is the white food?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the white food?"")"
3170056,What kind of furniture is the man behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the man behind of?"")"
1745306,Are there cakes to the left of the cup?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cake"") and image_patch.find(""cup"")[0].horizontal_center > image_patch.find(""cake"")[0].horizontal_center)"
14917088,What are the clothes on?," # clothes on is a relational verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the clothes on?"")"
4509930,"Which kind of furniture do you think is this, a nightstand or a table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture do you think is this, a nightstand or a table?"")"
17751555,What is the shoe in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shoe in?"")"
13975158,Is the man to the right of a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a plate?"")"
14676278,Who is on the bicycle?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bicycle?"")"
17937329,What is located on top of the food the people are holding?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the food the people are holding?"")"
8224572,Is the boy to the left or to the right of the person that is kicking the soccer ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the person that is kicking the soccer ball?"")"
19754308,Is the skinny person feeding an elephant?," # contains a relation (feeding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skinny person feeding an elephant?"")"
12236113,Is there any doll or pillow in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""doll"") or image_patch.exists(""pillow""))"
15856768,Do the cap and the sign have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one cap and one sign patch
    if len(cap_patches) == 0 or len(sign_patches) == 0:
        # If no cap or sign is found, query the image directly
        return image_patch.simple_query(""Do the cap and the sign have a different colors?"")
    cap_color = cap_patches[0].simple_query(""What is the color of the cap?"")
    sign_color = sign_patches[0].simple_query(""What is the color of the sign?"")
    return bool_to_yesno(cap_color != sign_color)"
3642189,Who is holding the racket on the right?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket on the right?"")"
1551550,Are there either brown desks or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_desk = image_patch.exists(""brown desk"")
    is_brown_chair = image_patch.exists(""brown chair"")
    return bool_to_yesno(is_brown_desk or is_brown_chair)"
13523842,Does the jacket look yellow?," # yellow is a property of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Does the jacket look yellow?"")
    return bool_to_yesno(jacket_patches[0].verify_property(""jacket"", ""yellow""))"
802098,"Where in the scene is the white container, on the right or on the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the scene is the white container, on the right or on the left?"")"
2703260,What is the person sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person sitting on?"")"
36221,Are the headphones to the left of the device near the speaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the headphones to the left of the device near the speaker?"")"
11348202,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
13837168,What kind of furniture is to the right of the saucer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the saucer?"")"
12194361,Is there a dog in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dog""))"
1159087,What kind of furniture is to the left of the shelf that the canisters are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the shelf that the canisters are on?"")"
1174008,"What color is the tail, red or tan?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tail, red or tan?"")"
488716,On which side is the pine tree?," # left or right
    image_patch = ImagePatch(image)
    pine_patches = image_patch.find(""pine tree"")
    # Question assumes only one pine patch
    if len(pine_patches) == 0:
        # If no pine is found, query the image directly
        return image_patch.simple_query(""On which side is the pine tree?"")
    return ""left"" if pine_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
171045947,The table is in front of what animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The table is in front of what animal?"")"
133989,What kind of animal is to the left of the dessert?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the dessert?"")"
552582,What color is the water the man swims in?," # contains a relation (swims in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the water the man swims in?"")"
50170,Are the cars to the right or to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cars to the right or to the left of the man?"")"
7518760,Which kind of food is to the right of the bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the bread?"")"
3882207,What is the color of the cow that is standing on the litter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the cow that is standing on the litter?"")"
11656751,On which side is the remote?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the remote?"")"
6532249,Do you see a bus on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bus on the road?"")"
1944567,Do you see any soup to the left of the placemat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any soup to the left of the placemat?"")"
828362,Is the fence yellow or gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence yellow or gray?"")"
13955023,What kind of furniture is to the right of the book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the book?"")"
7668964,Who is holding the tennis racket to the right of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the tennis racket to the right of the fence?"")"
6653959,How is the food that the mustard is on called?," # bread
    image_patch = ImagePatch(image)
    mustard_patches = image_patch.find(""mustard"")
    # Question assumes only one mustard patch
    if len(mustard_patches) == 0:
        # If no mustard is found, query the image directly
        return image_patch.simple_query(""How is the food that the mustard is on called?"")
    mustard_patch = mustard_patches[0]
    food_patches = image_patch.find(""food"")
    # Question assumes only one food patch
    if len(food_patches) == 0:
        return image_patch.simple_query(""How is the food that the mustard is on called?"")
    food_patch = food_patches[0]
    return food_patch.simple_query(""How is the food that the mustard is on called?"") # crop would include the mustard so keep it in the query"
899512,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
12262862,Is the door both white and closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""door"", ""white"") and image_patch.verify_property(""door"", ""closed""))"
19206757,Does the helmet look black?," # helmet is a specific object, so ask directly
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the helmet look black?"")
    return helmet_patches[0].verify_property(""helmet"", ""black"")"
282190,Are there black computer monitors or laptops?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_computer_monitor = image_patch.exists(""black computer monitor"")
    is_laptop = image_patch.exists(""laptop"")
    return bool_to_yesno(is_black_computer_monitor or is_laptop)"
12698332,Are there any glasses or mirrors in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""glasses"") or image_patch.exists(""mirror""))"
17697835,What color is the computer mouse the keyboard is to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the computer mouse the keyboard is to the left of?"")"
19512760,On which side of the image is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8951816,Is the woman to the right or to the left of the man behind the luggage cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the man behind the luggage cart?"")"
2107599,What leans on the wall?," # contains a relation (leaning on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What leans on the wall?"")"
11248955,Is the metal plate on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal plate on the right or on the left?"")"
10311920,What is in front of the man near the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the man near the laptop?"")"
1686577,What is resting on the canister?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is resting on the canister?"")"
11725729,Is there a can to the right of the white container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a can to the right of the white container?"")"
2640215,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
14891751,What type of device is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the man?"")"
19980288,Is the knife to the left of the radiator small or large?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife to the left of the radiator small or large?"")"
9558918,What do you think is the man to the left of the woman wearing?," # contains a relation (to the left of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man to the left of the woman wearing?"")"
12535431,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2118943,What is covered by the branch?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the branch?"")"
9667375,Is the animal in the bottom part or in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal in the bottom part or in the top of the photo?"")"
18228333,Are there either pictures or drapes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture"") or image_patch.exists(""drapes""))"
14964646,Are there fruits in the picture that are purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fruit"") and image_patch.simple_query(""Is the fruit purple?"") == ""yes"")"
14320431,What is the pink piece of clothing called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pink piece of clothing called?"")"
1119262,Is there a pot to the left of the utensil on the stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pot to the left of the utensil on the stove?"")"
19494022,The guy is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The guy is wearing what?"")"
3745130,Is the cat on a bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat on a bed?"")"
2196329,What is the cooking utensil on the white tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil on the white tray?"")"
18654793,The garnish is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The garnish is on what?"")"
19374905,Is the boot of the snowboarder different in color than the snowsuit?," # snowboarder is a snowboarder, not a skier
    image_patch = ImagePatch(image)
    snowboarder_patches = image_patch.find(""snowboarder"")
    # Question assumes only one snowboarder patch
    if len(snowboarder_patches) == 0:
        # If no snowboarder is found, query the image directly
        return image_patch.simple_query(""Is the boot of the snowboarder different in color than the snowsuit?"")
    snowboarder_patch = snowboarder_patches[0]
    boot_patches = image_patch.find(""boot"")
    # Question assumes only one boot patch
    if len(boot_patches) == 0:
        return ""no""
    boot_patch = boot_patches[0]
    snowsuit_patches = image_patch.find(""snowsuit"")
    # Question assumes only one snowsuit patch
    if len(snowsuit_patches) == 0:
        return ""no""
    snowsuit_patch = snowsuit_patches[0]
    return bool_to_yesno(boot_patch.verify_property(""boot"", ""different_color"") and boot_patch.verify_property(""boot"", ""different_color_from_snowsuit"")) or snowboarder_patch.verify_property(""snowboarder"", ""different_boot_color"") or snowboarder_patch.verify_property(""snowboarder"", ""different_boot_color_from_snowsuit"")"
12676522,In which part of the image are the napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image are the napkins?"")"
9868841,Is the color of the ground the same as the glove?," # ground and glove are assumed to be in the same image
    image_patch = ImagePatch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch.simple_query(""Is the color of the ground the same as the glove?"")
    ground_color = ground_patches[0].simple_query(""What is the color of the ground?"")
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Is the color of the ground the same as the glove?"")
    glove_color = glove_patches[0].simple_query(""What is the color of the glove?"")
    return bool_to_yesno(ground_color == glove_color)"
16842927,Who is in front of the table on the floor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the table on the floor?"")"
13783590,The shirt that the man is wearing is what color?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt that the man is wearing is what color?"")"
16136275,What does the kid wear?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the kid wear?"")"
18791953,"What is the weather like today, sunny or foggy?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the weather like today, sunny or foggy?"")"
4606415,Are there both ties and glasses in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie and is_glasses)"
3154386,What type of material is the sidewalk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the sidewalk made of?"")"
61016297,What animal is in front of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the car?"")"
121036825,Are there any people to the right of the racket which is to the left of the tennis ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the right of the racket which is to the left of the tennis ball?"")"
10982859,Are there books on top of the shelf that is in front of the wall?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there books on top of the shelf that is in front of the wall?"")"
10536261,How big is the clock in the middle?," # returns the size of the clock in the middle
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""How big is the clock in the middle?"")
    clock_patch = clock_patches[0]
    return clock_patch.simple_query(""How big is the clock in the middle?"")"
2978539,Is the large food to the left of the spoon in the bottom?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large food to the left of the spoon in the bottom?"")"
2323199,Is the window behind the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window behind the desk?"")"
11493974,Is there either a white can or mug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_can = image_patch.exists(""white can"")
    is_mug = image_patch.exists(""mug"")
    return bool_to_yesno(is_white_can or is_mug)"
8627452,What is that cow in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that cow in front of?"")"
2638523,What kind of food is on top of the plate?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on top of the plate?"")"
13819670,What vegetable is inside the box?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is inside the box?"")"
1538801,Which kind of device is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the table?"")"
768298,How is the short clothing item called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the short clothing item called?"")"
1872597,What animal is behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is behind the fence?"")"
18320151,How tall is the grass the horse is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the grass the horse is in?"")"
7352655,What wears the heels?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What wears the heels?"")"
4551693,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9267119,Is the clock to the left of the plate small and square?," # returns yes or no
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the clock to the left of the plate small and square?"")
    for clock_patch in clock_patches:
        plate_patches = image_patch.find(""plate"")
        for plate_patch in plate_patches:
            if clock_patch.horizontal_center < plate_patch.horizontal_center:
                return bool_to_yesno(clock_patch.verify_property(""clock"", ""small"") and clock_patch.verify_property(""clock"", ""square""))
    return ""no"""
1012433,Do the people next to the boat wear a hat?," # contains a relation (next to, on, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the people next to the boat wear a hat?"")"
11368977,Which kind of food is to the left of the mozzarella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the mozzarella?"")"
7223527,"In which part of the picture is the photographer, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the photographer, the top or the bottom?"")"
1141191,Do you see a horse to the right of the small girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a horse to the right of the small girl?"")"
12215903,Was tin used to make the foil?," # tin is a material, foil is a product
    image_patch = ImagePatch(image)
    foil_patches = image_patch.find(""foil"")
    # Question assumes only one foil patch
    if len(foil_patches) == 0:
        # If no foil is found, query the image directly
        return image_patch.simple_query(""Was tin used to make the foil?"")
    return foil_patches[0].verify_property(""foil"", ""made from tin"")"
524697,What color is the carriage in front of the man?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the carriage in front of the man?"")"
17913127,What kind of animal is the window in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the window in front of?"")"
19714767,Does the plate to the left of the water glass look full and white?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the plate to the left of the water glass look full and white?"")"
17576355,Is his hair short or long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is his hair short or long?"")"
6389124,Which color is the car that is in the yard?," # contains a relation (in the yard), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the car that is in the yard?"")"
15222842,"On which side of the photo is the blue kite, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the blue kite, the right or the left?"")"
13769410,Is the large vehicle behind or in front of the small vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large vehicle behind or in front of the small vehicle?"")"
983946,What is the appliance to the left of the shelf the bottles are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the shelf the bottles are on?"")"
4793336,Is the onion ring in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the onion ring in the bottom part or in the top of the photo?"")"
8303636,Do the hydrant and the jacket have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    hydrant_patches = image_patch.find(""hydrant"")
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one hydrant and one jacket patch
    if len(hydrant_patches) == 0 or len(jacket_patches) == 0:
        # If no hydrant or jacket is found, query the image directly
        return image_patch.simple_query(""Do the hydrant and the jacket have a different colors?"")
    hydrant_patch = hydrant_patches[0]
    jacket_patch = jacket_patches[0]
    return bool_to_yesno(hydrant_patch.verify_property(""hydrant"", ""blue"") != jacket_patch.verify_property(""jacket"", ""blue""))"
6525365,What drink is to the right of the wine bottles in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is to the right of the wine bottles in the middle?"")"
19281936,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
8147173,Are the girl to the right of the man and the daughter both little?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the girl to the right of the man little?"") and image_patch.simple_query(""Is the daughter little?""))"
1865432,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
107005,Does the tall grass have green color?," # contains a relation (tall, green, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tall grass have green color?"")"
4763336,Are there apples in this picture that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""apple"") and not image_patch.exists(""red apple""))"
8974145,Is she carrying an umbrella?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she carrying an umbrella?"")"
13564927,"Which is older, the man or the kid?"," # assumes only one man and one kid
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    kid_patches = image_patch.find(""kid"")
    if len(man_patches) == 0 or len(kid_patches) == 0:
        return image_patch.simple_query(""Which is older, the man or the kid?"")
    man_age = man_patches[0].simple_query(""How old is the man?"")
    kid_age = kid_patches[0].simple_query(""How old is the kid?"")
    if int(man_age) > int(kid_age):
        return ""the man""
    else:
        return ""the kid"""
7632796,What is the vegetable inside the bowl called?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable inside the bowl called?"")"
14409051,Are there cars or trucks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""car"") or image_patch.exists(""truck""))"
8652154,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
181023670,What is the person next to the ball doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person next to the ball doing?"")"
16847774,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
8575073,Who do you think is wearing a watch?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a watch?"")"
7152059,The white cat is lying on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The white cat is lying on what?"")"
13342019,That bird is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That bird is on what?"")"
2690014,What does that person wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does that person wear?"")"
1282315,Do you see any pizzas or plates?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pizza = image_patch.exists(""pizza"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_pizza or is_plate)"
17920249,Is the bed cover white and checkered?," # returns yes or no
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""Is the bed cover white and checkered?"")
    bed_patch = bed_patches[0]
    is_white = bed_patch.verify_property(""bed cover"", ""white"")
    is_checkered = bed_patch.verify_property(""bed cover"", ""checkered"")
    return bool_to_yesno(is_white and is_checkered)"
14162303,Is the vehicle in the bottom?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle in the bottom?"")"
1793658,Does the woman appear to be standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the woman appear to be standing?"")"
6755819,Does the cap look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cap look green?"")"
6849627,Is this picture showing a shop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this picture showing a shop?"")"
16814998,What is the length of the shirt?," # returns a string
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the length of the shirt?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What is the length of the shirt?"") # crop would include the shirt so keep it in the query"
14459682,What is the person to the left of the lady sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the lady sitting on?"")"
3789720,What toy is left of the tiger?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is left of the tiger?"")"
1051272,"Where in the image is the tap, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the image is the tap, in the bottom or in the top?"")"
9119055,What is the drink to the left of the bottles on the table?," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink to the left of the bottles on the table?"")"
7700825,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17680726,What kind of cooking utensil is on top of the oven?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of cooking utensil is on top of the oven?"")"
9741202,Is the color of the post the same as the pole?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the post the same as the pole?"")"
1581724,Do you see both a fence and a bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_fence and is_bus)"
6359119,What is on the food that is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the food that is on the plate?"")"
1674403,Is the cup to the right of the device that is in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the right of the device that is in the bottom of the image?"")"
12547884,Is the mobile phone to the left of the cup that is to the left of the sausage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mobile phone to the left of the cup that is to the left of the sausage?"")"
8274986,Do you see both cars and fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_car and is_fence)"
13419716,Is the red grape to the left or to the right of the fruit the plate is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red grape to the left or to the right of the fruit the plate is with?"")"
81029012,Is there a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle""))"
15752458,Is there a woman in the supermarket?," # contains a relation (in, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman in the supermarket?"")"
316193,Is that shirt long sleeved and white?," # shirt is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that shirt long sleeved and white?"")"
7935775,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
2784117,Who is holding the phone?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the phone?"")"
14257076,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
1547099,Are there desks or screens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_desk = image_patch.exists(""desk"")
    is_screen = image_patch.exists(""screen"")
    return bool_to_yesno(is_desk or is_screen)"
952855,How long are the socks?," # returns a string
    image_patch = ImagePatch(image)
    sock_patches = image_patch.find(""sock"")
    # Question assumes only one sock patch
    if len(sock_patches) == 0:
        # If no sock is found, query the image directly
        return image_patch.simple_query(""How long are the socks?"")
    return sock_patches[0].simple_query(""How long are the socks?"") # crop would include the sock so keep it in the query"
6851979,Is the woman holding a bike?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman holding a bike?"")"
1161037,Does the flower in front of the train look blue?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the flower in front of the train look blue?"")"
1544591,What is the fruit in the steel sink?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit in the steel sink?"")"
19198658,Is that bread to the right of a spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that bread to the right of a spoon?"")"
18137308,Is the boy snowboarding or riding?," # snowboarding or riding
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Is the boy snowboarding or riding?"")
    boy_patch = boy_patches[0]
    is_snowboarding = boy_patch.simple_query(""Is the boy snowboarding or riding?"") == ""snowboarding""
    return ""snowboarding"" if is_snowboarding else ""riding"""
16281393,Does the guy to the right of the clock wear a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the guy to the right of the clock wear a hat?"")"
19715956,Is he holding a racket?," # tennis racket
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is he holding a racket?"")
    man_patch = man_patches[0]
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        return ""no""
    for racket_patch in racket_patches:
        if racket_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
7780883,On which side is the red bucket?," # left or right
    image_patch = ImagePatch(image)
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one bucket patch
    if len(bucket_patches) == 0:
        # If no bucket is found, query the image directly
        return image_patch.simple_query(""On which side is the red bucket?"")
    bucket_patch = bucket_patches[0]
    if bucket_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16966142,What color is the shoe that the player is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shoe that the player is wearing?"")"
7341119,Is the girl dress both green and short?," # green and short
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Is the girl dress both green and short?"")
    for girl_patch in girl_patches:
        is_green = girl_patch.verify_property(""girl dress"", ""green"")
        is_short = girl_patch.verify_property(""girl dress"", ""short"")
        return bool_to_yesno(is_green and is_short)"
31004450,What is the dog on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog on?"")"
2530284,On which side of the picture is the mirror?," # mirror
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the mirror?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11139492,Which color are the trees behind the giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the trees behind the giraffe?"")"
8854744,On which side of the picture is the container?," # left or right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the container?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6526109,Are the team and the jersey the same color?," # team and jersey are assumed to be the same object
    image_patch = ImagePatch(image)
    team_patches = image_patch.find(""team"")
    # Question assumes only one team patch
    if len(team_patches) == 0:
        # If no team is found, query the image directly
        return image_patch.simple_query(""Are the team and the jersey the same color?"")
    team_patch = team_patches[0]
    jersey_patches = image_patch.find(""jersey"")
    # Question assumes only one jersey patch
    if len(jersey_patches) == 0:
        return ""yes""
    jersey_patch = jersey_patches[0]
    return bool_to_yesno(team_patch.verify_property(""team"", ""color"") == jersey_patch.verify_property(""jersey"", ""color""))"
18462570,Is the silver fork to the left of the food the carrot is in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver fork to the left of the food the carrot is in?"")"
7124418,Who is on the skateboard to the right of the traffic cone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the skateboard to the right of the traffic cone?"")"
11627235,What animal is to the left of the vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the vehicle?"")"
7963799,Is the color of the woman's bag different than the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the woman's bag different than the shirt?"")"
756211,What color do you think are the wheels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think are the wheels?"")"
12445083,Is the small vehicle to the left or to the right of the vehicle that is not little?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small vehicle to the left or to the right of the vehicle that is not little?"")"
539282,What is the color of the ball to the left of the player?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the ball to the left of the player?"")"
18759457,What type of meat is to the right of the sausage pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of meat is to the right of the sausage pizza?"")"
11328436,How big is the boat on the left?," # returns the size of the boat on the left
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""How big is the boat on the left?"")
    left_boat = boat_patches[0]
    return left_boat.simple_query(""How big is the boat on the left?"")"
171026024,Is this a photo of the train station?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a photo of the train station?"")"
5794398,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
9565019,The shirt the man is wearing has which color?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt the man is wearing has which color?"")"
1561009,Is there a television to the right of the shelf in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a television to the right of the shelf in this picture?"")"
1192749,Who is carrying the bag?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the bag?"")"
10545366,"On which side of the picture is the girl, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the girl, the left or the right?"")"
13490381,What is the device that is to the left of the monitor called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the left of the monitor called?"")"
14165222,What is the hat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the hat on?"")"
976550,What are the numbers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the numbers on?"")"
9663074,What is the man in front of the flowers wearing?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of the flowers wearing?"")"
14461761,What kind of fruit is in the metal bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is in the metal bowl?"")"
4975442,Are there both a fence and giraffe in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_giraffe = image_patch.exists(""giraffe"")
    return bool_to_yesno(is_fence and is_giraffe)"
1061360,Is the grass dry and tall?," # dry and tall
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass dry and tall?"")"
16999347,Is the plant inside the bag made of plastic?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plant inside the bag made of plastic?"")"
10157244,Are there either any motorcycles or diapers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_diaper = image_patch.exists(""diaper"")
    return bool_to_yesno(is_motorcycle or is_diaper)"
1912453,Do you see any benches or mannequins in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""mannequin""))"
8217397,Do you see goggles in this scene that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    goggles_patches = image_patch.find(""goggles"")
    for goggles_patch in goggles_patches:
        if goggles_patch.simple_query(""What color are the goggles?"") != ""black"":
            return ""yes""
    return ""no"""
18103339,Is the giraffe to the right of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the giraffe to the right of a car?"")"
13957315,Does the device to the left of the speaker look small and black?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device to the left of the speaker look small and black?"")"
9145936,Is the bread to the right or to the left of the white bowl?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bread to the right or to the left of the white bowl?"")"
12733149,What is the animal that is leaning over the shrub the grass is below?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is leaning over the shrub the grass is below?"")"
2840098,Are there cones on the street?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cone on street"")) # crop would include the street so keep it in the query"
10608235,Is that a bed or a dining table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a bed or a dining table?"")"
1048198,Which color is the bun to the left of the napkin?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bun to the left of the napkin?"")"
4366116,Are there any airplanes in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
2301296,Is this a mirror or a sofa?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a mirror or a sofa?"")"
5844771,Is this table green or white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this table green or white?"")"
1570943,What is the bag inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag inside of?"")"
16667108,Is the jacket different in color than the sky?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Is the jacket different in color than the sky?"")
    jacket_color = jacket_patches[0].simple_query(""What color is the jacket?"")
    sky_color = image_patch.simple_query(""What color is the sky?"")
    return bool_to_yesno(jacket_color != sky_color)"
5833929,What color do you think the flower on the snowboard is?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the flower on the snowboard is?"")"
1290491,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
17437563,Is the guy that is to the left of the palm trees wearing shorts?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy that is to the left of the palm trees wearing shorts?"")"
1123467,What is the vehicle to the right of the man that is to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the man that is to the right of the people?"")"
10613175,Which kind of furniture is below the wall?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is below the wall?"")"
7359395,Is there either a square lamp or ottoman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_square_lamp = image_patch.exists(""square lamp"")
    is_ottoman = image_patch.exists(""ottoman"")
    return bool_to_yesno(is_square_lamp or is_ottoman)"
1276671,Are there any women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman""))"
6625720,Does the big device on the blanket look black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the big device on the blanket look black?"")"
4383084,"In which part are the glasses, the bottom or the top?"," # glasses are on the head, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part are the glasses, the bottom or the top?"")"
19297286,Who is staring at the ground?," # contains a relation (staring at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is staring at the ground?"")"
71023544,Is the helmet in the top of the picture?," # helmet is a top object
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet in the top of the picture?"")
    return bool_to_yesno(helmet_patches[0].vertical_center > image_patch.vertical_center)"
19962921,What is on the orange sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the orange sign?"")"
18376702,The coat has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The coat has which color?"")"
1767756,Is the door of the wall black and open?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the door of the wall black and open?"")"
16697415,Do you see either any bikes or suitcases?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike"") or image_patch.exists(""suitcase""))"
5267541,In which part of the photo is the frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the frisbee?"")"
11446577,Which kind of furniture is to the left of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the pillow?"")"
9561583,Does the dog near the planter look small and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog near the planter look small and white?"")"
19376713,What is the tray on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tray on?"")"
18855627,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
7675572,Is the carrot to the left of the fork both cooked and orange?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the carrot to the left of the fork both cooked and orange?"")"
7746313,Is there any sand or grass that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sand = image_patch.exists(""sand"")
    is_grass = image_patch.exists(""grass"")
    if is_sand or is_grass:
        return ""yes""
    return ""no"""
10270119,What is the black towel hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black towel hanging from?"")"
7957677,"How does that jacket seem to be like, black or green?"," # jacket is a relational verb so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does that jacket seem to be like, black or green?"")"
3589527,Are there any blue trucks or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_truck = image_patch.exists(""blue truck"")
    is_blue_train = image_patch.exists(""blue train"")
    return bool_to_yesno(is_blue_truck or is_blue_train)"
10930400,What color is the fire hydrant in the middle of the photo?," # contains a relation (middle of the photo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the fire hydrant in the middle of the photo?"")"
1412853,Are there flags or mannequins in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_mannequin = image_patch.exists(""mannequin"")
    return bool_to_yesno(is_flag or is_mannequin)"
19601039,Are both the star of the tail and the airplane the same color?," # contains a relation (same color), so ask directly
    image_patch = ImagePatch(image)
    star_patches = image_patch.find(""star"")
    # Question assumes only one star patch
    if len(star_patches) == 0:
        # If no star is found, query the image directly
        return image_patch.simple_query(""Are both the star of the tail and the airplane the same color?"")
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        return ""no""
    star_color = star_patches[0].simple_query(""What color is the star?"")
    airplane_color = airplane_patches[0].simple_query(""What color is the airplane?"")
    return bool_to_yesno(star_color == airplane_color)"
1788607,What is the cooking utensil that is to the right of the tea kettle made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil that is to the right of the tea kettle made of metal?"")"
3795509,Is the color of the tennis racket different than the curtain?," # tennis racket and curtain
    image_patch = ImagePatch(image)
    tennis_racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one tennis racket patch
    if len(tennis_racket_patches) == 0:
        # If no tennis racket is found, query the image directly
        return image_patch.simple_query(""Is the color of the tennis racket different than the curtain?"")
    tennis_racket_color = tennis_racket_patches[0].simple_query(""What is the color of the tennis racket?"")
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Is the color of the tennis racket different than the curtain?"")
    curtain_color = curtain_patches[0].simple_query(""What is the color of the curtain?"")
    return bool_to_yesno(tennis_racket_color != curtain_color)"
35651,Is the large speaker to the left of the device that the camera is on top of?," # contains a relation (on top of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large speaker to the left of the device that the camera is on top of?"")"
17774590,What animals are standing in the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are standing in the grass?"")"
12672316,Are there any pictures to the left of the microwave?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture"") and image_patch.find(""microwave"")[0].horizontal_center > image_patch.horizontal_center)"
968358,"On which side is the vase, the right or the left?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the vase, the right or the left?"")"
4655382,What's the statue on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the statue on?"")"
8854196,Is the black bag to the right or to the left of the old guy?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the right or to the left of the old guy?"")"
1720801,Are there both bottles and plates in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_bottle and is_plate)"
7403503,Is the coffee table light brown or black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee table light brown or black?"")"
15787930,What kind of food is to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the man?"")"
13495886,Is the mouse to the right of the laptop on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mouse to the right of the laptop on the left?"")"
6273217,What is the lady in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady in front of?"")"
782241,Do you see white fences or hats in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_fence = image_patch.exists(""white fence"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_white_fence or is_hat)"
17334359,"In which part of the photo is the white vehicle, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the white vehicle, the top or the bottom?"")"
4765783,Are there either trains or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_train or is_car)"
7714494,Is the man to the left or to the right of the girl?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the girl?"")"
19618563,Are there scarves in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""scarf""))"
5236086,What is the device on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the desk?"")"
4324524,What kind of animal is in front of the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the window?"")"
3994142,Which side is the pillow on?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which side is the pillow on?"")
    return ""right"""
21062941,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
19677568,What type of cooking utensil is in the kitchen?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of cooking utensil is in the kitchen?"")"
6822672,What is the name of the device that the person beside the backpack is holding?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device that the person beside the backpack is holding?"")"
2701721,On which side of the picture is the garbage can?," # left or right
    image_patch = ImagePatch(image)
    garbage_can_patches = image_patch.find(""garbage can"")
    # Question assumes only one garbage can patch
    if len(garbage_can_patches) == 0:
        # If no garbage can is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the garbage can?"")
    if garbage_can_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8874978,Do you see either a lamb or a dog in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamb"") or image_patch.exists(""dog""))"
477595,Are the rough rocks behind the elephant that is standing on the ground?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the rough rocks behind the elephant that is standing on the ground?"")"
2817633,Is the blue vehicle to the left or to the right of the woman that is on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue vehicle to the left or to the right of the woman that is on the left?"")"
535821,Is the lamp to the right or to the left of the speaker that is on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the right or to the left of the speaker that is on the left?"")"
10701707,What kind of furniture is light brown?," # contains a relation (light brown), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is light brown?"")"
3556137,"In which part of the photo is the man, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the man, the top or the bottom?"")"
7216696,Who is wearing the knee pad?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the knee pad?"")"
1882869,The bridge above the car has which color?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bridge above the car has which color?"")"
12294720,Who wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a shirt?"")"
14729011,Which side of the photo is the clock on?," # left or right
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the clock on?"")
    if clock_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12657004,What device is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the man?"")"
1977929,What's the stop sign in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the stop sign in front of?"")"
121020399,Is the woman wearing a watch?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman wearing a watch?"")"
1825044,On which side are the green onions?," # left or right
    image_patch = ImagePatch(image)
    green_onion_patches = image_patch.find(""green onion"")
    # Question assumes only one green onion patch
    if len(green_onion_patches) == 0:
        # If no green onion is found, query the image directly
        return image_patch.simple_query(""On which side are the green onions?"")
    green_onion_patch = green_onion_patches[0]
    horizontal_center = green_onion_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13384583,What's worn on the man?," # contains a relation (worn on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's worn on the man?"")"
5723173,Is the sauce bowl green or white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sauce bowl green or white?"")"
5775067,Are there both a door and a window in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
7279537,"What kind of furniture is the box on, a chair or a shelf?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the box on, a chair or a shelf?"")"
4458507,Is there a train around the plane?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a train around the plane?"")"
19495643,Are there any white dogs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white dog"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
13502436,Are the apples on top of a table?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the apples on top of a table?"")"
1321167,"Which color is that cart, gray or yellow?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that cart, gray or yellow?"")"
3160620,What do the sink and the tap have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the sink and the tap have in common?"")"
1978299,What fruit is inside the bowl to the left of the cup?," # contains a relation (inside, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is inside the bowl to the left of the cup?"")"
11262894,Which side of the image is the rug on?," # left or right
    image_patch = ImagePatch(image)
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the rug on?"")
    if rug_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14327831,Are the wall and the bandana the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the wall and the bandana the same color?"")) # crop would include the bandana so keep it in the query"
9462111,Which color is the cat's nose?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the cat's nose?"")"
141018110,Who wears the eye glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the eye glasses?"")"
71645,Is this a train or a bus?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a train or a bus?"")"
265894,What are the carrots in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the carrots in?"")"
17173895,Who is skiing on the snow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing on the snow?"")"
1343622,Are there any bags to the left of the man that is wearing a tank top?," # contains a relation (left of, wearing a tank top, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.exists(""man"") and image_patch.find(""man"")[0].simple_query(""Is the man wearing a tank top?"") == ""yes"")"
16633854,Which side of the photo is the clock on?," # left or right
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the clock on?"")
    if clock_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2160401,Is the bench to the right or to the left of the person that is wearing sandals?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench to the right or to the left of the person that is wearing sandals?"")"
17161697,Is the happy man to the left or to the right of the young girl?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy man to the left or to the right of the young girl?"")"
8731050,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17924298,Are there both bikes and cars in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bike and is_car)"
12444283,Is there a chair or a pillow in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_chair or is_pillow)"
1587180,Are there people to the left of the bag that is on top of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the left of the bag that is on top of the table?"")"
5630113,Who is holding the animal the net is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the animal the net is on?"")"
75130,Is the water in front of the trees sunny or cloudy?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water in front of the trees sunny or cloudy?"")"
9966325,What kind of furniture is below the window?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is below the window?"")"
3876148,Which kind of animal is on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the grass?"")"
185570,What color does the sky have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the sky have?"")"
19190199,Who is riding on the surfboard?," # contains a relation (riding on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding on the surfboard?"")"
1646400,Is he to the left of a frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the left of a frisbee?"")"
689530,Who is wearing the gloves?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the gloves?"")"
5902874,Is the grass in front of the church lush and green?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass in front of the church lush and green?"")"
71039688,Is the animal near the antelope young and black?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal near the antelope young and black?"")"
13454652,Do you see either benches or pizza slices in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""pizza slice"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
8960447,How tall is the green grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the green grass?"")"
6383549,What is the device to the left of the white mug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the white mug?"")"
12680169,Are there white microwaves or dishwashers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_microwave = image_patch.exists(""white microwave"")
    is_dishwasher = image_patch.exists(""dishwasher"")
    return bool_to_yesno(is_white_microwave or is_dishwasher)"
4552445,What is the animal to the left of the cow that wears a collar?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the cow that wears a collar?"")"
19434972,Is the field brown or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the field brown or green?"")"
11342980,"Where is the happy woman, on the right or on the left side of the image?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the happy woman, on the right or on the left side of the image?"")"
15128312,"Where in this photo is the man, in the top or in the bottom?"," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the man, in the top or in the bottom?"")"
151006367,Is the cup in the top or in the bottom part?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup in the top or in the bottom part?"")"
13675676,Is the boy on the right side or on the left?," # contains a relation (right, left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy on the right side or on the left?"")"
3255358,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
16798879,Is the macaroni on top of the plate that looks oval?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the macaroni on top of the plate that looks oval?"")"
18841634,What is covered by the snow?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the snow?"")"
10205604,Do you see a fork on the plate in the top of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a fork on the plate in the top of the image?"")"
2100348,"Where in this scene is the floor lamp, on the left or on the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this scene is the floor lamp, on the left or on the right?"")"
13887689,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
15451802,Which animals are eating?," # returns a string with the names of the animals eating
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animals are eating?"")"
9805267,What is the person that is to the left of the guy riding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the guy riding?"")"
19825842,Is the clock black or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock black or red?"")"
9659252,What device is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the chair?"")"
17782881,What device is to the right of the papers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the papers?"")"
15326602,"What is the man that is to the right of the other man doing, driving or looking down?"," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the right of the other man doing, driving or looking down?"")"
7378453,Does the sky have the same color as the lawn?," # returns yes or no
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""Does the sky have the same color as the lawn?"")
    sky_color = sky_patches[0].simple_query(""What color is the sky?"")
    lawn_patches = image_patch.find(""lawn"")
    # Question assumes only one lawn patch
    if len(lawn_patches) == 0:
        # If no lawn is found, query the image directly
        return image_patch.simple_query(""Does the sky have the same color as the lawn?"")
    lawn_color = lawn_patches[0].simple_query(""What color is the lawn?"")
    return bool_to_yesno(sky_color == lawn_color)"
14347566,Is the bed on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bed on the right side?"")"
2850958,What kind of device is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is on the wall?"")"
1816724,Are there any players on the field?," # contains a relation (on the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""player on the field"")) # crop would include the field so keep it in the query"
16359314,Is there any pepperoni in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any pepperoni in this picture?"")"
8849678,Are there both clocks and frisbees in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_clock = image_patch.exists(""clock"")
    is_frisbee = image_patch.exists(""frisbee"")
    return bool_to_yesno(is_clock and is_frisbee)"
3649721,Is this a beach or a field?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a beach or a field?"")"
141012633,Is the bird cage on the right or on the left side of the image?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bird cage on the right or on the left side of the image?"")"
11118236,Is there any fence or elephant in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence or is_elephant)"
12283200,What is the man on the bench holding?," # contains a relation (on, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on the bench holding?"")"
5936769,What kind of food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is it?"")"
18342938,Does the elephant's horn look white and long?," # returns yes or no
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only one elephant patch
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch.simple_query(""Does the elephant's horn look white and long?"")
    elephant_patch = elephant_patches[0]
    is_white = elephant_patch.verify_property(""elephant horn"", ""white"")
    is_long = elephant_patch.verify_property(""elephant horn"", ""long"")
    return bool_to_yesno(is_white and is_long)"
1798206,What device is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the woman holding?"")"
1123854,Is the man to the right or to the left of the woman that is to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the woman that is to the left of the car?"")"
1328586,The bucket is of what color?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bucket is of what color?"")"
7466923,Is the curtain behind a cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain behind a cat?"")"
191009197,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
6500385,What is the cat doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat doing?"")"
10717347,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
2160834,What is the cow to the right of the rope lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cow to the right of the rope lying on?"")"
3734161,Who holds the ball?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the ball?"")"
1052758,Are there any calculators in front of the tissue paper that is to the left of the tablet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any calculators in front of the tissue paper that is to the left of the tablet?"")"
9389713,"What size is the bull to the right of the animal, large or small?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What size is the bull to the right of the animal, large or small?"")"
182294,Is the plate on the right side?," # assumes only one plate
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    if len(plate_patches) == 0:
        return image_patch.simple_query(""Is the plate on the right side?"")
    plate_patch = plate_patches[0]
    if plate_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
3230963,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
3574919,Do the boxes look silver and square?," # returns yes or no
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Do the boxes look silver and square?"")
    return bool_to_yesno(box_patches[0].verify_property(""box"", ""silver"") and box_patches[0].verify_property(""box"", ""square""))"
5358130,Is the grass beside the runway wet and brown?," # contains a relation (beside), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass beside the runway wet and brown?"")"
9185112,Who is wearing clothes?," # contains a relation (wearing clothes), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing clothes?"")"
2399979,What are the trees around of?," # around of is a relation
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the trees around of?"")"
9208463,Are both the shirt and the uniform the same color?," # uniform is a type of clothing
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    uniform_patches = image_patch.find(""uniform"")
    # Question assumes only one shirt and one uniform patch
    if len(shirt_patches) == 0 or len(uniform_patches) == 0:
        # If no shirt or uniform is found, query the image directly
        return image_patch.simple_query(""Are both the shirt and the uniform the same color?"")
    shirt_color = shirt_patches[0].simple_query(""What color is the shirt?"")
    uniform_color = uniform_patches[0].simple_query(""What color is the uniform?"")
    return bool_to_yesno(shirt_color == uniform_color)"
12817926,Is the scooter to the left of the lady that is to the left of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the scooter to the left of the lady that is to the left of the bus?"")"
141019182,The shirt is of which color?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt is of which color?"")"
101920,Where is the truck parked?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the truck parked?"")"
1239379,Does the baseball cap look gold?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the baseball cap look gold?"")"
2216853,Is the white tag on the suitcase that is in front of the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white tag on the suitcase that is in front of the door?"")"
15407092,Are there chairs to the left of the pillow that the bed is on?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there chairs to the left of the pillow that the bed is on?"")"
13753799,Are there keyboards or bus drivers in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_keyboard = image_patch.exists(""keyboard"")
    is_bus_driver = image_patch.exists(""bus driver"")
    return bool_to_yesno(is_keyboard or is_bus_driver)"
1347481,Are there pictures to the right of the player that is holding the tennis racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there pictures to the right of the player that is holding the tennis racket?"")"
12481860,What type of vegetable is in the food container that sits on the tablecloth?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is in the food container that sits on the tablecloth?"")"
5787071,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
5450770,"On which side is the white towel, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white towel, the right or the left?"")"
14584483,Who is wearing the boots?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the boots?"")"
2470067,Are there plates that are white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate"") and image_patch.find(""plate"")[0].verify_property(""plate"", ""white"")) # crop would include the plate so keep it in the query"
11162297,Are there both cars and windows in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_car and is_window)"
2989882,How is the white clothing item in the image called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the white clothing item in the image called?"")"
51169,What is on the white wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white wall?"")"
15902871,How long is the man shirt?," # returns a string
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""How long is the man shirt?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""How long is the man shirt?"") # crop would include the shirt so keep it in the query"
16192173,Which color are the skateboard wheels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the skateboard wheels?"")"
17130808,What type of place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of place is this?"")"
8643124,How is the vehicle to the left of the man that wears a shirt called?," # contains a relation (left of, wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle to the left of the man that wears a shirt called?"")"
12377972,Who is wearing a belt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a belt?"")"
988547,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
16765964,What is the bat made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bat made of?"")"
7947111,What is the vehicle in the parking lot?," # contains a relation (parking lot), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle in the parking lot?"")"
18149213,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
18794175,Are there white boats in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white boat"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
41012235,Which kind of device is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is not large?"")"
12355648,What is the blue article of clothing called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blue article of clothing called?"")"
1324613,Does the grass look green and short?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""grass"", ""green"") and image_patch.verify_property(""grass"", ""short""))"
12648256,Does this cereal appear to be wet or dry?," # cereal is a common object
    image_patch = ImagePatch(image)
    cereal_patches = image_patch.find(""cereal"")
    # Question assumes only one cereal patch
    if len(cereal_patches) == 0:
        # If no cereal is found, query the image directly
        return image_patch.simple_query(""Does this cereal appear to be wet or dry?"")
    return cereal_patches[0].simple_query(""Is the cereal wet or dry?"") # crop would include the cereal so keep it in the query"
5338699,Where is he playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is he playing?"")"
12377690,What is the item of furniture that is made of wood called?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is made of wood called?"")"
18308208,Is the tower on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower on the right?"")"
513746,Are there any metallic benches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""metallic bench"")) # crop would include the metallic property so keep it in the query"
17708447,Do the clothes look pink?," # returns yes or no
    image_patch = ImagePatch(image)
    clothes_patches = image_patch.find(""clothes"")
    # Question assumes only one clothes patch
    if len(clothes_patches) == 0:
        # If no clothes are found, query the image directly
        return image_patch.simple_query(""Do the clothes look pink?"")
    return bool_to_yesno(clothes_patches[0].verify_property(""clothes"", ""pink""))"
12524806,What sauce is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sauce is on the plate?"")"
4133695,Is the person to the left of the helmet wearing boots?," # helmet is a specific type of headgear
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the person to the left of the helmet wearing boots?"")
    helmet_patch = helmet_patches[0]
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person to the left of the helmet wearing boots?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center < helmet_patch.horizontal_center:
        return person_patch.simple_query(""Is the person wearing boots?"")
    return ""no"""
14479287,What is the coffee mug that is to the right of the bacon full of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the coffee mug that is to the right of the bacon full of?"")"
11935245,What's the grass in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the grass in front of?"")"
16510298,"What is the packet on, a table or a sofa?"," # packet is on a table or a sofa
    image_patch = ImagePatch(image)
    packet_patches = image_patch.find(""packet"")
    # Question assumes only one packet patch
    if len(packet_patches) == 0:
        # If no packet is found, query the image directly
        return image_patch.simple_query(""What is the packet on, a table or a sofa?"")
    for packet_patch in packet_patches:
        is_on_table = packet_patch.verify_property(""packet"", ""on_table"")
        is_on_sofa = packet_patch.verify_property(""packet"", ""on_sofa"")
        if is_on_table:
            return ""table""
        elif is_on_sofa:
            return ""sofa""
    return ""table"" # default to table"
10570215,Is there either a bag or a chair in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""chair""))"
19791665,What is the device to the left of the person the man is to the right of?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the person the man is to the right of?"")"
1221315,Is the bike on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bike on the right side?"")"
17693557,Do you see a bear to the right of the small ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bear to the right of the small ball?"")"
10271983,Which kind of device is right of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is right of the keyboard?"")"
10567925,Are there any bags on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.exists(""table""))"
16257200,Which kind of furniture is to the right of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the fence?"")"
1044838,Which side of the picture is the black vehicle on?," # left or right
    image_patch = ImagePatch(image)
    black_vehicle_patches = image_patch.find(""black vehicle"")
    # Question assumes only one black vehicle patch
    if len(black_vehicle_patches) == 0:
        # If no black vehicle is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the black vehicle on?"")
    if black_vehicle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19517392,The cupboard is where?," # cupboard is a relational verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cupboard is where?"")"
16536853,Is the bridge both short and wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bridge"", ""short"") and image_patch.verify_property(""bridge"", ""wooden""))"
8103232,Who is on the bike to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bike to the right of the person?"")"
15752684,What toy is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is wearing the hat?"")"
16288166,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
14115766,Which kind of vehicle is to the right of the passengers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the right of the passengers?"")"
14288723,Where is the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the bird?"")"
6966511,What animal is tall?," # contains a relation (tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is tall?"")"
10457305,What is common to the post and the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the post and the wall?"")"
11013759,Does the zebra to the right of the other zebra look tall?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra to the right of the other zebra look tall?"")"
3548347,Inside what are the herbs?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Inside what are the herbs?"")"
11158920,Does the helmet have a different color than the pole?," # helmet and pole are assumed to be in the same image
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the helmet have a different color than the pole?"")
    helmet_color = helmet_patches[0].simple_query(""What color is the helmet?"")
    pole_patches = image_patch.find(""pole"")
    # Question assumes only one pole patch
    if len(pole_patches) == 0:
        # If no pole is found, query the image directly
        return image_patch.simple_query(""Does the helmet have a different color than the pole?"")
    pole_color = pole_patches[0].simple_query(""What color is the pole?"")
    return bool_to_yesno(helmet_color != pole_color)"
15873996,Are there surfboards or chimneys in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_chimney = image_patch.exists(""chimney"")
    return bool_to_yesno(is_surfboard or is_chimney)"
5452261,Is the shelf to the right or to the left of the bag which is hanging from the hook?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the right or to the left of the bag which is hanging from the hook?"")"
10581033,Is the utensil by the dish metallic and blue?," # contains a relation (by, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the utensil by the dish metallic and blue?"")"
10283555,Is the color of the boat white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the boat white?"")"
51028022,Is the clock to the left or to the right of the person on the left of the photo?," # left of the photo
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the clock to the left or to the right of the person on the left of the photo?"")
    for clock_patch in clock_patches:
        person_patches = image_patch.find(""person"")
        # Question assumes only one person patch
        if len(person_patches) == 0:
            # If no person is found, query the image directly
            return image_patch.simple_query(""Is the clock to the left or to the right of the person on the left of the photo?"")
        for person_patch in person_patches:
            if person_patch.horizontal_center < image_patch.horizontal_center:
                if clock_patch.horizontal_center < person_patch.horizontal_center:
                    return ""left""
                else:
                    return ""right""
    return ""left"""
14977281,How is the vehicle that is to the left of the person that is wearing a helmet called?," # contains a relation (left of, wearing a helmet, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle that is to the left of the person that is wearing a helmet called?"")"
14280655,Are there either large blankets or towels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_large_blanket = image_patch.exists(""large blanket"")
    is_towel = image_patch.exists(""towel"")
    return bool_to_yesno(is_large_blanket or is_towel)"
4697826,Is the boy on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy on the left?"")"
7953330,Is there a traffic light to the right of the tower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a traffic light to the right of the tower?"")"
15299385,What is the yellow drink in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the yellow drink in this scene?"")"
19920463,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
10841368,Is the device that is to the right of the laptop computer black or silver?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the device that is to the right of the laptop computer black or silver?"")"
15898966,Are there any doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door"")) # Question assumes only one door patch"
11392085,What is the man with the horse wearing?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man with the horse wearing?"")"
8440143,What is the device that is to the right of the can that is round?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the can that is round?"")"
5139514,Do you see fences or cows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_fence or is_cow)"
41015033,Who is eating the watermelon?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is eating the watermelon?"")"
9563753,Do you see forks in the picture that are silver?," # fork is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see forks in the picture that are silver?"")"
6563327,Where is the airplane?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Where is the airplane?"")
    return airplane_patches[0].simple_query(""Where is the airplane?"") # crop would include the airplane so keep it in the query"
4289741,Is there a skateboard inside the skatepark?," # contains a relation (inside, outside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a skateboard inside the skatepark?"")"
916908,Are there any horses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse""))"
17298393,Do the sneakers and the shorts have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    sneakers_patches = image_patch.find(""sneakers"")
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one sneakers and one shorts patch
    if len(sneakers_patches) == 0 or len(shorts_patches) == 0:
        # If no sneakers or shorts are found, query the image directly
        return image_patch.simple_query(""Do the sneakers and the shorts have a different colors?"")
    sneakers_patch = sneakers_patches[0]
    shorts_patch = shorts_patches[0]
    return bool_to_yesno(sneakers_patch.verify_property(""sneakers"", ""blue"") != shorts_patch.verify_property(""shorts"", ""blue""))"
3744294,What is the vase on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vase on?"")"
11841949,Are there any small cars or windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_small_car = image_patch.exists(""small car"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_small_car or is_window)"
7710456,How is the meat on the cheese called?," # assumes only one meat patch
    image_patch = ImagePatch(image)
    meat_patches = image_patch.find(""meat"")
    if len(meat_patches) == 0:
        # If no meat is found, query the image directly
        return image_patch.simple_query(""How is the meat on the cheese called?"")
    meat_patch = meat_patches[0]
    return meat_patch.simple_query(""How is the meat on the cheese called?"") # crop would include the meat so keep it in the query"
191036841,What is the Asian guy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the Asian guy holding?"")"
17162250,Who is holding the bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the bat?"")"
9684932,Is the color of the hat different than the baseball mitt?," # returns yes or no
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""Is the color of the hat different than the baseball mitt?"")
    hat_color = hat_patches[0].simple_query(""What is the color of the hat?"")
    mitt_patches = image_patch.find(""baseball mitt"")
    # Question assumes only one mitt patch
    if len(mitt_patches) == 0:
        # If no mitt is found, query the image directly
        return image_patch.simple_query(""Is the color of the hat different than the baseball mitt?"")
    mitt_color = mitt_patches[0].simple_query(""What is the color of the baseball mitt?"")
    return bool_to_yesno(hat_color != mitt_color)"
13386525,Does the sky have a different color than the clock?," # clock is not found
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""Does the sky have a different color than the clock?"")
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        return ""no""
    clock_patch = clock_patches[0]
    sky_color = sky_patches[0].simple_query(""What color is the sky?"")
    clock_color = clock_patch.simple_query(""What color is the clock?"")
    return bool_to_yesno(sky_color != clock_color)"
7790443,Is there any grass that is short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is short?"")"
6224917,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
18612455,Are there bowls or spoons?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bowl"") or image_patch.exists(""spoon""))"
3944637,What kind of furniture is to the right of the vase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the vase?"")"
10705095,Which kind of meat is between the bun?," # contains a relation (between, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is between the bun?"")"
17433772,What is the meat to the left of the metal fork?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat to the left of the metal fork?"")"
4826139,What is hanging from the wall?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging from the wall?"")"
497008,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
5563229,On which side of the image is the car?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the car?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15785484,Is the monitor silver and small?," # monitor
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only one monitor patch
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch.simple_query(""Is the monitor silver and small?"")
    monitor_patch = monitor_patches[0]
    is_silver = monitor_patch.verify_property(""monitor"", ""silver"")
    is_small = monitor_patch.verify_property(""monitor"", ""small"")
    return bool_to_yesno(is_silver and is_small)"
10222017,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
1666224,Do these animals have different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do these animals have different types?"")"
10228410,Is the screen to the left of the device in the center of the photo?," # contains a relation (left, right, center, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left of the device in the center of the photo?"")"
7826846,Does the animal to the right of the sofa look large and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal to the right of the sofa look large and white?"")"
10875083,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
7330570,Do the tree and the hat have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""Do the tree and the hat have a different colors?"")
    tree_patch = tree_patches[0]
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return ""no""
    hat_patch = hat_patches[0]
    return bool_to_yesno(tree_patch.verify_property(""tree"", ""color"") != hat_patch.verify_property(""hat"", ""color""))"
19507382,Do you see a tennis ball to the right of the girl that is to the right of the tent?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a tennis ball to the right of the girl that is to the right of the tent?"")"
12485195,Is the meat in the bottom of the picture?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the meat in the bottom of the picture?"")"
12463908,Are there both a door and a window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
5990249,Is the white lid closed or open?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white lid closed or open?"")"
11288003,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
41051410,What is the snow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the snow on?"")"
396941,Is the racket to the left of the man that is wearing a hair band?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket to the left of the man that is wearing a hair band?"")"
17309542,What is the player wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the player wearing?"")"
18228129,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
6270225,What kind of clothing isn't clean?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing isn't clean?"")"
1947186,Is the white boat to the left of the umbrella on the beach?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white boat to the left of the umbrella on the beach?"")"
11180518,What animal is the bandana on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the bandana on?"")"
4365535,Do you see any chairs to the right of the device in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any chairs to the right of the device in the center?"")"
7539035,Is the fence in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top part of the image?"")"
4865000,Are the bear's eyes black or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bear's eyes black or green?"")"
2362400,What does the forest surround?," # contains a relation (surround), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the forest surround?"")"
12925717,What kind of fast food is on the bun?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is on the bun?"")"
3297478,What device is on the right of the computer mouse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the right of the computer mouse?"")"
5804180,"In which part of the photo are the mushrooms, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo are the mushrooms, the bottom or the top?"")"
245781,Does the hair seem to be short and blond?," # hair is a complex object
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair seem to be short and blond?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""blond"") and hair_patches[0].verify_property(""hair"", ""short""))"
1783175,Are there any plates or knives?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_knife = image_patch.exists(""knife"")
    return bool_to_yesno(is_plate or is_knife)"
758139,Is the man to the left of the woman wearing shorts?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the woman wearing shorts?"")"
17355983,What is the child that is walking adjusting?," # contains a relation (adjusting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child that is walking adjusting?"")"
9964553,Does the suit look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the suit look black?"")"
17335535,Is the girl to the right or to the left of the skateboard on the left side?," # left side of the image
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Is the girl to the right or to the left of the skateboard on the left side?"")
    for girl_patch in girl_patches:
        skateboard_patches = image_patch.find(""skateboard"")
        for skateboard_patch in skateboard_patches:
            if girl_patch.horizontal_center > skateboard_patch.horizontal_center:
                return ""right""
    return ""left"""
9402633,How big is the cake in the center?," # returns the size of the cake in the center
    image_patch = ImagePatch(image)
    cake_patches = image_patch.find(""cake"")
    # Question assumes only one cake patch
    if len(cake_patches) == 0:
        # If no cake is found, query the image directly
        return image_patch.simple_query(""How big is the cake in the center?"")
    cake_patch = cake_patches[0]
    horizontal_center = image_patch.horizontal_center
    vertical_center = image_patch.vertical_center
    if cake_patch.horizontal_center < horizontal_center:
        return cake_patch.simple_query(""How big is the cake in the center?"")
    elif cake_patch.horizontal_center > horizontal_center:
        return cake_patch.simple_query(""How big is the cake in the center?"")
    else:
        return cake_patch.simple_query(""How big is the cake in the center?"")"
7981902,Are the animals the same species?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only two animal patches
    if len(animal_patches) < 2:
        return ""yes""
    species1 = animal_patches[0].simple_query(""What species is the animal?"")
    species2 = animal_patches[1].simple_query(""What species is the animal?"")
    return bool_to_yesno(species1 == species2)"
1011257,How big is the fork in the bottom?," # returns a string
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""How big is the fork in the bottom?"")
    for fork_patch in fork_patches:
        if fork_patch.vertical_center < image_patch.vertical_center:
            return fork_patch.simple_query(""How big is the fork in the bottom?"")
    return ""no"""
17799783,Is the blue sky sunny or cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue sky sunny or cloudy?"")"
10342165,"On which side is the wood cabinet, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the wood cabinet, the left or the right?"")"
18837060,Are there either soap dispensers or nests in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_soap_dispenser = image_patch.exists(""soap dispenser"")
    is_nest = image_patch.exists(""nest"")
    return bool_to_yesno(is_soap_dispenser or is_nest)"
15547927,Which kind of vehicle is in the parking lot?," # contains a relation (in the parking lot), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is in the parking lot?"")"
14325955,What device is to the left of the device that looks gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the device that looks gray?"")"
11235752,What is the bun on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bun on?"")"
13883210,Is the person that is to the left of the boy wearing a watch?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the left of the boy wearing a watch?"")"
6463195,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
13834165,What's hanging from the ceiling?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's hanging from the ceiling?"")"
16589058,What food is brown?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is brown?"")"
5868809,Is the house in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house in the bottom part of the photo?"")"
17449524,What is on the sofa?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sofa?"")"
15447643,Which kind of animal is to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is to the right of the person?"")"
13820610,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
7343621,What does the man to the left of the car wear?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man to the left of the car wear?"")"
8621194,Do you see any cows or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cow"") or image_patch.exists(""zebra""))"
19994794,Is the girl to the left of a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of a fence?"")"
4371688,Is the white car on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white car on the right or on the left?"")"
12487663,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
181066290,Who do the green trees surround?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do the green trees surround?"")"
7849152,Who is riding on the skateboard?," # contains a relation (riding on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding on the skateboard?"")"
1473236,What color is the rug that is in the bottom part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the rug that is in the bottom part of the image?"")"
13751039,Are there trains in front of the tree?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train"") and image_patch.exists(""tree""))"
4383647,Is there a plate on the table that is to the left of the kid?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate on the table that is to the left of the kid?"")"
2248735,The hair is of what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The hair is of what color?"")"
19228055,How big is the painting?," # returns the size of the painting
    image_patch = ImagePatch(image)
    painting_patches = image_patch.find(""painting"")
    # Question assumes only one painting patch
    if len(painting_patches) == 0:
        # If no painting is found, query the image directly
        return image_patch.simple_query(""How big is the painting?"")
    return painting_patches[0].simple_query(""How big is the painting?"") # crop would include the painting so keep it in the query"
1225270,Is the cat to the left or to the right of the sleeping dog on the couch?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat to the left or to the right of the sleeping dog on the couch?"")"
5654048,Is the car to the right of the van both blue and small?," # returns yes or no
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""Is the car to the right of the van both blue and small?"")
    van_patch = van_patches[0]
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Is the car to the right of the van both blue and small?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center > van_patch.horizontal_center:
        return bool_to_yesno(car_patch.verify_property(""car"", ""blue"") and car_patch.verify_property(""car"", ""small""))
    return ""no"""
6202911,What is displayed in the room?," # contains a relation (in the room), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is displayed in the room?"")"
465500,Is that a black curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a black curtain?"")"
19390612,Does the shirt have the same color as the bag?," # bag is assumed to be in the center of the image
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does the shirt have the same color as the bag?"")
    shirt_patch = shirt_patches[0]
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        return ""no""
    bag_patch = bag_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""blue"") == bag_patch.verify_property(""bag"", ""blue""))"
12910290,Who is in front of the palm tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the palm tree?"")"
11240889,Do you see mugs in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mug""))"
3403726,What is the man to the left of the people wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the people wearing?"")"
6799486,Which kind of furniture is to the right of the boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the boy?"")"
16864995,What kind of vehicle are the hills behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle are the hills behind of?"")"
5496078,What piece of furniture is to the left of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the left of the desk?"")"
26044,What bag is to the right of the shelves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bag is to the right of the shelves?"")"
3569188,Are there white towels or blankets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_towel = image_patch.exists(""white towel"")
    is_white_blanket = image_patch.exists(""white blanket"")
    return bool_to_yesno(is_white_towel or is_white_blanket)"
3254125,Is the clean plate both white and empty?," # clean plate is a predicate, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clean plate both white and empty?"")"
5530176,Is the bridge large or small?," # contains a relation (large, small, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bridge large or small?"")"
11689209,Are both the floor and the tub the same color?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    floor_color = image_patch.simple_query(""What color is the floor?"")
    tub_color = image_patch.simple_query(""What color is the tub?"")
    return bool_to_yesno(floor_color == tub_color)"
17191206,What color do you think the keyboard is?," # keyboard is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the keyboard is?"")"
125103,What animal is on the surfboard that looks blue?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the surfboard that looks blue?"")"
3929556,Is the water bottle to the right of a woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water bottle to the right of a woman?"")"
6224024,What type of furniture do you think is he in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture do you think is he in front of?"")"
7412499,"On which side is the kettle, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the kettle, the right or the left?"")"
10934538,Which kind of vehicle is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is blue?"")"
12703200,Where is the kid?," # returns the location of the kid
    image_patch = ImagePatch(image)
    kid_patches = image_patch.find(""kid"")
    # Question assumes only one kid patch
    if len(kid_patches) == 0:
        # If no kid is found, query the image directly
        return image_patch.simple_query(""Where is the kid?"")
    return kid_patches[0].simple_query(""Where is the kid?"") # crop would include the kid so keep it in the query"
11767872,Is the purse to the right or to the left of the man that is to the right of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the purse to the right or to the left of the man that is to the right of the car?"")"
9153368,Is the white sink on the black counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white sink on the black counter?"")"
5798836,What is the name of the item of furniture to the right of the animal that is in front of the flowers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture to the right of the animal that is in front of the flowers?"")"
5874061,Is the plate different in color than the window?," # contains a relation (different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate different in color than the window?"")"
191042110,What vehicle is on the rectangular sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is on the rectangular sign?"")"
1606088,Are both the helmet and the skateboard the same color?," # helmet and skateboard are assumed to be in the same image
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are both the helmet and the skateboard the same color?"")
    helmet_patch = helmet_patches[0]
    skateboard_patches = image_patch.find(""skateboard"")
    # Question assumes only one skateboard patch
    if len(skateboard_patches) == 0:
        return ""yes""
    for skateboard_patch in skateboard_patches:
        helmet_color = helmet_patch.simple_query(""What is the color of the helmet?"")
        skateboard_color = skateboard_patch.simple_query(""What is the color of the skateboard?"")
        return bool_to_yesno(helmet_color == skateboard_color)"
11428260,What size is the food that is to the left of the cake?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What size is the food that is to the left of the cake?"")"
14863886,Is there either any sand or grass that is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sand_brown = image_patch.exists(""sand"") and image_patch.simple_query(""Is the sand brown?"") == ""yes""
    is_grass_brown = image_patch.exists(""grass"") and image_patch.simple_query(""Is the grass brown?"") == ""yes""
    return bool_to_yesno(is_sand_brown or is_grass_brown)"
18913347,Which color is the boat to the right of the rope?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the boat to the right of the rope?"")"
3839866,Do you see horses or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse = image_patch.exists(""horse"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_horse or is_fence)"
9121385,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
5795389,Is the coat white or black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coat white or black?"")"
10530851,Are there either any sandwiches or donuts in the photograph?," # contains a disjunction (or), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sandwich"") or image_patch.exists(""donut""))"
19729899,What is the white piece of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white piece of furniture?"")"
7867089,What's on the pole?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the pole?"")"
5677376,Is the bed on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bed on the right side?"")"
12317234,What is in the water?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the water?"")"
502456,On which side of the image is the flag?," # left or right
    image_patch = ImagePatch(image)
    flag_patches = image_patch.find(""flag"")
    # Question assumes only one flag patch
    if len(flag_patches) == 0:
        # If no flag is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the flag?"")
    flag_patch = flag_patches[0]
    if flag_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1730532,Is the table to the right of the lady both round and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table to the right of the lady both round and small?"")"
902773,Are there both a door and a window in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
14109893,What is the name of this food?," # returns the name of the food
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of this food?"")"
6620077,Which kind of device is sitting on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is sitting on the desk?"")"
17730333,Does the cap have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""cap"", ""black""))"
3275447,What type of watercraft is to the left of him?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of watercraft is to the left of him?"")"
13809785,Which side of the photo is the pink curtain on?," # left or right
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the pink curtain on?"")
    curtain_patch = curtain_patches[0]
    if curtain_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6133740,Does the lid look blue?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the lid look blue?"")"
8120237,Do you see papers to the right of the mouse that is in front of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see papers to the right of the mouse that is in front of the desk?"")"
8232271,What is the item of furniture that is below the window?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is below the window?"")"
6716662,Are both the doors and the plates made of the same material?," # material is not a property of the object, so ask directly
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Are both the doors and the plates made of the same material?"")
    door_patch = door_patches[0]
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        return ""yes""
    plate_patch = plate_patches[0]
    return bool_to_yesno(door_patch.verify_property(""door"", ""material"") == plate_patch.verify_property(""plate"", ""material""))"
14946661,Are there any bowls or raspberries in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bowl"") or image_patch.exists(""raspberry"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
11181088,On which side is the dispenser?," # left or right
    image_patch = ImagePatch(image)
    dispenser_patches = image_patch.find(""dispenser"")
    # Question assumes only one dispenser patch
    if len(dispenser_patches) == 0:
        # If no dispenser is found, query the image directly
        return image_patch.simple_query(""On which side is the dispenser?"")
    return ""left"" if dispenser_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13383099,Are there green bicycles or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_green_bicycle = image_patch.exists(""green bicycle"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_green_bicycle or is_umbrella)"
8516214,Is there a blue surfboard in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blue surfboard"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
13228782,What is the bag to the right of the man in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag to the right of the man in the photograph?"")"
13415874,Which side of the photo are the women on?," # left or right
    image_patch = ImagePatch(image)
    women_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(women_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which side of the photo are the women on?"")
    if women_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5609188,On which side of the photo is the shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the shelf?"")
    shelf_patch = shelf_patches[0]
    if shelf_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6720880,What item of furniture does the man sit on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture does the man sit on top of?"")"
1608659,On which side of the image is the container?," # left or right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the container?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11529946,Is the helmet to the left or to the right of the glasses?," # helmet and glasses are assumed to be found
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one helmet and glasses patch
    helmet_patch = helmet_patches[0]
    glasses_patch = glasses_patches[0]
    if helmet_patch.horizontal_center < glasses_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19950255,Is the garland in the top or in the bottom of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garland in the top or in the bottom of the picture?"")"
3634279,What color is the towel?," # returns the color of the towel
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""What color is the towel?"")
    return towel_patches[0].simple_query(""What color is the towel?"") # crop would include the towel so keep it in the query"
14399608,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
1986830,Are there balls or mats in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_mat = image_patch.exists(""mat"")
    return bool_to_yesno(is_ball or is_mat)"
1567803,Is there a chair to the right of the cereal in the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a chair to the right of the cereal in the bowl?"")"
9460445,What kind of animal is to the right of the lady that is wearing gloves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the right of the lady that is wearing gloves?"")"
3183240,What kind of baked good is to the left of the meat that is to the left of the spoon?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is to the left of the meat that is to the left of the spoon?"")"
11011174,Is the woman holding a suitcase?," # suitcase is a type of bag
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman holding a suitcase?"")
    for woman_patch in woman_patches:
        is_holding_suitcase = (woman_patch.simple_query(""Is the woman holding a suitcase?"") == ""yes"")
        if is_holding_suitcase:
            return ""yes""
    return ""no"""
1726051,What color does the toy he is with have?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the toy he is with have?"")"
19232558,Is the pizza cutter in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pizza cutter in the top of the picture?"")"
347658,Which kind of toy is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of toy is it?"")"
16418948,Does the snowsuit have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""snowsuit"", ""white""))"
17938001,Are the animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the animals of different species?"")"
15699387,Which kind of animal is sitting at the window?," # contains a relation (sitting at the window), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is sitting at the window?"")"
1071785,On which side is the spatula?," # left or right
    image_patch = ImagePatch(image)
    spatula_patches = image_patch.find(""spatula"")
    # Question assumes only one spatula patch
    if len(spatula_patches) == 0:
        # If no spatula is found, query the image directly
        return image_patch.simple_query(""On which side is the spatula?"")
    spatula_patch = spatula_patches[0]
    horizontal_center = spatula_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13361870,What does the person that is sitting wear?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person that is sitting wear?"")"
4329795,What is the item of furniture that is to the right of the box on the ground called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is to the right of the box on the ground called?"")"
18706406,Are there napkins or helmets in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_napkin = image_patch.exists(""napkin"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_napkin or is_helmet)"
170919,Are there either any bags or hamburgers in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""hamburger"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
673687,What kind of vegetable is to the right of the bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the bread?"")"
14344827,Is there a monkey in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""monkey""))"
5998647,On which side of the image is the spoon?," # left or right
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the spoon?"")
    return ""right"" if spoon_patches[0].horizontal_center > image_patch.horizontal_center else ""left"""
896183,On which side of the picture is the white SUV?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the white SUV?"")"
772250,Is the grass brown or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass brown or green?"")"
3517556,Are there any pine trees to the left of the dog in the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any pine trees to the left of the dog in the car?"")"
12444037,What type of clothing is black?," # returns the type of clothing that is black
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What type of clothing is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What type of clothing is black?"")
    return clothing_patch.simple_query(""What type of clothing is black?"") # if no clothing is black, query the clothing directly"
3772169,Are there any white kittens or dogs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white kitten"") or image_patch.exists(""white dog"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5288020,Which side of the picture are the round vegetables on?," # round vegetables
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture are the round vegetables on?"")"
14129307,What is common to the shrubs and the pine trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the shrubs and the pine trees?"")"
14504495,Which kind of furniture is the cat lying in?," # contains a relation (lying in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the cat lying in?"")"
51029489,Do the animals have different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the animals have different types?"")"
848492,Do the people in this photograph have the same gender?," # gender is not a property of a person, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the people in this photograph have the same gender?"")) # gender is not a property of a person, so ask directly"
5467608,What do you think is the vehicle that drives down the black highway?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the vehicle that drives down the black highway?"")"
1330905,Where is the taxi?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the taxi?"")"
15367585,What place does this represent?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place does this represent?"")"
11755209,Where is that horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that horse?"")"
5102834,What is the man to the right of the person wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the person wearing?"")"
19280287,What is the snow resting on?," # contains a relation (resting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the snow resting on?"")"
13458636,What is on the shelf in the bottom?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf in the bottom?"")"
14495775,What color is the street sign?," # returns the color of the street sign
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the street sign?"")"
17423004,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
2133862,Which kind of animal is carrying the ball?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is carrying the ball?"")"
10661437,What device is the cat smelling?," # contains a relation (smelling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the cat smelling?"")"
15171081,On which side of the picture is the train engine?," # left or right
    image_patch = ImagePatch(image)
    train_engine_patches = image_patch.find(""train engine"")
    # Question assumes only one train engine patch
    if len(train_engine_patches) == 0:
        # If no train engine is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the train engine?"")
    train_engine_patch = train_engine_patches[0]
    horizontal_center = train_engine_patch.horizontal_center
    image_center = image_patch.horizontal_center
    if horizontal_center < image_center:
        return ""left""
    else:
        return ""right"""
246055,Are there any red buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red bus"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1981276,Are the animals of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.exists(""animals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
18328226,What is the piece of furniture to the left of the chair the cabinet is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the chair the cabinet is to the right of?"")"
3455246,"What is the thermometer inside of, a dishwasher or an oven?"," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the thermometer inside of, a dishwasher or an oven?"")"
8504731,What food is not thin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is not thin?"")"
11185275,Does the apple look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the apple look red?"")"
17169205,What kind of food is to the left of the juice?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the juice?"")"
12799200,Do you see any lettuce near the bone?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any lettuce near the bone?"")"
4252443,On which side of the picture is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3633455,Is there either a horse or a helmet in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse"") or image_patch.exists(""helmet""))"
941468,What is the device to the left of the people on the right side of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the people on the right side of the image?"")"
12292959,What is on the pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pole?"")"
1189000,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
18510320,What is the sidewalk in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sidewalk in front of?"")"
11837626,Does the giraffe near the trees look dark?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the giraffe near the trees look dark?"")"
18571929,Is there an onion to the left of the pizza pepperoni?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an onion to the left of the pizza pepperoni?"")"
572061,What do you think is the snow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the snow on?"")"
6256309,Is the beautiful horse to the left or to the right of the white trailer?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beautiful horse to the left or to the right of the white trailer?"")"
13423521,What cooking utensil is made of the same material as the wall?," # contains a relation (made of the same material as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is made of the same material as the wall?"")"
15689126,What is on the dog?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dog?"")"
15326159,Is the jacket black or yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the jacket black or yellow?"")"
12438809,The man to the right of the traffic cone is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the right of the traffic cone is wearing what?"")"
414912,Is the car in the top part or in the bottom?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the top part or in the bottom?"")"
21033161,What is on the folding chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the folding chair?"")"
912602,Do you see laptops to the right of the sheets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see laptops to the right of the sheets?"")"
91014253,"What kind of fast food is the wall behind of, a pizza or a hot dog?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is the wall behind of, a pizza or a hot dog?"")"
8514511,Is there an airplane in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
719017,Is there either any window or chair in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""window"") or image_patch.exists(""chair""))"
18391445,Are there any breads?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bread""))"
2859074,"In which part of the photo is the person, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the person, the bottom or the top?"")"
7529461,Does the bag that is to the left of the car look black or orange?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag that is to the left of the car look black or orange?"")"
17163225,Is the plate on a shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate on a shelf?"")"
15876400,Does the bowl have a different color than the cup?," # assumes only one bowl and one cup
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    cup_patches = image_patch.find(""cup"")
    if len(bowl_patches) == 0 or len(cup_patches) == 0:
        return ""no""
    bowl_patch = bowl_patches[0]
    cup_patch = cup_patches[0]
    return bool_to_yesno(bowl_patch.verify_property(""bowl"", ""color"") != cup_patch.verify_property(""cup"", ""color""))"
1840312,What is the man to the left of the racket wearing?," # contains a relation (to the left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the racket wearing?"")"
3301131,Is the speaker to the right or to the left of the woman?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the speaker to the right or to the left of the woman?"")"
4716533,The wires are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The wires are on what?"")"
1997427,Is there any oven or fridge in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""oven"") or image_patch.exists(""fridge""))"
12844336,Do you see both boats and flags in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_boat = image_patch.exists(""boat"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_boat and is_flag)"
5590852,Are there bags or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_bag or is_umbrella)"
8409661,"What shape is the fruit that looks yellow and dark, triangular or round?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What shape is the fruit that looks yellow and dark, triangular or round?"")"
4775787,What kind of food is cooked?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is cooked?"")"
15155103,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
6501338,What color is the sauce?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sauce?"")"
6259013,What device isn't on?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device isn't on?"")"
6207019,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
8663738,What type of food is the sauce on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is the sauce on?"")"
15341366,Do you see either any orange carrots or candies?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""orange carrot"") or image_patch.exists(""candy"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
10394153,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
8909318,What is that pizza in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that pizza in?"")"
3263261,Does the large pot have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""large pot"", ""white""))"
1654343,The surfboard the man is sitting on has what color?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The surfboard the man is sitting on has what color?"")"
16588935,On which side is the spoon?," # left or right
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one spoon patch
    if len(spoon_patches) == 0:
        # If no spoon is found, query the image directly
        return image_patch.simple_query(""On which side is the spoon?"")
    return ""right"""
16211402,Is the laptop computer behind a keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop computer behind a keyboard?"")"
539067,On which side of the picture is the tower?," # left or right
    image_patch = ImagePatch(image)
    tower_patches = image_patch.find(""tower"")
    # Question assumes only one tower patch
    if len(tower_patches) == 0:
        # If no tower is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the tower?"")
    tower_patch = tower_patches[0]
    if tower_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16243955,Is the letter the same color as the outfit?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the letter the same color as the outfit?"")"
1204436,Is the clock on the right of the image?," # contains a relation (on, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock on the right of the image?"")"
5862337,What color are the shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the shorts?"")"
4268723,What's the street sign hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the street sign hanging from?"")"
13110028,What's in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the building?"")"
17128119,Do you see a tomato in the sandwich to the right of the dishwasher?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a tomato in the sandwich to the right of the dishwasher?"")"
4183539,Is the umpire to the right or to the left of the standing person that swings a bat?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umpire to the right or to the left of the standing person that swings a bat?"")"
12367955,Which color does the skateboard the boy is riding on have?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the skateboard the boy is riding on have?"")"
11250337,Is the color of the bench brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the bench brown?"")"
18212132,Are the tissues on the table green or white?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the tissues on the table green or white?"")"
61051654,What device is to the left of the bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the bottle?"")"
7469797,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
51005779,Is there a closed window or door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a closed window or door?"")"
1626767,Is the plate to the left or to the right of the knife made of metal?," # contains a relation (left, right, etc) and a property (metal), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the left or to the right of the knife made of metal?"")"
19302313,What animal is in front of the cart near the bricks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the cart near the bricks?"")"
12418548,Does the man to the left of the bread seem to be standing?," # contains a relation (left of, standing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the bread seem to be standing?"")"
7909423,"In which part of the photo is the green corn, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the green corn, the bottom or the top?"")"
1790805,Is the man in the street wearing a hat?," # contains a relation (in the street), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the street wearing a hat?"")
    man_patch = man_patches[0]
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return ""no""
    for hat_patch in hat_patches:
        if hat_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
554364,What kind of vegetable is on top of the green vegetable?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is on top of the green vegetable?"")"
6703804,Is the large pot on the right or on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large pot on the right or on the left side of the picture?"")"
15883117,What is sitting under the coffee table?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting under the coffee table?"")"
19343777,What do both the shirt and the wall have in common?," # returns a string
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What do both the shirt and the wall have in common?"")
    shirt_patch = shirt_patches[0]
    wall_patches = image_patch.find(""wall"")
    # Question assumes only one wall patch
    if len(wall_patches) == 0:
        return image_patch.simple_query(""What do both the shirt and the wall have in common?"")
    wall_patch = wall_patches[0]
    common_properties = set(shirt_patch.verify_property(""shirt"", property) for property in [""red"", ""blue"", ""green"", ""yellow"", ""white"", ""black"", ""gray"", ""brown"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""])
    common_properties = common_properties.union(set(wall_patch.verify_property(""wall"", property) for property in [""red"", ""blue"", ""green"", ""yellow"", ""white"", ""black"", ""gray"", ""brown"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""]))
    return common_properties.pop()"
11372196,Which kind of baked good is to the left of the paper towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is to the left of the paper towel?"")"
8908679,Are there any orange fences or cones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_cone = image_patch.exists(""cone"")
    return bool_to_yesno(is_fence or is_cone)"
18759631,What is the food on the pizza to the left of the onions?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the pizza to the left of the onions?"")"
7678536,What kind of drink is to the left of the napkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of drink is to the left of the napkin?"")"
191009194,"What type of animal does she hug, a cow or a goat?"," # contains a relation (hug), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal does she hug, a cow or a goat?"")"
9549862,Is the fence to the left of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the left of a car?"")"
11920010,Are there bags or chairs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_bag or is_chair)"
5872295,What is on the round plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the round plate?"")"
19674761,What is this animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this animal called?"")"
3214728,Is the lamp on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Is the lamp on the left side?"")
    return bool_to_yesno(lamp_patches[0].horizontal_center < image_patch.horizontal_center)"
1369249,How long are the scissors?," # returns a string
    image_patch = ImagePatch(image)
    scissors_patches = image_patch.find(""scissors"")
    # Question assumes only one scissors patch
    if len(scissors_patches) == 0:
        # If no scissors are found, query the image directly
        return image_patch.simple_query(""How long are the scissors?"")
    return scissors_patches[0].simple_query(""How long are the scissors?"") # crop would include the scissors so keep it in the query"
13732144,Do you think the sand is wet?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the sand is wet?"")"
6835093,What is the appliance that the man is at?," # contains a relation (at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance that the man is at?"")"
11494716,What type of furniture is the TV on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the TV on?"")"
593571,Does the tail look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tail look red?"")"
14202878,What is the color of the shelf to the left of the mat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shelf to the left of the mat?"")"
6125639,Are there benches in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench""))"
11966562,What's the player wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the player wearing?"")"
51021255,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
19228185,"What vehicle is dark, the car or the train?"," # contains a relation (dark, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is dark, the car or the train?"")"
2208257,Is the frisbee red and large?," # returns yes or no
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""Is the frisbee red and large?"")
    return bool_to_yesno(frisbee_patches[0].verify_property(""frisbee"", ""red"") and frisbee_patches[0].verify_property(""frisbee"", ""large""))"
10333054,Does the window near the painting look large and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the window near the painting look large and white?"")"
168390,Is the cat to the left of a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat to the left of a laptop?"")"
18563814,What type of material is the floor made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the floor made of?"")"
16641244,What color is the sticker on the banana?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sticker on the banana?"")"
21070845,What sign is that grass behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sign is that grass behind of?"")"
4779177,Does the person to the left of the bus appear to be standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person to the left of the bus appear to be standing?"")"
7829343,Is the pipe silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pipe silver?"")"
6298865,The horses that are eating have which color?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The horses that are eating have which color?"")"
4785658,"What color is the can, silver or tan?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the can, silver or tan?"")"
181065778,Is the shirt white or blue?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt white or blue?"")"
17440379,Do you see fences there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
16324844,Who is hitting the ball in the air?," # contains a relation (hitting the ball in the air), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is hitting the ball in the air?"")"
15781053,On which side of the photo is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4288853,Is there any cheese in this photo that is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cheese in this photo that is orange?"")"
12775014,Are the shoe and the helmet the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one shoe and helmet patch
    if len(shoe_patches) == 0 or len(helmet_patches) == 0:
        # If no shoe or helmet is found, query the image directly
        return image_patch.simple_query(""Are the shoe and the helmet the same color?"")
    shoe_patch = shoe_patches[0]
    helmet_patch = helmet_patches[0]
    return bool_to_yesno(shoe_patch.verify_property(""shoe"", ""color"") == helmet_patch.verify_property(""helmet"", ""color""))"
6931148,What is the vehicle behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle behind the fence?"")"
3841297,What sign is on the bridge?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sign is on the bridge?"")"
15939172,What device is to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the cabinet?"")"
16559319,Is the yellow food on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow food on the left or on the right?"")"
16306632,Is the mask blue or brown?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mask blue or brown?"")"
11676522,Are there any airplanes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
14747374,Are there both broccoli and rice in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_broccoli = image_patch.exists(""broccoli"")
    is_rice = image_patch.exists(""rice"")
    return bool_to_yesno(is_broccoli and is_rice)"
18501449,Are the bananas in the top part of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bananas in the top part of the picture?"")"
16458232,Who is holding the baseball bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the baseball bat?"")"
12302097,Are there clocks near the lamp?," # near is a relation, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there clocks near the lamp?"")"
13180337,What type of vehicle is to the left of the red backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is to the left of the red backpack?"")"
12485636,What kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the plate?"")"
17945882,What is the food that the spinach is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the spinach is in?"")"
12102290,What is the color of the dresser?," # returns the color of the dresser
    image_patch = ImagePatch(image)
    dresser_patches = image_patch.find(""dresser"")
    # Question assumes only one dresser patch
    if len(dresser_patches) == 0:
        # If no dresser is found, query the image directly
        return image_patch.simple_query(""What is the color of the dresser?"")
    return dresser_patches[0].simple_query(""What is the color of the dresser?"") # crop would include the dresser so keep it in the query"
8171405,What color is the bus that is on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bus that is on the left side of the picture?"")"
1257675,Is the man to the right of the lady that is wearing earphones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the lady that is wearing earphones?"")"
12634213,Which kind of animal is small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is small?"")"
5634779,What's the pine tree covered by?," # contains a relation (covered by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the pine tree covered by?"")"
15148648,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
4573926,Are there either any cups or knives in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cup"") or image_patch.exists(""knife""))"
13651369,What kind of meat is to the right of the bacon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of meat is to the right of the bacon?"")"
9143422,What is in the train car?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the train car?"")"
13483634,Are there green balloons or kites?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_green_balloon = image_patch.exists(""green balloon"")
    is_kite = image_patch.exists(""kite"")
    return bool_to_yesno(is_green_balloon or is_kite)"
6291673,How long is the wood bench?," # returns a string
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""How long is the wood bench?"")
    return bench_patches[0].simple_query(""How long is the wood bench?"") # crop would include the wood so keep it in the query"
131742,Does the road car look red?," # road car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Does the road car look red?"")
    return bool_to_yesno(car_patches[0].verify_property(""car"", ""red""))"
8511435,Is the soda can to the left of the device in the bottom of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soda can to the left of the device in the bottom of the photo?"")"
4886108,Which color is the hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the hair?"")"
4920143,Is the pasta in the bottom part or in the top?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pasta in the bottom part or in the top?"")"
1258684,Are there cars to the right of the vehicle on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there cars to the right of the vehicle on the right side?"")"
716354,Who wears the belt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the belt?"")"
12896898,Is there a chair in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
7545524,Which kind of vegetable is on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on top of the pizza?"")"
6957060,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
1141531,What are the animals on the path?," # contains a relation (on the path), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals on the path?"")"
131007835,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
9149476,What is the cat doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat doing?"")"
19861968,What is that teddy bear on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that teddy bear on?"")"
4178875,Is the man to the right or to the left of the person that is standing?," # assumes only one man and one person standing
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    person_patches = image_patch.find(""person standing"")
    if len(man_patches) == 0 or len(person_patches) == 0:
        return image_patch.simple_query(""Is the man to the right or to the left of the person that is standing?"")
    man_patch = man_patches[0]
    person_patch = person_patches[0]
    if man_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
6734838,Are there any men to the left of the drinks that are on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the drinks that are on the right side?"")"
15239472,Is this car large or small?," # contains a relation (large, small, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this car large or small?"")"
2476417,What piece of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of clothing is white?"")"
14761269,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15750885,What type of toy is to the left of the shelf on the right of the photo?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of toy is to the left of the shelf on the right of the photo?"")"
4518460,On which side of the image is the mirror?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the mirror?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
41018025,Is this a black dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a black dog?"")"
2493593,Do you see any airplanes or trucks in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane"") or image_patch.exists(""truck""))"
18933061,Is the window open or closed?," # contains a relation (open, closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window open or closed?"")"
5194007,Is the color of the couch the same as the bag?," # returns yes or no
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""Is the color of the couch the same as the bag?"")
    for couch_patch in couch_patches:
        bag_patches = image_patch.find(""bag"")
        # Question assumes only one bag patch
        if len(bag_patches) == 0:
            return ""no""
        for bag_patch in bag_patches:
            if couch_patch.verify_property(""couch"", ""color"") == bag_patch.verify_property(""bag"", ""color""):
                return ""yes""
    return ""no"""
9250852,Which color is the tie?," # returns the color of the tie
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        # If no tie is found, query the image directly
        return image_patch.simple_query(""Which color is the tie?"")
    return tie_patches[0].simple_query(""Which color is the tie?"") # crop would include the tie so keep it in the query"
19395879,Are the leaves behind the cart brown and large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the leaves behind the cart brown and large?"")"
4719196,Who is holding the surfboard?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the surfboard?"")"
1167066,Is the store green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the store green?"")"
14807772,Which color is the bag?," # returns the color of the bag
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Which color is the bag?"")
    return bag_patches[0].simple_query(""Which color is the bag?"")"
7375532,Are there any bottles or breads?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_bread = image_patch.exists(""bread"")
    return bool_to_yesno(is_bottle or is_bread)"
1968427,Is that dog on a bike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that dog on a bike?"")"
15951285,Is the chair to the right of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right of a car?"")"
19932029,How large is the red pencil?," # returns a string
    image_patch = ImagePatch(image)
    red_patches = image_patch.find(""red"")
    # Question assumes only one red patch
    if len(red_patches) == 0:
        # If no red is found, query the image directly
        return image_patch.simple_query(""How large is the red pencil?"")
    for red_patch in red_patches:
        pencil_patches = image_patch.find(""pencil"")
        for pencil_patch in pencil_patches:
            if red_patch.horizontal_center > pencil_patch.horizontal_center:
                return red_patch.simple_query(""How large is the red pencil?"")
    return ""no"""
11706960,Who is wearing a backpack?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a backpack?"")"
13352963,Are the children in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the children in the top of the photo?"") == ""yes"")"
12125635,Are there soft drinks to the left of the woman?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""soft drink"") and image_patch.find(""woman"")[0].horizontal_center > image_patch.horizontal_center)"
1048463,Who is standing on the pipe in the picture?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing on the pipe in the picture?"")"
1525109,What are the guys doing?," # assumes only one guy
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""What are the guys doing?"")
    return guy_patches[0].simple_query(""What are the guys doing?"")"
6645732,Which kind of furniture is on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is on the floor?"")"
3839634,Is the sky white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky white?"")"
9380585,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
14872038,Are the shelves full?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shelves full?"")"
14585939,What device is on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the desk?"")"
14875445,Is there a clock near the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a clock near the pillow?"")"
10974924,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
15413718,Does the ladder appear to be silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ladder"", ""silver""))"
11677022,Which kind of clothing is edged?," # assumes only one clothing patch
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is edged?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.simple_query(""Which kind of clothing is edged?"")"
5428867,Do the suitcase and the head band have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    suitcase_patches = image_patch.find(""suitcase"")
    head_band_patches = image_patch.find(""head band"")
    # Question assumes only one suitcase and one head band patch
    if len(suitcase_patches) == 0 or len(head_band_patches) == 0:
        # If no suitcase or head band is found, query the image directly
        return image_patch.simple_query(""Do the suitcase and the head band have the same color?"")
    suitcase_patch = suitcase_patches[0]
    head_band_patch = head_band_patches[0]
    return bool_to_yesno(suitcase_patch.verify_property(""suitcase"", ""blue"") == head_band_patch.verify_property(""head band"", ""blue""))"
6674086,Are there both a truck and a taxi in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_taxi = image_patch.exists(""taxi"")
    return bool_to_yesno(is_truck and is_taxi)"
13402342,How big is the vehicle the people are riding?," # returns the size of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""How big is the vehicle the people are riding?"")
    return vehicle_patches[0].simple_query(""How big is the vehicle the people are riding?"") # crop would include the people so keep it in the query"
19481557,Are there any palm trees on the beach?," # contains a relation (on the beach), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""palm tree""))"
18506994,Is the guy to the left or to the right of the woman that wears a dress?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the left or to the right of the woman that wears a dress?"")"
9871395,What is under the seat?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the seat?"")"
7727710,Who wears the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the shirt?"")"
16619525,Is the bicycle on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle on the left side?"")"
1260376,On which side of the image is the old man?," # left or right
    image_patch = ImagePatch(image)
    old_man_patches = image_patch.find(""old man"")
    # Question assumes only one old man patch
    if len(old_man_patches) == 0:
        # If no old man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the old man?"")
    old_man_patch = old_man_patches[0]
    if old_man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16246608,Who is wearing goggles?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing goggles?"")"
5446245,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
5971254,Is the yellow cheese on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow cheese on the right or on the left?"")"
12531928,What color is the shirt the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man is wearing?"")"
6440995,Is this a bed or a table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a table?"")"
10876802,What is the girl to the left of the man wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl to the left of the man wearing?"")"
2893409,Who is using the umbrellas?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is using the umbrellas?"")"
411542,Are there deer or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""deer"") or image_patch.exists(""zebra""))"
6780996,Are there any people to the right of the cone that is in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the right of the cone that is in the top of the image?"")"
1465247,What kind of vegetable is to the left of the zucchini?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the left of the zucchini?"")"
3805450,What is the device to the right of the device that is not unlit?," # contains a relation (right of, not unlit), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the device that is not unlit?"")"
635076,Does the chair look blue or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the chair look blue or brown?"")"
11564723,"What is he holding, a spatula or a whisk?"," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he holding, a spatula or a whisk?"")"
5605002,What is the car covered with?," # assumes only one car patch
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What is the car covered with?"")
    return car_patches[0].simple_query(""What is the car covered with?"") # crop would include the covering so keep it in the query"
15328007,Which color does the toothbrush have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the toothbrush have?"")"
8814301,What vegetables are to the right of the pot that is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are to the right of the pot that is to the right of the chair?"")"
12388192,Does the pine tree that is not big look tall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pine tree that is not big look tall?"")"
14309121,Are these donkeys or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these donkeys or zebras?"")"
12489,What's the guy wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the guy wearing?"")"
10475088,Is the tank top black or pink?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tank top black or pink?"")"
18173247,Does the person on the bench sit with a baby?," # contains a relation (on, with, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person on the bench sit with a baby?"")"
17758552,Are the white flowers on the brick walls?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white flowers on the brick walls?"")"
14739066,Is the small child to the right or to the left of the woman on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small child to the right or to the left of the woman on the left?"")"
9521934,What is the animal on the field near the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on the field near the trees?"")"
3294536,What color do you think the shoe of the lady is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the shoe of the lady is?"")"
13696009,Is the chair to the left or to the right of the man that is to the left of the woman?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the left or to the right of the man that is to the left of the woman?"")"
14111185,What is the vegetable on the cheese the pizza is to the left of?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable on the cheese the pizza is to the left of?"")"
3344783,On which side of the picture is the can?," # left or right
    image_patch = ImagePatch(image)
    can_patches = image_patch.find(""can"")
    # Question assumes only one can patch
    if len(can_patches) == 0:
        # If no can is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the can?"")
    return ""left"" if can_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
12286336,What is the vehicle that the tree is behind of called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that the tree is behind of called?"")"
5107438,Are there any lamps on the pole?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamp on the pole"")) # crop would include the pole so keep it in the query"
17882808,What is the item of furniture to the right of the shelf that is to the right of the pumpkin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the shelf that is to the right of the pumpkin?"")"
6139986,What animals are standing next to the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are standing next to the tree?"")"
4943043,What is the vegetable called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable called?"")"
21069420,The dish is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The dish is on what?"")"
15144900,What do both the pole and the canopy have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the pole and the canopy have in common?"")"
9624171,What animal is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the bench?"")"
8721054,What is common to the container and the shoe?," # container and shoe are assumed to be found in the image
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one container and one shoe patch
    if len(container_patches) == 0 or len(shoe_patches) == 0:
        # If no container or shoe is found, query the image directly
        return image_patch.simple_query(""What is common to the container and the shoe?"")
    container_patch = container_patches[0]
    shoe_patch = shoe_patches[0]
    common_properties = container_patch.verify_property(""container"", ""has a handle"") and shoe_patch.verify_property(""shoe"", ""has a strap"")
    return ""handle"" if common_properties else ""strap"""
6327714,Where is this child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this child?"")"
161056658,Are there either any glasses or fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""glasses"") or image_patch.exists(""fence""))"
1027889,Is there a wooden door or chair in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wooden_door = image_patch.exists(""wooden door"")
    is_wooden_chair = image_patch.exists(""wooden chair"")
    return bool_to_yesno(is_wooden_door or is_wooden_chair)"
11237322,"Which material makes up the road that is dark, concrete or cobblestone?"," # contains a relation (dark, concrete or cobblestone), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material makes up the road that is dark, concrete or cobblestone?"")"
6248205,Are the people to the right or to the left of the train engine that looks red and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people to the right or to the left of the train engine that looks red and white?"")"
256027,What is the vehicle to the left of the person in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the left of the person in the bottom of the image?"")"
3601843,Is there a plate to the left of the wine bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate to the left of the wine bottle?"")"
4139841,Are there people to the left of the bench that is on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""people"") and image_patch.exists(""bench"") and image_patch.find(""bench"")[0].horizontal_center > image_patch.horizontal_center)"
101010049,Which color is the jacket the person is wearing?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Which color is the jacket the person is wearing?"")
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        return image_patch.simple_query(""Which color is the jacket the person is wearing?"")
    jacket_patch = jacket_patches[0]
    return jacket_patch.simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query"
11033904,Which color does the car that is to the right of the other car have?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the car that is to the right of the other car have?"")"
16614572,Is the picture showing the zoo or the garden?," # contains a relation (in, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture showing the zoo or the garden?"")"
13924225,What is the color of the lid on the container?," # container is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the lid on the container?"")"
5923354,Are there nests or bandages?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_nest = image_patch.exists(""nest"")
    is_bandage = image_patch.exists(""bandage"")
    return bool_to_yesno(is_nest or is_bandage)"
555365,What is that boy playing with?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that boy playing with?"")"
8305097,Are there either ripe bananas or strawberries?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ripe_banana = image_patch.exists(""ripe banana"")
    is_strawberry = image_patch.exists(""strawberry"")
    return bool_to_yesno(is_ripe_banana or is_strawberry)"
1964685,Which kind of furniture is to the right of the pot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the pot?"")"
3703867,Is the pillow to the right or to the left of the mirror that is hanging on the wall?," # mirror hanging on the wall
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the right or to the left of the mirror that is hanging on the wall?"")
    pillow_patch = pillow_patches[0]
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is the pillow to the right or to the left of the mirror that is hanging on the wall?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > pillow_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5918132,On which side of the photo is the modern painting?," # assumes only one modern painting
    image_patch = ImagePatch(image)
    modern_painting_patches = image_patch.find(""modern painting"")
    if len(modern_painting_patches) == 0:
        return image_patch.simple_query(""On which side of the photo is the modern painting?"")
    modern_painting_patch = modern_painting_patches[0]
    if modern_painting_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19183350,Is there any brown grass or mud?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown grass"") or image_patch.exists(""mud""))"
13274450,Do you see any balls or rackets?," # tennis
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_ball or is_racket)"
171015857,What is the animal on the brown dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on the brown dirt?"")"
11160612,Does the player look brunette?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the player look brunette?""))"
16328721,What vegetable is on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on the pizza?"")"
2280846,What is in front of the toilet that looks tan?," # contains a relation (in front of) and a property (tan), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the toilet that looks tan?"")"
16820782,Is the motorbike to the right or to the left of the person that is wearing a necklace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the motorbike to the right or to the left of the person that is wearing a necklace?"")"
9114909,Which kind of furniture is to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the television?"")"
15709588,Do you see any forks or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork"") or image_patch.exists(""cup""))"
9873836,What is the watercraft in the calm water?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the watercraft in the calm water?"")"
5746204,Do the wire and the SUV have the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the wire and the SUV have the same color?"")"
11691597,What is the item of furniture on the white wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture on the white wall?"")"
859647,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
17652462,Who is chasing the soccer ball?," # contains a relation (chasing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is chasing the soccer ball?"")"
19462566,On which side of the picture is the tent?," # left or right
    image_patch = ImagePatch(image)
    tent_patches = image_patch.find(""tent"")
    # Question assumes only one tent patch
    if len(tent_patches) == 0:
        # If no tent is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the tent?"")
    if tent_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1579891,What is covered by the water?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the water?"")"
10428044,What appliance is to the right of the chair at the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the chair at the table?"")"
16644860,The field is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The field is in front of what?"")"
8644402,What piece of furniture is the glass on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is the glass on?"")"
14538443,Are there fruits to the left of the notebook on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there fruits to the left of the notebook on the table?"")"
1222805,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
3459440,Do you see any food on the gravy?," # gravy is a liquid so it's not possible to see food on it
    image_patch = ImagePatch(image)
    return ""no"""
8117600,Is the color of the cap different than the shirt?," # returns yes or no
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch.simple_query(""Is the color of the cap different than the shirt?"")
    cap_color = cap_patches[0].simple_query(""What is the color of the cap?"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the cap different than the shirt?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    return bool_to_yesno(cap_color != shirt_color)"
13152953,Are there stoves near the person on the right?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there stoves near the person on the right?"")"
9632782,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
8355510,Is the person on the right or on the left of the image?," # left or right of the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person on the right or on the left of the image?"")
    if person_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
17517307,What color is the sky above the hill?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky above the hill?"")"
1085997,Is the floor white or brown?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the floor white or brown?"")"
8248112,Do you see cones to the left of the man that is walking down the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cones to the left of the man that is walking down the road?"")"
5193303,"On which side of the picture is the shelf, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the shelf, the left or the right?"")"
8155590,On which side is the young girl?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""young girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""On which side is the young girl?"")
    return ""left"" if girl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1588977,Which side is the white vehicle on?," # left or right
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which side is the white vehicle on?"")
    vehicle_patch = vehicle_patches[0]
    if vehicle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2477667,What's the mother skiing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the mother skiing on?"")"
16466354,Are there palm trees to the right of the green traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there palm trees to the right of the green traffic light?"")"
10603953,What is the name of this animal?," # returns the name of the animal
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of this animal?"")"
891657,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1936809,Are these kittens or dogs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these kittens or dogs?"")"
5680285,Is there a bed or a chair in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bed = image_patch.exists(""bed"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_bed or is_chair)"
7632703,What is the name of the vegetable that is to the right of the appliance the vegetable is inside of?," # contains a relation (inside of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable that is to the right of the appliance the vegetable is inside of?"")"
14325106,What is the weather like?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the weather like?"")"
17300578,What color is the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What color is the hat?"")
    return hat_patches[0].simple_query(""What color is the hat?"")"
151012336,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
4298774,Are there both plates and oranges in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_orange = image_patch.exists(""orange"")
    return bool_to_yesno(is_plate and is_orange)"
6345040,Is the wood table to the left or to the right of the bedspread that looks brown and tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood table to the left or to the right of the bedspread that looks brown and tan?"")"
16732838,Which color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the sky?"")"
6872590,Are the animals of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.exists(""animals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
18585205,What kind of vehicle is on the parking lot?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is on the parking lot?"")"
1296014,Is the white refrigerator to the left of the man that is wearing a jacket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white refrigerator to the left of the man that is wearing a jacket?"")"
14511222,Does the blueberry to the right of the orange have small size and round shape?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the blueberry to the right of the orange have small size and round shape?"")"
16196040,"What type of furniture is not orange, the couch or the bed?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is not orange, the couch or the bed?"")"
141031022,Is the fridge made of steel open and full?," # contains a relation (open, full, made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fridge made of steel open and full?"")"
65320,Are both the container and the bench made of the same material?," # assumes only one container and one bench
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    bench_patches = image_patch.find(""bench"")
    if len(container_patches) == 0 or len(bench_patches) == 0:
        return ""no""
    container_patch = container_patches[0]
    bench_patch = bench_patches[0]
    return bool_to_yesno(container_patch.verify_property(""container"", ""material"") == bench_patch.verify_property(""bench"", ""material""))"
14805408,Are there either zebras or kittens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_zebra = image_patch.exists(""zebra"")
    is_kitten = image_patch.exists(""kitten"")
    return bool_to_yesno(is_zebra or is_kitten)"
18393408,Do the trees on the road look snowy?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the trees on the road look snowy?"")"
1123242,What is she wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she wearing?"")"
13843620,On which side of the photo is the lamp?," # left or right
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the lamp?"")
    return ""left"" if lamp_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
6541669,What food is to the right of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the right of the bowl?"")"
145215,What is the man to the left of the girl holding?," # holding is a relational verb
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is the man to the left of the girl holding?"")"
1477290,Is the white umbrella on the right side of the picture?," # contains a relation (right, left, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white umbrella on the right side of the picture?"")"
11582448,Is the sky clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky clear?"")"
14268013,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19135826,Is the ground wet or dry?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground wet or dry?"")"
4555356,Is the dog to the left or to the right of the man that is on the surfboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog to the left or to the right of the man that is on the surfboard?"")"
9151574,Are there men to the right of the suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""suitcase"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
171049823,What is in the wine glass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the wine glass?"")"
9130001,Who wears the glasses?," # glasses are on the head
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the glasses?"")"
17248489,Which kind of fast food are the spices on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food are the spices on?"")"
4531287,Are the green papers on the right of the image?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the green papers on the right of the image?"") == ""yes"")"
127596,Does the hat look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the hat look red?"")"
16169922,What is on the table to the right of the freezer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table to the right of the freezer?"")"
15367854,What is the brown horse jumping over?," # contains a relation (jumping over), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown horse jumping over?"")"
131014928,Is the umbrella different in color than the sky?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella different in color than the sky?"")"
4490642,Are the rocks behind a bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the rocks behind a bear?"")"
6787588,Is the purple backpack to the right or to the left of the person that is wearing a coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the purple backpack to the right or to the left of the person that is wearing a coat?"")"
557562,What type of meat in this image is grilled?," # contains a relation (grilled), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of meat in this image is grilled?"")"
7446025,Are there both a window and a door in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
13990638,Are there any forks on the bike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork on bike"")) # crop would include the bike so keep it in the query"
3859496,How large is the adult sheep?," # returns a string
    image_patch = ImagePatch(image)
    sheep_patches = image_patch.find(""adult sheep"")
    # Question assumes only one sheep patch
    if len(sheep_patches) == 0:
        # If no sheep is found, query the image directly
        return image_patch.simple_query(""How large is the adult sheep?"")
    return sheep_patches[0].simple_query(""How large is the adult sheep?"") # crop would include the sheep so keep it in the query"
186506,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
167685,Are there wallets or rackets in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wallet = image_patch.exists(""wallet"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_wallet or is_racket)"
17857881,"Which material was used to make the bowl to the left of the pineapple, tin or paper?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material was used to make the bowl to the left of the pineapple, tin or paper?"")"
6372871,What vegetable is the bear eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is the bear eating?"")"
2256789,What is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman holding?"")"
19337683,Who is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bench?"")"
121029109,Is there a boat in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat in the water?"")"
742022,Is there any surfboard on top of the water near the tree?," # contains a relation (on top of, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any surfboard on top of the water near the tree?"")"
14690073,Is there a bus in front of the building that looks green?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bus in front of the building that looks green?"")"
15228057,Is the woman to the right of the bag wearing jeans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the bag wearing jeans?"")"
41028800,What is in front of the zebra that looks black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the zebra that looks black?"")"
1645892,Does the chair to the right of the people look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Does the chair to the right of the people look green?"")
    for chair_patch in chair_patches:
        people_patches = image_patch.find(""people"")
        for people_patch in people_patches:
            if people_patch.horizontal_center < chair_patch.horizontal_center:
                return bool_to_yesno(chair_patch.verify_property(""chair"", ""green""))
    return ""no"""
8610216,What is on the black wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the black wall?"")"
1118028,Where is the airplane?," # airplane is a vehicle
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Where is the airplane?"")
    return airplane_patches[0].simple_query(""Where is the airplane?"") # crop would include the airplane so keep it in the query"
13656652,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
5633780,Are there either pink tennis balls or skateboards?," # tennis balls are pink
    image_patch = ImagePatch(image)
    is_tennis_ball = image_patch.exists(""tennis ball"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_tennis_ball or is_skateboard)"
10482911,Is there an umbrella to the right of the truck that is parked alongside the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an umbrella to the right of the truck that is parked alongside the road?"")"
2782374,Does the train that is to the left of the other train look green?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the train that is to the left of the other train look green?"")"
6619931,Is there a boat on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat on the sand?"")"
6325327,Do you see planes in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plane""))"
752656,What is the weather like?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the weather like?"")"
1144253,Do you see any cabinets in the kitchen that looks empty?," # kitchen is not a property of a cabinet
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""Do you see any cabinets in the kitchen that looks empty?"")
    for cabinet_patch in cabinet_patches:
        is_empty = (cabinet_patch.simple_query(""Is the cabinet empty?"") == ""yes"")
        return bool_to_yesno(is_empty)"
13215516,Do the wall and the poster have the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the wall and the poster have the same color?"")"
10558023,Does the fence look brown or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fence look brown or white?"")"
17203805,Is there either a lamp or a cabinet in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamp"") or image_patch.exists(""cabinet""))"
1755576,Is the truck on the right side or on the left of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck on the right side or on the left of the photo?"")"
5973545,Which side of the photo is the black camera on?," # left or right
    image_patch = ImagePatch(image)
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one camera patch
    if len(camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the black camera on?"")
    camera_patch = camera_patches[0]
    if camera_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7625516,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
1892098,Is the backpack to the right of a man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack to the right of a man?"")"
3494399,Are there both a mug and a plate in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mug = image_patch.exists(""mug"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_mug and is_plate)"
7623824,What hangs on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs on the wall?"")"
10956604,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
18186522,Is there a mirror or a fence in this photo?," # mirror or fence
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_mirror or is_fence)"
171046028,What kind of furniture is to the left of the food?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the food?"")"
7206322,Is there a bus on the road that is full of cars?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bus on the road that is full of cars?"")"
111037141,Are there any air conditioners or blenders?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_air_conditioner = image_patch.exists(""air conditioner"")
    is_blender = image_patch.exists(""blender"")
    return bool_to_yesno(is_air_conditioner or is_blender)"
11600421,On which side is the house?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the house?"")"
161058,Do the socks and the shorts have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the socks and the shorts have a different colors?"")) # crop would include the socks and shorts so keep them in the query"
5952227,What is the piece of furniture that the table is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the table is behind of?"")"
668964,What appliance is to the right of the coffee maker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the coffee maker?"")"
639135,What do you think is the color of the girl's hair?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the color of the girl's hair?"")"
1441167,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
4855423,On which side of the photo is the can?," # left or right
    image_patch = ImagePatch(image)
    can_patches = image_patch.find(""can"")
    # Question assumes only one can patch
    if len(can_patches) == 0:
        # If no can is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the can?"")
    return ""left"" if can_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13949119,What is the clothing item that is purple?," # returns the clothing item that is purple
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the clothing item that is purple?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""purple""):
            return clothing_patch.simple_query(""What is the clothing item that is purple?"")
    return clothing_patches[0].simple_query(""What is the clothing item that is purple?"")"
7799668,What is the piece of furniture to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the cabinet?"")"
13600621,Do you see drawers to the left of the dishwasher in the bottom of the image?," # contains a relation (left of, bottom of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see drawers to the left of the dishwasher in the bottom of the image?"")"
18153099,Is there any carrot to the right of the food that is to the right of the banana?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any carrot to the right of the food that is to the right of the banana?"")"
1143741,Is there either any dirty grass or snow?," # dirty grass or snow
    image_patch = ImagePatch(image)
    is_dirty_grass = image_patch.exists(""dirty grass"")
    is_snow = image_patch.exists(""snow"")
    return bool_to_yesno(is_dirty_grass or is_snow)"
61032691,What is the person that is to the left of the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the man wearing?"")"
1260400,Do you see any coffee next to the French fries that are shown in the picture?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any coffee next to the French fries that are shown in the picture?"")"
9859994,What's located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the table?"")"
175863,Which kind of cooking utensil is round?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of cooking utensil is round?"")"
12284241,Is the blue backpack to the right of a person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue backpack to the right of a person?"")"
19459030,What does the gray animal watch?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the gray animal watch?"")"
5690346,What is the animal that is on the fence that is not dirty?," # dirty is a property of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the animal that is on the fence that is not dirty?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""dirty""):
            continue
        if animal_patch.verify_property(""animal"", ""on_fence""):
            return animal_patch.simple_query(""What is the animal that is on the fence that is not dirty?"")
    # If no animal is on the fence and not dirty, query the image directly
    return image_patch.simple_query(""What is the animal that is on the fence that is not dirty?"")"
1166735,Is the skateboard below the white shoes?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skateboard below the white shoes?"")"
3216262,Do you see either small doors or windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""small door"") or image_patch.exists(""window"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
824033,Is the statue on the clock made of marble or stone?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue on the clock made of marble or stone?"")"
13647661,What is the food that the person that is not sad eats called?," # contains a relation (eating, not eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the person that is not sad eats called?"")"
19582722,Is the man to the right or to the left of the woman that is wearing an apron?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the woman that is wearing an apron?"")"
17519353,Does the tortilla on the plate look small?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tortilla on the plate look small?"")"
5623205,Is the vehicle near the platform long and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle near the platform long and white?"")"
3741526,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
884485,Which color is the shirt the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt the woman is wearing?"")"
1356401,Is the white plate to the right of a pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white plate to the right of a pizza?"")"
1754100,What is the food behind the pasta that the spoon is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food behind the pasta that the spoon is to the right of?"")"
11730926,Which kind of appliance is to the right of the shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is to the right of the shelf?"")"
9263280,Do you see clocks in the picture that are not gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see clocks in the picture that are not gold?"")"
8466913,Is the ground dry or wet?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground dry or wet?"")"
3636868,"On which side is the chair, the right or the left?"," # assumes one chair patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair, the right or the left?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
10602688,Is the green shirt short sleeved or long sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green shirt short sleeved or long sleeved?"")"
7474523,Is the person to the right of the woman eating a pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the woman eating a pizza?"")"
7759045,What color is the hair that looks long?," # contains a relation (long), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hair that looks long?"")"
12648094,What is in front of the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the water?"")"
13544883,Is there a giraffe to the left of the fence that is made of wood?," # contains a relation (left of, made of) so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a giraffe to the left of the fence that is made of wood?"")"
9549517,Are there white desks or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_desk = image_patch.exists(""white desk"")
    is_white_chair = image_patch.exists(""white chair"")
    return bool_to_yesno(is_white_desk or is_white_chair)"
8439345,Are there any peppers to the right of the squash on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any peppers to the right of the squash on the table?"")"
14532010,What is the animal that is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is wearing shorts?"")"
12309723,What is the frame around of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the frame around of?"")"
19813140,"What is this, a mug or a cup?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a mug or a cup?"")"
11870508,The box is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The box is holding what?"")"
12408463,Is the hair both blond and short?," # contains a relation (and, or, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair both blond and short?"")"
1969282,"Where in this picture is the vase, in the top or in the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this picture is the vase, in the top or in the bottom?"")"
44839,Is the color of the container different than the rug?," # container and rug
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Is the color of the container different than the rug?"")
    container_color = container_patches[0].simple_query(""What is the color of the container?"")
    rug_patches = image_patch.find(""rug"")
    # Question assumes only one rug patch
    if len(rug_patches) == 0:
        # If no rug is found, query the image directly
        return image_patch.simple_query(""Is the color of the container different than the rug?"")
    rug_color = rug_patches[0].simple_query(""What is the color of the rug?"")
    return bool_to_yesno(container_color != rug_color)"
11807715,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1646774,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
19523683,What vehicle is to the left of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the people?"")"
6627982,Is the leather bag on the right or on the left of the photo?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the leather bag on the right or on the left of the photo?"")"
9374810,Is the color of the dog different than that of the TV stand?," # contains a relation (different than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the dog different than that of the TV stand?"")"
5992579,Does the person to the right of the man seem to be sitting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person to the right of the man seem to be sitting?"")"
17864650,What is this device called?," # returns the name of the device
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this device called?"")"
17440269,What animal is on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the grass?"")"
15662217,Are there both buses and fences in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_bus and is_fence)"
5464998,Is this a bus or a train?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bus or a train?"")"
18746272,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
15713199,Is there a woman or a child in this image?," # contains a relation (woman or child), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman or a child in this image?"")"
534974,Which kind of furniture is to the left of the stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the stove?"")"
4576141,Is the can open or closed?," # contains a relation (open or closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the can open or closed?"")"
14985052,Is the grass green or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass green or brown?"")"
8324109,What is the animal that is looking through the window?," # contains a relation (looking through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is looking through the window?"")"
14219105,What device is to the right of the sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the sofa?"")"
12884436,What is the river surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the river surrounded by?"")"
18129416,Do you see any salad in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""salad""))"
17766568,Is there a tie that is not made of silk?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        # If no tie is found, query the image directly
        return image_patch.simple_query(""Is there a tie that is not made of silk?"")
    for tie_patch in tie_patches:
        is_silk = tie_patch.simple_query(""Is the tie made of silk?"") == ""yes""
        if not is_silk:
            return ""yes""
    return ""no"""
8383542,Who is sitting on the couch?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the couch?"")"
15974433,Are there either folding chairs or desk lamps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_folding_chair = image_patch.exists(""folding chair"")
    is_desk_lamp = image_patch.exists(""desk lamp"")
    return bool_to_yesno(is_folding_chair or is_desk_lamp)"
4980721,Is the fridge on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fridge on the right or on the left?"")"
1882570,What is the vehicle to the right of the vehicle that is on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the vehicle that is on the left?"")"
14856573,Which side is the woman on?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which side is the woman on?"")
    return ""left"" if woman_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3205326,Are there batters or women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_batter = image_patch.exists(""batter"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_batter or is_woman)"
1555191,Is there either a black skateboard or bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_skateboard = image_patch.exists(""black skateboard"")
    is_black_bike = image_patch.exists(""black bike"")
    return bool_to_yesno(is_black_skateboard or is_black_bike)"
15827093,What is hanging from the brick wall?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging from the brick wall?"")"
1440249,What is on the dish that is shown in this photograph?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dish that is shown in this photograph?"")"
14327140,"Which part of the photo is the camera in, the bottom or the top?"," # assumes only one camera patch
    image_patch = ImagePatch(image)
    camera_patches = image_patch.find(""camera"")
    if len(camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch.simple_query(""Which part of the photo is the camera in, the bottom or the top?"")
    camera_patch = camera_patches[0]
    if camera_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
10224435,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
17907785,Who is carrying the doll?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the doll?"")"
15676919,Which kind of vegetable is to the right of the cheese?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is to the right of the cheese?"")"
75954,Who is walking?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking?"")"
19337967,What color are the bears?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the bears?"")"
191000975,Is the phone pink or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone pink or black?"")"
11860881,Who wears pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears pants?"")"
15359504,Is the man wearing glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing glasses?"")"
12463262,What is the lake surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lake surrounded by?"")"
3230859,What kind of device is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is on top of the table?"")"
8878761,On which side of the picture is the dragon?," # left or right
    image_patch = ImagePatch(image)
    dragon_patches = image_patch.find(""dragon"")
    # Question assumes only one dragon patch
    if len(dragon_patches) == 0:
        # If no dragon is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the dragon?"")
    return ""left"" if dragon_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
9875348,Do you see any trains or trucks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train"") or image_patch.exists(""truck""))"
785906,Which color do you think the tie that the man is wearing is?," # returns the color of the tie
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which color do you think the tie that the man is wearing is?"")
    man_patch = man_patches[0]
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        return image_patch.simple_query(""Which color do you think the tie that the man is wearing is?"")
    for tie_patch in tie_patches:
        if tie_patch.horizontal_center > man_patch.horizontal_center:
            return tie_patch.simple_query(""Which color do you think the tie that the man is wearing is?"")
    return image_patch.simple_query(""Which color do you think the tie that the man is wearing is?"")"
19506423,Is the knife in the top part or in the bottom of the image?," # contains a relation (on top of, in the bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the top part or in the bottom of the image?"")"
4347909,What piece of furniture is right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is right of the picture?"")"
1340590,Is the traffic cone on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the traffic cone on the left side or on the right?"")"
287833,What is the player wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the player wearing?"")"
18716224,Is the black bag to the right of the helmets that are hanging on the bikes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the right of the helmets that are hanging on the bikes?"")"
15771408,What is the person doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person doing?"")"
17687676,On which side is the camera?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the camera?"")"
5245747,Are the trees in front of a tower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trees in front of a tower?"")"
1520051,What does the man to the left of the motorbike sit on?," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man to the left of the motorbike sit on?"")"
11514050,How are the fruits in the container that is on the table called?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How are the fruits in the container that is on the table called?"")"
515990,Is the man to the left of the red bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the red bag?"")"
8872750,What vehicle is the woman on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the woman on?"")"
264104,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14407637,Is the fence silver or black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence silver or black?"")"
6459197,Is the picnic table to the right or to the left of the man?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picnic table to the right or to the left of the man?"")"
7117962,Is the saucer to the right of the plate brown or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the saucer to the right of the plate brown or blue?"")"
66444,Is there any speaker to the right of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any speaker to the right of the computer?"")"
1551262,"Where in this image is the man, in the top or in the bottom?"," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this image is the man, in the top or in the bottom?"")"
12927815,"On which side of the picture is the train, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the train, the left or the right?"")"
4433903,How's the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How's the weather?"")"
3896735,"In which part of the picture is the bag, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the bag, the top or the bottom?"")"
9708068,What vehicle is driving on the street the post is beside of?," # contains a relation (beside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is driving on the street the post is beside of?"")"
121047318,Is the dog in the window both white and small?," # contains a relation (in the window), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog in the window both white and small?"")"
11404724,On which side of the picture is the wheelchair?," # left or right
    image_patch = ImagePatch(image)
    wheelchair_patches = image_patch.find(""wheelchair"")
    # Question assumes only one wheelchair patch
    if len(wheelchair_patches) == 0:
        # If no wheelchair is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the wheelchair?"")
    wheelchair_patch = wheelchair_patches[0]
    if wheelchair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3616564,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2679151,Are these people the same gender?," # gender is not a property of the object, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are these people the same gender?"")) # gender is not a property of the object, so ask directly"
6760790,Is the batter on the left or on the right?," # batter is a type of object
    image_patch = ImagePatch(image)
    batter_patches = image_patch.find(""batter"")
    # Question assumes only one batter patch
    if len(batter_patches) == 0:
        # If no batter is found, query the image directly
        return image_patch.simple_query(""Is the batter on the left or on the right?"")
    if batter_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4447443,Is the metal fence in the bottom?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal fence in the bottom?"")"
2254476,Do you see either fences or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_fence or is_mirror)"
12709871,What is the animal to the left of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the fence?"")"
1145661,Is this picture showing the train station?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this picture showing the train station?"")"
18605317,Who is wearing the suit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the suit?"")"
3886676,Which kind of device is to the right of the cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the cat?"")"
7100450,On which side of the photo is the child?," # left or right
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the child?"")
    return ""left"" if child_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
16114771,Is the person that is skiing wearing goggles?," # contains a relation (sitting on, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is skiing wearing goggles?"")"
5207355,What do you think is on the purse that is shown in the photo?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the purse that is shown in the photo?"")"
8139120,Is the woman's hair short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's hair short?"")"
19292357,Do the shower and the faucet have the same material?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the shower and the faucet have the same material?"")) # crop would include the material so keep it in the query"
9486156,Is the yellow car on the left or on the right side?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow car on the left or on the right side?"")"
13450017,What is the umbrella on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the umbrella on?"")"
15840962,Who is cutting the apple?," # contains a relation (cutting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is cutting the apple?"")"
2519350,Is the paddle to the left of the man the person is to the right of?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the paddle to the left of the man the person is to the right of?"")"
151051437,Are there napkins near the plate that is made of paper?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there napkins near the plate that is made of paper?"")"
375811,Is there a monkey near the person on the left side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a monkey near the person on the left side of the photo?"")"
7955491,Are there any balls to the right of the boy that wears a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ball"") and image_patch.exists(""boy"") and image_patch.exists(""shirt""))"
13997294,Is there a white pot or kettle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white pot or kettle?"")"
736640,Which kind of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is brown?"")"
5981211,Are the papers in the bottom or in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the papers in the bottom or in the top of the photo?"")"
16934323,On which side of the photo is the white shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the white shelf?"")
    shelf_patch = shelf_patches[0]
    if shelf_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
620721,Are there both sculptures and traffic lights in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sculpture = image_patch.exists(""sculpture"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_sculpture and is_traffic_light)"
823529,What color is that field?," # field is a common object
    image_patch = ImagePatch(image)
    field_patches = image_patch.find(""field"")
    # Question assumes only one field patch
    if len(field_patches) == 0:
        # If no field is found, query the image directly
        return image_patch.simple_query(""What color is that field?"")
    return field_patches[0].simple_query(""What color is that field?"") # crop would include the field so keep it in the query"
4466866,Is the man to the right of a ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a ball?"")"
9595242,What device isn't gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device isn't gray?"")"
6751177,Do you see both desks and chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_desk = image_patch.exists(""desk"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_desk and is_chair)"
11550064,What is lying on top of the brush?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is lying on top of the brush?"")"
8898673,What's the wine in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the wine in?"")"
1466816,Which kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is it?"")"
17364178,Is the sky clear and white?," # clear and white are properties of the sky
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""clear"") and image_patch.verify_property(""sky"", ""white""))"
16778008,Is the pillow green?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow green?"")"
15891828,Is there a sofa to the left of the blue ball?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a sofa to the left of the blue ball?"")"
32827,Is the man on the fence wearing a hat?," # contains a relation (on, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the fence wearing a hat?"")"
13579783,What is the food to the right of the pepperoni that is to the right of the pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the pepperoni that is to the right of the pizza?"")"
1926956,Does the toilet look white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""toilet"", ""white""))"
1134800,Does the sky look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sky look orange?"")"
17166025,Is the spectator on the left side?," # assumes only one spectator
    image_patch = ImagePatch(image)
    spectator_patches = image_patch.find(""spectator"")
    if len(spectator_patches) == 0:
        return image_patch.simple_query(""Is the spectator on the left side?"")
    spectator_patch = spectator_patches[0]
    if spectator_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
14144751,Does that dress have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""dress"", ""black""))"
16372822,What kind of device is to the left of the book the laptop is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the book the laptop is on?"")"
18476322,What faces the clock tower?," # contains a relation (facing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What faces the clock tower?"")"
17229041,Is the kid on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid on the left?"")"
14487025,"What is the chair at, a table or a bed?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair at, a table or a bed?"")"
911639,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1379064,Is the black chair to the right or to the left of the umbrella that is on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black chair to the right or to the left of the umbrella that is on the table?"")"
4461493,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
14723454,What kind of fast food is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is on top of the table?"")"
17628334,Do the pocket and the shirt have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    pocket_patches = image_patch.find(""pocket"")
    # Question assumes only one pocket patch
    if len(pocket_patches) == 0:
        # If no pocket is found, query the image directly
        return image_patch.simple_query(""Do the pocket and the shirt have the same color?"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return ""no""
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(pocket_patches[0].verify_property(""pocket"", ""color"") == shirt_patch.verify_property(""shirt"", ""color""))"
18958505,The newspaper is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The newspaper is on what?"")"
2626734,Is this a traffic sign or a traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a traffic sign or a traffic light?"")"
7268672,What kind of watercraft has the same color as the seat?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of watercraft has the same color as the seat?"")"
17818814,Which color is the bag the water bottle is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag the water bottle is to the right of?"")"
14581086,Which color is this tower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is this tower?"")"
1784408,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
1077010,Is the car in the top part or in the bottom of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Is the car in the top part or in the bottom of the image?"")
    car_patch = car_patches[0]
    if car_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
11935847,Is the mannequin holding an umbrella?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mannequin holding an umbrella?"")"
217051,What kind of vehicle is to the left of the orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the orange?"")"
4125657,Does the cauliflower look leafy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cauliflower look leafy?"")"
14436880,Is there any bottle to the left of the candies that are to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bottle to the left of the candies that are to the left of the computer?"")"
131022606,Which kind of fruit is to the left of the curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is to the left of the curtain?"")"
9482558,The man that is sitting is wearing what?," # contains a relation (sitting, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man that is sitting is wearing what?"")"
17886564,What kind of material makes up the white table?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of material makes up the white table?"")"
6463083,"Where is the car, in the top or in the bottom part of the image?"," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the car, in the top or in the bottom part of the image?"")"
612518,What is the food that the donuts in the container are topped with?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that the donuts in the container are topped with?"")"
18673751,Is the man on a surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on a surfboard?"")"
41014562,Is the metal chain around the pipe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal chain around the pipe?"")"
3436654,Are there both meat and cheese in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_meat = image_patch.exists(""meat"")
    is_cheese = image_patch.exists(""cheese"")
    return bool_to_yesno(is_meat and is_cheese)"
12681671,Does the table chair look pink?," # table chair is a single object
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""table chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Does the table chair look pink?"")
    return bool_to_yesno(chair_patches[0].verify_property(""table chair"", ""pink""))"
16293282,What do you think is the color of the coat?," # returns a string
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the coat?"")
    coat_patch = coat_patches[0]
    return coat_patch.simple_query(""What do you think is the color of the coat?"") # crop would include the coat so keep it in the query"
19909917,What is the man who is to the left of the cane walking on?," # contains a relation (left of, walking on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man who is to the left of the cane walking on?"")"
966145,What is in the terminal?," # terminal is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the terminal?"")"
1361840,Is this an elephant or a giraffe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this an elephant or a giraffe?"")"
918989,What color is the SUV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the SUV?"")"
19598119,What is on the window?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the window?"")"
10436153,What is the safety cone on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the safety cone on?"")"
2715025,Which kind of vegetable is sitting on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is sitting on the plate?"")"
13733319,What's the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the pillow on?"")"
3948390,Is there a giraffe in front of the rock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a giraffe in front of the rock?"")"
1574475,Are there any people to the left of the black backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.find(""black backpack"")[0].horizontal_center > image_patch.horizontal_center)"
9596126,Do you see horses in the green grass?," # contains a relation (in the green grass), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see horses in the green grass?"")"
1533309,Is the lady that is to the right of the mug wearing shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady that is to the right of the mug wearing shorts?"")"
1757710,How large is the tent on the right?," # returns a string
    image_patch = ImagePatch(image)
    tent_patches = image_patch.find(""tent"")
    # Question assumes only one tent patch
    if len(tent_patches) == 0:
        # If no tent is found, query the image directly
        return image_patch.simple_query(""How large is the tent on the right?"")
    for tent_patch in tent_patches:
        if tent_patch.horizontal_center > image_patch.horizontal_center:
            return tent_patch.simple_query(""How large is the tent on the right?"")
    return ""no"""
12765595,What is the fruit that this bowl is in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that this bowl is in front of?"")"
19593746,What vehicle is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is black?"")"
71017154,Are there black bags or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_bag = image_patch.exists(""black bag"")
    is_black_car = image_patch.exists(""black car"")
    return bool_to_yesno(is_black_bag or is_black_car)"
41006942,What vehicle is to the right of the bushy tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the bushy tree?"")"
19520829,Does the puppy's tail have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""puppy's tail"", ""white""))"
12787801,What kind of furniture is the keyboard on?," # keyboard is a piece of furniture
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is the keyboard on?"")
    return keyboard_patches[0].simple_query(""What kind of furniture is the keyboard on?"") # crop would include the keyboard so keep it in the query"
11513469,What is the girl to the left of the cell phone holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl to the left of the cell phone holding?"")"
15813472,"Where in this image is the person, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this image is the person, in the bottom or in the top?"")"
6235068,Do you see a lamp on the round table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a lamp on the round table?"")"
18401189,Is the coffee on a sofa?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee on a sofa?"")"
9312590,Is there any food to the left of the people that are wearing a bracelet?," # contains a relation (to the left of, wearing a bracelet), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any food to the left of the people that are wearing a bracelet?"")"
19191103,Is there any bed near the pillow the dog is in front of?," # contains a relation (in front of, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bed near the pillow the dog is in front of?"")"
7526475,What is the color of the small pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the small pillows?"")"
3750079,Where is the kite?," # returns the location of the kite
    image_patch = ImagePatch(image)
    kite_patches = image_patch.find(""kite"")
    # Question assumes only one kite patch
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch.simple_query(""Where is the kite?"")
    return kite_patches[0].simple_query(""Where is the kite?"")"
990455,What's on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"")"
12838150,What device is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the man?"")"
4723809,How large is the logo?," # returns a string
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""How large is the logo?"")
    return logo_patches[0].simple_query(""How large is the logo?"") # crop would include the logo so keep it in the query"
6342894,What is the item of furniture that the pillows are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that the pillows are on?"")"
3757019,Are there either orange letters or cones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_orange_letter = image_patch.exists(""orange letters"")
    is_cone = image_patch.exists(""cone"")
    return bool_to_yesno(is_orange_letter or is_cone)"
17834692,Do you see either any skateboards or pictures in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skateboard"") or image_patch.exists(""picture""))"
19470665,Are there either any squirrels or penguins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""squirrel"") or image_patch.exists(""penguin""))"
344652,Is there a motorbike or a bench in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorbike = image_patch.exists(""motorbike"")
    is_bench = image_patch.exists(""bench"")
    return bool_to_yesno(is_motorbike or is_bench)"
12405880,What is in front of the spectator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the spectator?"")"
782552,How old is the child that is holding the animal?," # assumes only one child and one animal
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    animal_patches = image_patch.find(""animal"")
    if len(child_patches) == 0 or len(animal_patches) == 0:
        return image_patch.simple_query(""How old is the child that is holding the animal?"")
    child_patch = child_patches[0]
    animal_patch = animal_patches[0]
    return child_patch.simple_query(""How old is the child that is holding the animal?"") # crop would include the animal so keep it in the query"
15192111,What fruit is inside the basket?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is inside the basket?"")"
9210623,What is the brown animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown animal?"")"
121052946,What kind of furniture can be seen in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture can be seen in the image?"")"
11754036,Is the person wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing a hat?"")"
9885942,What is the vehicle that is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is in front of the trees?"")"
1791433,What vehicle is to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the woman?"")"
16638577,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
16544619,Are there men or babies in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_man = image_patch.exists(""man"")
    is_baby = image_patch.exists(""baby"")
    return bool_to_yesno(is_man or is_baby)"
12360858,Is the undershirt the same color as the mouse?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the undershirt the same color as the mouse?"")"
5889209,Does the train appear to be driving or waiting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the train appear to be driving or waiting?"")"
16723222,Do you see any bags or cars that are blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag_blue = image_patch.exists(""bag"") and image_patch.verify_property(""bag"", ""blue"")
    is_car_blue = image_patch.exists(""car"") and image_patch.verify_property(""car"", ""blue"")
    return bool_to_yesno(is_bag_blue or is_car_blue)"
3751488,Who is on the snowboard in the top part?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the snowboard in the top part?"")"
11359626,Who is carrying the bag?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the bag?"")"
8693654,Is the blue towel in the top part of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue towel in the top part of the photo?"")"
3365737,Is there any elephant in the river?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any elephant in the river?"")"
2663379,Who is wearing the wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the wetsuit?"")"
19338422,On which side is the blanket?," # left or right
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""On which side is the blanket?"")
    return ""right"""
101053678,Are the blinds to the right of the chair made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the blinds to the right of the chair made of wood?"")"
7189127,Is there either an umbrella or a surfboard that is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    surfboard_patches = image_patch.find(""surfboard"")
    for umbrella_patch in umbrella_patches:
        if umbrella_patch.verify_property(""umbrella"", ""orange""):
            return ""yes""
    for surfboard_patch in surfboard_patches:
        if surfboard_patch.verify_property(""surfboard"", ""orange""):
            return ""yes""
    return ""no"""
8114389,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
679309,Is the cooked meat to the left of the brown food?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cooked meat to the left of the brown food?"")"
12979568,Are all the animals the same species?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are all the animals the same species?"")
    species = animal_patches[0].simple_query(""What species is the animal?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What species is the animal?"") != species:
            return ""no""
    return ""yes"""
11223725,What are the flowers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the flowers on?"")"
11440486,Are the star and the bookcase the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the star and the bookcase the same color?""))"
19431437,Do you see any numbers or letters that are not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any numbers or letters that are not blue?"") # crop would include the shirt so keep it in the query"
9215460,Is the animal to the right of the rug small and black?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Is the animal to the right of the rug small and black?"")
    for animal_patch in animal_patches:
        rug_patches = image_patch.find(""rug"")
        for rug_patch in rug_patches:
            if rug_patch.horizontal_center < animal_patch.horizontal_center:
                return bool_to_yesno(animal_patch.verify_property(""animal"", ""small"") and animal_patch.verify_property(""animal"", ""black""))
    return ""no"""
2852444,"Which type of food is not toasted, the bread or the lemon?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of food is not toasted, the bread or the lemon?"")"
10537308,Who is carrying the backpack?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the backpack?"")"
19224070,Is there a bus to the right of the vehicle below the steam?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bus to the right of the vehicle below the steam?"")"
19176123,Are there any bottle caps or bulbs in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle cap"") or image_patch.exists(""bulb""))"
4298655,Is the person in the bottom part or in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the bottom part or in the top of the photo?"")"
1510791,What is the door in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the door in front of?"")"
3229290,"In which part of the picture are the books, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture are the books, the top or the bottom?"")"
18686695,Are there any giraffes near the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"") and image_patch.exists(""tree""))"
18354731,What is the house in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the house in front of?"")"
2517851,Is there any child in the image that is not walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    for child_patch in child_patches:
        if child_patch.simple_query(""Is the child walking?"") == ""no"":
            return ""yes""
    return ""no"""
18423009,What is the book in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the book in front of?"")"
12352843,Are there any bananas to the right of the orange on the left of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any bananas to the right of the orange on the left of the image?"")"
6793671,What is the bed made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bed made of?"")"
1473081,Who is standing in the people that are in front of the shelf?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing in the people that are in front of the shelf?"")"
8575413,Is this a truck or a bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a truck or a bus?"")"
7972317,What is the bottle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bottle on?"")"
9792955,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
11610918,Where is the man standing on?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the man standing on?"")"
6363925,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
11127167,Are the olives to the right of the food that is to the left of the onion?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the olives to the right of the food that is to the left of the onion?"")"
11447926,What type of furniture is the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the pillow on?"")"
5281434,What is the meat in the white thing to the right of the beans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat in the white thing to the right of the beans?"")"
8165427,Are there either tables or chairs that are made of plastic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_table = image_patch.exists(""table"")
    is_chair = image_patch.exists(""chair"")
    is_plastic = image_patch.exists(""plastic"")
    return bool_to_yesno(is_table or is_chair) and bool_to_yesno(is_plastic)"
615859,The small dog is lying on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The small dog is lying on what?"")"
19804208,How is the item of furniture to the left of the dryer on the right called?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the item of furniture to the left of the dryer on the right called?"")"
116464,Which side of the photo is the rope on?," # left or right
    image_patch = ImagePatch(image)
    rope_patches = image_patch.find(""rope"")
    # Question assumes only one rope patch
    if len(rope_patches) == 0:
        # If no rope is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the rope on?"")
    rope_patch = rope_patches[0]
    if rope_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7121145,Does the gate that is made of plastic have checkered pattern?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the gate that is made of plastic have checkered pattern?"")"
4193864,Does the boy appear to be sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boy appear to be sitting?"")"
4697241,What kind of device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the man holding?"")"
1143707,Do you see pillows or grinders there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_grinder = image_patch.exists(""grinder"")
    return bool_to_yesno(is_pillow or is_grinder)"
8909019,"Which color is the hair, black or white?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the hair, black or white?"")"
13719394,Is the planter to the right or to the left of the man on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the planter to the right or to the left of the man on the left?"")"
9583692,Are the animals in the picture of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.exists(""animals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5701077,Are the fries to the left of the blue cheese?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the fries to the left of the blue cheese?"")"
1787639,Do you see any nightstands or tables in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nightstand"") or image_patch.exists(""table""))"
1120867,What vehicle is to the left of the person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the person that is wearing a shirt?"")"
18747283,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
8616717,What type of material is the fence that looks blue made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of material is the fence that looks blue made of?"")"
11656353,Is there either grass or sand that is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    sand_patches = image_patch.find(""sand"")
    for grass_patch in grass_patches:
        if grass_patch.verify_property(""grass"", ""brown""):
            return ""yes""
    for sand_patch in sand_patches:
        if sand_patch.verify_property(""sand"", ""brown""):
            return ""yes""
    return ""no"""
1334567,On which side of the photo is the boy?," # left or right
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the boy?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13134324,On which side of the photo is the white plate?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white plate?"")"
101016397,Do you see a woman or a child there?," # contains a relation (woman or child), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a woman or a child there?"")"
6901032,The player is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The player is holding what?"")"
14830348,What is the umbrella inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the umbrella inside of?"")"
4814855,What is that train in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that train in front of?"")"
5183732,Is the catcher to the left or to the right of the person that swings a bat?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher to the left or to the right of the person that swings a bat?"")"
18891421,Do you see sheep or palaces?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see sheep or palaces?"")"
11215050,Who is wearing the shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoes?"")"
5435830,Are there any doors that are green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""green door"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
18151984,Which side is the keyboard on?," # left or right
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""Which side is the keyboard on?"")
    keyboard_patch = keyboard_patches[0]
    if keyboard_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7271771,How big is the pepperoni in the middle of the photo?," # returns a string
    image_patch = ImagePatch(image)
    pepperoni_patches = image_patch.find(""pepperoni"")
    # Question assumes only one pepperoni patch
    if len(pepperoni_patches) == 0:
        # If no pepperoni is found, query the image directly
        return image_patch.simple_query(""How big is the pepperoni in the middle of the photo?"")
    pepperoni_patch = pepperoni_patches[0]
    return pepperoni_patch.simple_query(""How big is the pepperoni in the middle of the photo?"") # crop would include the pepperoni so keep it in the query"
151013636,Which kind of furniture is to the left of the mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the mirror?"")"
5619550,Who is wearing the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the cap?"")"
18828134,What is the animal to the right of the pine tree in the forest?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the right of the pine tree in the forest?"")"
1343312,What is the woman to the left of the bicyclist wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the left of the bicyclist wearing?"")"
12688918,How big is the airplane on the right?," # returns a string
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""How big is the airplane on the right?"")
    airplane_patch = airplane_patches[0]
    if airplane_patch.horizontal_center > image_patch.horizontal_center:
        return airplane_patch.simple_query(""How big is the airplane on the right?"")
    return airplane_patch.simple_query(""How big is the airplane on the left?"")"
15522183,Where is the bench?," # returns the location of the bench
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Where is the bench?"")
    return bench_patches[0].simple_query(""Where is the bench?"") # crop would include the bench so keep it in the query"
7294588,What is the player that is running wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the player that is running wearing?"")"
2627604,What is the color of the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the hair?"")"
2727476,What is the cutting board made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cutting board made of?"")"
5666385,What device is the daughter holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the daughter holding?"")"
5479165,Is the plate in the bottom or in the top?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in the bottom or in the top?"")"
51029539,What type of animal is small?," # contains a relation (small), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is small?"")"
18380756,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1381438,What animal is eating the grass?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating the grass?"")"
10588057,Which kind of fast food are the peppers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food are the peppers on?"")"
17284691,Which kind of food is to the right of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the cup?"")"
15490477,Where is the sink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the sink?"")"
876054,The man is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is wearing what?"")"
7364265,Which kind of furniture is the window behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the window behind of?"")"
16472462,Is the woman to the right or to the left of the backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the backpack?"")"
3816641,Who is eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is eating?"")"
17263096,On which side of the picture is the biker?," # left or right
    image_patch = ImagePatch(image)
    biker_patches = image_patch.find(""biker"")
    # Question assumes only one biker patch
    if len(biker_patches) == 0:
        # If no biker is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the biker?"")
    biker_patch = biker_patches[0]
    if biker_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8182020,What color is the fence on the right?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the fence on the right?"")"
4717555,What is traveling on the bridge?," # contains a relation (on, across, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is traveling on the bridge?"")"
884863,Are there any keyboards or skis?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_keyboard = image_patch.exists(""keyboard"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_keyboard or is_ski)"
6771343,What do you think is located on top of the spoon?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is located on top of the spoon?"")"
798442,What device is sitting on the couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is sitting on the couch?"")"
13820024,Is the grass green and tall?," # returns yes or no
    image_patch = ImagePatch(image)
    is_green = image_patch.verify_property(""grass"", ""green"")
    is_tall = image_patch.verify_property(""grass"", ""tall"")
    return bool_to_yesno(is_green and is_tall)"
1026594,What's the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man holding?"")"
5362397,Are there either any doors or chairs that are made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door_metal = image_patch.exists(""metal door"")
    is_chair_metal = image_patch.exists(""metal chair"")
    return bool_to_yesno(is_door_metal or is_chair_metal)"
2114965,Are there both a chair and a bottle in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_chair and is_bottle)"
12382233,Does the sign have the same color as the street?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sign have the same color as the street?"")"
6193297,How large is the cabinet that is made of glass?," # returns a string
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""How large is the cabinet that is made of glass?"")
    for cabinet_patch in cabinet_patches:
        if cabinet_patch.verify_property(""cabinet"", ""glass""):
            return cabinet_patch.simple_query(""How large is the cabinet that is made of glass?"")
    # If no glass cabinet is found, query the image directly
    return image_patch.simple_query(""How large is the cabinet that is made of glass?"")"
16615419,What type of vehicle has the same color as the fence made of metal?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle has the same color as the fence made of metal?"")"
9244688,Is there a refrigerator to the right of the microwave?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a refrigerator to the right of the microwave?"")"
2320749,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
935185,What's in front of the refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the refrigerator?"")"
1005564,Is the laptop on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop on the bed?"")"
18234040,What kind of device is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is on the table?"")"
2925814,Is there either a fence or a surfboard in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_surfboard = image_patch.exists(""surfboard"")
    return bool_to_yesno(is_fence or is_surfboard)"
13388574,Does the knife appear to be sitting?," # knife is a tool
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Does the knife appear to be sitting?"")
    return bool_to_yesno(knife_patches[0].verify_property(""knife"", ""sitting""))"
313363,What color is the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bowl?"")"
13937801,Do you see blankets that are not green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see blankets that are not green?"")"
14709170,Is the person in front of the tree wearing a wetsuit?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in front of the tree wearing a wetsuit?"")"
10531823,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9955005,Are there fences or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_fence or is_car)"
14623161,The books are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The books are on what?"")"
11352553,"Where in this photo is the bottle, in the top or in the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the bottle, in the top or in the bottom?"")"
51048526,Is the cabinet on the right or on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet on the right or on the left side of the image?"")"
11838989,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
13914550,Which kind of furniture is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is black?"")"
1699844,Who is on the couch in the image?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the couch in the image?"")"
3128560,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
5782160,Does the skirt have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""skirt"", ""black""))"
77479,Is the weather clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the weather clear?"")"
5585337,Are there either any cups or knives?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_knife = image_patch.exists(""knife"")
    return bool_to_yesno(is_cup or is_knife)"
5535340,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
16640307,"How does the sweater look like, pink or blue?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the sweater look like, pink or blue?"")"
2621254,What is the person on the snowboard looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on the snowboard looking at?"")"
19403751,What is on the comforter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the comforter?"")"
10200237,What is located on top of the couch that is to the right of the cow?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the couch that is to the right of the cow?"")"
14125163,Are the plane and the building the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the plane and the building the same color?"")) # crop would include the building so keep it in the query"
1797363,What is the name of the white vehicle in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the white vehicle in the photograph?"")"
8887646,What is located on top of the chairs the woman is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the chairs the woman is to the right of?"")"
19490717,Is the shirt the same color as the dress?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt the same color as the dress?"")
    shirt_patch = shirt_patches[0]
    dress_patches = image_patch.find(""dress"")
    # Question assumes only one dress patch
    if len(dress_patches) == 0:
        return ""no""
    dress_patch = dress_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""color"") == dress_patch.verify_property(""dress"", ""color""))"
1875077,What are the vehicles that are in the street?," # returns a string
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What are the vehicles that are in the street?"")
    return vehicle_patches[0].simple_query(""What are the vehicles that are in the street?"") # crop would include the street so keep it in the query"
13782924,What is the fruit in the bowl on the left?," # contains a relation (in the bowl on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit in the bowl on the left?"")"
12366839,What is the piece of furniture that is to the right of the desk made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the right of the desk made of wood?"")"
41020500,What is the sign that is white and black hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign that is white and black hanging from?"")"
10814103,Is the spoon to the left or to the right of the soup in the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the spoon to the left or to the right of the soup in the photo?"")"
5464178,Are these zebras or goats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these zebras or goats?"")"
141011575,Is the salt shaker to the left of the empty bottle?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the salt shaker to the left of the empty bottle?"")"
41014563,What is on the pipe?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pipe?"")"
1751738,Is the fried food to the right of the mashed potatoes with the corn?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fried food to the right of the mashed potatoes with the corn?"")"
10757796,Do you see cars to the left of the man that is in the street?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cars to the left of the man that is in the street?"")"
359497,On which side of the photo is the bicycle?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the bicycle?"")
    return ""left"" if bicycle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1481970,The standing person to the right of the man is holding what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The standing person to the right of the man is holding what?"")"
17599382,Which color does the table have?," # table is a common object
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Which color does the table have?"")
    return table_patches[0].simple_query(""Which color does the table have?"") # crop would include the table so keep it in the query"
8785537,Is the pillow to the left or to the right of the white lamp?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow to the left or to the right of the white lamp?"")"
19364440,Is the man to the right of the girl wearing a suit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the girl wearing a suit?"")"
17819923,What article of clothing is striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What article of clothing is striped?"")"
18799793,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
1633216,Is the customer in the bottom part or in the top of the photo?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the customer in the bottom part or in the top of the photo?"")"
3437950,Which kind of furniture is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not black?"")"
9532295,"In which part is the sack, the top or the bottom?"," # sack is a bag
    image_patch = ImagePatch(image)
    sack_patches = image_patch.find(""sack"")
    # Question assumes only one sack patch
    if len(sack_patches) == 0:
        # If no sack is found, query the image directly
        return image_patch.simple_query(""In which part is the sack, the top or the bottom?"")
    if sack_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
121028864,What kind of fast food does the man hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food does the man hold?"")"
7342609,Which kind of furniture is to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the cabinet?"")"
12494354,What is the device that hangs on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that hangs on the wall?"")"
18508405,What is the vehicle to the left of the person that is standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the left of the person that is standing?"")"
7724050,Does the arrow on the sign look yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the arrow on the sign look yellow?"")"
10572121,What color is this shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is this shelf?"")"
13620336,What is on the dresser?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dresser?"")"
10301746,What is the person that is sitting using?," # contains a relation (sitting on, using, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is sitting using?"")"
9651766,What item of furniture is patterned?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is patterned?"")"
2944013,Do you see any cups or plates that are not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cups or plates that are not large?"")"
9465797,Which side of the image is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3592265,What color is the life jacket the person is to the left of?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the life jacket the person is to the left of?"")"
15440568,Is the man wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing shorts?"")"
2977531,What drink is to the left of the chair the child is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is to the left of the chair the child is on?"")"
7665089,What is the box on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box on?"")"
7184355,Who is on the ski that is in the bottom of the image?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the ski that is in the bottom of the image?"")"
5230450,What is in front of the airplane?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the airplane?"")"
14920477,Do you see chairs or pictures?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_chair or is_picture)"
12769644,Which color are the trousers the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the trousers the man is wearing?"")"
6505777,What kind of furniture is the bottle on?," # bottle is on a table
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the bottle on?"")"
16752077,Do the trees have green color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""trees"", ""green""))"
3989274,Is the plastic cup to the right or to the left of the bowl in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic cup to the right or to the left of the bowl in this picture?"")"
4490311,Is this a carrot or a tomato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a carrot or a tomato?"")"
19654851,Is the side table in the top of the picture?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the side table in the top of the picture?"")"
9393589,What is the piece of furniture that this boy is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that this boy is on?"")"
1247768,What animal is in the river?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the river?"")"
7407102,On which side is the truck?," # left or right
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""On which side is the truck?"")
    truck_patch = truck_patches[0]
    horizontal_center = truck_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7140518,Are there both fences and skis in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_fence and is_ski)"
17293454,Are there either any trucks or cars in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""truck"") or image_patch.exists(""car""))"
17986462,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
151025662,Which kind of fruit is in the truck?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is in the truck?"")"
14310590,What place is the image in?," # image is the input image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is the image in?"")"
15333404,Are the pants white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""pants"", ""white""))"
19442220,Is the animal that is not ugly black and white or colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal that is not ugly black and white or colorful?"")"
3125455,What's the zebra in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the zebra in front of?"")"
4122903,Who is wearing the coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the coat?"")"
3914554,Are there both men and women in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_man = image_patch.exists(""man"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_man and is_woman)"
16113477,What kind of food is on the plate in the bottom of the picture?," # contains a relation (bottom, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the plate in the bottom of the picture?"")"
6856529,What is the white animal wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white animal wearing?"")"
10835363,Are there both a table and a chair in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_table = image_patch.exists(""table"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_table and is_chair)"
5878112,What is the color of the ski?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the ski?"")"
6857327,On which side of the picture are the glasses?," # left or right
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the glasses?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10561611,Is the phone on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone on the left side or on the right?"")"
13807523,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
1680016,What is the door made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the door made of?"")"
764338,What device is the same color as the mouse?," # mouse is the device
    image_patch = ImagePatch(image)
    mouse_patches = image_patch.find(""mouse"")
    # Question assumes only one mouse patch
    if len(mouse_patches) == 0:
        # If no mouse is found, query the image directly
        return image_patch.simple_query(""What device is the same color as the mouse?"")
    mouse_patch = mouse_patches[0]
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        return image_patch.simple_query(""What device is the same color as the mouse?"")
    for device_patch in device_patches:
        if device_patch.verify_property(""device"", ""color"") == mouse_patch.verify_property(""mouse"", ""color""):
            return device_patch.simple_query(""What device is the same color as the mouse?"")
    return device_patches[0].simple_query(""What device is the same color as the mouse?"")"
10886043,What's the snow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the snow on?"")"
13655234,Is the sculpture on the right side of the picture?," # contains a relation (on the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sculpture on the right side of the picture?"")"
17219749,Is the woman on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the left side of the picture?"")"
4867280,What color are the skis on the snow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the skis on the snow?"")"
181068148,What vehicle is behind the bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is behind the bush?"")"
13629230,Is there a helmet to the left of the umpire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a helmet to the left of the umpire?"")"
19708337,Is this a truck or a train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a truck or a train?"")"
19804403,What kind of appliance is below the tray?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is below the tray?"")"
16678437,Do you see both windows and buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_window and is_bus)"
3880105,Who is holding the book?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the book?"")"
7941580,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3522606,What is the broccoli on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the broccoli on?"")"
10567073,Do you see any vases on the side of the TV near the dog?," # contains a relation (on the side of, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any vases on the side of the TV near the dog?"")"
13221688,What kind of clothing is yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is yellow?"")"
10404319,How big is the empty cup?," # returns the size of the cup
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""How big is the empty cup?"")
    return cup_patches[0].simple_query(""How big is the empty cup?"") # crop would include the cup so keep it in the query"
12931330,Are there any donuts to the left of the tray on the right side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""donut"") and image_patch.simple_query(""Is the donut to the left of the tray on the right side?"") == ""yes"")"
16136288,Where is the little person eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the little person eating?"")"
8249438,Do you see men to the right of the boy on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see men to the right of the boy on the right?"")"
8692640,"Which type of clothing is light, the glove or the jacket?"," # contains a relation (light, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is light, the glove or the jacket?"")"
1170955,Is there a helmet or a bed in this picture?," # helmet or bed
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_helmet or is_bed)"
3335656,What color do you think the container the truck is with is?," # container is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the container the truck is with is?"")"
2738131,Are there both doors and windows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
13854284,Are there any frisbees to the left of the dog on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""frisbee"") and image_patch.exists(""dog"") and image_patch.find(""dog"")[0].horizontal_center > image_patch.horizontal_center)"
2966032,Does the device that is to the right of the papers look silver and open?," # contains a relation (right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device that is to the right of the papers look silver and open?"")"
9751515,Do you see any end tables to the right of the shelf made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any end tables to the right of the shelf made of wood?"")"
19357468,What is the color of the clouds?," # returns the color of the clouds
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the clouds?"")"
20664,"How does the cup look like, pink or green?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the cup look like, pink or green?"")"
161007681,Is the parked van in front of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the parked van in front of a car?"")"
7165182,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
15864990,Which kind of vehicle is in the train station?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is in the train station?"")"
237470,What is the blue sky full of?," # contains a relation (full of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blue sky full of?"")"
151037207,What is the chain hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chain hanging from?"")"
3511522,The small animal is standing on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The small animal is standing on what?"")"
12576357,Who is wearing the shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoes?"")"
12773897,Is the towel to the right or to the left of the tap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel to the right or to the left of the tap?"")"
17796848,What do you think does the fence near the bus surround?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think does the fence near the bus surround?"")"
733145,Who is in front of the tree the bananas are hanging on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the tree the bananas are hanging on?"")"
16739999,What kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is it?"")"
19734842,What kind of furniture is to the left of the heater?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the heater?"")"
4263093,Are there both peppers and mushrooms in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pepper = image_patch.exists(""pepper"")
    is_mushroom = image_patch.exists(""mushroom"")
    return bool_to_yesno(is_pepper and is_mushroom)"
4157744,What is the man using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man using?"")"
8520543,What is common to the water and the sand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the water and the sand?"")"
6701948,Is there any short grass in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""short grass"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
10156283,Which kind of device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the man holding?"")"
9321045,Is the green vegetable to the right or to the left of the carrot on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green vegetable to the right or to the left of the carrot on the right?"")"
17741976,Are there both chairs and beds in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_chair and is_bed)"
5461901,Are there either toothbrushes or sponges in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""toothbrush"") or image_patch.exists(""sponge""))"
8423657,Is the pink shirt sleeveless or short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pink shirt sleeveless or short sleeved?"")"
16662155,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
13435059,Is the child to the left or to the right of the boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child to the left or to the right of the boy?"")"
12102590,Is the shirt of the man black or green?," # contains a relation (man, shirt, black, green), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt of the man black or green?"")"
18764602,What color does the large airplane have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the large airplane have?"")"
18306105,What kind of clothing is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is red?"")"
17544680,Is the guy to the left of glasses?," # glasses is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""Is the guy to the left of glasses?"")
    for guy_patch in guy_patches:
        for glasses_patch in glasses_patches:
            if glasses_patch.horizontal_center > guy_patch.horizontal_center:
                return ""yes""
    return ""no"""
13399591,What is the vegetable to the right of the lemon called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the right of the lemon called?"")"
13401608,Is the bowl the same color as the plate?," # bowl and plate are assumed to be in the same image
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Is the bowl the same color as the plate?"")
    for bowl_patch in bowl_patches:
        plate_patches = image_patch.find(""plate"")
        # Question assumes only one plate patch
        if len(plate_patches) == 0:
            return ""no""
        plate_patch = plate_patches[0]
        return bool_to_yesno(bowl_patch.verify_property(""bowl"", ""color"") == plate_patch.verify_property(""plate"", ""color""))"
5942477,Is there a bag in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag""))"
19765905,What color is the backpack to the left of the other backpack?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only two backpack patches
    if len(backpack_patches) < 2:
        return image_patch.simple_query(""What color is the backpack to the left of the other backpack?"")
    left_backpack = backpack_patches[0]
    right_backpack = backpack_patches[1]
    if left_backpack.horizontal_center < right_backpack.horizontal_center:
        return left_backpack.simple_query(""What color is the backpack to the left of the other backpack?"")
    else:
        return right_backpack.simple_query(""What color is the backpack to the left of the other backpack?"")"
293066,Is the jacket striped?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the jacket striped?"")"
1445580,How is this device called?," # returns the name of the device
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is this device called?"")"
19788074,Which kind of baked good is on the pan?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is on the pan?"")"
19803977,Is the counter made of granite?," # assumes only one counter patch
    image_patch = ImagePatch(image)
    counter_patches = image_patch.find(""counter"")
    if len(counter_patches) == 0:
        # If no counter is found, query the image directly
        return image_patch.simple_query(""Is the counter made of granite?"")
    return counter_patches[0].verify_property(""counter"", ""granite"")"
13652036,What kind of furniture is neat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is neat?"")"
5182364,What piece of furniture are the utensils to the right of the person lying on top of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture are the utensils to the right of the person lying on top of?"")"
4722995,What is the coffee table made of?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the coffee table made of?"")"
13243881,What is the bicycle in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bicycle in front of?"")"
6938533,What is the meat that is shown?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat that is shown?"")"
10394190,Do you see cans to the left of the spoons that are not little?," # assumes only one can and one spoon
    image_patch = ImagePatch(image)
    can_patches = image_patch.find(""can"")
    spoon_patches = image_patch.find(""spoon"")
    # Question assumes only one can and one spoon patch
    if len(can_patches) == 0 or len(spoon_patches) == 0:
        # If no can or spoon is found, query the image directly
        return image_patch.simple_query(""Do you see cans to the left of the spoons that are not little?"")
    for can_patch in can_patches:
        for spoon_patch in spoon_patches:
            if can_patch.horizontal_center < spoon_patch.horizontal_center and not can_patch.verify_property(""can"", ""little""):
                return ""yes""
    return ""no"""
5203453,Is the man to the left or to the right of the bowl that the container is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the bowl that the container is to the left of?"")"
8328463,Do you see doors or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_door or is_train)"
542977,On which side are the pillows?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""On which side are the pillows?"")
    for pillow_patch in pillow_patches:
        if pillow_patch.horizontal_center < image_patch.horizontal_center:
            return ""left""
        else:
            return ""right"""
8824336,Are there any zebras in the grass that looks tan and yellow?," # contains a relation (in the grass), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") and image_patch.exists(""tan"") and image_patch.exists(""yellow""))"
703764,Is there any child to the left of the woman that is wearing a watch?," # contains a relation (left of, wearing a watch), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any child to the left of the woman that is wearing a watch?"")"
2915708,What type of furniture is the dog on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the dog on?"")"
11303412,Are there any avocadoes to the left of the yellow banana?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any avocadoes to the left of the yellow banana?"")"
5745752,What color is the drink in the glass?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the drink in the glass?"")"
6522641,Is the black helmet to the right or to the left of the motorcycle that is in front of the hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black helmet to the right or to the left of the motorcycle that is in front of the hair?"")"
17413899,Which kind of device is the sandwich in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the sandwich in front of?"")"
17529979,"Which part is the person in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the person in, the bottom or the top?"")"
17990122,What is the color of the jersey?," # jersey is a type of clothing
    image_patch = ImagePatch(image)
    jersey_patches = image_patch.find(""jersey"")
    # Question assumes only one jersey patch
    if len(jersey_patches) == 0:
        # If no jersey is found, query the image directly
        return image_patch.simple_query(""What is the color of the jersey?"")
    return jersey_patches[0].simple_query(""What is the color of the jersey?"")"
15509264,Are there both pillows and books in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_pillow and is_book)"
17445287,Which kind of vehicle is to the right of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the right of the box?"")"
13967275,What is on the shore?," # contains a relation (on the shore), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shore?"")"
7536557,On which side of the image are the green pine trees?," # left or right
    image_patch = ImagePatch(image)
    green_pine_patches = image_patch.find(""green pine"")
    # Question assumes only one green_pine patch
    if len(green_pine_patches) == 0:
        # If no green_pine is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the green pine trees?"")
    if green_pine_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7606919,What kind of animal is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the man?"")"
823213,Who is carrying the umbrella?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the umbrella?"")"
11120542,On which side of the photo is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11701630,Is there a open window or door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a open window or door?"")"
2671266,Do you see a chair or a cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a chair or a cabinet?"")"
13173896,What is the color of the shirt the person is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the person is wearing?"")"
11006929,How long is the gray tail?," # returns a string
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""How long is the gray tail?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""gray"") and animal_patch.verify_property(""animal"", ""tail""):
            return animal_patch.simple_query(""How long is the gray tail?"")
    return image_patch.simple_query(""How long is the gray tail?"") # if no gray tail is found, query the image directly"
111045792,What is the color of the shorts the person is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shorts the person is wearing?"")"
14634762,What is he wearing?," # assumes one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is he wearing?"")
    return man_patches[0].simple_query(""What is he wearing?"")"
4886802,On which side of the image is the carrot?," # left or right
    image_patch = ImagePatch(image)
    carrot_patches = image_patch.find(""carrot"")
    # Question assumes only one carrot patch
    if len(carrot_patches) == 0:
        # If no carrot is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the carrot?"")
    carrot_patch = carrot_patches[0]
    if carrot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2829178,Is the brown hair long or short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown hair long or short?"")"
16974893,What color is the sweater that the woman wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sweater that the woman wears?"")"
1912181,Is the green vehicle to the right of a bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green vehicle to the right of a bench?"")"
235973,Is the pillow on the right of the picture?," # contains a relation (on the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow on the right of the picture?"")"
15493265,Is the device which is to the left of the cabinet black or tan?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the device which is to the left of the cabinet black or tan?"")"
354749,What is under the sink?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the sink?"")"
1454778,What is the tower in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tower in front of?"")"
16261181,Is the large animal to the right of a book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large animal to the right of a book?"")"
16857597,Is the man wearing a helmet?," # helmet is a type of headgear
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man wearing a helmet?"")
    man_patch = man_patches[0]
    return man_patch.verify_property(""man"", ""helmet"")"
2341605,Who holds the paddle that to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the paddle that to the right of the person?"")"
77720,What does the boy wear?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the boy wear?"")"
1019788,Is the horse on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse on the left or on the right?"")"
6354488,Is the ground snowy or grassy?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground snowy or grassy?"")"
11197872,What is the pizza lying on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pizza lying on top of?"")"
214655,Are there either any umbrellas or bags in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella"") or image_patch.exists(""bag""))"
91035436,What's the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man doing?"")"
384039,Who is carrying the newspaper?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the newspaper?"")"
3409905,What is the person to the left of the airplane wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the airplane wearing?"")"
1920136,Are there both windows and doors in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
141050621,Is the girl to the left of a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of a plate?"")"
9408494,Is the person to the right of the cookie sheet licking a whisk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the cookie sheet licking a whisk?"")"
4367043,What kind of device is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the woman?"")"
1682136,What is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building?"")"
10993358,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
13821133,What color is the traffic light on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the traffic light on the left?"")"
258546,Do the Wii and the shirt have the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the Wii and the shirt have the same color?"")) # crop would include the shirt so keep it in the query"
3232293,What kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is it?"")"
5664608,Are there both women and men in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman and is_man)"
13838498,What do the kids to the left of the man sit on?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the kids to the left of the man sit on?"")"
61023763,What is common to the house and the post?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the house and the post?"")"
31034297,Who is dressed in red?," # contains a relation (dressed in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is dressed in red?"")"
3890570,What is the vegetable that is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is green?"")"
18240640,What is the kid on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kid on?"")"
7910841,What bag is the man wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bag is the man wearing?"")"
1841961,Is there a cup on the shelf made of glass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cup on the shelf made of glass?"")"
1931646,Does the water appear to be dark blue and wavy?," # water
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""Does the water appear to be dark blue and wavy?"")
    return bool_to_yesno(water_patches[0].verify_property(""water"", ""dark blue"") and water_patches[0].verify_property(""water"", ""wavy""))"
1149152,Is the sandwich on a napkin?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sandwich on a napkin?"")"
13328512,Is that a bell tower or a castle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a bell tower or a castle?"")"
71055099,What is the name of the animal that is to the left of the mirror?," # mirror is a special case
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the name of the animal that is to the left of the mirror?"")
    for animal_patch in animal_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > animal_patch.horizontal_center:
                return animal_patch.simple_query(""What is the name of the animal that is to the left of the mirror?"")
    # If no mirror is found, query the image directly
    return image_patch.simple_query(""What is the name of the animal that is to the left of the mirror?"")"
256566,What is the chain going through?," # contains a relation (going through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chain going through?"")"
19193215,Does the chair look white?," # contains a property (white, blue, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the chair look white?"")"
11348667,On which side of the image is the tray?," # left or right
    image_patch = ImagePatch(image)
    tray_patches = image_patch.find(""tray"")
    # Question assumes only one tray patch
    if len(tray_patches) == 0:
        # If no tray is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the tray?"")
    if tray_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19662409,Which color does the backpack have?," # returns the color of the backpack
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Which color does the backpack have?"")
    return backpack_patches[0].simple_query(""Which color does the backpack have?"") # crop would include the backpack so keep it in the query"
16586446,Is the rice to the right or to the left of the carrot that is on the dish?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rice to the right or to the left of the carrot that is on the dish?"")"
17368979,Do you see any bags there that are not gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any bags there that are not gray?"")"
13768545,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
3293340,Do you see any trucks or vehicles there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""truck"") or image_patch.exists(""vehicle""))"
15748290,What food is to the right of the onion ring?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the right of the onion ring?"")"
698609,What vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is it?"")"
5209048,Is the mouse both purple and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""mouse"", ""purple"") and image_patch.verify_property(""mouse"", ""small""))"
9971991,Do you see any cupcakes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cupcake""))"
15288053,Which side of the picture is the tea on?," # left or right
    image_patch = ImagePatch(image)
    tea_patches = image_patch.find(""tea"")
    # Question assumes only one tea patch
    if len(tea_patches) == 0:
        # If no tea is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the tea on?"")
    if tea_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15877713,Is the fence on the left side?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left side?"")"
10723812,Who is wearing the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the cap?"")"
16535575,What is the color of the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What is the color of the chair?"")
    return chair_patches[0].simple_query(""What is the color of the chair?"") # crop would include the chair so keep it in the query"
6404531,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
7166550,What is the crate made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the crate made of?"")"
1236375,What is on the platter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the platter?"")"
6286898,What color is the laptop that is not closed?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the laptop that is not closed?"")"
4177196,Which kind of toy is on the boat?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of toy is on the boat?"")"
9220934,Is the girl skirt black?," # skirt is a property of the girl
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Is the girl skirt black?"")
    return bool_to_yesno(girl_patches[0].verify_property(""girl"", ""black""))"
11029069,Is the chair brown or blue?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair brown or blue?"")"
5715949,What color do you think the door is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the door is?"")"
10597703,Do you see a table that is not silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a table that is not silver?"")"
2572379,Which kind of baked good is wrapped in the paper?," # contains a relation (wrapped in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is wrapped in the paper?"")"
7840562,What device is not old?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is not old?"")"
4673455,Do you see puppies in front of the step made of brick?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see puppies in front of the step made of brick?"")"
4950689,Who is walking near the vehicle the steam is under of?," # contains a relation (under, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking near the vehicle the steam is under of?"")"
15504570,What article of clothing is pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What article of clothing is pink?"")"
4327991,Are there both windows and doors in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
17774223,Is the horse on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse on the left?"")"
5834699,Is the white fence on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white fence on the left?"")"
10614557,Which kind of animal is in the field?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is in the field?"")"
18279950,Are there any cabins to the right of the boat on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabins"") and image_patch.exists(""boat"") and image_patch.find(""boat"")[0].horizontal_center < image_patch.horizontal_center)"
11296994,Are there any chairs on the sand that is below the grass?," # contains a relation (on, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any chairs on the sand that is below the grass?"")"
5640574,What kind of vegetable is in the bowl to the right of the peppers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is in the bowl to the right of the peppers?"")"
13119110,Which kind of food is not colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not colorful?"")"
12178097,What is in front of the floor lamp in the top?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the floor lamp in the top?"")"
16346527,Are there both ties and glasses in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie and is_glasses)"
5116026,Do you see an elephant near the water the trunk is in?," # contains a relation (near, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see an elephant near the water the trunk is in?"")"
11833905,What kind of vehicle is to the left of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the helmet?"")"
2798559,What is the vegetable in the brown bowl?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable in the brown bowl?"")"
3927905,Is the cake to the right of a fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake to the right of a fork?"")"
6777072,Is the salad in the bottom part or in the top?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the salad in the bottom part or in the top?"")"
171727,Is the SUV in the top or in the bottom part?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the SUV in the top or in the bottom part?"")"
6960242,Is there any plate or cup in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate"") or image_patch.exists(""cup""))"
272910,What is on the building that is surrounded by the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the building that is surrounded by the fence?"")"
18840014,Who is sitting in the green grass?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting in the green grass?"")"
7721582,Who is in front of the traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the traffic light?"")"
5718076,"Which food is red, the tomato or the vegetable?"," # contains a relation (red, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which food is red, the tomato or the vegetable?"")"
13837137,Is the kettle on a stove?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kettle on a stove?"")"
14159062,Is the skateboard to the left or to the right of the person that wears a t-shirt?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skateboard to the left or to the right of the person that wears a t-shirt?"")"
14358235,Is there any sandwich above the white paper?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any sandwich above the white paper?"")"
8716854,Is that waiter serving tea?," # contains a relation (serving), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that waiter serving tea?"")"
17931560,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
11248223,"In which part of the image is the cabinet, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the cabinet, the top or the bottom?"")"
1496020,Who is holding the baseball bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the baseball bat?"")"
18649746,Is the chocolate on the right or on the left side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chocolate on the right or on the left side?"")"
473241,What is the girl standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl standing on?"")"
8142680,Are there any green phones in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""green phone""))"
18243893,Are the wires connected to the utility pole?," # contains a relation (connected to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the wires connected to the utility pole?"")"
17879022,Do you see both balls and clocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_ball and is_clock)"
5361973,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
261649,Are there cats or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_pillow = image_patch.exists(""pillow"")
    return bool_to_yesno(is_cat or is_pillow)"
232335,What is the glove on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the glove on?"")"
6881110,Are there both windows and chairs in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_window and is_chair)"
3638326,Who is wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a cap?"")"
15932572,On which side of the image is the traffic light?," # left or right
    image_patch = ImagePatch(image)
    traffic_light_patches = image_patch.find(""traffic light"")
    # Question assumes only one traffic light patch
    if len(traffic_light_patches) == 0:
        # If no traffic light is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the traffic light?"")
    if traffic_light_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16545380,Are there both a flag and a boat in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_boat = image_patch.exists(""boat"")
    return bool_to_yesno(is_flag and is_boat)"
5570452,What is the old woman wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the old woman wearing?"")"
2286553,What sits on the floor?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sits on the floor?"")"
4982694,What vegetable is inside the container to the left of the bowl?," # contains a relation (inside, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is inside the container to the left of the bowl?"")"
121040067,Is the man that is to the left of the woman wearing a cap?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the woman wearing a cap?"")"
8350049,Are there any cars or doors that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_car or is_door)"
636992,What is the white vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white vehicle?"")"
11517935,What vehicle is on the road near the sidewalk?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is on the road near the sidewalk?"")"
19948983,What is he doing?," # assumes only one person
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he doing?"")"
2570189,"Who is younger, the woman or the baby?"," # contains a relation (older, younger, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is younger, the woman or the baby?"")"
15524643,Is the woman to the right of the bag holding a frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the bag holding a frisbee?"")"
16961519,What color do you think is the vehicle to the right of the traffic cone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think is the vehicle to the right of the traffic cone?"")"
1399822,On which side of the picture is the bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18509429,Are the cars on the right side of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the cars on the right side of the image?"")) # crop would include the right side so keep it in the query"
2784086,What is the woman doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman doing?"")"
11800385,Is the old house to the right of a boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old house to the right of a boat?"")"
81015026,What kind of device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the man holding?"")"
6718686,Is there a black keyboard or laptop computer in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a black keyboard or laptop computer in the photo?"")"
15134841,What kind of furniture is the blanket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the blanket on?"")"
924345,Who wears trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears trousers?"")"
11294025,What is the animal to the left of the empty chair called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the empty chair called?"")"
9351277,Is the glass jar to the right or to the left of the plastic container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass jar to the right or to the left of the plastic container?"")"
9145039,The people to the right of the woman are wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The people to the right of the woman are wearing what?"")"
4867862,Are there both trays and donuts in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tray = image_patch.exists(""tray"")
    is_donut = image_patch.exists(""donut"")
    return bool_to_yesno(is_tray and is_donut)"
161073675,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
12110189,Is the red tomato to the left of a bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red tomato to the left of a bowl?"")"
1890241,What do you think is on the rug?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the rug?"")"
2526302,Is the cake to the left of the people that are wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake to the left of the people that are wearing a hat?"")"
11517468,Who is riding the horse?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the horse?"")"
4131880,What sauce is made of plastic?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sauce is made of plastic?"")"
7513454,Are there men to the left of the device in the center?," # contains a relation (left, right, center, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the device in the center?"")"
7426746,What color is the small kitten?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the small kitten?"")"
889506,Is the candle on a cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the candle on a cake?"")"
16162516,What's the guy in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the guy in?"")"
16496407,Is there a bicycle to the left of the white car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bicycle to the left of the white car?"")"
1393948,Is the color of the bush different than the frame?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the bush different than the frame?"")"
2434880,What is the vegetable to the right of the plate on the left side called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the right of the plate on the left side called?"")"
9649068,Is the cake to the left or to the right of the man that is wearing jeans?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake to the left or to the right of the man that is wearing jeans?"")"
19675004,Which color is the ball?," # returns the color of the ball
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch.simple_query(""Which color is the ball?"")
    return ball_patches[0].simple_query(""Which color is the ball?"")"
289832,The man to the right of the racket is about to hit what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the right of the racket is about to hit what?"")"
18549660,Are there both fences and elephants in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence and is_elephant)"
12171914,Is the color of the shirt different than the uniform?," # uniform is a general term, so query directly
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than the uniform?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    uniform_color = image_patch.simple_query(""What is the color of the uniform?"")
    return bool_to_yesno(shirt_color != uniform_color)"
6182019,Do you see either a fence or a surfboard in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") or image_patch.exists(""surfboard""))"
11973285,What is that blender on?," # blender is on the counter
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is that blender on?"")"
14903925,Does the man that is to the left of the can seem to be sitting?," # contains a relation (left of, sitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man that is to the left of the can seem to be sitting?"")"
19999852,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
15210364,Is the white boat to the right or to the left of the people who are sitting on the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white boat to the right or to the left of the people who are sitting on the bench?"")"
888788,Do you see both windows and cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window and is_car)"
8697470,What animal is the coat on?," # coat is a type of clothing
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What animal is the coat on?"")
    return coat_patches[0].simple_query(""What animal is the coat on?"") # crop would include the coat so keep it in the query"
9790643,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
5426409,Are the scissors red and small?," # returns yes or no
    image_patch = ImagePatch(image)
    scissors_patches = image_patch.find(""scissors"")
    # Question assumes only one scissors patch
    if len(scissors_patches) == 0:
        # If no scissors are found, query the image directly
        return image_patch.simple_query(""Are the scissors red and small?"")
    return bool_to_yesno(scissors_patches[0].verify_property(""scissors"", ""red"") and scissors_patches[0].verify_property(""scissors"", ""small""))"
1987179,What appliance is to the right of the tray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the tray?"")"
11204127,Who is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding?"")"
7955707,Is there a woman or a chair in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_woman or is_chair)"
2374785,Do you see any curtains to the right of the shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any curtains to the right of the shelf?"")"
3322388,What is hanging on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging on the wall?"")"
71016665,The toothpaste is in what?," # container
    image_patch = ImagePatch(image)
    toothpaste_patches = image_patch.find(""toothpaste"")
    # Question assumes only one toothpaste patch
    if len(toothpaste_patches) == 0:
        # If no toothpaste is found, query the image directly
        return image_patch.simple_query(""The toothpaste is in what?"")
    return toothpaste_patches[0].simple_query(""The toothpaste is in what?"") # crop would include the container so keep it in the query"
665554,What are the men doing?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What are the men doing?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""What are the men doing?"") # crop would include the man so keep it in the query"
16921208,What's in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the trees?"")"
1491901,Does the plastic plate to the right of the cup look white?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the plastic plate to the right of the cup look white?"")"
7770375,Who is the bottle in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the bottle in front of?"")"
5928680,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
16247153,What vegetable is to the right of the fresh potatoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the right of the fresh potatoes?"")"
11981506,Are there fences behind the blue car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.exists(""blue car""))"
12292664,Who is skiing?," # contains a relation (skiing with, skiing near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing?"")"
435785,"Which kind of animal is grazing, the cow or the elephant?"," # contains a relation (grazing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is grazing, the cow or the elephant?"")"
5920885,Are there any pictures or chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture"") or image_patch.exists(""chair""))"
9185615,Which place is the photo at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is the photo at?"")"
764614,Are there any horses in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse in the field"")) # crop would include the field so keep it in the query"
18266844,What type of fast food is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of fast food is this?"")"
68418,On which side is the person?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""On which side is the person?"")
    return ""left"" if person_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
7896683,Are there white lamps or bookcases?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_lamp = image_patch.exists(""white lamp"")
    is_bookcase = image_patch.exists(""bookcase"")
    return bool_to_yesno(is_white_lamp or is_bookcase)"
5569411,Is the car to the right or to the left of the person that is wearing pants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the right or to the left of the person that is wearing pants?"")"
6873415,What is on the pavement?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pavement?"")"
1850745,"What type of clothing is not short sleeved, the jersey or the shirt?"," # contains a relation (not, short sleeved, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is not short sleeved, the jersey or the shirt?"")"
5500269,Which kind of vehicle is to the left of the tower?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the tower?"")"
16796410,The sleeveless dress has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sleeveless dress has which color?"")"
6303898,Are there either any bananas or fruits?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_banana = image_patch.exists(""banana"")
    is_fruit = image_patch.exists(""fruit"")
    return bool_to_yesno(is_banana or is_fruit)"
17961341,"In which part of the image is the child, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the child, the top or the bottom?"")"
9329996,Do you see either toothbrushes or boys in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_toothbrush = image_patch.exists(""toothbrush"")
    is_boy = image_patch.exists(""boy"")
    return bool_to_yesno(is_toothbrush or is_boy)"
17476912,What is the device to the right of the girl that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the girl that is wearing a shirt?"")"
1024576,What is this vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this vehicle called?"")"
2875763,Is the gray elephant to the right or to the left of the people in the center of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray elephant to the right or to the left of the people in the center of the image?"")"
19997403,What kind of furniture is right to the table?," # contains a relation (right to, left to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is right to the table?"")"
19470838,On which side is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
111021474,Is the fence on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left or on the right?"")"
81026449,Do you see a door there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
935188,Which kind of furniture is in front of the refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in front of the refrigerator?"")"
61035140,Is there any brown grass or mud?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown grass"") or image_patch.exists(""mud""))"
171056764,Is the skier to the right or to the left of the person in the middle?," # assumes one person in the middle
    image_patch = ImagePatch(image)
    skier_patches = image_patch.find(""skier"")
    # Question assumes only one skier patch
    if len(skier_patches) == 0:
        # If no skier is found, query the image directly
        return image_patch.simple_query(""Is the skier to the right or to the left of the person in the middle?"")
    skier_patch = skier_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the skier to the right or to the left of the person in the middle?"")
    person_patch = person_patches[0]
    if skier_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
3775710,Do you see both cabinets and drawers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"")
    is_drawer = image_patch.exists(""drawer"")
    return bool_to_yesno(is_cabinet and is_drawer)"
15418917,Does the animal made of wood look fake?," # contains a relation (made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal made of wood look fake?"")"
6346786,Which kind of furniture is to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the television?"")"
2190371,What's hanging from the ceiling?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's hanging from the ceiling?"")"
7169518,Who is wearing eye glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing eye glasses?"")"
17292874,What is the vegetable to the left of the potatoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the potatoes?"")"
16877399,Is the color of the shirt different than that of the outfit?," # shirt and outfit are assumed to be the same object
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than that of the outfit?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    outfit_patches = image_patch.find(""outfit"")
    # Question assumes only one outfit patch
    if len(outfit_patches) == 0:
        # If no outfit is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than that of the outfit?"")
    outfit_color = outfit_patches[0].simple_query(""What is the color of the outfit?"")
    return bool_to_yesno(shirt_color != outfit_color)"
2606784,What is the vase made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vase made of?"")"
91036163,Is the toy on the right side?," # assumes only one toy patch
    image_patch = ImagePatch(image)
    toy_patches = image_patch.find(""toy"")
    if len(toy_patches) == 0:
        # If no toy is found, query the image directly
        return image_patch.simple_query(""Is the toy on the right side?"")
    toy_patch = toy_patches[0]
    if toy_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
9865509,Which kind of furniture isn't blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture isn't blue?"")"
15258245,Does the cow's nose seem to be white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cow's nose seem to be white?"")"
10821206,Are the flowers white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the flowers white?"") == ""yes"")"
10683926,Is the man that is to the left of the woman wearing a hat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the woman wearing a hat?"")"
13299090,Is the shirt blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt blue?"")"
6548643,On which side of the photo are the people?," # left or right
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people are found, query the image directly
        return image_patch.simple_query(""On which side of the photo are the people?"")
    if people_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2427976,Which kind of food is to the right of the spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the spoon?"")"
4432893,Is there a mirror on the pole?," # mirror is on the pole
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is there a mirror on the pole?"")
    return mirror_patches[0].simple_query(""Is there a mirror on the pole?"") # crop would include the pole so keep it in the query"
15603609,Do you see dogs to the left of the person that stands behind the cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see dogs to the left of the person that stands behind the cart?"")"
899097,What device is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is this?"")"
587958,Is there any meat in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""meat""))"
18824618,In which part is the empty bottle?," # empty bottle
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""In which part is the empty bottle?"")
    if bottle_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
8981460,What is the piece of furniture that is to the right of the drink on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the right of the drink on the left side?"")"
4715086,Do you see both skateboards and tissue boxes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_tissue_box = image_patch.exists(""tissue box"")
    return bool_to_yesno(is_skateboard and is_tissue_box)"
10786301,What is the sink made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sink made of?"")"
11134138,Which place is pictured?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is pictured?"")"
2124362,Is the cup to the right of a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the right of a plate?"")"
1046046,What vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is it?"")"
15109605,On which side of the image is the water glass?," # left or right
    image_patch = ImagePatch(image)
    water_glass_patches = image_patch.find(""water glass"")
    # Question assumes only one water glass patch
    if len(water_glass_patches) == 0:
        # If no water glass is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the water glass?"")
    if water_glass_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6893444,Which side of the picture is the olive on?," # left or right
    image_patch = ImagePatch(image)
    olive_patches = image_patch.find(""olive"")
    # Question assumes only one olive patch
    if len(olive_patches) == 0:
        # If no olive is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the olive on?"")
    olive_patch = olive_patches[0]
    horizontal_center = image_patch.horizontal_center
    if olive_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
2916589,Is there a lamp or a couch in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lamp = image_patch.exists(""lamp"")
    is_couch = image_patch.exists(""couch"")
    return bool_to_yesno(is_lamp or is_couch)"
14322984,What is located on the edge of the smooth table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on the edge of the smooth table?"")"
4767843,Are there any trains that are blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blue train"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
16300260,Is the elephant to the left of the other elephants facing front?," # elephant is facing front
    image_patch = ImagePatch(image)
    elephant_patches = image_patch.find(""elephant"")
    # Question assumes only one elephant patch
    if len(elephant_patches) == 0:
        # If no elephant is found, query the image directly
        return image_patch.simple_query(""Is the elephant to the left of the other elephants facing front?"")
    for elephant_patch in elephant_patches:
        other_elephant_patches = image_patch.find(""elephant"")
        for other_elephant_patch in other_elephant_patches:
            if other_elephant_patch != elephant_patch:
                if other_elephant_patch.horizontal_center > elephant_patch.horizontal_center:
                    return ""yes""
    return ""no"""
10696042,Who holds the frisbee of the man?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the frisbee of the man?"")"
14713102,Is the bicycle on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle on the right or on the left?"")"
16567223,What type of clothing is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is green?"")"
4581452,What is the color of that bench?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of that bench?"")"
19143598,Is the color of the curtain the same as that of the mattress?," # returns yes or no
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Is the color of the curtain the same as that of the mattress?"")
    curtain_color = curtain_patches[0].simple_query(""What is the color of the curtain?"")
    mattress_patches = image_patch.find(""mattress"")
    # Question assumes only one mattress patch
    if len(mattress_patches) == 0:
        # If no mattress is found, query the image directly
        return image_patch.simple_query(""Is the color of the curtain the same as that of the mattress?"")
    mattress_color = mattress_patches[0].simple_query(""What is the color of the mattress?"")
    return bool_to_yesno(curtain_color == mattress_color)"
81009776,Are the red flowers in a planter?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the red flowers in a planter?"")"
14623234,Is the door orange and open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the door orange and open?"")"
8860439,What place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is it?"")"
4170060,"Where in the picture is the tower, on the right or on the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the tower, on the right or on the left?"")"
12370377,What is on the pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pole?"")"
378556,"On which side is the broccoli, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the broccoli, the right or the left?"")"
6182151,Who is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the man?"")"
12226526,What is the napkin dispenser on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the napkin dispenser on?"")"
4692250,Who is wearing the helmet?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who is wearing the helmet?"")
    helmet_patch = helmet_patches[0]
    return helmet_patch.simple_query(""Who is wearing the helmet?"") # crop would include the helmet so keep it in the query"
2244516,Is the DVD player underneath a printer?," # contains a relation (underneath, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the DVD player underneath a printer?"")"
2679730,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
1138626,Does that shirt look black?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does that shirt look black?"")
    return bool_to_yesno(shirt_patches[0].verify_property(""shirt"", ""black""))"
5969682,Are there cabinets behind the woman that is wearing glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinets"") and image_patch.exists(""woman wearing glasses""))"
8558280,Which kind of device is to the left of the DVD players?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the DVD players?"")"
19206071,Are the shoes white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the shoes white?"") == ""yes"")"
7706008,What kind of vehicle is to the left of the oven that is on the right side?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the oven that is on the right side?"")"
15654379,Are both the pillow and the comforter the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Are both the pillow and the comforter the same color?"")
    pillow_patch = pillow_patches[0]
    comforter_patches = image_patch.find(""comforter"")
    # Question assumes only one comforter patch
    if len(comforter_patches) == 0:
        return ""no""
    comforter_patch = comforter_patches[0]
    return bool_to_yesno(pillow_patch.verify_property(""pillow"", ""color"") == comforter_patch.verify_property(""comforter"", ""color""))"
6571522,Are there both brownies and bowls in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brownie = image_patch.exists(""brownie"")
    is_bowl = image_patch.exists(""bowl"")
    return bool_to_yesno(is_brownie and is_bowl)"
6888966,"On which side of the image is the car, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the car, the left or the right?"")"
12718351,What color is the animal in the zoo?," # contains a relation (in the zoo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the animal in the zoo?"")"
23598,What kind of furniture has the same color as the television that is not turned-on?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture has the same color as the television that is not turned-on?"")"
11583694,Is the white purse to the right or to the left of the woman that is wearing pants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white purse to the right or to the left of the woman that is wearing pants?"")"
18431205,Does the book to the right of the people have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Does the book to the right of the people have black color?"")
    for book_patch in book_patches:
        people_patches = image_patch.find(""people"")
        for people_patch in people_patches:
            if book_patch.horizontal_center > people_patch.horizontal_center:
                return bool_to_yesno(book_patch.verify_property(""book"", ""black""))
    return ""no"""
9130232,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is white?"")"
3578260,Are there any bicycles to the left of the bag that is held by the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bicycle"") and image_patch.exists(""bag"") and image_patch.exists(""woman"")) # assumes one bag and one woman patch"
3743899,Do you see bottles under the dessert that looks round?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see bottles under the dessert that looks round?"")"
4507705,"What is this, a fire hydrant or a traffic light?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a fire hydrant or a traffic light?"")"
1381937,What is the kitten touching?," # contains a relation (touching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kitten touching?"")"
17175256,Which kind of device is the man behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the man behind of?"")"
4647275,Are there eggs or potatoes that are gold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gold_egg = image_patch.exists(""egg"") and image_patch.exists(""gold"")
    is_gold_potato = image_patch.exists(""potato"") and image_patch.exists(""gold"")
    return bool_to_yesno(is_gold_egg or is_gold_potato)"
7174054,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
18958009,Are there either buckets or helmets in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bucket"") or image_patch.exists(""helmet""))"
149507,Are there any clock towers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""clock tower"")) # Question assumes only one clock tower patch"
11652374,How thick is the crust?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How thick is the crust?"")"
4884627,What animal is the dog staring at?," # contains a relation (staring at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the dog staring at?"")"
9110391,What is the piece of furniture that the man is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the man is on?"")"
17320649,On which side of the image is the mirror?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the mirror?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
19455246,Who is on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard?"")"
1971563,Are there any folding chairs or knee pads in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""folding chair"") or image_patch.exists(""knee pad"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
6140020,Are the visitors to the left of the man on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the visitors to the left of the man on the right?"")"
15255273,Which kind of vehicle is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is large?"")"
5700645,"Which side of the photo is the umpire on, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the umpire on, the right or the left?"")"
8955048,What are the weather conditions in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the weather conditions in the photo?"")"
131054666,Are there both a chair and a spoon in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_spoon = image_patch.exists(""spoon"")
    return bool_to_yesno(is_chair and is_spoon)"
14170727,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
690514,Which kind of appliance is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is on the table?"")"
8606114,In which part is the chair?," # assumes only one chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""In which part is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
6606347,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
14581245,Who is on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard?"")"
4478554,Is the color of the shirt different than that of the cap?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one shirt and cap patch
    if len(shirt_patches) == 0 or len(cap_patches) == 0:
        # If no shirt or cap is found, query the image directly
        return image_patch.simple_query(""Is the color of the shirt different than that of the cap?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    cap_color = cap_patches[0].simple_query(""What is the color of the cap?"")
    return bool_to_yesno(shirt_color != cap_color)"
710649,Is the curtain different in color than the keyboard?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain different in color than the keyboard?"")"
2943734,What is the color of the necktie?," # returns the color of the necktie
    image_patch = ImagePatch(image)
    necktie_patches = image_patch.find(""necktie"")
    # Question assumes only one necktie patch
    if len(necktie_patches) == 0:
        # If no necktie is found, query the image directly
        return image_patch.simple_query(""What is the color of the necktie?"")
    return necktie_patches[0].simple_query(""What is the color of the necktie?"")"
3113598,Which color does the chair that is not little have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which color does the chair that is not little have?"")
    for chair_patch in chair_patches:
        if chair_patch.simple_query(""Is the chair little?"") == ""no"":
            return chair_patch.simple_query(""What color is the chair?"")
    # If no chair is not little, pick the first chair
    return chair_patches[0].simple_query(""What color is the chair?"")"
14907065,How big is the carrot to the right of the other carrot?," # returns a string
    image_patch = ImagePatch(image)
    carrot_patches = image_patch.find(""carrot"")
    # Question assumes only two carrot patches
    if len(carrot_patches) < 2:
        # If less than two carrots are found, query the image directly
        return image_patch.simple_query(""How big is the carrot to the right of the other carrot?"")
    right_patch = carrot_patches[1]
    left_patch = carrot_patches[0]
    return right_patch.simple_query(""How big is the carrot to the right of the other carrot?"") # crop would include the other carrot so keep it in the query"
18187045,Is there any bench or lamp in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""lamp""))"
13942355,What's the guy playing?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the guy playing?"")"
3746016,Do you see tissues to the left of the toilet?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see tissues to the left of the toilet?"")"
1196688,Is the brown cat on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown cat on the left side?"")"
10624535,What is the vehicle that is parked on the ground?," # contains a relation (parked on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is parked on the ground?"")"
10334968,Is the police officer to the left or to the right of the man on the right side?," # assumes only one man on the right
    image_patch = ImagePatch(image)
    police_officer_patches = image_patch.find(""police officer"")
    # Question assumes only one police officer patch
    if len(police_officer_patches) == 0:
        # If no police officer is found, query the image directly
        return image_patch.simple_query(""Is the police officer to the left or to the right of the man on the right side?"")
    police_officer_patch = police_officer_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the police officer to the left or to the right of the man on the right side?"")
    man_patch = man_patches[0]
    if police_officer_patch.horizontal_center < man_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10237691,Are there windows or clocks in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_window or is_clock)"
3369500,Is the silver bucket to the left of a fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver bucket to the left of a fork?"")"
17822666,What is in front of the window?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the window?"")"
8247982,What is the animal to the left of the sofa on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the sofa on the right?"")"
9870995,Does the bag to the right of the other bag look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag to the right of the other bag look black?"")"
1301546,Is the window covered by the white blinds that are to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window covered by the white blinds that are to the right of the pillow?"")"
4995420,Is the baseball bat that looks black and red made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baseball bat that looks black and red made of wood?"")"
10793707,What kind of vehicle is to the left of the people that are to the left of the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the people that are to the left of the umbrella?"")"
1776248,Is the man to the left or to the right of the red car?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the red car?"")"
1854140,Is there a clock in this picture that is small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a clock in this picture that is small?"")"
6580080,Are there people to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""person""))"
6477773,Does the tablecloth that is to the left of the potato salad appear to be white?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tablecloth that is to the left of the potato salad appear to be white?"")"
1970012,Do you see both fences and rackets there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_fence and is_racket)"
18530167,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
16861094,Is the man on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left?"")"
16437602,Do you see either a white surfboard or helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_surfboard = image_patch.exists(""white surfboard"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_white_surfboard or is_helmet)"
3640426,What color is the motorcycle the man is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the motorcycle the man is riding?"")"
12738876,Is the green bag to the left of the young man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green bag to the left of the young man?"")"
13121422,What kind of furniture is the fence behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the fence behind of?"")"
1936917,What is the food on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the plate?"")"
15204229,What are the leaves on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the leaves on?"")"
7834391,Is the plant inside a vase?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plant inside a vase?"")"
16598732,Is the person that is to the right of the glasses holding a camera?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the right of the glasses holding a camera?"")"
18875288,Who is on the motorcycle?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the motorcycle?"")"
684980,What type of meat is to the left of the small peppers?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of meat is to the left of the small peppers?"")"
16920336,The coat has what color?," # coat is a common object
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""The coat has what color?"")
    return coat_patches[0].simple_query(""What color is the coat?"") # crop would include the coat so keep it in the query"
14793184,What food is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is on the table?"")"
2162930,What is the man to the left of the mobile phone wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the mobile phone wearing?"")"
11024069,What kind of vegetable is on the bun?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is on the bun?"")"
626514,What is the man to the left of the skateboarder holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the skateboarder holding?"")"
18354162,What is on the cage made of metal?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cage made of metal?"")"
9963260,Are the post and the pole made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the post and the pole made of the same material?"")"
14981474,What kind of watercraft is in front of the hill?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of watercraft is in front of the hill?"")"
11438172,What is the person doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person doing?"")"
6729186,Is the color of the wall different than the color of the door?," # returns yes or no
    image_patch = ImagePatch(image)
    wall_patches = image_patch.find(""wall"")
    # Question assumes only one wall patch
    if len(wall_patches) == 0:
        # If no wall is found, query the image directly
        return image_patch.simple_query(""Is the color of the wall different than the color of the door?"")
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        return ""no""
    return bool_to_yesno(wall_patches[0].verify_property(""wall"", ""color"") != door_patches[0].verify_property(""door"", ""color""))"
9691192,What is the item of furniture to the left of the nightstand the pillow is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the nightstand the pillow is to the right of?"")"
10401190,On which side is the person?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""On which side is the person?"")
    return ""left"" if person_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
19935572,Is the tie blue and checkered?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tie blue and checkered?"")"
9170591,Are there both tea kettles and cabinets in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tea_kettle = image_patch.exists(""tea kettle"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_tea_kettle and is_cabinet)"
1417212,Who is holding the red bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the red bat?"")"
1581778,Is the bus to the left or to the right of the metal fence?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus to the left or to the right of the metal fence?"")"
71026101,Is the laptop computer to the left or to the right of the cup that is to the right of the telephone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop computer to the left or to the right of the cup that is to the right of the telephone?"")"
7452909,Is the keyboard in the top of the photo?," # keyboard is a common object
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""Is the keyboard in the top of the photo?"")
    if keyboard_patches[0].vertical_center > image_patch.vertical_center:
        return ""yes""
    else:
        return ""no"""
940842,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
1346751,What is on the street sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the street sign?"")"
673211,Are there any people to the left of the man in the bottom of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.find(""man"")[0].vertical_center < image_patch.vertical_center)"
4908076,Is there a blue blender or bag?," # blender or bag
    image_patch = ImagePatch(image)
    is_blue_blender = image_patch.exists(""blue blender"")
    is_blue_bag = image_patch.exists(""blue bag"")
    return bool_to_yesno(is_blue_blender or is_blue_bag)"
11521504,What covers the hot dogs?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What covers the hot dogs?"")"
14623094,What is the pink piece of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pink piece of furniture?"")"
470048,Are there any trash cans in the park?," # contains a relation (in the park), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""trash can""))"
13274873,Is the beer to the left of a bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beer to the left of a bottle?"")"
18296577,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
5540779,Who is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the hat?"")"
2403190,What is on the motorcycle?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the motorcycle?"")"
5897081,On which side of the picture is the shelf?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the shelf?"")
    if shelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
98650,Which side of the photo is the fence on?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the fence on?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6920931,Does the license plate look yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""license plate"", ""yellow""))"
19750397,Is the man to the right of the car standing in front of a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the car standing in front of a truck?"")"
644814,What food is on the bananas?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is on the bananas?"")"
16828488,What do the locomotive and the car have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the locomotive and the car have in common?"")"
16688361,Are the headphones black and small?," # returns yes or no
    image_patch = ImagePatch(image)
    headphones_patches = image_patch.find(""headphones"")
    # Question assumes only one headphones patch
    if len(headphones_patches) == 0:
        # If no headphones are found, query the image directly
        return image_patch.simple_query(""Are the headphones black and small?"")
    return bool_to_yesno(headphones_patches[0].verify_property(""headphones"", ""black"") and headphones_patches[0].verify_property(""headphones"", ""small""))"
8935775,Is the cake decorated by the Oreo on the left?," # contains a relation (decorated by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake decorated by the Oreo on the left?"")"
922247,What is common to the bowl and the book?," # assumes only one bowl and one book
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    book_patches = image_patch.find(""book"")
    # Question assumes only one bowl and one book patch
    if len(bowl_patches) == 0 or len(book_patches) == 0:
        # If no bowl or book is found, query the image directly
        return image_patch.simple_query(""What is common to the bowl and the book?"")
    bowl_patch = bowl_patches[0]
    book_patch = book_patches[0]
    common_properties = set(bowl_patch.simple_query(""What properties does the bowl have?"").split("", "")) & set(book_patch.simple_query(""What properties does the book have?"").split("", ""))
    return common_properties[0]"
11813700,Is the bench to the right of the girl both wooden and red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench to the right of the girl both wooden and red?"")"
17357197,What is the name of the device to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device to the right of the chair?"")"
10154693,Is the clock blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock blue?"")"
13971427,Are there both cars and windows in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_car and is_window)"
9768048,Is the vehicle by the water long and blue?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle by the water long and blue?"")"
11903260,Is the coffee mug on the right of the picture?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the coffee mug on the right of the picture?"")"
8178359,Do these animals have different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do these animals have different types?"")"
2623679,Does the person to the left of the woman wear a suit?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person to the left of the woman wear a suit?"")"
19303780,What is covered with snow?," # contains a relation (covered with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with snow?"")"
3976307,What animal is in the grass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the grass?"")"
183565,What does she hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does she hold?"")"
411994,Is it an indoors or outdoors picture?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors picture?"")"
11424937,Does the dog that is to the right of the other dog look white or maybe brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog that is to the right of the other dog look white or maybe brown?"")"
17850065,Which kind of device is to the left of the screen?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the screen?"")"
18740100,What is the fruit to the left of the child in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit to the left of the child in the picture?"")"
15851267,Are there any skateboarders in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skateboarder in the air"")) # contains a relation (in the air), so ask directly"
1899479,Is there a green door in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a green door in this image?"")"
16497377,Are there any chairs to the left of the person the bag is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any chairs to the left of the person the bag is to the right of?"")"
692852,What is the food to the left of the person that wears jeans?," # contains a relation (left of, wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the left of the person that wears jeans?"")"
1137755,Is this a bed or a desk?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a desk?"")"
287591,Which kind of furniture is under the spoon?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is under the spoon?"")"
10469796,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
522631,Are there cars or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_car or is_bag)"
7264770,Is the small drawer wooden and white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small drawer wooden and white?"")"
3209204,Are there any men or women that are sitting?," # contains a relation (sitting), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") or image_patch.exists(""woman""))"
71017137,Do you see strollers or umbrellas there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stroller"") or image_patch.exists(""umbrella""))"
322189,What is under the wood chair?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the wood chair?"")"
1493501,Do the pants and the girl shoes have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the pants and the girl shoes have a different colors?"")) # crop would include the shoes so keep it in the query"
9700071,Are there both benches and mirrors in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_bench and is_mirror)"
5955676,What is the toy that is to the left of the man that is wearing a backpack called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the toy that is to the left of the man that is wearing a backpack called?"")"
13775546,What is the satellite dish on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the satellite dish on?"")"
11626790,"On which side of the image is the egg, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the egg, the left or the right?"")"
14932778,Is the American flag to the right of the woman in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the American flag to the right of the woman in this image?"")"
18646834,Is the car on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car on the left of the photo?"")"
10134652,Is the umbrella to the right or to the left of the vehicle on the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the right or to the left of the vehicle on the road?"")"
4417977,Which side of the picture is the controller on?," # left or right
    image_patch = ImagePatch(image)
    controller_patches = image_patch.find(""controller"")
    # Question assumes only one controller patch
    if len(controller_patches) == 0:
        # If no controller is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the controller on?"")
    if controller_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
736077,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1635438,What's the child holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the child holding?"")"
3978027,"On which side is the black device, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the black device, the left or the right?"")"
2479870,Is there a plate on the table below the shelves?," # contains a relation (on, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate on the table below the shelves?"")"
13201477,Is the woman riding a sheep?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman riding a sheep?"")"
2637528,Are there any gray cars or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gray_car = image_patch.exists(""gray car"")
    is_gray_train = image_patch.exists(""gray train"")
    return bool_to_yesno(is_gray_car or is_gray_train)"
7927156,Is the shower curtain on the right or on the left side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shower curtain on the right or on the left side of the picture?"")"
13721122,What color is the cookie?," # returns the color of the cookie
    image_patch = ImagePatch(image)
    cookie_patches = image_patch.find(""cookie"")
    # Question assumes only one cookie patch
    if len(cookie_patches) == 0:
        # If no cookie is found, query the image directly
        return image_patch.simple_query(""What color is the cookie?"")
    return cookie_patches[0].simple_query(""What color is the cookie?"") # crop would include the cookie so keep it in the query"
6903581,What is that woman on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that woman on?"")"
3399680,What is the color of the beak?," # returns the color of the beak
    image_patch = ImagePatch(image)
    beak_patches = image_patch.find(""beak"")
    # Question assumes only one beak patch
    if len(beak_patches) == 0:
        # If no beak is found, query the image directly
        return image_patch.simple_query(""What is the color of the beak?"")
    return beak_patches[0].simple_query(""What is the color of the beak?"")"
18594787,Do you see any wallets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""wallet""))"
13389514,Which side of the photo is the pillow on?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the pillow on?"")
    if pillow_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1110703,Do you see any computer monitors in front of the wire?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any computer monitors in front of the wire?"")"
14509829,What is on the appliance that is to the right of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the appliance that is to the right of the plate?"")"
15107804,Does the device in front of the wall appear to be off?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device in front of the wall appear to be off?"")"
1876539,Is the mirror to the right or to the left of the picture that is presented in the photo?," # mirror and picture
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is the mirror to the right or to the left of the picture that is presented in the photo?"")
    mirror_patch = mirror_patches[0]
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        return image_patch.simple_query(""Is the mirror to the right or to the left of the picture that is presented in the photo?"")
    picture_patch = picture_patches[0]
    if mirror_patch.horizontal_center > picture_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
5227932,What vehicle is to the right of the vehicle below the street light?," # contains a relation (above, below, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the vehicle below the street light?"")"
736905,Is the frisbee to the left or to the right of the man in the top of the photo?," # contains a relation (left, right, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee to the left or to the right of the man in the top of the photo?"")"
8280009,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
12737957,Is the playing man behind the net wearing a watch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the playing man behind the net wearing a watch?"")"
18157430,Is there a racket in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""racket""))"
19503932,What are the mountains in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the mountains in front of?"")"
4247310,What is the color of the clock below the sky?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the clock below the sky?"")"
17665500,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
13723684,What is the ketchup bottle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ketchup bottle on?"")"
17112882,Is there broccoli to the right of the tomatoes the cheese is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there broccoli to the right of the tomatoes the cheese is to the left of?"")"
10994344,Who is riding the bike?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the bike?"")"
4405196,Are there plates or bottles that are made of glass?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_bottle = image_patch.exists(""bottle"")
    is_glass_plate = False
    is_glass_bottle = False
    if is_plate:
        for plate_patch in image_patch.find(""plate""):
            is_glass = plate_patch.verify_property(""plate"", ""glass"")
            is_glass_plate = is_glass_plate or is_glass
    if is_bottle:
        for bottle_patch in image_patch.find(""bottle""):
            is_glass = bottle_patch.verify_property(""bottle"", ""glass"")
            is_glass_bottle = is_glass_bottle or is_glass
    return bool_to_yesno(is_glass_plate or is_glass_bottle)"
1682774,Which kind of furniture is not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not red?"")"
19903431,What color is the helmet the man wears?," # helmet is not found, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the helmet the man wears?"")"
19781361,Is the small container to the right of the cooking utensils in the bottom of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small container to the right of the cooking utensils in the bottom of the picture?"")"
11158067,Is the cup in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup in the top part of the image?"")"
6190700,Are there pillows or lamps in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_pillow or is_lamp)"
12151529,How large is the bowl that is on the table?," # returns a string
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""How large is the bowl that is on the table?"")
    return bowl_patches[0].simple_query(""How large is the bowl that is on the table?"") # crop would include the table so keep it in the query"
19894127,Where is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this?"") # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5714406,What color is the shoe?," # returns the color of the shoe
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoe is found, query the image directly
        return image_patch.simple_query(""What color is the shoe?"")
    return shoe_patches[0].simple_query(""What color is the shoe?"") # crop would include the shoe so keep it in the query"
2728367,Is the plastic container to the right of a faucet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic container to the right of a faucet?"")"
7485523,Who holds the baby?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the baby?"")"
17416429,Does the skirt have a different color than the bowl?," # returns yes or no
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""Does the skirt have a different color than the bowl?"")
    for skirt_patch in skirt_patches:
        is_different_color = (skirt_patch.simple_query(""Is the skirt a different color than the bowl?"") == ""yes"")
        if is_different_color:
            return ""yes""
    return ""no"""
18390581,What animal is on the traffic sign?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the traffic sign?"")"
6474901,What piece of furniture is covered?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is covered?"")"
15582855,Which color does the vehicle which is to the left of the train have?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the vehicle which is to the left of the train have?"")"
17980005,Which kind of device is the paper covering?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the paper covering?"")"
9438658,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17226438,Is the yellow vehicle on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow vehicle on the right side of the picture?"")"
16320401,"On which side is the green vegetable, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the green vegetable, the right or the left?"")"
121018083,What is on the paper?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the paper?"")"
18964774,What's the bridge made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bridge made of?"")"
1360230,Is the plate in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in the top of the picture?"")"
6208043,The pillow in the top part is what color?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The pillow in the top part is what color?"")"
31072717,What do you think is in the vase on the left of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is in the vase on the left of the image?"")"
18129559,What is she cutting?," # contains a relation (cutting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is she cutting?"")"
16196066,What is the item of furniture to the left of the bags which are to the left of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the bags which are to the left of the television?"")"
12708906,"On which side is the white toilet, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white toilet, the right or the left?"")"
9901198,What's the sink made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the sink made of?"")"
15202500,Does the bag made of plastic look green?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag made of plastic look green?"")"
1988907,On which side of the picture is the tennis racket?," # left or right
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the tennis racket?"")
    return ""left"" if racket_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13804545,Is the truck bed to the left or to the right of the mirror?," # mirror is on the right
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""Is the truck bed to the left or to the right of the mirror?"")
    for truck_patch in truck_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > truck_patch.horizontal_center:
                return ""left""
    return ""right"""
10158530,What is the color of the colorful tie?," # returns the color of the tie
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        # If no tie is found, query the image directly
        return image_patch.simple_query(""What is the color of the colorful tie?"")
    return tie_patches[0].simple_query(""What is the color of the colorful tie?"") # crop would include the tie so keep it in the query"
14527621,What is in the bowl that is in the bottom part of the photo?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl that is in the bottom part of the photo?"")"
629670,Is the round balloon pink or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the round balloon pink or blue?"")"
19804858,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2214373,Is the person holding a cell phone?," # holds is a relational verb
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person holding a cell phone?"")
    for person_patch in person_patches:
        is_holding_cell_phone = (person_patch.simple_query(""Is the person holding a cell phone?"") == ""yes"")
        if is_holding_cell_phone:
            return ""yes""
    return ""no"""
5663298,Do the food to the left of the orange have brown color and small size?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the food to the left of the orange have brown color and small size?"")"
13472048,Does the zebra that is walking seem to be white and striped?," # contains a relation (walking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra that is walking seem to be white and striped?"")"
11744966,Is the tap on the left of the picture?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tap on the left of the picture?"")"
421218,What do you think is the vegetable that is to the left of the potatoes that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the vegetable that is to the left of the potatoes that are red?"")"
18248672,Are there either goggles or helmets that are black?," # goggles or helmets
    image_patch = ImagePatch(image)
    goggles_patches = image_patch.find(""goggles"")
    helmets_patches = image_patch.find(""helmet"")
    goggles_or_helmets = goggles_patches + helmets_patches
    is_black = False
    for goggles_or_helmet in goggles_or_helmets:
        is_black = is_black or goggles_or_helmet.verify_property(""goggles"" if goggles_or_helmet.left == 0 else ""helmet"", ""black"")
    return bool_to_yesno(is_black)"
15447634,What is the animal in front of the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in front of the grass?"")"
629810,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1114686,What is the black article of clothing in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black article of clothing in this photograph?"")"
9177978,Are there either any trains or fences in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train"") or image_patch.exists(""fence""))"
18775768,Is the screen to the left or to the right of the monitor in the top of the picture?," # contains a relation (left, right, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left or to the right of the monitor in the top of the picture?"")"
8637209,"Which animal is this, a bird or a dog?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animal is this, a bird or a dog?"")"
4395858,What is the name of the animal that is eating the grass?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal that is eating the grass?"")"
367116,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
65918,Is there a scarf or a hat in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_scarf = image_patch.exists(""scarf"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_scarf or is_hat)"
1166180,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11284653,What place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"")"
5376337,Are there either flags or skis?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_flag or is_ski)"
7537702,The jacket the woman is wearing is of which color?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The jacket the woman is wearing is of which color?"")"
3992713,Is the person in the air wearing shorts?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the air wearing shorts?"")"
17796947,Which side of the picture is the hose on?," # left or right
    image_patch = ImagePatch(image)
    hose_patches = image_patch.find(""hose"")
    # Question assumes only one hose patch
    if len(hose_patches) == 0:
        # If no hose is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the hose on?"")
    hose_patch = hose_patches[0]
    if hose_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3785158,Is the old person on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old person on the left or on the right?"")"
15657362,Is there a white window or door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white window or door?"")"
171522,What color is the calm water?," # image is a batch of images
    image_patch = ImagePatch(image[0]) # pick the first image
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""What color is the calm water?"")
    return water_patches[0].simple_query(""What color is the calm water?"") # crop would include the water so keep it in the query"
14292624,Are all these people the same gender?," # gender is not a property of people, so ask directly
    image_patch = ImagePatch(image)
    people_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(people_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Are all these people the same gender?"")
    first_person = people_patches[0]
    for person in people_patches:
        if person.simple_query(""Is the person male?"") != first_person.simple_query(""Is the person male?""):
            return ""no""
    return ""yes"""
6667320,Is there any tall grass or snow in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tall grass"") or image_patch.exists(""snow""))"
1734129,What is the white item of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white item of furniture?"")"
16839705,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
1497224,Which kind of animal is holding the stick?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is holding the stick?"")"
15737104,Which color does that shirt have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does that shirt have?"")"
1881549,Where is the person that is standing standing on?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the person that is standing standing on?"")"
5327963,Where is the plane?," # contains a relation (above, below, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the plane?"")"
111029800,On which side of the photo is the white house?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white house?"")"
1059642,Is the bread in the top part or in the bottom of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bread in the top part or in the bottom of the picture?"")"
1079569,Are there both women and men in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman and is_man)"
1869551,Is the green chair to the left or to the right of the open container on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green chair to the left or to the right of the open container on the table?"")"
9905438,The bench is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bench is in front of what?"")"
15360512,What device is sitting on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is sitting on the table?"")"
19113583,What is the person that is skiing holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is skiing holding?"")"
584284,Is there a spatula that is black?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    spatula_patches = image_patch.find(""spatula"")
    # Question assumes only one spatula patch
    if len(spatula_patches) == 0:
        # If no spatula is found, query the image directly
        return image_patch.simple_query(""Is there a spatula that is black?"")
    return bool_to_yesno(spatula_patches[0].verify_property(""spatula"", ""black""))"
9828021,Which color is the comforter?," # returns the color of the comforter
    image_patch = ImagePatch(image)
    comforter_patches = image_patch.find(""comforter"")
    # Question assumes only one comforter patch
    if len(comforter_patches) == 0:
        # If no comforter is found, query the image directly
        return image_patch.simple_query(""Which color is the comforter?"")
    return comforter_patches[0].simple_query(""Which color is the comforter?"") # crop would include the comforter so keep it in the query"
12944805,Does the road look sandy and paved?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""road"", ""sandy"") and image_patch.verify_property(""road"", ""paved""))"
17639749,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
9950944,Is the computer mouse to the left or to the right of the laptop?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer mouse to the left or to the right of the laptop?"")"
12151379,On which side of the photo is the house?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the house?"")
    house_patch = house_patches[0]
    horizontal_center = image_patch.horizontal_center
    if house_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
1067044,Do you see kites in the clear sky?," # clear sky is a property of the sky
    image_patch = ImagePatch(image)
    kite_patches = image_patch.find(""kite"")
    # Question assumes only one kite patch
    if len(kite_patches) == 0:
        # If no kite is found, query the image directly
        return image_patch.simple_query(""Do you see kites in the clear sky?"")
    return bool_to_yesno(kite_patches[0].verify_property(""kite"", ""clear sky""))"
11336287,Are the people on the left or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people on the left or on the right of the picture?"")"
171039827,What is the food on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on top of the pizza?"")"
17543619,What is in front of the bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the bush?"")"
5246623,The train station is where?," # contains a relation (at, in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The train station is where?"")"
136823,Is there any yellow airplane in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""yellow airplane"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1216402,Is the chair to the right or to the left of the shelf on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the shelf on the right?"")"
3880080,Who is holding the telephone to the right of the book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the telephone to the right of the book?"")"
1485505,Does the dog that is not little appear to be posing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dog that is not little appear to be posing?"")"
1322183,Are there any boats in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
19857507,Are there nuts or snacks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nuts"") or image_patch.exists(""snacks""))"
5751169,Are there any men to the left of the game controller in the bottom part of the picture?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the game controller in the bottom part of the picture?"")"
14191119,What animal is swimming in the river that is gray and brown?," # contains a relation (swimming in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is swimming in the river that is gray and brown?"")"
7316590,What is the child holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child holding?"")"
8838437,What is hanging from the laptop?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging from the laptop?"")"
13884323,What is this man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this man holding?"")"
7395386,Are there both window and a door in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
18865417,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11457364,On which side of the image is the phone?," # left or right
    image_patch = ImagePatch(image)
    phone_patches = image_patch.find(""phone"")
    # Question assumes only one phone patch
    if len(phone_patches) == 0:
        # If no phone is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the phone?"")
    phone_patch = phone_patches[0]
    if phone_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14650302,Is there any can to the right of the pepper grinder in the center of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any can to the right of the pepper grinder in the center of the picture?"")"
18537933,What vehicle is to the right of the car that is in the parking lot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the car that is in the parking lot?"")"
6809713,Is the frisbee to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee to the right of the man?"")"
12725590,What is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the logo on?"")"
10385577,What is the vehicle to the right of the vehicle that is parked in the parking lot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the vehicle that is parked in the parking lot?"")"
3293492,What kind of animal is in front of the appliance that looks white?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the appliance that looks white?"")"
2322702,Is the brown book on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown book on the left or on the right?"")"
7695877,Is there any knife on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any knife on the plate?"")"
7944466,Are there any trucks or trains that are not silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_truck or is_train)"
18477641,Which kind of animal isn't curly?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal isn't curly?"")"
101050507,What is on the appliance behind the lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the appliance behind the lady?"")"
243018,Which type of clothing is not orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is not orange?"")"
3633422,What kind of animal is grazing on the grass?," # contains a relation (grazing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is grazing on the grass?"")"
15727759,What type of drink is the same color as the lettuce that is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of drink is the same color as the lettuce that is on the table?"")"
18385756,Is the uniform different in color than the sign?," # returns yes or no
    image_patch = ImagePatch(image)
    uniform_patches = image_patch.find(""uniform"")
    # Question assumes only one uniform patch
    if len(uniform_patches) == 0:
        # If no uniform is found, query the image directly
        return image_patch.simple_query(""Is the uniform different in color than the sign?"")
    uniform_patch = uniform_patches[0]
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        return ""yes""
    sign_patch = sign_patches[0]
    return bool_to_yesno(uniform_patch.verify_property(""uniform"", ""same_color"") != sign_patch.verify_property(""sign"", ""same_color""))"
16836252,What do the bandana and the frisbee have in common?," # returns a string
    image_patch = ImagePatch(image)
    bandana_patches = image_patch.find(""bandana"")
    # Question assumes only one bandana patch
    if len(bandana_patches) == 0:
        # If no bandana is found, query the image directly
        return image_patch.simple_query(""What do the bandana and the frisbee have in common?"")
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        return image_patch.simple_query(""What do the bandana and the frisbee have in common?"")
    bandana_patch = bandana_patches[0]
    frisbee_patch = frisbee_patches[0]
    common_properties = set(bandana_patch.simple_query(""What properties does the bandana have?"").split("", "")) & set(frisbee_patch.simple_query(""What properties does the frisbee have?"").split("", ""))
    return common_properties[0]"
18615040,Do you see any pictures to the right of the drawers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any pictures to the right of the drawers?"")"
1399964,Which kind of furniture is to the left of the backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the backpack?"")"
17654721,What animal is standing on the ground?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the ground?"")"
15514196,Does the small device look black and open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the small device look black and open?"")"
1777606,Do you see a coat there that is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a coat there that is orange?"")"
4334536,The snow is where?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The snow is where?"")"
13963653,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
6230292,What is the shirtless man wearing?," # contains a relation (shirtless), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shirtless man wearing?"")"
14609103,What is the trash covering?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the trash covering?"")"
11770613,Which side of the photo is the silver knife on?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""silver knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the silver knife on?"")
    knife_patch = knife_patches[0]
    if knife_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
790585,Is the wine glass in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wine glass in the bottom part or in the top of the photo?"")"
7672673,What hangs on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What hangs on the wall?"")"
9113717,Are there both windows and doors in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
11303854,What is the fruit to the left of the yellow banana called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit to the left of the yellow banana called?"")"
1719006,Is the material of the floor the same as the mirror?," # assumes only one mirror and one floor
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    floor_patches = image_patch.find(""floor"")
    if len(mirror_patches) == 0 or len(floor_patches) == 0:
        return ""no""
    mirror_patch = mirror_patches[0]
    floor_patch = floor_patches[0]
    return bool_to_yesno(mirror_patch.simple_query(""What is the material of the mirror?"") == floor_patch.simple_query(""What is the material of the floor?""))"
14154322,What color is the towel the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the towel the man is wearing?"")"
3691938,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
18444992,Is the flamingo in the bottom part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flamingo in the bottom part?"")"
4313867,Do you see letters or skateboards?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_letters = image_patch.exists(""letters"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_letters or is_skateboard)"
12322707,What is the tan appliance called?," # assumes only one tan appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    for appliance_patch in appliance_patches:
        if appliance_patch.simple_query(""What color is the appliance?"") == ""tan"":
            return appliance_patch.simple_query(""What is the tan appliance called?"")
    return image_patch.simple_query(""What is the tan appliance called?"") # if no tan appliance is found, query the image directly"
17846234,Is this place a beach or a park?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this place a beach or a park?"")"
91008395,Are there both birds and elephants in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bird = image_patch.exists(""bird"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_bird and is_elephant)"
885764,Does that tshirt look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that t-shirt look orange?"")"
191021150,Is the cat sniffing a banana?," # contains a relation (sniffing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat sniffing a banana?"")"
18277903,"In which part of the photo is the pillow, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the pillow, the top or the bottom?"")"
18780461,Is the weather clear today?," # clear is a property of weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""clear""))"
13828971,What is the item of furniture below the picture on the right side?," # contains a relation (below, on the right side, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture below the picture on the right side?"")"
14970044,Which color is the umbrella that is not big?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the umbrella that is not big?"")"
9488160,Is there either a brown train or fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_train = image_patch.exists(""brown train"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_brown_train or is_fence)"
8422839,Is the car to the right of the person large and white?," # returns yes or no
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Is the car to the right of the person large and white?"")
    for car_patch in car_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if car_patch.horizontal_center > person_patch.horizontal_center:
                return bool_to_yesno(car_patch.verify_property(""car"", ""large"") and car_patch.verify_property(""car"", ""white""))
    return ""no"""
440419,What color do you think the bridge is?," # bridge is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the bridge is?"")"
15690050,Are there both windows and doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
5723046,Is there either a silver DVD player or cell phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dvd_player = image_patch.exists(""silver DVD player"")
    is_cell_phone = image_patch.exists(""silver cell phone"")
    return bool_to_yesno(is_dvd_player or is_cell_phone)"
6431590,Is the dog that looks white and tan looking at the device to the right of the speaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog that looks white and tan looking at the device to the right of the speaker?"")"
412079,What color is the vehicle in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What color is the vehicle in the middle?"")
    vehicle_patch = vehicle_patches[0]
    return vehicle_patch.simple_query(""What color is the vehicle in the middle?"") # crop would include the vehicle so keep it in the query"
7410245,What item of furniture is to the right of the cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the right of the cabinets?"")"
13620231,What appliance is to the left of the instrument that is leaning on the bookshelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the instrument that is leaning on the bookshelf?"")"
17477859,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
10149419,Are there any trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train""))"
19825260,"How does the woman to the left of the water bottle look, Caucasian or Asian?"," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the woman to the left of the water bottle look, Caucasian or Asian?"")"
14898156,What is the fruit in the bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit in the bowl?"")"
19745268,What is the bag that the person that is to the left of the girl is carrying?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag that the person that is to the left of the girl is carrying?"")"
428696,Is the sock different in color than the frisbee?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sock different in color than the frisbee?"")"
9583041,Who stands by the doorway?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who stands by the doorway?"")"
9772472,What kind of cooking utensil is to the left of the person that is standing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of cooking utensil is to the left of the person that is standing?"")"
1079739,What is the boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy holding?"")"
1985680,What vegetable is on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on the pizza?"")"
1179964,"In which part of the photo is the notebook, the top or the bottom?"," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the notebook, the top or the bottom?"")"
7452685,What is the color of this plate?," # returns the color of the plate
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of this plate?"")"
2828113,What kind of animal is the fence behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the fence behind of?"")"
6879400,What is the appliance to the right of the young girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the right of the young girl?"")"
18931202,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
14227837,What are the cooking utensils to the right of the bowl on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the cooking utensils to the right of the bowl on the left?"")"
9505373,Which kind of furniture is inside the bathroom?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is inside the bathroom?"")"
6731816,Is the table made of the same material as the frame?," # assumes only one table and one frame
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    frame_patches = image_patch.find(""frame"")
    if len(table_patches) == 0 or len(frame_patches) == 0:
        return ""no""
    table_patch = table_patches[0]
    frame_patch = frame_patches[0]
    return bool_to_yesno(table_patch.verify_property(""table"", ""material"") == frame_patch.verify_property(""frame"", ""material""))"
1538115,Is the person wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing a glove?"")"
19455933,Are there cups to the right of the napkin on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there cups to the right of the napkin on the left?"")"
13860735,Is the hard drive to the right of a mug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hard drive to the right of a mug?"")"
182360,Is the oven to the left or to the right of the plate?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the oven to the left or to the right of the plate?"")"
19136997,Is the woman to the left or to the right of the can?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the can?"")"
8996257,"Which side is the fork on, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the fork on, the right or the left?"")"
10425742,Are there people to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""person""))"
7843099,Where is the shrub?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the shrub?"")"
11026761,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
16595779,Are there any buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
11640145,What is the bicycle before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bicycle before?"")"
4647814,What item of furniture is the chair on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is the chair on?"")"
181068305,On which side are the benches?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the benches?"")"
15246588,Which side of the picture is the trash can on?," # left or right
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the trash can on?"")
    trash_can_patch = trash_can_patches[0]
    if trash_can_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3111385,Is the rug to the left or to the right of the chair by the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rug to the left or to the right of the chair by the table?"")"
183900,What is on the coffee table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the coffee table?"")"
12239695,Is the large elephant in front of the door made of metal?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large elephant in front of the door made of metal?"")"
1454136,What is the color of the device on the desk?," # returns the color of the device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What is the color of the device on the desk?"")
    return device_patches[0].simple_query(""What is the color of the device on the desk?"") # crop would include the desk so keep it in the query"
7732696,Are there either bottles or shampoo bottles in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_shampoo_bottle = image_patch.exists(""shampoo bottle"")
    return bool_to_yesno(is_bottle or is_shampoo_bottle)"
9714988,Is there a donut to the left of the bagel with the blueberry?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a donut to the left of the bagel with the blueberry?"")"
19569879,Do you see any drums or trumpets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""drum"") or image_patch.exists(""trumpet""))"
2879347,On which side is the rope?," # left or right
    image_patch = ImagePatch(image)
    rope_patches = image_patch.find(""rope"")
    # Question assumes only one rope patch
    if len(rope_patches) == 0:
        # If no rope is found, query the image directly
        return image_patch.simple_query(""On which side is the rope?"")
    if rope_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3888788,What color are the flowers?," # returns the color of the flowers
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch.simple_query(""What color are the flowers?"")
    return flower_patches[0].simple_query(""What color are the flowers?"")"
9355382,What color is the bridge?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bridge?"")"
3750329,Is the large building behind or in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large building behind or in front of the tree?"")"
584712,What color is the bag on the left of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag on the left of the image?"")"
341899,What is the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair made of?"")"
13174212,Is the sea shore grassy or rocky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sea shore grassy or rocky?"")"
3492521,Are the large umbrellas gray or orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the large umbrellas gray or orange?"")"
622197,The truck that is not little has which color?," # contains a relation (is not little), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The truck that is not little has which color?"")"
7907338,Is the woman using a cell phone?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman using a cell phone?"")"
12102751,Are there either glasses or remote controls in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_remote_control = image_patch.exists(""remote control"")
    return bool_to_yesno(is_glasses or is_remote_control)"
11840849,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
14299136,Do you see rugs on the floor?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see rugs on the floor?"")"
14732239,Is the girl to the left of a cake?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of a cake?"")"
12155821,What animal is before the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is before the tree?"")"
12876506,Do you see men to the right of the vehicle on the right side of the image?," # contains a relation (right of, on the right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see men to the right of the vehicle on the right side of the image?"")"
5340684,What do you think is the animal that is lying on the beach?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the animal that is lying on the beach?"")"
5727462,What animal is she touching?," # contains a relation (touching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is she touching?"")"
791718,What fruit is to the left of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is to the left of the cup?"")"
5130611,What color is the grass the snow is with?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the grass the snow is with?"")"
4749185,On which side of the image is the salad?," # left or right
    image_patch = ImagePatch(image)
    salad_patches = image_patch.find(""salad"")
    # Question assumes only one salad patch
    if len(salad_patches) == 0:
        # If no salad is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the salad?"")
    if salad_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19961357,Are there any stoves near the utensils in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stove"")) # crop would include the utensils so keep it in the query"
5430972,What's on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the wall?"")"
11514557,What is the name of the piece of furniture that the eggs are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that the eggs are on?"")"
8178777,"What is this, a blanket or a pillow?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a blanket or a pillow?"")"
17292702,What's the spinach on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the spinach on?"")"
191010888,What's the lady wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the lady wearing?"")"
19683623,How large is the horse to the right of the other horse?," # returns a string
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    # Question assumes only two horse patches
    if len(horse_patches) < 2:
        # If no two horses are found, query the image directly
        return image_patch.simple_query(""How large is the horse to the right of the other horse?"")
    right_horse = horse_patches[1]
    left_horse = horse_patches[0]
    return right_horse.simple_query(""How large is the horse to the right of the other horse?"") # crop would include the other horse so keep it in the query"
6684720,What is that seat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that seat on?"")"
5945590,What type of food is on the white dish?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is on the white dish?"")"
19132382,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
13271679,Is there either a bench or a pot in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""pot""))"
10939877,What is the device that is on the desk under the keyboard called?," # contains a relation (under, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is on the desk under the keyboard called?"")"
9349073,What do both the dog and the streetlight have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the dog and the streetlight have in common?"")"
7549147,What is the drink to the left of the food on the table called?," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink to the left of the food on the table called?"")"
592530,What is the name of the vegetable that is to the left of the device the man is holding?," # device is a phone
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the name of the vegetable that is to the left of the device the man is holding?"")
    man_patch = man_patches[0]
    device_patches = image_patch.find(""phone"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        return image_patch.simple_query(""What is the name of the vegetable that is to the left of the device the man is holding?"")
    for device_patch in device_patches:
        if device_patch.horizontal_center > man_patch.horizontal_center:
            vegetable_patches = image_patch.find(""vegetable"")
            # Question assumes only one vegetable patch
            if len(vegetable_patches) == 0:
                return image_patch.simple_query(""What is the name of the vegetable that is to the left of the device the man is holding?"")
            for vegetable_patch in vegetable_patches:
                if vegetable_patch.horizontal_center < device_patch.horizontal_center:
                    return vegetable_patch.simple_query(""What is the name of the vegetable that is to the left of the device the man is holding?"")
    return image_patch.simple_query(""What is the name of the vegetable that is to the left of the device the man is holding?"")"
10433287,Are the jeans brown or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the jeans brown or blue?"")"
14896800,Is the wood fence in the top part or in the bottom of the picture?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood fence in the top part or in the bottom of the picture?"")"
5453006,What kind of device is to the right of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the right of the keyboard?"")"
19331520,Is there either any zebra or elephant in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") or image_patch.exists(""elephant""))"
5377801,Who is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the hat?"")"
4832797,What is the animal to the left of the duck that looks black and brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the duck that looks black and brown?"")"
12435205,Which type of sign is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of sign is shown?"")"
9788975,Are there both nightstands and beds in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_nightstand = image_patch.exists(""nightstand"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_nightstand and is_bed)"
5873181,What type of toy is to the right of the person the woman feeding?," # contains a relation (feeding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of toy is to the right of the person the woman feeding?"")"
1993113,Is the air conditioner to the right of a dresser?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the air conditioner to the right of a dresser?"")"
15574617,Are there both a window and a door in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
19357282,What is on the brown roof?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the brown roof?"")"
8191673,Does the white horse appear to be walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the white horse appear to be walking?"")"
15927295,What is common to the seat and the lid?," # assumes only one seat and one lid
    image_patch = ImagePatch(image)
    seat_patches = image_patch.find(""seat"")
    lid_patches = image_patch.find(""lid"")
    if len(seat_patches) == 0 or len(lid_patches) == 0:
        return image_patch.simple_query(""What is common to the seat and the lid?"")
    seat_patch = seat_patches[0]
    lid_patch = lid_patches[0]
    common_properties = set(seat_patch.simple_query(""What properties does the seat have?"").split("", "")) # assumes only one property per line
    common_properties.update(lid_patch.simple_query(""What properties does the lid have?"").split("", "")) # assumes only one property per line
    return seat_patch.simple_query(""What is common to the seat and the lid?"") # crop would include the common properties so keep it in the query"
26338,Do you see people to the left of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see people to the left of the girl?"")"
16727415,What color do you think the jacket is?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color do you think the jacket is?"")
    jacket_patch = jacket_patches[0]
    return jacket_patch.simple_query(""What color do you think the jacket is?"") # crop would include the jacket so keep it in the query"
1985441,Do you see any people to the left of the yellow car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any people to the left of the yellow car?"")"
13833610,Are there drawers to the right of the kitchen towel on the counter?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there drawers to the right of the kitchen towel on the counter?"")"
161046693,Is the shelf on the right or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf on the right or on the left?"")"
8849025,What is on the hook?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the hook?"")"
17702119,Are there cabinets or coffee tables that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cabinet = image_patch.exists(""cabinet"")
    is_coffee_table = image_patch.exists(""coffee table"")
    is_white = image_patch.exists(""white"")
    return bool_to_yesno(is_cabinet or is_coffee_table) and bool_to_yesno(is_white)"
8481716,"Which part of the photo is the red vehicle in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the photo is the red vehicle in, the bottom or the top?"")"
5594720,Which color do the pants have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do the pants have?"")"
16768359,Is the man on the right?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right?"")"
1880874,Are the clothes inside the boat that is not short?," # contains a relation (inside, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the clothes inside the boat that is not short?"")"
8220470,"What is the man to the left of the bottle using, a phone or a camera?"," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the bottle using, a phone or a camera?"")"
71062308,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
10636283,Is there a table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table""))"
3890087,Is the skier to the left of a man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skier to the left of a man?"")"
18790473,What is the animal that the necktie is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the necktie is on?"")"
17481131,What is the vegetable that is on the food with the sauce?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is on the food with the sauce?"")"
19280523,Is the helmet to the right of a girl?," # helmet is to the right of a girl
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the right of a girl?"")
    for helmet_patch in helmet_patches:
        girl_patches = image_patch.find(""girl"")
        for girl_patch in girl_patches:
            if helmet_patch.horizontal_center > girl_patch.horizontal_center:
                return ""yes""
    return ""no"""
1621507,Is the color of the cloud the same as the building?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the cloud the same as the building?"")"
4756226,What is the horse pulling?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse pulling?"")"
3792269,What animal is sitting?," # contains a relation (sitting on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is sitting?"")"
795468,Is the cream to the right of the doughnut that looks orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cream to the right of the doughnut that looks orange?"")"
8245789,Are the chair and the shirt the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the chair and the shirt the same color?"")"
8413524,Do the tiles on the floor look white?," # contains a relation (on, of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the tiles on the floor look white?"")"
15811975,Are there either any black cows or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_cow = image_patch.exists(""black cow"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_black_cow or is_zebra)"
858559,Is the cup in the top or in the bottom of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup in the top or in the bottom of the picture?"")"
1574616,Which color is the motorcycle to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the motorcycle to the right of the man?"")"
8977168,Are there both keyboards and books in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_keyboard = image_patch.exists(""keyboard"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_keyboard and is_book)"
21070664,Are the paper and the tree the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the paper and the tree the same color?"")) # crop would include the paper and tree so keep it in the query"
19297647,Which side is the soap dish on?," # left or right
    image_patch = ImagePatch(image)
    soap_dish_patches = image_patch.find(""soap dish"")
    # Question assumes only one soap dish patch
    if len(soap_dish_patches) == 0:
        # If no soap dish is found, query the image directly
        return image_patch.simple_query(""Which side is the soap dish on?"")
    soap_dish_patch = soap_dish_patches[0]
    if soap_dish_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15650790,On which side is the trash can?," # left or right
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""On which side is the trash can?"")
    trash_can_patch = trash_can_patches[0]
    if trash_can_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
479403,What is the name of the item of clothing that is gray?," # returns the name of the item of clothing that is gray
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""item of clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the item of clothing that is gray?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""item of clothing"", ""gray""):
            return clothing_patch.simple_query(""What is the name of the item of clothing that is gray?"")
    return clothing_patch.simple_query(""What is the name of the item of clothing that is gray?"") # if no gray clothing is found, query the first clothing"
17493302,This plate is in what?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""This plate is in what?"")"
71005175,What kind of furniture is brown?," # contains a relation (brown), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is brown?"")"
15709705,What is the animal in the green grass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the green grass?"")"
9794682,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
472240,Is the white toilet paper on the left side of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white toilet paper on the left side of the photo?"")"
3408511,Are there either any bears or snakes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bear"") or image_patch.exists(""snake""))"
7663907,Are there any men or women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") or image_patch.exists(""woman""))"
101000884,Is the picture to the right or to the left of the person on the right?," # assumes only one person on the right
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture to the right or to the left of the person on the right?"")
    for picture_patch in picture_patches:
        person_patches = image_patch.find(""person"")
        # Question assumes only one person patch
        if len(person_patches) == 0:
            # If no person is found, query the image directly
            return image_patch.simple_query(""Is the picture to the right or to the left of the person on the right?"")
        for person_patch in person_patches:
            if person_patch.horizontal_center > image_patch.horizontal_center:
                if picture_patch.horizontal_center > person_patch.horizontal_center:
                    return ""left""
                else:
                    return ""right""
    return ""right"""
41036329,What is the chopstick on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chopstick on?"")"
639723,Is the blue vase on a fireplace?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue vase on a fireplace?"")"
9218605,Is the sink empty and dirty?," # dirty is a property of the sink
    image_patch = ImagePatch(image)
    sink_patches = image_patch.find(""sink"")
    # Question assumes only one sink patch
    if len(sink_patches) == 0:
        # If no sink is found, query the image directly
        return image_patch.simple_query(""Is the sink empty and dirty?"")
    return bool_to_yesno(sink_patches[0].verify_property(""sink"", ""empty"") and sink_patches[0].verify_property(""sink"", ""dirty""))"
8455666,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
19655076,Is the frisbee on the right or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee on the right or on the left?"")"
13490982,What throws the baseball in the middle of the photo?," # contains a relation (throwing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What throws the baseball in the middle of the photo?"")"
19205530,Are there helmets to the right of the man?," # helmet
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there helmets to the right of the man?"")
    man_patch = man_patches[0]
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes one helmet patch
    if len(helmet_patches) == 0:
        return ""no""
    for helmet_patch in helmet_patches:
        if helmet_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
1996527,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2357703,What device is below the computer monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is below the computer monitor?"")"
16881318,What is in the glass the woman is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass the woman is with?"")"
9114843,What is the vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle called?"")"
10643957,Is there any small cabinet or nightstand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""small cabinet"") or image_patch.exists(""nightstand""))"
18526052,Is the bun in the top or in the bottom part?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bun in the top or in the bottom part?"")"
5515388,Is the bag on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag on the right of the photo?"")"
8961837,What is the tag in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tag in front of?"")"
11651579,Does the clock have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""clock"", ""black""))"
17178878,What vehicle is in front of the sign near the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is in front of the sign near the road?"")"
5250252,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
9700759,What is the wine glass standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wine glass standing on?"")"
171225,Are there either napkins or tablecloths?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_napkin = image_patch.exists(""napkin"")
    is_tablecloth = image_patch.exists(""tablecloth"")
    return bool_to_yesno(is_napkin or is_tablecloth)"
11526062,Which side is the lamp of the road on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the lamp of the road on?"")"
4545401,What is around the train car on the left side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the train car on the left side of the photo?"")"
276331,Who is sitting on the bench?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the bench?"")"
5474859,Is the white sign in front of the house below the wire?," # contains a relation (above, below, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white sign in front of the house below the wire?"")"
13404151,What is on the brief case in the picture?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the brief case in the picture?"")"
6742534,What do you think is on the paper?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the paper?"")"
11405844,Is the man wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing a cap?"")"
3916004,Are the man shorts orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are the man shorts orange?"")
    man_patch = man_patches[0]
    return bool_to_yesno(man_patch.verify_property(""man"", ""orange"")) # crop would include the shorts so keep it in the query"
161062710,"On which side of the photo is the chocolate, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the chocolate, the left or the right?"")"
11136979,Is the blazer green?," # blazer is a type of coat
    image_patch = ImagePatch(image)
    blazer_patches = image_patch.find(""blazer"")
    # Question assumes only one blazer patch
    if len(blazer_patches) == 0:
        # If no blazer is found, query the image directly
        return image_patch.simple_query(""Is the blazer green?"")
    return bool_to_yesno(blazer_patches[0].verify_property(""blazer"", ""green""))"
2871935,What is the piece of furniture to the right of the red curtain that is to the right of the table lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the red curtain that is to the right of the table lamp?"")"
19746073,"Which part of the image is the clean plate in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the image is the clean plate in, the bottom or the top?"")"
3943285,Are there either knife blocks or mattresses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_knife_block = image_patch.exists(""knife block"")
    is_mattress = image_patch.exists(""mattress"")
    return bool_to_yesno(is_knife_block or is_mattress)"
1825704,"On which side of the picture are the water bottles, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture are the water bottles, the right or the left?"")"
83364,Are the lambs eating?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the lambs eating?"") == ""yes"")"
8732382,What does the man hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man hold?"")"
393429,Is the plate to the right or to the left of the young person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the right or to the left of the young person?"")"
14613341,Which kind of furniture is the cup on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the cup on?"")"
18466008,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
2762742,Is the man to the left of the white pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the white pillow?"")"
9137587,Is the motorcycle to the left of the melon white or red?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the motorcycle to the left of the melon white or red?"")"
11796664,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
1769596,Is the bottle on the right side?," # bottle is on the right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle on the right side?"")"
8575527,Is the gray bus to the left or to the right of the woman that is leaning on the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray bus to the left or to the right of the woman that is leaning on the wall?"")"
1186349,Is there a giraffe near the stone building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a giraffe near the stone building?"")"
12744735,Who is wearing the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jeans?"")"
13821058,Does the sky look clear and gray?," # clear and gray
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""clear"") and image_patch.verify_property(""sky"", ""gray""))"
18311449,Is the hair curly?," # assumes only one face patch
    image_patch = ImagePatch(image)
    face_patches = image_patch.find(""face"")
    if len(face_patches) == 0:
        return image_patch.simple_query(""Is the hair curly?"")
    for face_patch in face_patches:
        return bool_to_yesno(face_patch.verify_property(""hair"", ""curly""))"
18320567,Who is holding the controller that is shown in this picture?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the controller that is shown in this picture?"")"
18817163,Is the person wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person wearing jeans?"")"
10220011,Does the hair look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""hair"", ""white""))"
8642228,On which side of the picture is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19646695,Is the large elephant to the right of an animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large elephant to the right of an animal?"")"
12650700,Is the wood cabinet on the left side?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood cabinet on the left side?"")"
17336338,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
1891572,Is the scarf black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the scarf black?"")"
1392491,Are the wires above trucks?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the wires above trucks?"")"
4815030,What vehicle is that apartment building behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is that apartment building behind of?"")"
11736928,What is pulled by the brown animal that is wearing a hat?," # contains a relation (pulled by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is pulled by the brown animal that is wearing a hat?"")"
1224789,On which side of the picture is the saucer?," # left or right
    image_patch = ImagePatch(image)
    saucer_patches = image_patch.find(""saucer"")
    # Question assumes only one saucer patch
    if len(saucer_patches) == 0:
        # If no saucer is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the saucer?"")
    if saucer_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14159701,Where is the zebra that is white drinking from?," # contains a relation (drinking from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the zebra that is white drinking from?"")"
4912194,Is the ball to the left or to the right of the man the clock is behind of?," # contains a relation (left, right, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball to the left or to the right of the man the clock is behind of?"")"
7596127,What color is the umbrella to the left of the other umbrella?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella to the left of the other umbrella?"")"
2124136,What type of animal is the coat on?," # coat is a type of clothing
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What type of animal is the coat on?"")
    return coat_patches[0].simple_query(""What type of animal is the coat on?"") # crop would include the coat so keep it in the query"
3206880,On which side of the image is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
107332,What are the items of furniture to the left of the paint brush which is to the left of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture to the left of the paint brush which is to the left of the laptop?"")"
121026338,"In which part of the picture are the pans, the top or the bottom?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture are the pans, the top or the bottom?"")"
6475006,Is the woman on the right side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right side of the picture?"")"
7836695,Is the person on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person on the left side?"")
    if person_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
2190708,What is the moss growing on?," # contains a relation (growing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the moss growing on?"")"
552013,On which side of the photo are the tissue papers?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo are the tissue papers?"")"
21021351,What color is that pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is that pillow?"")"
11687131,Do the train and the ladder have the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the train and the ladder have the same color?"")"
1667094,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
16641556,What piece of furniture is above the desk?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is above the desk?"")"
8692591,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
13312869,What's the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the cup made of?"")"
8561000,Are there any fences or birds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_fence or is_bird)"
15153699,Is the lawn green and long?," # -> bool
    image_patch = ImagePatch(image)
    return image_patch.verify_property(""lawn"", ""green"") and image_patch.verify_property(""lawn"", ""long"")"
11478897,The bird is perched on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bird is perched on what?"")"
8697211,Are there numbers or letters that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_number = image_patch.exists(""number"")
    is_letter = image_patch.exists(""letter"")
    return bool_to_yesno(is_number or is_letter)"
3654926,What appliance is to the right of the chopsticks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the chopsticks?"")"
2100010,Is there a wolf or a horse in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_wolf = image_patch.exists(""wolf"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_wolf or is_horse)"
6516165,Is there any bag in the image that is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    for bag_patch in bag_patches:
        if not bag_patch.verify_property(""bag"", ""large""):
            return ""yes""
    return ""no"""
12311078,Are the palms on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the palms on the left of the image?"")) # contains a relation (left, right, etc), so ask directly"
18354521,The bowl in the bottom part has what color?," # contains a relation (bottom part), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bowl in the bottom part has what color?"")"
153612,Do you see either any cars or doors there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""car"") or image_patch.exists(""door""))"
7313677,Are there any tomatoes to the right of the jar that is not closed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any tomatoes to the right of the jar that is not closed?"")"
41048426,Are there either any blue helmets or vases?," # helmet or vase
    image_patch = ImagePatch(image)
    is_blue_helmet = image_patch.exists(""blue helmet"")
    is_vase = image_patch.exists(""vase"")
    return bool_to_yesno(is_blue_helmet or is_vase)"
61040330,Is there any food?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""food""))"
602915,Is the yellow banana to the right of the green pepper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow banana to the right of the green pepper?"")"
131011232,What is the color of the net on the other net?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the net on the other net?"")"
12446492,Is the train near the train tracks gray or red?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train near the train tracks gray or red?"")"
13577779,Are there any helmets or fishermen in this scene?," # returns yes or no
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_fisherman = image_patch.exists(""fisherman"")
    return bool_to_yesno(is_helmet or is_fisherman)"
10264995,Do the trousers look blue or orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the trousers look blue or orange?"")"
14686841,Is the cross white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cross white?"")"
12964372,Which side of the picture are the passengers on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture are the passengers on?"")"
1516069,Is the person on the mountain wearing a jacket?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person on the mountain wearing a jacket?"")"
6669810,The carpet is where?," # carpet is a floor covering
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The carpet is where?"")"
4476248,Are there any candles or umbrellas in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_candle = image_patch.exists(""candle"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_candle or is_umbrella)"
15276449,What color is the dish?," # returns the color of the dish
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the dish?"")"
8575078,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
16985665,What is on the post?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the post?"")"
11127569,"In which part of the picture is the crate, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the crate, the bottom or the top?"")"
19523004,Are there glasses or celeries in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_celery = image_patch.exists(""celery"")
    return bool_to_yesno(is_glasses or is_celery)"
13499819,Do you see any meat in the bowl?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any meat in the bowl?"")"
9112143,Is there either an red apple or tomato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_apple = image_patch.exists(""red apple"")
    is_tomato = image_patch.exists(""tomato"")
    return bool_to_yesno(is_red_apple or is_tomato)"
19979618,What place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is pictured?"")"
6887813,Do you think the grassy ground is leafy or bare?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the grassy ground is leafy or bare?"")"
12683063,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3417908,The cat is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cat is on what?"")"
16472967,What is the shiny cooking utensil?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shiny cooking utensil?"")"
81071,Are there bags to the right of the person on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bags to the right of the person on the left?"")"
9398164,Do you think the clear water is still or wavy?," # clear water
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the clear water is still or wavy?"")"
6540454,Do you see any bears near the rock in the image?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any bears near the rock in the image?"")"
51031030,What is located on top of the pizza on the right side?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the pizza on the right side?"")"
10257307,What is located on top of the table that is brown?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the table that is brown?"")"
14352657,What is the color of the container to the right of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the container to the right of the bus?"")"
13116140,What is the girl sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl sitting on?"")"
12254375,What is the color of the cap?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the cap?"")"
9322306,Who sits on the porch?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who sits on the porch?"")"
5657965,Is there either a white mug or plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_mug = image_patch.exists(""white mug"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_white_mug or is_plate)"
4570522,Is there a blue wetsuit in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a blue wetsuit in the photo?"")"
8917658,How tall is the grass that is brown and green?," # height in cm
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""How tall is the grass that is brown and green?"")
    for grass_patch in grass_patches:
        if grass_patch.verify_property(""grass"", ""brown"") and grass_patch.verify_property(""grass"", ""green""):
            return grass_patch.simple_query(""How tall is the grass that is brown and green?"") # crop would include the color so keep it in the query
    # If no grass is brown and green, pick the first grass
    return grass_patches[0].simple_query(""How tall is the grass that is brown and green?"")"
680274,What kind of vehicle is to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the right of the people?"")"
3469344,Does the blue sky look clear?," # clear is a property of the sky
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""blue sky"", ""clear"")) # crop would include the sky so keep it in the query"
6323509,Is the weather overcast?," # overcast is a property of weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""overcast""))"
906290,Are there blankets or cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blanket = image_patch.exists(""blanket"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_blanket or is_cat)"
4922690,Which side is the backpack on?," # left or right
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Which side is the backpack on?"")
    backpack_patch = backpack_patches[0]
    if backpack_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8658661,What is in front of the sign on the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the sign on the pole?"")"
161052525,Is this a large appliance?," # assumes only one image patch
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""appliance"", ""large""))"
1999394,Is the green ground rocky or grassy?," # ground is green, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green ground rocky or grassy?"")"
8210289,Are the curtains bright and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the curtains bright and white?"")"
4291123,Is there a colorful pot or flag in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""colorful pot"") or image_patch.exists(""flag""))"
6220956,Is the tennis racket in the top of the image?," # crop would include the racket so keep it in the query
    image_patch = ImagePatch(image)
    tennis_racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one tennis racket patch
    if len(tennis_racket_patches) == 0:
        # If no tennis racket is found, query the image directly
        return image_patch.simple_query(""Is the tennis racket in the top of the image?"")
    return bool_to_yesno(tennis_racket_patches[0].vertical_center > image_patch.vertical_center)"
8145601,Who is on the surfboard on the right side?," # contains a relation (on the right side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard on the right side?"")"
1415622,What is that animal in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that animal in front of?"")"
19427441,What shape do you think the planter is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What shape do you think the planter is?"")"
10330267,Is the umbrella to the right or to the left of the man on the left side of the image?," # left and right are relative to the man
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""Is the umbrella to the right or to the left of the man on the left side of the image?"")
    for umbrella_patch in umbrella_patches:
        man_patches = image_patch.find(""man"")
        # Question assumes only one man patch
        if len(man_patches) == 0:
            # If no man is found, query the image directly
            return image_patch.simple_query(""Is the umbrella to the right or to the left of the man on the left side of the image?"")
        man_patch = man_patches[0]
        if umbrella_patch.horizontal_center > man_patch.horizontal_center:
            return ""right""
        else:
            return ""left"""
11745842,Where is the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the water?"")"
14550619,Is the man on the left side or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left side or on the right of the picture?"")"
2142998,Is the bottle on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle on the left?"")"
18891351,What is the color of the dry grass?," # returns the color of the dry grass
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the dry grass?"")"
15836663,Who is in the bathtub?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the bathtub?"")"
3227723,Are there drinks to the right of the soda the cow is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there drinks to the right of the soda the cow is on?"")"
15397154,Does the shirt look purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look purple?"")"
16795881,On which side is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
375498,Are there both apples and oranges in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_apple = image_patch.exists(""apple"")
    is_orange = image_patch.exists(""orange"")
    return bool_to_yesno(is_apple and is_orange)"
15517046,What kind of vegetable is to the right of the utensil in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the utensil in the top of the image?"")"
343170,What kind of furniture is not antique?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is not antique?"")"
11558769,Do the shoes look tan?," # tan is a color
    image_patch = ImagePatch(image)
    shoes_patches = image_patch.find(""shoes"")
    # Question assumes only one shoes patch
    if len(shoes_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""Do the shoes look tan?"")
    return bool_to_yesno(shoes_patches[0].verify_property(""shoes"", ""tan""))"
8937460,"Which is less healthy, the hot dog or the cheese?"," # assumes only one hot dog and one cheese
    image_patch = ImagePatch(image)
    hot_dog_patches = image_patch.find(""hot dog"")
    cheese_patches = image_patch.find(""cheese"")
    if len(hot_dog_patches) == 0 or len(cheese_patches) == 0:
        return image_patch.simple_query(""Which is less healthy, the hot dog or the cheese?"")
    hot_dog_patch = hot_dog_patches[0]
    cheese_patch = cheese_patches[0]
    if hot_dog_patch.verify_property(""hot dog"", ""healthy"") and cheese_patch.verify_property(""cheese"", ""healthy""):
        return image_patch.simple_query(""Which is less healthy, the hot dog or the cheese?"")
    if hot_dog_patch.verify_property(""hot dog"", ""healthy""):
        return ""cheese""
    elif cheese_patch.verify_property(""cheese"", ""healthy""):
        return ""hot dog""
    else:
        return image_patch.simple_query(""Which is less healthy, the hot dog or the cheese?"")"
11863285,Are there any horses or cats that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse = image_patch.exists(""horse"")
    is_cat = image_patch.exists(""cat"")
    is_black_horse = image_patch.exists(""horse with black color"")
    is_black_cat = image_patch.exists(""cat with black color"")
    return bool_to_yesno(is_horse or is_cat or is_black_horse or is_black_cat)"
12697279,Are there both a train and a window in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_train and is_window)"
7241469,What is the shelf made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shelf made of?"")"
4270386,Is that umbrella to the left of a boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that umbrella to the left of a boat?"")"
18786709,What device is to the right of the blinds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the blinds?"")"
141044776,What item of furniture is on the right of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is on the right of the box?"")"
9201482,How's the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How's the weather?"")"
16637498,"Which are healthier, the nuts or the donuts of the box?"," # assumes only one box
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Which are healthier, the nuts or the donuts of the box?"")
    box_patch = box_patches[0]
    nut_patches = box_patch.find(""nuts"")
    donut_patches = box_patch.find(""donuts"")
    # Question assumes only one nut and one donut patch
    if len(nut_patches) == 0 or len(donut_patches) == 0:
        return image_patch.simple_query(""Which are healthier, the nuts or the donuts of the box?"")
    return nut_patches[0].simple_query(""Which are healthier, the nuts or the donuts of the box?"") # crop would include the donuts so keep it in the query"
3305972,What is inside the container?," # container is a box
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the container?"")"
3653851,Are there any fences or elephants in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_fence or is_elephant)"
3142170,Is the sky blue and clear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky blue and clear?"")"
17637199,What does the young woman wear?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the young woman wear?"")"
11603544,Do you see any chairs that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any chairs that are white?"")"
17356335,Is the train in the station both white and long?," # contains a relation (in the station), so ask directly
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""Is the train in the station both white and long?"")
    train_patch = train_patches[0]
    is_in_station = train_patch.simple_query(""Is the train in the station?"") == ""yes""
    is_white = train_patch.verify_property(""train"", ""white"")
    is_long = train_patch.verify_property(""train"", ""long"")
    return bool_to_yesno(is_in_station and is_white and is_long)"
6436955,What's the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man holding?"")"
41015420,Do the paper and the tray have a different colors?," # paper and tray are assumed to be found in the image
    image_patch = ImagePatch(image)
    paper_patches = image_patch.find(""paper"")
    tray_patches = image_patch.find(""tray"")
    # Question assumes only one paper and one tray patch
    if len(paper_patches) == 0 or len(tray_patches) == 0:
        # If no paper or tray is found, query the image directly
        return image_patch.simple_query(""Do the paper and the tray have a different colors?"")
    paper_patch = paper_patches[0]
    tray_patch = tray_patches[0]
    return bool_to_yesno(paper_patch.verify_property(""paper"", ""blue"") != tray_patch.verify_property(""tray"", ""blue""))"
19355062,Is the scarf around a woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the scarf around a woman?"")"
2273456,Are there both a cup and a table in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_cup and is_table)"
1597343,Is the brown chair to the right of the white bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown chair to the right of the white bed?"")"
9104169,Are there doors in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door"")) # Question assumes only one door patch"
1351918,What is the vehicle that is shown in this photo called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is shown in this photo called?"")"
17592001,What vehicle is below the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is below the tree?"")"
13579389,What is the food to the left of the small container called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the left of the small container called?"")"
4893749,What is in front of the building made of stone?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the building made of stone?"")"
3102267,Is the license plate blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the license plate blue?"")"
12215908,What is covering the food container?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covering the food container?"")"
1336292,Are there any umbrellas or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_umbrella or is_bag)"
14101868,He is wearing what?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""He is wearing what?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""He is wearing what?"")"
4620088,On which side is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14423583,Which side is the screen on?," # left or right
    image_patch = ImagePatch(image)
    screen_patches = image_patch.find(""screen"")
    # Question assumes only one screen patch
    if len(screen_patches) == 0:
        # If no screen is found, query the image directly
        return image_patch.simple_query(""Which side is the screen on?"")
    if screen_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19518157,Who wears the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the hat?"")"
5284447,Do you see pizza trays or bird houses there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see pizza trays or bird houses there?"")"
2471765,Is the orange to the left of the apple green and small?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange to the left of the apple green and small?"")"
10739403,What is the man that is to the left of the bananas holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the left of the bananas holding?"")"
745012,Who is standing on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing on the surfboard?"")"
11516393,Is the bathroom that is not dirty made of granite?," # dirty is a property of the bathroom
    image_patch = ImagePatch(image)
    bathroom_patches = image_patch.find(""bathroom"")
    # Question assumes only one bathroom patch
    if len(bathroom_patches) == 0:
        # If no bathroom is found, query the image directly
        return image_patch.simple_query(""Is the bathroom that is not dirty made of granite?"")
    for bathroom_patch in bathroom_patches:
        is_dirty = bathroom_patch.verify_property(""bathroom"", ""dirty"")
        if not is_dirty:
            return bathroom_patch.verify_property(""bathroom"", ""granite"")"
18588924,Which kind of animal is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is standing?"")"
4766884,What kind of fruit is to the right of the person in the market?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the right of the person in the market?"")"
84429,Is the chair in the top of the picture?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair in the top of the picture?"")"
1115718,Is there a bench or a lamp in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_lamp = image_patch.exists(""lamp"")
    return bool_to_yesno(is_bench or is_lamp)"
181048252,Are the drawers that are made of plastic brown or green?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the drawers that are made of plastic brown or green?"")"
9104,What item of clothing is blue?," # returns the first clothing item that is blue
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What item of clothing is blue?"")
    return image_patch.simple_query(""What item of clothing is blue?"")"
15863973,Is the box in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box in the bottom part of the picture?"")"
181018318,Are there knives or containers in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_knife = image_patch.exists(""knife"")
    is_container = image_patch.exists(""container"")
    return bool_to_yesno(is_knife or is_container)"
111053713,"Which part are the bicycles in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part are the bicycles in, the bottom or the top?"")"
814980,What is the color of the dress the woman is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the dress the woman is wearing?"")"
5311480,"Where in this photo is the empty crate, in the bottom or in the top?"," # empty crate
    image_patch = ImagePatch(image)
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        # If no crate is found, query the image directly
        return image_patch.simple_query(""Where in this photo is the empty crate, in the bottom or in the top?"")
    if crate_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
819789,What does the man to the left of the mug eat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man to the left of the mug eat?"")"
15667380,Is the woman to the right or to the left of the man on the sidewalk?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right or to the left of the man on the sidewalk?"")"
8549751,Is there a blanket in the scene that is orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a blanket in the scene that is orange?"")"
7461973,Do you see any low benches in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""low bench""))"
6200777,Which color is the towel on the left?," # returns the color of the towel on the left
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""Which color is the towel on the left?"")
    left_towel_patch = towel_patches[0]
    if left_towel_patch.horizontal_center < image_patch.horizontal_center:
        return left_towel_patch.simple_query(""Which color is the towel on the left?"")
    return left_towel_patch.simple_query(""Which color is the towel on the right?"") # crop would include the towel so keep it in the query"
14561107,Is the dog to the right or to the left of the man on the skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog to the right or to the left of the man on the skateboard?"")"
17231662,Is the helmet to the right of the man blue or black?," # helmet is to the right of the man
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the right of the man blue or black?"")
    helmet_patch = helmet_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the right of the man blue or black?"")
    man_patch = man_patches[0]
    if helmet_patch.horizontal_center > man_patch.horizontal_center:
        return helmet_patch.best_text_match([""blue"", ""black""])
    return helmet_patch.best_text_match([""blue"", ""black""])"
13198574,What is the color of the clothes?," # returns the color of the clothes
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the clothes?"")"
11442445,Do you see any girls to the right of the backpack in the bottom?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any girls to the right of the backpack in the bottom?"")"
9783422,What is the device that is to the right of the mousepad that is to the right of the keyboard called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the mousepad that is to the right of the keyboard called?"")"
13230263,Is the child to the right of the woman wearing a helmet?," # helmet is a property of the child
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""Is the child to the right of the woman wearing a helmet?"")
    for child_patch in child_patches:
        woman_patches = image_patch.find(""woman"")
        for woman_patch in woman_patches:
            if woman_patch.horizontal_center < child_patch.horizontal_center:
                return bool_to_yesno(child_patch.verify_property(""child"", ""helmet""))
    return ""no"""
13614863,What is the man to the left of the woman wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the woman wearing?"")"
9600936,What device is to the right of the coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the coffee table?"")"
12995540,Is the pan on a stove?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pan on a stove?"")"
9746813,Are there both a bottle and a plate in the scene?," # bottle and plate are not in the same image
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_bottle and is_plate)"
19827370,What type of animal is in the water that looks calm?," # assumes only one animal patch
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""Is the animal in the water?"") == ""yes"":
            if animal_patch.simple_query(""Is the animal calm?"") == ""yes"":
                return animal_patch.simple_query(""What type of animal is in the water that looks calm?"")
    return image_patch.simple_query(""What type of animal is in the water that looks calm?"")"
171053202,Are there men to the left of the instrument made of metal?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the instrument made of metal?"")"
1078249,What is the ketchup on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ketchup on?"")"
17427648,Are there either any white beds or tables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bed = image_patch.exists(""white bed"")
    is_white_table = image_patch.exists(""white table"")
    return bool_to_yesno(is_white_bed or is_white_table)"
39271,The woman is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman is holding what?"")"
271415,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9216682,Are there either any bears or ostriches in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bear"") or image_patch.exists(""ostrich"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
111034189,Does the small car have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""small car"", ""white""))"
8137867,What kind of vegetable is on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is on the pizza?"")"
21048954,Are there boxes or computer mice that are pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_box = image_patch.exists(""box"")
    is_mouse = image_patch.exists(""computer mouse"")
    is_pink_box = image_patch.exists(""pink box"")
    is_pink_mouse = image_patch.exists(""pink computer mouse"")
    return bool_to_yesno(is_box or is_mouse or is_pink_box or is_pink_mouse)"
18533991,Are there any baseballs on the bench that is on the grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any baseballs on the bench that is on the grass?"")"
181009295,Which color is the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which color is the chair?"")
    return chair_patches[0].simple_query(""Which color is the chair?"")"
14290356,Which color does the plate to the left of the candle have?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the plate to the left of the candle have?"")"
4630031,What color is the tennis racket the player is to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tennis racket the player is to the left of?"")"
16861542,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
1617707,Is there either a chair or a cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_chair or is_cabinet)"
1928404,Who watches the player?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who watches the player?"")"
15238509,Does the clock made of metal look gold and tall?," # contains a relation (made of metal), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the clock made of metal look gold and tall?"")"
269074,Are there both laptops and printers in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_laptop = image_patch.exists(""laptop"")
    is_printer = image_patch.exists(""printer"")
    return bool_to_yesno(is_laptop and is_printer)"
1214515,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
18272064,Is the boy to the left or to the right of the mother?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the mother?"")"
51001492,Is the beer to the left of the candles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beer to the left of the candles?"")"
2370829,Is the brown box to the right or to the left of the lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown box to the right or to the left of the lady?"")"
1865085,Which side of the image is the frisbee on?," # left or right
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the frisbee on?"")
    if frisbee_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1222393,What kind of clothing is furry?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is furry?"")"
16796002,What is the piece of furniture in front of the mirror in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture in front of the mirror in the middle of the image?"")"
16748656,Which kind of device is on the computer desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the computer desk?"")"
14659055,Are there either umbrellas or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_umbrella or is_chair)"
665182,On which side are the cones?," # left or right
    image_patch = ImagePatch(image)
    cone_patches = image_patch.find(""cone"")
    # Question assumes only one cone patch
    if len(cone_patches) == 0:
        # If no cone is found, query the image directly
        return image_patch.simple_query(""On which side are the cones?"")
    if cone_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
583797,Which kind of food is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not brown?"")"
18407698,Which kind of animal is the rope on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the rope on?"")"
10611442,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
121026885,Are there either any birds or zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bird"") or image_patch.exists(""zebra""))"
5975728,Who is wearing the skis?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the skis?"")"
4574283,How tall do you think is the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall do you think is the grass?"")"
13308060,"On which side of the photo is the man, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the man, the left or the right?"")"
17681524,Is the pot to the right or to the left of the person that is working in the kitchen?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pot to the right or to the left of the person that is working in the kitchen?"")"
1097490,Which kind of device is behind the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is behind the man?"")"
18634201,Which type of animal is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of animal is this?"")"
1260630,What food is standing by the window?," # contains a relation (by, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is standing by the window?"")"
10266351,Do the cupboard that looks brown and light brown and the chair that is to the right of the man both appear to be wooden?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    cupboard_patches = image_patch.find(""cupboard"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one cupboard patch and one chair patch
    if len(cupboard_patches) == 0 or len(chair_patches) == 0:
        # If no cupboard or chair is found, query the image directly
        return image_patch.simple_query(""Do the cupboard that looks brown and light brown and the chair that is to the right of the man both appear to be wooden?"")
    cupboard_patch = cupboard_patches[0]
    chair_patch = chair_patches[0]
    return bool_to_yesno(cupboard_patch.verify_property(""cupboard"", ""wooden"") and chair_patch.verify_property(""chair"", ""wooden""))"
2918207,Is that a yellow train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a yellow train?"")"
8893275,What is the appliance to the left of the person on the right called?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the person on the right called?"")"
5550365,How large is the boat in the center?," # returns a string
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""How large is the boat in the center?"")
    boat_patch = boat_patches[0]
    if boat_patch.horizontal_center != image_patch.horizontal_center:
        return image_patch.simple_query(""How large is the boat in the center?"")
    return boat_patch.simple_query(""How large is the boat in the center?"")"
10755244,Is there a wetsuit in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""wetsuit""))"
3282099,The cat is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cat is in front of what?"")"
7750576,Is this pizza on a plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this pizza on a plate?"")"
1253196,What is located on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the pizza?"")"
8247996,What is the cat in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat in front of?"")"
13615614,Is there either a keyboard or a mug that is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    mug_patches = image_patch.find(""mug"")
    for keyboard_patch in keyboard_patches:
        if keyboard_patch.verify_property(""keyboard"", ""black""):
            return ""yes""
    for mug_patch in mug_patches:
        if mug_patch.verify_property(""mug"", ""black""):
            return ""yes""
    return ""no"""
7917543,What is the girl sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl sitting on?"")"
781479,Is the man that is to the left of the people wearing a tie?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the people wearing a tie?"")"
1838133,What is on the couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the couch?"")"
1886212,Do you see both a cup and a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_cup and is_plate)"
11841439,What animals are to the right of the American flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are to the right of the American flag?"")"
4443128,Do you see either umbrellas or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_umbrella or is_bag)"
18128449,Is the guy to the right or to the left of the device in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the right or to the left of the device in the top part of the image?"")"
14204616,Which color is the drawer in the center of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the drawer in the center of the photo?"")"
5157493,Does that trashcan have large size and blue color?," # trashcan is a specific object
    image_patch = ImagePatch(image)
    trashcan_patches = image_patch.find(""trashcan"")
    # Question assumes only one trashcan patch
    if len(trashcan_patches) == 0:
        # If no trashcan is found, query the image directly
        return image_patch.simple_query(""Does that trashcan have large size and blue color?"")
    return bool_to_yesno(trashcan_patches[0].verify_property(""trashcan"", ""large"") and trashcan_patches[0].verify_property(""trashcan"", ""blue""))"
1000974,Are both the toilet seat and the wire the same color?," # toilet seat and wire
    image_patch = ImagePatch(image)
    is_toilet_seat_blue = image_patch.exists(""toilet seat"") and image_patch.find(""toilet seat"")[0].verify_property(""toilet seat"", ""blue"")
    is_wire_blue = image_patch.exists(""wire"") and image_patch.find(""wire"")[0].verify_property(""wire"", ""blue"")
    return bool_to_yesno(is_toilet_seat_blue and is_wire_blue)"
3623135,What are the boots in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the boots in?"")"
10325897,Is the bread on the left side of the picture?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bread on the left side of the picture?"")"
636071,On which side of the photo is the telephone?," # left or right
    image_patch = ImagePatch(image)
    telephone_patches = image_patch.find(""telephone"")
    # Question assumes only one telephone patch
    if len(telephone_patches) == 0:
        # If no telephone is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the telephone?"")
    telephone_patch = telephone_patches[0]
    horizontal_center = image_patch.horizontal_center
    if telephone_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
11517766,The hot dog is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The hot dog is on what?"")"
1769858,Is the backpack to the left or to the right of the bottle that is on the left?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack to the left or to the right of the bottle that is on the left?"")"
8247995,What is this cat in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this cat in front of?"")"
13248214,Is there a racket or a mirror in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_racket = image_patch.exists(""racket"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_racket or is_mirror)"
11813176,Which side of the photo is the box on?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the box on?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9131234,Is there any kite in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite""))"
16669631,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14698296,Is the sky blue and cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky blue and cloudy?"")"
29854,What's in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the fence?"")"
7173846,Which kind of furniture is to the left of the oven?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the oven?"")"
18400437,Does that shirt look checkered and white?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Does that shirt look checkered and white?"")
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(shirt_patch.verify_property(""shirt"", ""checkered"") and shirt_patch.verify_property(""shirt"", ""white""))"
5460270,Is the bench in the top of the picture?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench in the top of the picture?"")"
4426944,Are there any diapers or buckets in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_diaper = image_patch.exists(""diaper"")
    is_bucket = image_patch.exists(""bucket"")
    return bool_to_yesno(is_diaper or is_bucket)"
8280639,Do you see any phones on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any phones on the table?"")"
10747888,Are there guys to the right of the backpack that is to the left of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there guys to the right of the backpack that is to the left of the people?"")"
12592626,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1037022,What kind of fruit is to the left of the bag that is in the bottom of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the left of the bag that is in the bottom of the photo?"")"
14148807,What is the vegetable to the left of the box that is in front of the bowl called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the box that is in front of the bowl called?"")"
1788631,What cooking utensil is to the left of the speakers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is to the left of the speakers?"")"
2394671,What kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is it?"")"
1531520,What's the patio made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the patio made of?"")"
2960930,What color is the carpet on the floor?," # carpet on the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the carpet on the floor?"")"
11390429,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
3744174,What kind of furniture is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the person?"")"
6742472,The ice is in what?," # container
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The ice is in what?"")"
16795699,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
13678402,Are there doors that are not made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Are there doors that are not made of metal?"")
    for door_patch in door_patches:
        is_made_of_metal = door_patch.verify_property(""door"", ""metal"")
        if not is_made_of_metal:
            return ""yes""
    return ""no"""
1851061,Is there a boat or grass in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_boat = image_patch.exists(""boat"")
    is_grass = image_patch.exists(""grass"")
    return bool_to_yesno(is_boat or is_grass)"
8572419,What is the vegetable to the left of the red vegetable?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the red vegetable?"")"
1895762,What color do you think is the wet suit that the surfer is wearing?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think is the wet suit that the surfer is wearing?"")"
8228183,Are both the skateboard and the helmet the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_helmet = image_patch.exists(""helmet"")
    if is_skateboard and is_helmet:
        return bool_to_yesno(image_patch.find(""skateboard"")[0].verify_property(""skateboard"", ""color"") == image_patch.find(""helmet"")[0].verify_property(""helmet"", ""color""))
    return ""no"""
1795748,What is the gray clothing item called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the gray clothing item called?"")"
19282310,"Where is the freezer, on the left or on the right side of the picture?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the freezer, on the left or on the right side of the picture?"")"
5165475,What is the color of the motorcycle that the people are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the motorcycle that the people are on?"")"
14122454,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
3131785,What clothing item is blue?," # returns the clothing item that is blue
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What clothing item is blue?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What clothing item is blue?"")
    return image_patch.simple_query(""What clothing item is blue?"") # if no clothing is blue, query the image directly"
1871163,"Which are less healthy, the raisins of the cookie or the cookie?"," # assumes only one raisin and one cookie
    image_patch = ImagePatch(image)
    raisin_patches = image_patch.find(""raisin"")
    cookie_patches = image_patch.find(""cookie"")
    if len(raisin_patches) == 0 or len(cookie_patches) == 0:
        # If no raisin or cookie is found, query the image directly
        return image_patch.simple_query(""Which are less healthy, the raisins of the cookie or the cookie?"")
    for raisin_patch in raisin_patches:
        for cookie_patch in cookie_patches:
            if raisin_patch.verify_property(""raisin"", ""healthy"") and not cookie_patch.verify_property(""cookie"", ""healthy""):
                return ""raisins""
            elif not raisin_patch.verify_property(""raisin"", ""healthy"") and cookie_patch.verify_property(""cookie"", ""healthy""):
                return ""cookie""
    return ""raisins"""
5994460,Is there a nightstand to the left of the white sheet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a nightstand to the left of the white sheet?"")"
3420950,Do you see shelves on the brick wall?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see shelves on the brick wall?"")"
1724923,Is the mushroom on the right of the image?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mushroom on the right of the image?"")"
7402027,Is the plastic woman holding the bag?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic woman holding the bag?"")"
18682796,Are there cones or bridges in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cone = image_patch.exists(""cone"")
    is_bridge = image_patch.exists(""bridge"")
    return bool_to_yesno(is_cone or is_bridge)"
5275124,Is there a toothbrush or a speaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_toothbrush = image_patch.exists(""toothbrush"")
    is_speaker = image_patch.exists(""speaker"")
    return bool_to_yesno(is_toothbrush or is_speaker)"
1570382,Do you see a sandwich on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a sandwich on the plate?"")"
15870644,Is there any tall grass or snow?," # contains a relation (tall, short, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any tall grass or snow?"")"
131026606,What's the lamp on?," # assumes only one lamp
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    if len(lamp_patches) == 0:
        return image_patch.simple_query(""What's the lamp on?"")
    return lamp_patches[0].simple_query(""What's the lamp on?"")"
16804770,Who is riding on an elephant?," # contains a relation (riding on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding on an elephant?"")"
16502711,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
18418794,Are these animals of the same type?," # contains a relation (same type, different type, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of the same type?"")"
10264028,Who do you think is wearing a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a helmet?"")"
126965,On which side is the white pillow?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""On which side is the white pillow?"")
    pillow_patch = pillow_patches[0]
    if pillow_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
996119,What is the vehicle to the right of the red train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the red train?"")"
555578,Is the woman's phone to the left or to the right of the man that is to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's phone to the left or to the right of the man that is to the right of the bag?"")"
6936960,What is the white appliance called?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white appliance called?"")"
16762631,On which side of the image are the ropes?," # left or right
    image_patch = ImagePatch(image)
    rope_patches = image_patch.find(""rope"")
    # Question assumes only one rope patch
    if len(rope_patches) == 0:
        # If no rope is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the ropes?"")
    if rope_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
814203,On which side of the photo is the silver kettle?," # left or right
    image_patch = ImagePatch(image)
    kettle_patches = image_patch.find(""silver kettle"")
    # Question assumes only one kettle patch
    if len(kettle_patches) == 0:
        # If no kettle is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the silver kettle?"")
    return ""left"" if kettle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3857730,Do you see either any brown sprinkles or chairs there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_sprinkle = image_patch.exists(""brown sprinkle"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_brown_sprinkle or is_chair)"
7440052,Does the cake have a different color than the balloon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cake have a different color than the balloon?"")"
8112077,Is the hair dry or wet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair dry or wet?"")"
15954004,What is covered by the roof?," # contains a relation (under, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the roof?"")"
171013763,What's in front of the cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the cat?"")"
14866359,Do you see any boats or ropes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat"") or image_patch.exists(""rope""))"
3157958,Is the screen to the left of the curtains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left of the curtains?"")"
1012078,What kind of sign is in front of the building?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of sign is in front of the building?"")"
6938587,What do both the barn and the pole have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the barn and the pole have in common?"")"
17231480,Is the chimney on the right side?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chimney on the right side?"")"
18521849,Which color does the car have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the car have?"")"
547037,What is the device to the right of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the monitor?"")"
9817626,What is the person in front of the umpire wearing?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person in front of the umpire wearing?"")"
4661103,Is there either a brown coffee table or cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_coffee_table = image_patch.exists(""brown coffee table"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_brown_coffee_table or is_cabinet)"
13190826,Which kind of baked good is the box on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is the box on?"")"
7291955,How is the vehicle to the left of the man that is riding a bike called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle to the left of the man that is riding a bike called?"")"
9455794,What is the blanket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blanket on?"")"
9367999,Who is wearing glasses?," # contains a relation (wearing glasses), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing glasses?"")"
16140493,Are there grapes or boxes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_grape = image_patch.exists(""grape"")
    is_box = image_patch.exists(""box"")
    return bool_to_yesno(is_grape or is_box)"
14601835,What do you think is the man that is sitting holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man that is sitting holding?"")"
7400772,"Which color is the chrome faucet, silver or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the chrome faucet, silver or black?"")"
10749646,Is the door that looks white made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the door that looks white made of metal?"")"
104294,On which side is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1485542,What toy is the dog in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is the dog in front of?"")"
9712545,On which side of the photo is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8834292,Do you see any boxes on top of the cake?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any boxes on top of the cake?"")"
5795545,The television is in what?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The television is in what?"")"
11521363,Does the zebra's fur look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra's fur look white?"")"
1972970,Are there any nests or sacks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nest"") or image_patch.exists(""sack""))"
8396659,What is this animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this animal called?"")"
10488978,Is the bathtub below the device in the middle?," # device in the middle is the phone
    image_patch = ImagePatch(image)
    bathtub_patches = image_patch.find(""bathtub"")
    # Question assumes only one bathtub patch
    if len(bathtub_patches) == 0:
        # If no bathtub is found, query the image directly
        return image_patch.simple_query(""Is the bathtub below the device in the middle?"")
    for bathtub_patch in bathtub_patches:
        device_patches = image_patch.find(""phone"")
        # Question assumes only one device patch
        if len(device_patches) == 0:
            # If no device is found, query the image directly
            return image_patch.simple_query(""Is the bathtub below the device in the middle?"")
        device_patch = device_patches[0]
        if bathtub_patch.vertical_center < device_patch.vertical_center:
            return ""yes""
    return ""no"""
16525685,Are there either pink gloves or hats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glove = image_patch.exists(""glove"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_glove or is_hat)"
19672187,Where does the lady to the right of the person stand on?," # assumes only one person and one lady
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    lady_patches = image_patch.find(""lady"")
    if len(person_patches) == 0 or len(lady_patches) == 0:
        return image_patch.simple_query(""Where does the lady to the right of the person stand on?"")
    person_patch = person_patches[0]
    lady_patch = lady_patches[0]
    if lady_patch.horizontal_center > person_patch.horizontal_center:
        return lady_patch.simple_query(""Where does the lady to the right of the person stand on?"")
    return person_patch.simple_query(""Where does the lady to the right of the person stand on?"")"
5716158,Are there both sheep and goats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sheep = image_patch.exists(""sheep"")
    is_goat = image_patch.exists(""goat"")
    return bool_to_yesno(is_sheep and is_goat)"
1877433,Is the blue chair to the left or to the right of the pillow that is to the right of the nightstand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue chair to the left or to the right of the pillow that is to the right of the nightstand?"")"
5287357,What are the tiles on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the tiles on?"")"
17403951,Is the man eating a pizza?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man eating a pizza?"")"
2542910,Do you see mooses next to the rock?," # moose is misspelled
    image_patch = ImagePatch(image)
    moose_patches = image_patch.find(""moose"")
    # Question assumes only one moose patch
    if len(moose_patches) == 0:
        # If no moose is found, query the image directly
        return image_patch.simple_query(""Do you see mooses next to the rock?"")
    for moose_patch in moose_patches:
        rock_patches = image_patch.find(""rock"")
        for rock_patch in rock_patches:
            if moose_patch.horizontal_center > rock_patch.horizontal_center:
                return ""yes""
    return ""no"""
15277388,Is the catcher to the right or to the left of the person at the game?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher to the right or to the left of the person at the game?"")"
19634349,Which color do you think the bag that is on the beach is?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the bag that is on the beach is?"")"
1305618,Are both the taxi cab and the bus the same color?," # contains a relation (same color), so ask directly
    image_patch = ImagePatch(image)
    taxi_cab_patches = image_patch.find(""taxi cab"")
    bus_patches = image_patch.find(""bus"")
    if len(taxi_cab_patches) == 0 or len(bus_patches) == 0:
        return ""no""
    taxi_cab_color = taxi_cab_patches[0].simple_query(""What color is the taxi cab?"")
    bus_color = bus_patches[0].simple_query(""What color is the bus?"")
    return bool_to_yesno(taxi_cab_color == bus_color)"
10247138,Does the clock look silver and large?," # returns yes or no
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Does the clock look silver and large?"")
    return bool_to_yesno(clock_patches[0].verify_property(""clock"", ""silver"") and clock_patches[0].verify_property(""clock"", ""large""))"
848206,What vehicle is to the left of the yellow traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the yellow traffic light?"")"
3173518,What is covered by the snow that looks white?," # contains a relation (covered by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the snow that looks white?"")"
111017433,Is the shirt gray or yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt gray or yellow?"")"
3512684,What is inside the pan on top of the stove?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the pan on top of the stove?"")"
15741911,Is the bell under a wolf?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bell under a wolf?"")"
4367257,Where is the plant pot?," # returns the location of the plant pot
    image_patch = ImagePatch(image)
    plant_pot_patches = image_patch.find(""plant pot"")
    # Question assumes only one plant pot patch
    if len(plant_pot_patches) == 0:
        # If no plant pot is found, query the image directly
        return image_patch.simple_query(""Where is the plant pot?"")
    return plant_pot_patches[0].simple_query(""Where is the plant pot?"") # crop would include the plant pot so keep it in the query"
5101375,Is she to the right of the device that is resting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she to the right of the device that is resting?"")"
13588079,Is the woman in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman in the bottom or in the top part of the image?"")
    woman_patch = woman_patches[0]
    if woman_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
11957432,Are there kites on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite on the ground"")) # crop would include the ground so keep it in the query"
10697079,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
12772006,What is the name of the food on the tray that is on the table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the food on the tray that is on the table?"")"
16581880,What is the girl wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl wearing?"")"
6744936,Does the grass look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the grass look green?"")"
15594374,What's hanging on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's hanging on the wall?"")"
7575540,What toy is holding the Christmas light?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What toy is holding the Christmas light?"")"
4647419,Are the bananas to the left of the round lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bananas to the left of the round lamp?"")"
10943284,What is in the vase?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the vase?"")"
2211043,Which kind of furniture is dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is dark?"")"
12295019,Which side is the plastic trash can on?," # left or right
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""plastic trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""Which side is the plastic trash can on?"")
    trash_can_patch = trash_can_patches[0]
    if trash_can_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7816263,Is the bicycle to the left or to the right of the blue car?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle to the left or to the right of the blue car?"")"
14298554,Do you see a polar bear that is not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    polar_bear_patches = image_patch.find(""polar bear"")
    for polar_bear_patch in polar_bear_patches:
        if not polar_bear_patch.verify_property(""polar bear"", ""white""):
            return ""yes""
    return ""no"""
3308033,What color is the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What color is the chair?"")
    return chair_patches[0].simple_query(""What color is the chair?"") # crop would include the chair so keep it in the query"
1673255,What is that number on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that number on?"")"
7426375,What are the vehicles to the left of the green traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vehicles to the left of the green traffic light?"")"
89061,Is the pot to the left or to the right of the pillow the chair is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pot to the left or to the right of the pillow the chair is with?"")"
8460991,Is the black vehicle to the left or to the right of the people on the road?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black vehicle to the left or to the right of the people on the road?"")"
7700803,What color are the magazines on the right side of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the magazines on the right side of the image?"")"
3991253,What is the size of the tall giraffe?," # returns a string
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch.simple_query(""What is the size of the tall giraffe?"")
    return giraffe_patches[0].simple_query(""What is the size of the tall giraffe?"") # crop would include the giraffe so keep it in the query"
10412685,What is common to the sign and the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the sign and the box?"")"
4993427,Do the wire and the keyboard have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the wire and the keyboard have a different colors?"")) # crop would include the keyboard so keep it in the query"
10661728,Do you see any screens to the right of the Wii that is to the right of the shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any screens to the right of the Wii that is to the right of the shelf?"")"
14311356,What color is the grass on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the grass on the ground?"")"
17898631,What do the shirt and the crosswalk have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the shirt and the crosswalk have in common?"")"
374978,Do you see any beer to the left of the bottle in the middle?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any beer to the left of the bottle in the middle?"")"
1498623,On which side of the picture is the container?," # left or right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the container?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13107188,Are there couches to the left of the toy next to the bed?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there couches to the left of the toy next to the bed?"")"
7708377,Are there chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
12390683,What kind of animal is to the right of the boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the right of the boat?"")"
1686914,Does the bottle have the same color as the sink?," # bottle and sink are assumed to be in the same image
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Does the bottle have the same color as the sink?"")
    bottle_patch = bottle_patches[0]
    sink_patches = image_patch.find(""sink"")
    # Question assumes only one sink patch
    if len(sink_patches) == 0:
        return ""no""
    sink_patch = sink_patches[0]
    return bool_to_yesno(bottle_patch.verify_property(""bottle"", ""blue"") == sink_patch.verify_property(""sink"", ""blue""))"
12227639,The man is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is wearing what?"")"
7228311,What are the pipes made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the pipes made of?"")"
1149947,Do you see any chairs beside the wall the bed is in front of?," # contains a relation (in front of, beside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any chairs beside the wall the bed is in front of?"")"
755909,What is the man standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man standing on?"")"
5751605,The sheep is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sheep is where?"")"
14875089,What is that towel on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that towel on?"")"
688645,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
1021596,Do you see any players above the dirt?," # assumes only one player patch
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    if len(player_patches) == 0:
        return image_patch.simple_query(""Do you see any players above the dirt?"")
    for player_patch in player_patches:
        if player_patch.vertical_center > image_patch.vertical_center / 2:
            return ""yes""
    return ""no"""
1635100,Is the drink in a cup?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drink in a cup?"")"
16983405,What kind of device is in front of the blinds?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is in front of the blinds?"")"
61015136,What kind of furniture is to the left of the bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the bird?"")"
8521908,Is the cat that is to the left of the gadget both large and brown?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat that is to the left of the gadget both large and brown?"")"
2146670,Which side is the mirror on?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Which side is the mirror on?"")
    return ""right"""
10495976,What is on the white door?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white door?"")"
9320315,What vegetable is to the right of the bacon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the right of the bacon?"")"
3176821,Are there both glasses and women in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_glasses and is_woman)"
8508205,Is the white bag on the left or on the right of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bag on the left or on the right of the photo?"")"
6111482,Which side is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12797164,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
5696781,What is the name of the piece of furniture that has the same color as the tablecloth?," # tablecloth is not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture that has the same color as the tablecloth?"")"
1198580,What vehicle is made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is made of metal?"")"
9246998,What is the food on the plate that is on the table called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the plate that is on the table called?"")"
16500850,Does the mask have a different color than the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the mask have a different color than the shirt?"")"
19730877,Is the woman to the left or to the right of the car in the middle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the car in the middle?"")"
14632817,Are there either buses or trains?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_train = image_patch.exists(""train"")
    return bool_to_yesno(is_bus or is_train)"
13774416,Are there any chairs to the right of the water bottle made of plastic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") and image_patch.exists(""water bottle made of plastic"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
3926416,Are the men on the right side of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the men on the right side of the photo?"")"
15850933,Is the grass behind a boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass behind a boy?"")"
61045575,Does that shirt have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""blue""))"
5573460,Are there both mirrors and skis in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_ski = image_patch.exists(""ski"")
    return bool_to_yesno(is_mirror and is_ski)"
16661983,Where is the dog?," # returns the location of the dog
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Where is the dog?"")
    return dog_patches[0].simple_query(""Where is the dog?"")"
256335,Who is wearing the shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoes?"")"
5456213,Is there either a ball or a fence in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ball"") or image_patch.exists(""fence""))"
1250163,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
1033897,Where is the sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the sign?"")"
4660447,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
10800771,Is that tail white and striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that tail white and striped?"")"
1728297,What animal is inside the pen in front of the trees?," # contains a relation (in front of, inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is inside the pen in front of the trees?"")"
1110712,What is the device that the cord is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that the cord is behind of?"")"
985662,What aircraft is parked?," # contains a relation (parked), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What aircraft is parked?"")"
12251403,Is the man looking at a cell phone?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man looking at a cell phone?"")"
11305362,The woman in front of the window is holding what?," # contains a relation (in front of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman in front of the window is holding what?"")"
8913241,Are there both fences and sheep in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_sheep = image_patch.exists(""sheep"")
    return bool_to_yesno(is_fence and is_sheep)"
6514326,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
12217060,What is the happy baby in front of the pillow chewing?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the happy baby in front of the pillow chewing?"")"
1947543,What is the vehicle that is driving down the road made of cement?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is driving down the road made of cement?"")"
554075,On which side of the image are the French fries?," # left or right
    image_patch = ImagePatch(image)
    french_fry_patches = image_patch.find(""french fries"")
    # Question assumes only one french fry patch
    if len(french_fry_patches) == 0:
        # If no french fries are found, query the image directly
        return image_patch.simple_query(""On which side of the image are the French fries?"")
    if french_fry_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11100656,What pieces of clothing are light?," # returns a list of clothing items
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What pieces of clothing are light?"")
    clothing_items = clothing_patches[0].simple_query(""What pieces of clothing are light?"") # crop would include the clothing so keep it in the query
    return clothing_items"
21030243,What is in front of the tall buildings?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the tall buildings?"")"
218821,Are there any batters to the right of the man the fence is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any batters to the right of the man the fence is to the right of?"")"
15917073,Are there cars or bags in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_car or is_bag)"
10741599,The man is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is on what?"")"
410691,Is the shower curtain white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shower curtain white?"")"
3992625,Does the tee shirt look black and long sleeved?," # returns yes or no
    image_patch = ImagePatch(image)
    tee_shirt_patches = image_patch.find(""tee shirt"")
    # Question assumes only one tee shirt patch
    if len(tee_shirt_patches) == 0:
        # If no tee shirt is found, query the image directly
        return image_patch.simple_query(""Does the tee shirt look black and long sleeved?"")
    return bool_to_yesno(tee_shirt_patches[0].verify_property(""tee shirt"", ""black"") and tee_shirt_patches[0].verify_property(""tee shirt"", ""long sleeved""))"
17522693,What's hitting the ball?," # contains a relation (hitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's hitting the ball?"")"
18150734,What are the vegetables that are to the right of the white tablecloth?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vegetables that are to the right of the white tablecloth?"")"
683648,Which side of the photo is the large mirror on?," # mirror is large
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the large mirror on?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11986368,"Which side is the cheese on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the cheese on, the right or the left?"")"
14227932,What type of food is to the left of the plates in the top part of the photo?," # contains a relation (left of, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the left of the plates in the top part of the photo?"")"
18794858,Do you see any books on top of the computer desk that is in front of the wall?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any books on top of the computer desk that is in front of the wall?"")"
11593062,What kind of vegetable is on the roll?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is on the roll?"")"
8353814,On which side of the picture is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
3361072,What kind of fruit is to the right of the scooter?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the right of the scooter?"")"
14224817,Where was the photo taken?," # contains a relation (where was the photo taken), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the photo taken?"")"
4749323,What is the towel hanging on?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the towel hanging on?"")"
19314801,What is the wall in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wall in front of?"")"
8950682,What is in front of the car in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the car in this picture?"")"
763961,The person is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person is holding what?"")"
17503114,Is the bag in the top part of the photo?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag in the top part of the photo?"")"
13490849,Is the rug to the right of a bedspread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rug to the right of a bedspread?"")"
13459069,Are the ripe fruits on the left side or on the right of the photo?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the ripe fruits on the left side or on the right of the photo?"")"
6435239,What color is the shirt the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the boy is wearing?"")"
3847392,What kind of clothing is brown?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is brown?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""coat"", ""dress"", ""hat"", ""jacket"", ""pants"", ""scarf"", ""shirt"", ""shoes"", ""socks"", ""suit"", ""t-shirt"", ""vest""])"
1868367,What is the item of furniture to the right of the glasses the woman is wearing?," # glasses the woman is wearing
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses the woman is wearing"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture to the right of the glasses the woman is wearing?"")
    glasses_patch = glasses_patches[0]
    furniture_patches = image_patch.find(""item of furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        return image_patch.simple_query(""What is the item of furniture to the right of the glasses the woman is wearing?"")
    for furniture_patch in furniture_patches:
        if furniture_patch.horizontal_center > glasses_patch.horizontal_center:
            return furniture_patch.simple_query(""What is the item of furniture to the right of the glasses the woman is wearing?"")
    return image_patch.simple_query(""What is the item of furniture to the right of the glasses the woman is wearing?"")"
6289468,Are both the door and the truck the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one door and one truck patch
    if len(door_patches) == 0 or len(truck_patches) == 0:
        # If no door or truck is found, query the image directly
        return image_patch.simple_query(""Are both the door and the truck the same color?"")
    door_color = door_patches[0].simple_query(""What color is the door?"")
    truck_color = truck_patches[0].simple_query(""What color is the truck?"")
    return bool_to_yesno(door_color == truck_color)"
12145219,Is the black container to the right or to the left of the people that the flag is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black container to the right or to the left of the people that the flag is to the right of?"")"
2270987,Is that plate to the right of a bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that plate to the right of a bread?"")"
1127085,Which kind of animal is behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is behind the fence?"")"
9429203,"Which part of the picture is the flag in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the picture is the flag in, the bottom or the top?"")"
13133327,Does the restroom appear to be dirty?," # dirty is a property of the restroom
    image_patch = ImagePatch(image)
    restroom_patches = image_patch.find(""restroom"")
    # Question assumes only one restroom patch
    if len(restroom_patches) == 0:
        # If no restroom is found, query the image directly
        return image_patch.simple_query(""Does the restroom appear to be dirty?"")
    return bool_to_yesno(restroom_patches[0].verify_property(""restroom"", ""dirty""))"
11891481,What are the walls made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the walls made of?"")"
1664280,What is the item of furniture that is to the left of the lunch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is to the left of the lunch?"")"
7600298,Is the table that looks brown made of wood or granite?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table that looks brown made of wood or granite?"")"
17864269,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
9413302,What animal is standing on the brown bear?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the brown bear?"")"
6849623,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
8863702,Is the small child to the left or to the right of the little person?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small child to the left or to the right of the little person?"")"
8231945,Is the dog black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog black?"")"
13617426,Is the house different in color than the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house different in color than the wall?"")"
15973728,Who is wearing the glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glove?"")"
1724640,What is the color of the cage?," # returns the color of the cage
    image_patch = ImagePatch(image)
    cage_patches = image_patch.find(""cage"")
    # Question assumes only one cage patch
    if len(cage_patches) == 0:
        # If no cage is found, query the image directly
        return image_patch.simple_query(""What is the color of the cage?"")
    return cage_patches[0].simple_query(""What is the color of the cage?"") # crop would include the cage so keep it in the query"
15801727,Does the counter look white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the counter look white?"") == ""yes"")"
19828653,How big is the pepperoni?," # returns a string
    image_patch = ImagePatch(image)
    pepperoni_patches = image_patch.find(""pepperoni"")
    # Question assumes only one pepperoni patch
    if len(pepperoni_patches) == 0:
        # If no pepperoni is found, query the image directly
        return image_patch.simple_query(""How big is the pepperoni?"")
    return pepperoni_patches[0].simple_query(""How big is the pepperoni?"") # crop would include the pepperoni so keep it in the query"
31059693,Is the stage black?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stage black?"")"
18330514,What is the desk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the desk made of?"")"
5985809,What vegetables are on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are on the plate?"")"
1236584,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11726397,The vehicle on the street has what color?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The vehicle on the street has what color?"")"
6599655,Are both the sandwich near the glasses and the sandwich with the lettuce grilled?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sandwich with lettuce"") and image_patch.exists(""grilled sandwich near glasses"")) # contains a relation (near, etc), so ask directly"
1380609,Is the fence made of the same material as the pole?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence made of the same material as the pole?"")"
14663640,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
1348053,What kind of furniture is to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the cabinet?"")"
6937874,Is there a refrigerator to the left of the bottle on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a refrigerator to the left of the bottle on the right side?"")"
6526096,What do both the glove and the team have in common?," # team is a group of people
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    team_patches = image_patch.find(""team"")
    # Question assumes only one glove patch and one team patch
    if len(glove_patches) == 0 or len(team_patches) == 0:
        # If no glove or team is found, query the image directly
        return image_patch.simple_query(""What do both the glove and the team have in common?"")
    glove_patch = glove_patches[0]
    team_patch = team_patches[0]
    common_properties = set(glove_patch.simple_query(""What properties does the glove have?"").split("", "")) # split by comma and space
    common_properties.update(team_patch.simple_query(""What properties does the team have?"").split("", "")) # split by comma and space
    return glove_patch.simple_query(""What is the most common property between the glove and the team?"") # crop would include the team so keep it in the query"
4895550,How is the device to the right of the dog that is on the table called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the device to the right of the dog that is on the table called?"")"
3124883,Is the shelf to the left or to the right of the person in the library?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left or to the right of the person in the library?"")"
567178,Is the white curtain in the van?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white curtain in the van?"")"
8633405,What is the item of furniture that the magazines are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that the magazines are on?"")"
17657165,"On which side are the people, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the people, the left or the right?"")"
10932907,What is the table made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the table made of?"")"
1985988,Is the carpet white?," # carpet is a tricky one because it's not a specific object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the carpet white?"")"
17209724,Are there either mirrors or garlands in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_garland = image_patch.exists(""garland"")
    return bool_to_yesno(is_mirror or is_garland)"
1174177,What is in front of the white wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the white wall?"")"
12129164,What kind of furniture sits on the grass in the photo?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture sits on the grass in the photo?"")"
13209265,What is the cow doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cow doing?"")"
3488252,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
1185513,On which side of the picture is the white refrigerator?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the white refrigerator?"")"
1622572,What's the girl wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the girl wearing?"")"
4575403,What is the fence post before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence post before?"")"
16992474,"What is the blanket on, a bed or a sofa?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blanket on, a bed or a sofa?"")"
6341102,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2326444,What device does the person to the right of the bicycle look at?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device does the person to the right of the bicycle look at?"")"
161014765,Do you see both coffee makers and chairs in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coffee_maker = image_patch.exists(""coffee maker"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_coffee_maker and is_chair)"
161080357,What is in front of the brown building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the brown building?"")"
10944011,What animal is walking in the zoo that is shown in this image?," # contains a relation (in the zoo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is walking in the zoo that is shown in this image?"")"
18832104,What is the vehicle that the oak is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that the oak is behind of?"")"
8435127,On which side of the image is the bag?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bag?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11539787,Where does the zebra near the herd stand on?," # herd is a group of zebras
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch.simple_query(""Where does the zebra near the herd stand on?"")
    for zebra_patch in zebra_patches:
        herd_patches = image_patch.find(""herd"")
        for herd_patch in herd_patches:
            if herd_patch.horizontal_center > zebra_patch.horizontal_center:
                return zebra_patch.simple_query(""Where does the zebra near the herd stand on?"")
    return zebra_patches[0].simple_query(""Where does the zebra near the herd stand on?"")"
18295672,What color are the trees that the leaves are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the trees that the leaves are on?"")"
872178,What's the dog lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the dog lying on?"")"
12652450,Where do you think is the person walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where do you think is the person walking?"")"
18808041,Are there magazines on top of the coffee table that is to the left of the fork?," # contains a relation (on top of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there magazines on top of the coffee table that is to the left of the fork?"")"
379452,What are the black gloves lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the black gloves lying on?"")"
17916586,What is the sauce on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sauce on?"")"
6597976,Do you see a toaster to the left of the knife block?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a toaster to the left of the knife block?"")"
3530361,The pillow is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The pillow is on what?"")"
18905322,Is the water small and blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the water small and blue?"")"
9672142,What is located on top of the sign that is on the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the sign that is on the pole?"")"
7954955,What vehicle is to the right of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the bus?"")"
1077567,What kind of furniture is sitting on the floor?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is sitting on the floor?"")"
18346092,Is the dog collar above the sweater that is not large?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog collar above the sweater that is not large?"")"
8539774,Who is holding the bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the bat?"")"
1874799,Does the picture frame look small and black?," # returns yes or no
    image_patch = ImagePatch(image)
    picture_frame_patches = image_patch.find(""picture frame"")
    # Question assumes only one picture frame patch
    if len(picture_frame_patches) == 0:
        # If no picture frame is found, query the image directly
        return image_patch.simple_query(""Does the picture frame look small and black?"")
    return bool_to_yesno(picture_frame_patches[0].verify_property(""picture frame"", ""small"") and picture_frame_patches[0].verify_property(""picture frame"", ""black""))"
6711067,"Which kind of furniture is not white, the chair or the desk?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    desk_patches = image_patch.find(""desk"")
    for chair_patch in chair_patches:
        if chair_patch.verify_property(""chair"", ""white""):
            return chair_patch.simple_query(""Which kind of furniture is not white, the chair or the desk?"")
    for desk_patch in desk_patches:
        if desk_patch.verify_property(""desk"", ""white""):
            return desk_patch.simple_query(""Which kind of furniture is not white, the chair or the desk?"")
    return ""chair"""
478379,Is the stove to the left of a microwave?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove to the left of a microwave?"")"
2298227,Is the young girl to the right of the kids on the right side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young girl to the right of the kids on the right side of the photo?"")"
1647395,Is the color of the shirt different than the sky?," # contains a relation (different than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the shirt different than the sky?"")"
3437403,What is in the planter?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the planter?"")"
12255730,Are there both cars and mirrors in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_car and is_mirror)"
18750628,Which side are the blue chairs on?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which side are the blue chairs on?"")
    for chair_patch in chair_patches:
        if chair_patch.verify_property(""chair"", ""blue""):
            if chair_patch.horizontal_center < image_patch.horizontal_center:
                return ""left""
            else:
                return ""right""
    return ""left"" # default to left if no blue chair is found"
3886691,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
13386650,Is the white planter in the top or in the bottom?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white planter in the top or in the bottom?"")"
7855891,Which side is the white towel on?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""Which side is the white towel on?"")
    towel_patch = towel_patches[0]
    if towel_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
171015317,Is the baby to the right or to the left of the woman that is to the right of the purse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baby to the right or to the left of the woman that is to the right of the purse?"")"
16535518,What does the girl wear?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the girl wear?"")"
17660025,On which side of the picture is the cabinet?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the cabinet?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10541067,What vehicle is to the left of the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the bike?"")"
12979998,Is the train to the left or to the right of the person that is on the bridge?," # contains a relation (left, right, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train to the left or to the right of the person that is on the bridge?"")"
19924742,Is the person who is to the right of the person holding a racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person who is to the right of the person holding a racket?"")"
15809731,Is the boy to the left or to the right of the kid that is wearing a shirt?," # contains a relation (left, right, wearing a shirt, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the kid that is wearing a shirt?"")"
4402673,What animal is eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating?"")"
5594185,Is it clear?," # clear is a property of the image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""image"", ""clear""))"
280503,Is the fence on the right side of the picture?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the right side of the picture?"")"
1778154,The sneakers are of what color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sneakers are of what color?"")"
13871144,Is the person in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the bottom or in the top part of the image?"")"
3419556,What is the man to the left of the umbrella wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the umbrella wearing?"")"
5372189,Which color do you think the cap is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the cap is?"")"
110920,Is the box to the right or to the left of the woman that is to the left of the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box to the right or to the left of the woman that is to the left of the train?"")"
711303,What is the animal on the street?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on the street?"")"
17687187,Who is wearing goggles?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing goggles?"")"
567077,Are the leaves on the tree red or green?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the leaves on the tree red or green?"")"
17298378,Which color is that shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that shirt?"")"
6338988,What device does the woman hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device does the woman hold?"")"
1141961,What's he doing?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""What's he doing?"")
    return person_patches[0].simple_query(""What's he doing?"") # crop would include the action so keep it in the query"
7948521,Who is playing?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing?"")"
110132,Are there kites in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite""))"
18450208,Do you see a bag or a chair in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""chair""))"
5974252,Which kind of device is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is white?"")"
4742139,The train is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The train is where?"")"
14736404,On which side of the image is the apple?," # left or right
    image_patch = ImagePatch(image)
    apple_patches = image_patch.find(""apple"")
    # Question assumes only one apple patch
    if len(apple_patches) == 0:
        # If no apple is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the apple?"")
    apple_patch = apple_patches[0]
    if apple_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
225732,Which kind of aircraft is parked?," # contains a relation (parked), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is parked?"")"
11592192,What is that toy called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that toy called?"")"
15515085,Is the white bathtub in front of the shelf in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bathtub in front of the shelf in the middle of the photo?"")"
8915640,Is the lady to the left of the people holding the blue bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the left of the people holding the blue bag?"")"
18239534,Are there any cars to the left of the man that is to the right of the phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""car"") and image_patch.exists(""man"") and image_patch.exists(""phone""))"
9663485,Are there small monkeys or elephants?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_monkey = image_patch.exists(""monkey"")
    is_elephant = image_patch.exists(""elephant"")
    return bool_to_yesno(is_monkey or is_elephant)"
7954483,What does the elephant with the chain drink?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the elephant with the chain drink?"")"
121017996,What is on the bun?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bun?"")"
154114,How long is the skirt?," # returns a string
    image_patch = ImagePatch(image)
    skirt_patches = image_patch.find(""skirt"")
    # Question assumes only one skirt patch
    if len(skirt_patches) == 0:
        # If no skirt is found, query the image directly
        return image_patch.simple_query(""How long is the skirt?"")
    return skirt_patches[0].simple_query(""How long is the skirt?"") # crop would include the skirt so keep it in the query"
1253666,What food is in front of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is in front of the bag?"")"
14904838,How large is the bench?," # returns a string
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""How large is the bench?"")
    return bench_patches[0].simple_query(""How large is the bench?"") # crop would include the size so keep it in the query"
530777,Is the fence to the left or to the right of the man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the left or to the right of the man?"")"
13952157,Is the bottle to the right or to the left of the napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle to the right or to the left of the napkins?"")"
16967465,"What is the man on the floor holding, a laptop or a phone?"," # contains a relation (on the floor, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on the floor holding, a laptop or a phone?"")"
17522816,Do the trousers look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the trousers look white?"")"
13510452,What is located on top of the cake below the lid?," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the cake below the lid?"")"
741173,Is the color of the shorts black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the shorts black?"")"
8691024,What color is the shirt that the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt that the boy is wearing?"")"
7843714,Are there any men to the right of the white towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.find(""man"")[0].horizontal_center > image_patch.find(""white towel"")[0].horizontal_center)"
3784632,What color is the car?," # returns the color of the car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car?"")
    return car_patches[0].simple_query(""What color is the car?"")"
811207,Who is holding the device that is not large?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the device that is not large?"")"
1578790,Is this a bus or a train?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bus or a train?"")"
9167649,What is the mouse to the right of the keyboard lying on?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mouse to the right of the keyboard lying on?"")"
4698697,Is it the desert or the beach?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it the desert or the beach?"")"
4298748,Are the bags in the top or in the bottom part?," # contains a relation (on top of, in the bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bags in the top or in the bottom part?"")"
6262199,What is attached to the red motorcycle?," # contains a relation (attached to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is attached to the red motorcycle?"")"
8129777,Do you see a tie there that is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a tie there that is black?"")"
7729952,"What kind of furniture is dark colored, the coffee table or the chair?"," # contains a relation (dark colored), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is dark colored, the coffee table or the chair?"")"
13707488,What appliance is to the left of the mug beside the sink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the mug beside the sink?"")"
9499573,Are there cakes near the plate the fork is in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cake""))"
15544871,Do the plates have the same color as the paper towels?," # paper towels are assumed to be on the right
    image_patch = ImagePatch(image)
    plates_patches = image_patch.find(""plates"")
    # Question assumes only one plate patch
    if len(plates_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Do the plates have the same color as the paper towels?"")
    paper_towels_patches = image_patch.find(""paper towels"")
    # Question assumes only one paper towels patch
    if len(paper_towels_patches) == 0:
        return ""no""
    paper_towels_patch = paper_towels_patches[0]
    return bool_to_yesno(plates_patches[0].verify_property(""plates"", paper_towels_patch.simple_query(""What color are the paper towels?"")))"
14127729,What color is the bag in the bottom of the photo?," # contains a relation (bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag in the bottom of the photo?"")"
15979734,What color is the bright sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bright sky?"")"
11191437,Are there boys or frisbees in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_boy = image_patch.exists(""boy"")
    is_frisbee = image_patch.exists(""frisbee"")
    return bool_to_yesno(is_boy or is_frisbee)"
10535779,What's on the pine tree?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the pine tree?"")"
8524183,Are there any doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
234925,Is the glass bottle to the right or to the left of the beer bottle?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass bottle to the right or to the left of the beer bottle?"")"
9198247,What is the color of the shirt the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the boy is wearing?"")"
11967135,Are there any bikes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike""))"
141010150,Are there both sand and grass in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sand = image_patch.exists(""sand"")
    is_grass = image_patch.exists(""grass"")
    return bool_to_yesno(is_sand and is_grass)"
5806708,Do the people seem to be walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the people seem to be walking?"")"
3123214,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
1402457,Do you see any cucumbers to the left of the zucchini the carrots are to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cucumbers to the left of the zucchini the carrots are to the right of?"")"
847932,Is the color of the American flag the same as the sweater?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the American flag the same as the sweater?"")"
6218509,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
13588762,Which color is the bag on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag on the left?"")"
15191447,Are there any ropes to the right of the white boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""rope"") and image_patch.find(""white boat"")[0].horizontal_center < image_patch.horizontal_center)"
13268826,What bags are to the left of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What bags are to the left of the girl?"")"
16582592,Are there any chairs to the left of the man that is to the left of the wine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any chairs to the left of the man that is to the left of the wine?"")"
1438662,Which color is the container to the right of the faucet?," # container is a general term, so ask directly
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""Which color is the container to the right of the faucet?"")"
917044,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
12864611,Is the ball to the right of the other ball brown or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball to the right of the other ball brown or white?"")"
3745900,Do you see any candles to the right of the white towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any candles to the right of the white towel?"")"
104603,Is there any cheese in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cheese""))"
7465822,The man that is to the right of the person is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man that is to the right of the person is wearing what?"")"
8740032,What kind of bird is in front of the forest?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of bird is in front of the forest?"")"
1390111,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
3129257,Is there a pan to the right of the stove on the left side?," # left side is the left of the image
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    # Question assumes only one pan patch
    if len(pan_patches) == 0:
        # If no pan is found, query the image directly
        return image_patch.simple_query(""Is there a pan to the right of the stove on the left side?"")
    for pan_patch in pan_patches:
        stove_patches = image_patch.find(""stove"")
        for stove_patch in stove_patches:
            if stove_patch.horizontal_center < image_patch.horizontal_center and pan_patch.horizontal_center > stove_patch.horizontal_center:
                return ""yes""
    return ""no"""
7520881,Are the baked goods on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the baked goods on the plate?"")"
8746582,Are there both a giraffe and a zebra in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe = image_patch.exists(""giraffe"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_giraffe and is_zebra)"
13315424,Do the green trees look bushy or leafless?," # contains a relation (bushy or leafless), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the green trees look bushy or leafless?"")"
13245612,What is the color of the toilet?," # returns the color of the toilet
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""What is the color of the toilet?"")
    return toilet_patches[0].simple_query(""What is the color of the toilet?"") # crop would include the toilet so keep it in the query"
5566399,Are there towels in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel""))"
18662503,Is there a mirror on the motorcycle?," # mirror is not a motorcycle part
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is there a mirror on the motorcycle?"")
    for mirror_patch in mirror_patches:
        if mirror_patch.simple_query(""Is the mirror on the motorcycle?"") == ""yes"":
            return ""yes""
    return ""no"""
186657,Is the man on a bicycle?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on a bicycle?"")"
9837294,Are there either trains or fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_train or is_fence)"
2844849,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
17371561,What color does the shirt have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the shirt have?"")"
3771467,Is there any brown grass or sand in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown grass"") or image_patch.exists(""sand""))"
2437649,Is the batter to the left of the umpire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the batter to the left of the umpire?"")"
161081223,"What kind of furniture is this, a bed or a table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is this, a bed or a table?"")"
13241764,Do you see a boat in the water that is around the surfer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a boat in the water that is around the surfer?"")"
41030822,Is the grass wet and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""grass"", ""wet"") and image_patch.verify_property(""grass"", ""brown""))"
1441493,What animal is on the chair that is to the right of the speaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the chair that is to the right of the speaker?"")"
14422683,Is the fence to the right or to the left of the yellow train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the right or to the left of the yellow train?"")"
12747352,Is the dirt below the horse?," # contains a relation (below, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dirt below the horse?"")"
21060278,What kind of device is the young man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the young man holding?"")"
51017031,Is the snow board to the left or to the right of the skier that is wearing pants?," # contains a relation (left, right, wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the snow board to the left or to the right of the skier that is wearing pants?"")"
11174359,Are there zebras in this picture that are not happy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") and not image_patch.exists(""happy zebra""))"
9114096,Are the white balloons on top of the sign?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white balloons on top of the sign?"")"
16366001,What kind of animal is the bush behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the bush behind of?"")"
4817626,Are there doors or windows that are made of metal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    is_metal = image_patch.exists(""metal"")
    return bool_to_yesno(is_door or is_window) and bool_to_yesno(is_metal)"
8700614,Is the floor beige?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the floor beige?"")"
16838882,Is the white bag to the right of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bag to the right of a chair?"")"
19609970,Are there cars to the left of the bike on the left side?," # left side of the image
    image_patch = ImagePatch(image)
    bike_patches = image_patch.find(""bike"")
    # Question assumes only one bike patch
    if len(bike_patches) == 0:
        # If no bike is found, query the image directly
        return image_patch.simple_query(""Are there cars to the left of the bike on the left side?"")
    bike_patch = bike_patches[0]
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        return ""no""
    for car_patch in car_patches:
        if car_patch.horizontal_center < bike_patch.horizontal_center and car_patch.horizontal_center < image_patch.horizontal_center:
            return ""yes""
    return ""no"""
18353857,Is the man to the left or to the right of the umbrellas in the center of the picture?," # contains a relation (left, right, center, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the umbrellas in the center of the picture?"")"
14496695,What is the cliff covered by?," # contains a relation (covered by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cliff covered by?"")"
1171652,"What type of furniture is the lamp on, a nightstand or a cabinet?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is the lamp on, a nightstand or a cabinet?"")"
13370877,Are there any forks above the napkin on the left?," # contains a relation (above, below, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork"") and image_patch.exists(""napkin"") and image_patch.find(""napkin"")[0].horizontal_center < image_patch.horizontal_center)"
10943598,What is the book on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the book on?"")"
3314108,Which side is the clock on?," # left or right
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Which side is the clock on?"")
    if clock_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2801447,On which side of the image are the pots?," # left or right
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the pots?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12796056,Is the girl to the right or to the left of the man that uses a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the man that uses a laptop?"")"
18470833,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
17653204,What is the paper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the paper on?"")"
16404653,What's in the glass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in the glass?"")"
11001890,What is the decoration on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the decoration on?"")"
12915588,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
4841529,What is in the container to the right of the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the container to the right of the people?"")"
4218869,What's on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the wall?"")"
10176517,Is the white napkin on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white napkin on the left or on the right?"")"
13454549,Does the animal that looks little look white?," # contains a relation (looks like), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal that looks little look white?"")"
18525148,What is the man near the oven grabbing?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man near the oven grabbing?"")"
14576634,Are there both doors and windows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
1839006,What is the color of the motorcycle to the left of the car?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the motorcycle to the left of the car?"")"
171467,Are there bicycles in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bicycle""))"
3922822,How large is the table the flowers are on top of?," # returns the size of the table
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch.simple_query(""How large is the table the flowers are on top of?"")
    for flower_patch in flower_patches:
        table_patches = image_patch.find(""table"")
        for table_patch in table_patches:
            if table_patch.horizontal_center > flower_patch.horizontal_center:
                return table_patch.simple_query(""How large is the table the flowers are on top of?"")
    return image_patch.simple_query(""How large is the table the flowers are on top of?"") # if no table is found, query the image directly"
7862839,"On which side is the man, the right or the left?"," # assumes only one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man, the right or the left?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
8822424,Are there any silver faucets or pots in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""silver faucet"") or image_patch.exists(""pot""))"
6182115,Who is walking with the child?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking with the child?"")"
11718668,What color is that oak?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is that oak?"")"
10921477,The towel is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The towel is on what?"")"
510173,What piece of furniture is to the right of the toilet near the paper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the right of the toilet near the paper?"")"
12462450,Is the girl to the right or to the left of the person that is to the right of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the person that is to the right of the helmet?"")"
2121794,Are there any crackers or forks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cracker = image_patch.exists(""cracker"")
    is_fork = image_patch.exists(""fork"")
    return bool_to_yesno(is_cracker or is_fork)"
19167090,Which color is the remote?," # returns the color of the remote
    image_patch = ImagePatch(image)
    remote_patches = image_patch.find(""remote"")
    # Question assumes only one remote patch
    if len(remote_patches) == 0:
        # If no remote is found, query the image directly
        return image_patch.simple_query(""Which color is the remote?"")
    return remote_patches[0].simple_query(""Which color is the remote?"") # crop would include the remote so keep it in the query"
17977582,What is the vehicle to the right of the woman in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the woman in the center?"")"
9577694,Do you see any black bicycles or mouse pads?," # returns yes or no
    image_patch = ImagePatch(image)
    is_black_bicycle = image_patch.exists(""black bicycle"")
    is_mouse_pad = image_patch.exists(""mouse pad"")
    return bool_to_yesno(is_black_bicycle or is_mouse_pad)"
17839946,What animal is to the right of the stuffed animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the right of the stuffed animal?"")"
1271776,Does the lettuce that is to the right of the salad look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the lettuce that is to the right of the salad look white?"")"
4301403,Is there a skateboard to the left of the standing man that is wearing a cap?," # contains a relation (left of, wearing a cap), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a skateboard to the left of the standing man that is wearing a cap?"") # crop would include the cap so keep it in the query"
1063375,Is the TV to the right or to the left of the picture on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the TV to the right or to the left of the picture on the table?"")"
2378813,Are the plants in a planter?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the plants in a planter?"")) # crop would include the planter so keep it in the query"
137974,Is this a blanket or a pillow?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a blanket or a pillow?"")"
8577727,Is the shirt sleeveless or long sleeved?," # contains a relation (sleeveless, long sleeved), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt sleeveless or long sleeved?"")"
252855,What place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"")"
151017733,What place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is pictured?"")"
7436694,What is the name of the appliance to the left of the bag on the right side?," # assumes only one bag on the right
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What is the name of the appliance to the left of the bag on the right side?"")
    for appliance_patch in appliance_patches:
        bag_patches = image_patch.find(""bag"")
        # Question assumes only one bag patch
        if len(bag_patches) == 0:
            return appliance_patch.simple_query(""What is the name of the appliance to the left of the bag on the right side?"")
        for bag_patch in bag_patches:
            if bag_patch.horizontal_center < appliance_patch.horizontal_center:
                return appliance_patch.simple_query(""What is the name of the appliance to the left of the bag on the right side?"")
    return appliance_patches[0].simple_query(""What is the name of the appliance to the left of the bag on the right side?"")"
7216614,Are there any helmets above the red cap?," # helmet is above the red cap
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are there any helmets above the red cap?"")
    for helmet_patch in helmet_patches:
        red_cap_patches = image_patch.find(""red cap"")
        for red_cap_patch in red_cap_patches:
            if helmet_patch.vertical_center > red_cap_patch.vertical_center:
                return ""yes""
    return ""no"""
5972791,Is the little girl to the left or to the right of the man that is wearing a shoe?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the little girl to the left or to the right of the man that is wearing a shoe?"")"
2909931,On which side is the guy?," # left or right
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""On which side is the guy?"")
    guy_patch = guy_patches[0]
    if guy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10533197,On which side is the extinguisher of the boy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the extinguisher of the boy?"")"
1026560,Does that shirt have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""black""))"
9674610,Who is posing?," # contains a relation (posing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is posing?"")"
11496831,Are there both a pillow and a nightstand in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_nightstand = image_patch.exists(""nightstand"")
    return bool_to_yesno(is_pillow and is_nightstand)"
2368491,What are the shrubs in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the shrubs in front of?"")"
11376435,What is the color of the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What is the color of the jacket?"")
    return jacket_patches[0].simple_query(""What is the color of the jacket?"") # crop would include the jacket so keep it in the query"
3571820,Which kind of baked good is on the counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is on the counter?"")"
6409126,"What color is the stuffed animal to the left of the other stuffed animal, white or brown?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the stuffed animal to the left of the other stuffed animal, white or brown?"")"
15424094,Is the sky cloudless or foggy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky cloudless or foggy?"")"
4228790,Does the surfboard near the table have long length and yellow color?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the surfboard near the table have long length and yellow color?"")"
4555563,What is common to the fence and the house?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the fence and the house?"")"
12756956,What is the kid in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kid in?"")"
8508823,Is the refrigerator in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the refrigerator in the bottom part or in the top of the image?"")"
11514168,What kind of vegetable is to the left of the yellow fruit?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the left of the yellow fruit?"")"
5815128,What color is the coat the man is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the coat the man is with?"")"
17974475,Is the large bookshelf to the right or to the left of the lamp in the middle?," # assumes only one bookshelf and one lamp
    image_patch = ImagePatch(image)
    bookshelf_patches = image_patch.find(""bookshelf"")
    # Question assumes only one bookshelf patch
    if len(bookshelf_patches) == 0:
        # If no bookshelf is found, query the image directly
        return image_patch.simple_query(""Is the large bookshelf to the right or to the left of the lamp in the middle?"")
    bookshelf_patch = bookshelf_patches[0]
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Is the large bookshelf to the right or to the left of the lamp in the middle?"")
    lamp_patch = lamp_patches[0]
    if bookshelf_patch.horizontal_center > lamp_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
5489869,What is the white animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white animal?"")"
14615544,Is the girl to the right of a calculator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right of a calculator?"")"
9424994,What is in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sky?"")"
3731477,Are there any black tables or couches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_table = image_patch.exists(""black table"")
    is_black_couch = image_patch.exists(""black couch"")
    return bool_to_yesno(is_black_table or is_black_couch)"
12480654,What is the color of the vehicle on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the vehicle on the left?"")"
893623,Who is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding?"")"
3241900,Do you see a fence to the right of the spectators?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a fence to the right of the spectators?"")"
15621839,What is the tall man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tall man holding?"")"
11555180,How large is the TV?," # returns a string
    image_patch = ImagePatch(image)
    tv_patches = image_patch.find(""TV"")
    # Question assumes only one TV patch
    if len(tv_patches) == 0:
        # If no TV is found, query the image directly
        return image_patch.simple_query(""How large is the TV?"")
    return tv_patches[0].simple_query(""How large is the TV?"") # crop would include the TV so keep it in the query"
5592914,Is the color of the sign different than the cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the sign different than the cart?"")"
12510335,Who is talking?," # contains a relation (talking to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is talking?"")"
4491881,Do you see any white hat or scarf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any white hat or scarf?"")"
79428,What kind of furniture is the keyboard on?," # keyboard is a piece of furniture
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""What kind of furniture is the keyboard on?"")
    return keyboard_patches[0].simple_query(""What kind of furniture is the keyboard on?"") # crop would include the keyboard so keep it in the query"
1945795,Do you see picnic tables or boxes there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picnic table"") or image_patch.exists(""box""))"
14480813,Are there both windows and doors in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
1161736,What is in front of the hay?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the hay?"")"
15964456,Are there any balls or pliers?," # returns yes or no
    image_patch = ImagePatch(image)
    is_ball = image_patch.exists(""ball"")
    is_plier = image_patch.exists(""pliers"")
    return bool_to_yesno(is_ball or is_plier)"
10527664,Does the backpack have a different color than the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Does the backpack have a different color than the train?"")
    backpack_patch = backpack_patches[0]
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        return ""no""
    train_patch = train_patches[0]
    return bool_to_yesno(backpack_patch.verify_property(""backpack"", ""color"") != train_patch.verify_property(""train"", ""color""))"
640278,Are there any men to the left of the beach umbrella above the people?," # contains a relation (above, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any men to the left of the beach umbrella above the people?"")"
91011160,Is the bag to the left of the suitcase purple or brown?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left of the suitcase purple or brown?"")"
1116942,What is the arrow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the arrow on?"")"
14426135,The box is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The box is on what?"")"
869962,Is the woman on the left side or on the right of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the left side or on the right of the image?"")"
13787227,Is there green pasta or salad in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there green pasta or salad in this photograph?"")"
10702425,Which kind of meat is to the right of the fries?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is to the right of the fries?"")"
1231094,What does the zebra that is white and black look toward?," # contains a relation (toward), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the zebra that is white and black look toward?"")"
8212693,Is there either a black scarf or hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_scarf = image_patch.exists(""black scarf"")
    is_black_hat = image_patch.exists(""black hat"")
    return bool_to_yesno(is_black_scarf or is_black_hat)"
11947293,What is wearing a dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing a dress?"")"
3421750,Is this a picture of a parking lot or a garage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a picture of a parking lot or a garage?"")"
18805222,Are there either bottles or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_bottle or is_cup)"
7354820,What kind of furniture is the lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the lamp on?"")"
3818767,Who is carrying the backpack?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the backpack?"")"
5367673,Are there any pastries to the right of the doughnut the bag is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any pastries to the right of the doughnut the bag is to the left of?"")"
10896243,What is the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What is the clock on?"")
    return clock_patches[0].simple_query(""What is the clock on?"")"
16607082,Do you see both spatulas and trays there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_spatula = image_patch.exists(""spatula"")
    is_tray = image_patch.exists(""tray"")
    return bool_to_yesno(is_spatula and is_tray)"
13229419,What vegetable is shredded?," # contains a relation (shredded), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is shredded?"")"
13632199,What kind of furniture is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the chair?"")"
941320,On which side are the men?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side are the men?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
191017902,What's the bear on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bear on?"")"
587473,Of what color is the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Of what color is the shirt?"")
    return shirt_patches[0].simple_query(""Of what color is the shirt?"") # crop would include the shirt so keep it in the query"
8852779,Is the bench to the right or to the left of the garbage bin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench to the right or to the left of the garbage bin?"")"
9932216,What's the plate made of?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the plate made of?"")"
9702277,Are the animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the animals of different species?"")"
19700157,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4623189,"On which side of the image is the white rope, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the white rope, the left or the right?"")"
455001,Are there any fences or buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_fence or is_bus)"
1442195,On which side of the image is the fork?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the fork?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
121012971,Who in the picture is playing?," # contains a relation (playing with, playing against, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in the picture is playing?"")"
18756218,What kind of food is to the left of the woman?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the woman?"")"
325966,What's on the mountains?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the mountains?"")"
519095,What kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is made of wood?"")"
3474297,What is in front of the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the water?"")"
7329391,Is the boy to the left or to the right of the lady that is holding the bat?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the lady that is holding the bat?"")"
1348145,Which kind of vehicle is the man observing?," # contains a relation (observing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is the man observing?"")"
21041568,Do the suit and the plate have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    suit_patches = image_patch.find(""suit"")
    # Question assumes only one suit patch
    if len(suit_patches) == 0:
        # If no suit is found, query the image directly
        return image_patch.simple_query(""Do the suit and the plate have a different colors?"")
    suit_patch = suit_patches[0]
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        return ""no""
    plate_patch = plate_patches[0]
    return bool_to_yesno(suit_patch.verify_property(""suit"", ""blue"") != plate_patch.verify_property(""plate"", ""blue""))"
1837503,Which kind of vehicle is parked in the parking lot?," # contains a relation (parked in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is parked in the parking lot?"")"
14370383,Is the bus the same color as the mannequin?," # bus and mannequin are assumed to be in the same image
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""Is the bus the same color as the mannequin?"")
    bus_patch = bus_patches[0]
    mannequin_patches = image_patch.find(""mannequin"")
    # Question assumes only one mannequin patch
    if len(mannequin_patches) == 0:
        return ""no""
    mannequin_patch = mannequin_patches[0]
    return bool_to_yesno(bus_patch.verify_property(""bus"", bus_patch.simple_query(""What is the color of the bus?""))) and bool_to_yesno(mannequin_patch.verify_property(""mannequin"", mannequin_patch.simple_query(""What is the color of the mannequin?"")))"
12935543,Do you see geese to the right of the swan in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see geese to the right of the swan in the middle of the image?"")"
5568464,Is the boy to the right of a skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the right of a skateboard?"")"
1186234,Is the color of the clock the same as the statue?," # returns yes or no
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Is the color of the clock the same as the statue?"")
    clock_color = clock_patches[0].simple_query(""What is the color of the clock?"")
    statue_patches = image_patch.find(""statue"")
    # Question assumes only one statue patch
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch.simple_query(""Is the color of the clock the same as the statue?"")
    statue_color = statue_patches[0].simple_query(""What is the color of the statue?"")
    return bool_to_yesno(clock_color == statue_color)"
11443003,Are there pictures on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture on the wall"")) # contains a relation (on the wall), so ask directly"
17550876,Do you see either any cabinets or ovens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet"") or image_patch.exists(""oven""))"
2588904,Does the garage door have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""garage door"", ""blue""))"
8458966,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
1940588,What is the church made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the church made of?"")"
4738589,The giraffe that looks brown is standing where?," # giraffe is brown, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The giraffe that looks brown is standing where?"")"
5950231,What color is the fence made of wire?," # wire is a property of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""What color is the fence made of wire?"")
    return fence_patches[0].simple_query(""What color is the fence made of wire?"") # crop would include the wire so keep it in the query"
13480222,Are the people in the top or in the bottom?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people in the top or in the bottom?"")"
16945483,Does the person's hair look blond?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Does the person's hair look blond?"")
    return bool_to_yesno(person_patches[0].verify_property(""hair"", ""blond""))"
264574,Is the screen to the left or to the right of the bottle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left or to the right of the bottle?"")"
14825029,Are the tennis balls in the bottom of the photo?," # tennis balls are in the bottom of the image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.vertical_center < image_patch.height / 2)"
17633020,Are the chairs to the right or to the left of the towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the chairs to the right or to the left of the towel?"")"
2609095,Is the cab in front of the bus pink or black?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cab in front of the bus pink or black?"")"
61034733,"On which side of the photo is the gray truck, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the gray truck, the right or the left?"")"
932558,What is the child wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child wearing?"")"
4992080,Is there a sofa near the side table that is in the bottom of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a sofa near the side table that is in the bottom of the picture?"")"
15762405,Do the mask and the helmet have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    mask_patches = image_patch.find(""mask"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one mask and helmet patch
    if len(mask_patches) == 0 or len(helmet_patches) == 0:
        # If no mask or helmet is found, query the image directly
        return image_patch.simple_query(""Do the mask and the helmet have the same color?"")
    mask_patch = mask_patches[0]
    helmet_patch = helmet_patches[0]
    return bool_to_yesno(mask_patch.verify_property(""mask"", ""blue"") == helmet_patch.verify_property(""helmet"", ""blue""))"
629946,What is the device on the table called?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the table called?"")"
16245767,What is the plastic bag hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plastic bag hanging from?"")"
71058241,Is the can to the left of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the can to the left of a bag?"")"
9273264,What kind of device is before the keyboard?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is before the keyboard?"")"
6584353,Who wears a ring?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a ring?"")"
18474186,Is the man to the right of the helmet swinging a baseball bat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the helmet swinging a baseball bat?"")"
17581199,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
6551280,Is that TV on a shelf?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that TV on a shelf?"")"
11572435,Are there both a fence and a zebra?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_fence and is_zebra)"
11746063,What is holding the shield?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is holding the shield?"")"
4100034,What type of animal is to the right of the woman that sits on the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is to the right of the woman that sits on the truck?"")"
18622504,Are there light bulbs on the ceiling?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""light bulb"") and image_patch.exists(""ceiling"")) # contains a relation (on, off, etc), so ask directly"
15535871,Is there either a train or a door in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train"") or image_patch.exists(""door""))"
379167,Is the boy to the left or to the right of the man that is sitting in the folding chair?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left or to the right of the man that is sitting in the folding chair?"")"
7291080,What is the snowboard made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the snowboard made of?"")"
19937637,What is the color of the coat the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the coat the man is wearing?"")"
18683750,Who is carrying the backpack?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the backpack?"")"
8696227,What is the color of the sink that the drain is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sink that the drain is on?"")"
16204222,Where is the paper?," # paper is a common object
    image_patch = ImagePatch(image)
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        # If no paper is found, query the image directly
        return image_patch.simple_query(""Where is the paper?"")
    return paper_patches[0].simple_query(""Where is the paper?"") # crop would include the paper so keep it in the query"
7927814,Is there a backpack on top of the bench?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a backpack on top of the bench?"")"
5874182,On which side of the photo is the chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3987541,On which side of the picture are the trays?," # assumes only one tray
    image_patch = ImagePatch(image)
    tray_patches = image_patch.find(""tray"")
    # Question assumes only one tray patch
    if len(tray_patches) == 0:
        # If no tray is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the trays?"")
    if tray_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9108570,What is under the airplane?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the airplane?"")"
9115758,What is the food to the right of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the bowl?"")"
13662232,Are there cups or keyboards in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_keyboard = image_patch.exists(""keyboard"")
    return bool_to_yesno(is_cup or is_keyboard)"
3925906,Does the stop sign look octagonal and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""stop sign"", ""octagonal"") and image_patch.verify_property(""stop sign"", ""white""))"
11028462,Are the metal boxes in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the metal boxes in the top of the picture?"")"
4977276,Is the plate on a counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate on a counter?"")"
9950153,What is the man that is to the left of the woman wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the left of the woman wearing?"")"
15383448,What is the drink that the man with the dog is drinking?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink that the man with the dog is drinking?"")"
13100214,What vehicle is left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is left of the man?"")"
17634146,Are there players to the left of the men that the helmet is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there players to the left of the men that the helmet is to the right of?"")"
8309304,How's the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How's the weather?"")"
15508819,What kind of furniture is to the left of the dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the dog?"")"
4679491,Is the car to the right or to the left of the vehicle on the right?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the right or to the left of the vehicle on the right?"")"
12107700,"What color are the pants, red or white?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the pants, red or white?"")"
14276287,What is on the pepperoni pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pepperoni pizza?"")"
4777772,Are these animals of different types?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different types?"")"
8842076,Is the color of the chair different than the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the chair different than the umbrella?"")"
5588043,Is the white animal to the right or to the left of the bag the carrot is in?," # contains a relation (in, to the right of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white animal to the right or to the left of the bag the carrot is in?"")"
14608450,Are there either closed bottles or cans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_closed_bottle = image_patch.exists(""closed bottle"")
    is_can = image_patch.exists(""can"")
    return bool_to_yesno(is_closed_bottle or is_can)"
14314601,Is the blond woman to the left or to the right of the animal?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blond woman to the left or to the right of the animal?"")"
4564406,Are there cars to the right of the mirror that is on the right side?," # mirror on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Are there cars to the right of the mirror that is on the right side?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center < image_patch.horizontal_center:
        return ""no""
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        return ""no""
    for car_patch in car_patches:
        if car_patch.horizontal_center > mirror_patch.horizontal_center:
            return ""yes""
    return ""no"""
7392497,What color does that house have?," # house is a broad category
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""What color does that house have?"")
    return house_patches[0].simple_query(""What color does that house have?"")"
855888,Is the chair to the right or to the left of the dog the man is playing with?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the dog the man is playing with?"")"
1166912,Is the peach in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the peach in the bottom or in the top part of the image?"")"
669340,Does the food near the cup look wide or narrow?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the food near the cup look wide or narrow?"")"
191004386,Are there any cats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cat""))"
19874194,"Where in this scene is the fence, on the left or on the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this scene is the fence, on the left or on the right?"")"
8172323,Who do you think is wearing a dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a dress?"")"
9345049,Where do you think is the sink?," # returns a string with the location of the sink
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where do you think is the sink?"")"
6126932,Is the man to the right of the person the boxes are to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the person the boxes are to the right of?"")"
106039,Are there mattresses or flags in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mattress = image_patch.exists(""mattress"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_mattress or is_flag)"
113379,Do you see any cars to the right of the bike on the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any cars to the right of the bike on the road?"")"
16346748,Are the brown animals under the tree in front of the bushes?," # contains a relation (under, in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the brown animals under the tree in front of the bushes?"")"
8702762,Who is wearing boots?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing boots?"")"
141011162,What color is the car on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the car on the left?"")"
171022533,Is the plate in the top or in the bottom of the picture?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in the top or in the bottom of the picture?"")"
9269350,"On which side is the empty vehicle, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the empty vehicle, the right or the left?"")"
2770947,What animal is the tree behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the tree behind of?"")"
12262646,Are the glasses on the left side?," # glasses are on the left of the face
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses on the left side?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
2135931,What is the bathtub in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bathtub in front of?"")"
17681493,Which kind of furniture is the pot on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the pot on?"")"
17336445,What is the device in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device in the photograph?"")"
5123419,What do both the plane and the door have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the plane and the door have in common?"")"
15464569,What are the vehicles that are in front of the white building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vehicles that are in front of the white building?"")"
12908245,Do you see an umbrella to the right of the person who wears a hat?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see an umbrella to the right of the person who wears a hat?"")"
530482,Is the bicycle on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle on the right?"")"
9832984,"What is the plate on, a table or a couch?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plate on, a table or a couch?"")"
13442281,Is the grass both tall and green?," # contains a relation (tall and green), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass both tall and green?"")"
1941804,Is the man wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing a hat?"")"
4170844,Is there any bag to the left of the man that is wearing a hat?," # contains a relation (left of, wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bag to the left of the man that is wearing a hat?"")"
10969381,"What is the man that is riding doing, resting or driving?"," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is riding doing, resting or driving?"")"
4752947,Are there any locomotives to the right of the vehicle that looks gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Are there any locomotives to the right of the vehicle that looks gray?"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.simple_query(""Is the vehicle gray?"") == ""yes"":
            locomotive_patches = image_patch.find(""locomotive"")
            for locomotive_patch in locomotive_patches:
                if locomotive_patch.horizontal_center > vehicle_patch.horizontal_center:
                    return ""yes""
    return ""no"""
2667010,Are there either bowls or pliers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""bowl"")
    is_plier = image_patch.exists(""pliers"")
    return bool_to_yesno(is_bowl or is_plier)"
1742034,Is the ground orange and rocky?," # ground is a common object
    image_patch = ImagePatch(image)
    is_orange = image_patch.verify_property(""ground"", ""orange"")
    is_rocky = image_patch.verify_property(""ground"", ""rocky"")
    return bool_to_yesno(is_orange and is_rocky)"
3863522,Does the keyboard have the same color as the phone?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the keyboard have the same color as the phone?"")"
4245158,Which kind of furniture is to the left of the bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the bed?"")"
14354060,Do you see both windows and doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
16399260,Does the spoon that is made of metal have small size?," # contains a relation (made of, has, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the spoon that is made of metal have small size?"")"
7225172,Is there any bag to the left of the brief case that the man is holding?," # contains a relation (left of, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bag to the left of the brief case that the man is holding?"") # crop would include the brief case so keep it in the query"
15732729,Is there a pizza to the left of the man that is to the right of the oven?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pizza to the left of the man that is to the right of the oven?"")"
1863185,Are there both a pizza and a fork in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pizza = image_patch.exists(""pizza"")
    is_fork = image_patch.exists(""fork"")
    return bool_to_yesno(is_pizza and is_fork)"
31029468,Is the young person to the left or to the right of the tennis racket that looks blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young person to the left or to the right of the tennis racket that looks blue?"")"
9749670,Are there any blue blankets or towels?," # returns yes or no
    image_patch = ImagePatch(image)
    is_blue_blanket = image_patch.exists(""blue blanket"")
    is_blue_towel = image_patch.exists(""blue towel"")
    return bool_to_yesno(is_blue_blanket or is_blue_towel)"
2726269,What is the name of this item of furniture?," # returns the name of the item of furniture
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of this item of furniture?"")"
2178489,What are the vehicles in the parking lot called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vehicles in the parking lot called?"")"
8871856,What is the lady to the left of the bag carrying?," # contains a relation (left of, carrying, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady to the left of the bag carrying?"")"
1076777,Are there either tables or mirrors that are not made of glass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    mirror_patches = image_patch.find(""mirror"")
    for table_patch in table_patches:
        if not table_patch.verify_property(""table"", ""glass""):
            return ""yes""
    for mirror_patch in mirror_patches:
        if not mirror_patch.verify_property(""mirror"", ""glass""):
            return ""yes""
    return ""no"""
11303478,Do you see both melons and apples?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_melon = image_patch.exists(""melon"")
    is_apple = image_patch.exists(""apple"")
    return bool_to_yesno(is_melon and is_apple)"
6983567,Are there any gold clocks or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gold_clock = image_patch.exists(""gold clock"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_gold_clock or is_umbrella)"
19829224,Is the pillow case to the left or to the right of the lamp that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow case to the left or to the right of the lamp that is on the right?"")"
111051724,Is the cupboard to the left of the suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cupboard to the left of the suitcase?"")"
1980241,Which side of the image is the banana on?," # left or right
    image_patch = ImagePatch(image)
    banana_patches = image_patch.find(""banana"")
    # Question assumes only one banana patch
    if len(banana_patches) == 0:
        # If no banana is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the banana on?"")
    if banana_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13798402,Does the logo look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""logo"", ""orange""))"
16425627,Is there any meat inside the bowl?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any meat inside the bowl?"")"
5478258,Is the man to the left of the book wearing glasses?," # contains a relation (left of, wearing glasses, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the book wearing glasses?"")"
5987896,"In which part of the picture is the blue vehicle, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the blue vehicle, the bottom or the top?"")"
5810706,What do you think is the item of furniture to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the item of furniture to the right of the man?"")"
6403349,Is the silver fork in the top or in the bottom part of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver fork in the top or in the bottom part of the image?"")"
11615709,What does the person to the right of the food hold?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person to the right of the food hold?"")"
859385,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1708152,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12328363,Which kind of bird is right of the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of bird is right of the bench?"")"
3241501,What is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman holding?"")"
2648210,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
12668694,Is the food to the right of the person white or brown?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the food to the right of the person white or brown?"")"
9983284,What vegetables are to the left of the cheese?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables are to the left of the cheese?"")"
3490018,Is the yellow umbrella closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow umbrella closed or open?"")"
7961277,Which color is the train to the right of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the train to the right of the fence?"")"
417841,Does the cup look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cup look blue?"")"
16297263,Are there birds or dogs that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bird = image_patch.exists(""bird"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_bird or is_dog)"
9975450,The blond woman is wearing what?," # contains a relation (blond woman), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The blond woman is wearing what?"")"
31029372,Is the fence in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the bottom part of the picture?"")"
19348832,What is the person to the left of the dispenser wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the dispenser wearing?"")"
11836668,What is on the motorcycle that looks white and black?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the motorcycle that looks white and black?"")"
15730320,What type of vegetable is on the plate that is on the table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is on the plate that is on the table?"")"
4526002,What is in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the tree?"")"
7897817,Who in this photograph is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in this photograph is sitting?"")"
9509045,Do you see any purse to the right of the cup which is on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any purse to the right of the cup which is on the table?"")"
6532486,What color does the plate that is to the right of the fork have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the plate that is to the right of the fork have?"")"
5843758,What is the person doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person doing?"")"
11744221,Do you see either chairs or bags that are blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair_blue = image_patch.exists(""blue chair"")
    is_bag_blue = image_patch.exists(""blue bag"")
    return bool_to_yesno(is_chair_blue or is_bag_blue)"
16302818,Are there any cars to the left of the bus on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""car"") and image_patch.exists(""bus""))"
7867122,Are there fire hydrants by the pole the sign is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there fire hydrants by the pole the sign is on?"")"
171007032,Do the wall and the door have the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the wall and the door have the same color?"")) # crop would include the door so keep it in the query"
9258058,What are the gray articles of clothing called?," # gray articles of clothing
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the gray articles of clothing called?"")"
11001273,Are there any clocks or books?," # returns yes or no
    image_patch = ImagePatch(image)
    is_clock = image_patch.exists(""clock"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_clock or is_book)"
11266128,What animal is standing on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is standing on the sand?"")"
8927894,Are there both a chair and a sword in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_sword = image_patch.exists(""sword"")
    return bool_to_yesno(is_chair and is_sword)"
17516607,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
713976,Is the sink that is not clean filled with trash?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sink that is not clean filled with trash?"")"
16387623,"Where is the fence, in the top or in the bottom part of the photo?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the fence, in the top or in the bottom part of the photo?"")"
15909201,Are there either any bottles or mugs that are made of glass?," # bottle or mug
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_mug = image_patch.exists(""mug"")
    if is_bottle or is_mug:
        return ""yes""
    return ""no"""
2820874,"In which part of the picture is the food, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the food, the top or the bottom?"")"
16401899,What is the person that is to the left of the boy wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the boy wearing?"")"
6127061,Are the wood boxes to the left or to the right of the person that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the wood boxes to the left or to the right of the person that is to the right of the man?"")"
3983011,Which color is the bike to the right of the bicycles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bike to the right of the bicycles?"")"
13805780,Which side of the image is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7311625,Does the lady's hair appear to be gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the lady's hair appear to be gray?"")"
14422256,What appliance is to the left of the mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the mirror?"")"
4350128,What is the color of the trees?," # returns the color of the first tree
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""What is the color of the trees?"")
    return tree_patches[0].simple_query(""What is the color of the trees?"")"
16376476,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
10614420,Do the brown cows appear to be eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the brown cows appear to be eating?"")"
8923005,Is the woman's hair dark or white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman's hair dark or white?"")"
8295717,Is there a chair to the right of the television the clock is on top of?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a chair to the right of the television the clock is on top of?"")"
19897988,What is that paper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that paper on?"")"
328877,Are there either skateboarders or visitors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboarder = image_patch.exists(""skateboarder"")
    is_visitor = image_patch.exists(""visitor"")
    return bool_to_yesno(is_skateboarder or is_visitor)"
131056583,Is the grass short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass short?"")"
7208468,Are there knife blocks or TVs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_knife_block = image_patch.exists(""knife block"")
    is_tv = image_patch.exists(""TV"")
    return bool_to_yesno(is_knife_block or is_tv)"
7913382,Is the suitcase on the left side?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the suitcase on the left side?"")"
9185220,What is in the window?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the window?"")"
3206993,On which side is the box?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""On which side is the box?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12304790,What color do the tiles have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do the tiles have?"")"
326704,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
7438381,Which kind of device is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is it?"")"
8307029,Which side of the image is the pot on?," # left or right
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the pot on?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
948940,Which side is the laptop on?," # left or right
    image_patch = ImagePatch(image)
    laptop_patches = image_patch.find(""laptop"")
    # Question assumes only one laptop patch
    if len(laptop_patches) == 0:
        # If no laptop is found, query the image directly
        return image_patch.simple_query(""Which side is the laptop on?"")
    if laptop_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1535845,Are there any suitcases on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""suitcase"") and image_patch.simple_query(""Is the suitcase on the ground?"") == ""yes"")"
2731628,Do the tshirt and the television have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    tshirt_patches = image_patch.find(""t-shirt"")
    # Question assumes only one t-shirt patch
    if len(tshirt_patches) == 0:
        # If no t-shirt is found, query the image directly
        return image_patch.simple_query(""Do the t-shirt and the television have a different colors?"")
    tshirt_patch = tshirt_patches[0]
    tv_patches = image_patch.find(""television"")
    # Question assumes only one television patch
    if len(tv_patches) == 0:
        return ""no""
    tv_patch = tv_patches[0]
    return bool_to_yesno(tshirt_patch.verify_property(""t-shirt"", ""blue"") != tv_patch.verify_property(""television"", ""blue"")) # crop would include the shirt so keep it in the query"
15711021,What color does the jacket have?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color does the jacket have?"")
    return jacket_patches[0].simple_query(""What color does the jacket have?"") # crop would include the jacket so keep it in the query"
4338878,Is the man standing against the wall?," # contains a relation (against, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man standing against the wall?"")"
11934892,Do you think the woman's hair is short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the woman's hair is short?"")"
2496268,What kind of cooking utensil is on the microwave?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of cooking utensil is on the microwave?"")"
19453913,What color is the sheet in the bottom?," # bottom is a relation, so ask directly
    image_patch = ImagePatch(image)
    sheet_patches = image_patch.find(""sheet"")
    # Question assumes only one sheet patch
    if len(sheet_patches) == 0:
        # If no sheet is found, query the image directly
        return image_patch.simple_query(""What color is the sheet in the bottom?"")
    for sheet_patch in sheet_patches:
        if sheet_patch.vertical_center < image_patch.vertical_center:
            return sheet_patch.simple_query(""What color is the sheet in the bottom?"")
    return image_patch.simple_query(""What color is the sheet in the bottom?"")"
121017908,Is the hair long or short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair long or short?"")"
8888925,What is hanging in the museum?," # contains a relation (hanging in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is hanging in the museum?"")"
13863608,Which color is the bench?," # returns the color of the bench
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Which color is the bench?"")
    return bench_patches[0].simple_query(""Which color is the bench?"")"
8190625,The cat on the desk is what color?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cat on the desk is what color?"")"
61013910,Are there red doors in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red door"")) # crop would include the color so keep it in the query"
883747,Is the sheet to the right or to the left of the nightstand made of wood?," # contains a relation (right, left, etc) and a property (made of wood), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sheet to the right or to the left of the nightstand made of wood?"")"
16195654,Is the soap dispenser to the right or to the left of the faucet the cat is to the right of?," # contains a relation (right of, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soap dispenser to the right or to the left of the faucet the cat is to the right of?"")"
14860533,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17232191,What does the bowl contain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the bowl contain?"")"
13689730,What clothing item is not short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is not short sleeved?"")"
8995492,Are there both windows and doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
4495788,What color are the sneakers?," # returns the color of the sneakers
    image_patch = ImagePatch(image)
    sneakers_patches = image_patch.find(""sneakers"")
    # Question assumes only one sneakers patch
    if len(sneakers_patches) == 0:
        # If no sneakers are found, query the image directly
        return image_patch.simple_query(""What color are the sneakers?"")
    return sneakers_patches[0].simple_query(""What color are the sneakers?"") # crop would include the sneakers so keep it in the query"
9658159,Is the container which is to the left of the boxes gray or red?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the container which is to the left of the boxes gray or red?"")"
10196072,Does the man to the left of the fence wear a cap?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the fence wear a cap?"")"
8985562,Is there a boat in the calm ocean?," # contains a relation (in the), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat in the calm ocean?"")"
17738626,On which side of the photo is the umbrella?," # left or right
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the umbrella?"")
    if umbrella_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3180228,What is common to the spoon and the straw?," # assumes only one spoon and one straw
    image_patch = ImagePatch(image)
    spoon_patches = image_patch.find(""spoon"")
    straw_patches = image_patch.find(""straw"")
    if len(spoon_patches) == 0 or len(straw_patches) == 0:
        return image_patch.simple_query(""What is common to the spoon and the straw?"")
    spoon_patch = spoon_patches[0]
    straw_patch = straw_patches[0]
    common_properties = spoon_patch.verify_property(""spoon"", ""metal"") and straw_patch.verify_property(""straw"", ""metal"")
    common_properties = common_properties or spoon_patch.verify_property(""spoon"", ""plastic"") and straw_patch.verify_property(""straw"", ""plastic"")
    common_properties = common_properties or spoon_patch.verify_property(""spoon"", ""wood"") and straw_patch.verify_property(""straw"", ""wood"")
    if common_properties:
        return ""metal""
    return ""plastic"""
9541961,"On which side is the man, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the man, the left or the right?"")"
8506550,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
9667229,Who is holding the cell phone?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the cell phone?"")"
10503684,Which kind of furniture is to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the bag?"")"
2158514,What vegetable is to the right of the croissant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the right of the croissant?"")"
12808725,Is the girl to the right of the man riding a bicycle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right of the man riding a bicycle?"")"
10576680,What is in front of the stone building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the stone building?"")"
8424086,What is the sink behind the boy filled with?," # contains a relation (behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sink behind the boy filled with?"")"
15634772,Are the sticky notes square and yellow?," # returns yes or no
    image_patch = ImagePatch(image)
    sticky_note_patches = image_patch.find(""sticky note"")
    # Question assumes only one sticky note patch
    if len(sticky_note_patches) == 0:
        # If no sticky note is found, query the image directly
        return image_patch.simple_query(""Are the sticky notes square and yellow?"")
    for sticky_note_patch in sticky_note_patches:
        is_square = sticky_note_patch.verify_property(""sticky note"", ""square"")
        is_yellow = sticky_note_patch.verify_property(""sticky note"", ""yellow"")
        return bool_to_yesno(is_square and is_yellow)"
17932904,Does the food tray near the spoon look rectangular and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the food tray near the spoon look rectangular and white?"")"
7892893,What is the name of the article of clothing that is black?," # returns the name of the article of clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""article of clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the article of clothing that is black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""article of clothing"", ""black""):
            return clothing_patch.simple_query(""What is the name of the article of clothing that is black?"")
    return clothing_patch.simple_query(""What is the name of the article of clothing that is black?"")"
10583721,Do you see an umbrella to the right of the people that are wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see an umbrella to the right of the people that are wearing a shirt?"")"
14425048,Are there catchers in front of the smiling man that is standing on the stage?," # contains a relation (in front of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there catchers in front of the smiling man that is standing on the stage?"")"
4269686,Are there either hand soaps or serving trays in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hand_soap = image_patch.exists(""hand soap"")
    is_serving_tray = image_patch.exists(""serving tray"")
    return bool_to_yesno(is_hand_soap or is_serving_tray)"
8499497,What kind of furniture do you think is to the right of the black chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture do you think is to the right of the black chair?"")"
10224439,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
8778759,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
1192914,Are the shorts brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shorts"", ""brown""))"
10525353,Do you see dogs on the sidewalk?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see dogs on the sidewalk?"")"
10502855,What is the large animal in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large animal in this photo?"")"
2305816,What device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the man holding?"")"
7764661,What is stacked on the papers that are on the cabinet?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is stacked on the papers that are on the cabinet?"")"
95255,With what is the refrigerator decorated?," # contains a relation (decorated with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""With what is the refrigerator decorated?"")"
11180985,What is the food that he is touching?," # contains a relation (touching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that he is touching?"")"
15419505,Are there either any faucets or cans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_faucet = image_patch.exists(""faucet"")
    is_can = image_patch.exists(""can"")
    return bool_to_yesno(is_faucet or is_can)"
16195994,On which side of the image is the small bag?," # left or right
    image_patch = ImagePatch(image)
    small_bag_patches = image_patch.find(""small bag"")
    # Question assumes only one small bag patch
    if len(small_bag_patches) == 0:
        # If no small bag is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the small bag?"")
    if small_bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2890279,How is the vegetable that is to the left of the bottle that is made of glass called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vegetable that is to the left of the bottle that is made of glass called?"")"
15738996,"How does the house look like, large or small?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the house look like, large or small?"")"
1757055,What kind of device is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the man holding?"")"
2432234,What is the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy wearing?"")"
3467961,Is there a bottle on the table?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bottle on the table?"")"
9899141,Which color is the cabinet?," # returns the color of the cabinet
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""Which color is the cabinet?"")
    return cabinet_patches[0].simple_query(""Which color is the cabinet?"") # crop would include the cabinet so keep it in the query"
1887031,Is the vase to the right or to the left of the shelf on the left side of the image?," # left, right
    image_patch = ImagePatch(image)
    vase_patches = image_patch.find(""vase"")
    # Question assumes only one vase patch
    if len(vase_patches) == 0:
        # If no vase is found, query the image directly
        return image_patch.simple_query(""Is the vase to the right or to the left of the shelf on the left side of the image?"")
    for vase_patch in vase_patches:
        shelf_patches = image_patch.find(""shelf"")
        for shelf_patch in shelf_patches:
            if shelf_patch.horizontal_center < image_patch.horizontal_center:
                if vase_patch.horizontal_center > shelf_patch.horizontal_center:
                    return ""right""
                else:
                    return ""left""
    return ""right"""
16309319,Which color is that frisbee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that frisbee?"")"
11803098,What are the flowers in?," # container
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""What are the flowers in?"")
    return flower_patches[0].simple_query(""What are the flowers in?"") # crop would include the container so keep it in the query"
1242838,Which kind of furniture is colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is colorful?"")"
944913,Is the man to the right of the catcher holding the baseball in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the catcher holding the baseball in the middle of the photo?"")"
48809,What's the stop sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the stop sign on?"")"
111005785,Are there any cats or chairs in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_cat or is_chair)"
3264568,Who is on the bench that is made of metal?," # contains a relation (on, made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bench that is made of metal?"")"
2628197,Are there fences in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
12814293,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
8988981,What is smaller than the number that is white?," # contains a relation (smaller than, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is smaller than the number that is white?"")"
6575331,Is the backpack to the left or to the right of the woman that is wearing trousers?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the backpack to the left or to the right of the woman that is wearing trousers?"")"
31064668,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
2915441,Are there tents or paintings in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tent = image_patch.exists(""tent"")
    is_painting = image_patch.exists(""painting"")
    return bool_to_yesno(is_tent or is_painting)"
308687,Is the skier on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the skier on the left side?"")"
21061710,What is wrapped in bread?," # contains a relation (wrapped in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wrapped in bread?"")"
1608732,What are the fruits in the bowl?," # contains a relation (in the bowl), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits in the bowl?"")"
14435124,Do you see squashes to the right of the mushroom on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see squashes to the right of the mushroom on the left side?"")"
1327254,Is there any grass that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is not brown?"")"
7961271,What vehicle is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is white?"")"
16341677,Is she wearing glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she wearing glasses?"")"
82727,The horse is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The horse is in front of what?"")"
18729480,What is the color of the blanket?," # returns the color of the blanket
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""What is the color of the blanket?"")
    return blanket_patches[0].simple_query(""What is the color of the blanket?"")"
4665704,Who is in front of the black sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the black sign?"")"
17679334,Which kind of material are the yellow cones on the pavement made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of material are the yellow cones on the pavement made of?"")"
13187898,What is in front of the trees that look green?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees that look green?"")"
13206270,Is the green car on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green car on the left?"")"
6268971,What is the food on the paper?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the paper?"")"
15187864,Are there pictures or pillows that are small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_picture_small = image_patch.exists(""picture"") and image_patch.simple_query(""Is the picture small?"") == ""yes""
    is_pillow_small = image_patch.exists(""pillow"") and image_patch.simple_query(""Is the pillow small?"") == ""yes""
    return bool_to_yesno(is_picture_small or is_pillow_small)"
10808375,Is the lady to the right or to the left of the person that is riding a horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right or to the left of the person that is riding a horse?"")"
9565682,What is the piece of furniture to the left of the pillow the book is to the right of called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the pillow the book is to the right of called?"")"
8844866,On which side of the image is the child?," # left or right
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the child?"")
    child_patch = child_patches[0]
    if child_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11765205,What is the animal that is to the right of the orange cone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is to the right of the orange cone?"")"
9212913,Is there a bottle on the floor?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bottle on the floor?"")"
2639081,Do you see any people to the left of the silver thing that is to the right of the pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any people to the left of the silver thing that is to the right of the pizza?"")"
13947873,Is the fork to the right or to the left of the food that is eaten by the baby?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork to the right or to the left of the food that is eaten by the baby?"")"
9820459,What are the girls in the park wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the girls in the park wearing?"")"
141040681,Where is the person to the left of the man standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the person to the left of the man standing on?"")"
7582714,Which kind of sauce is on the counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of sauce is on the counter?"")"
18667576,Is the tire round and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tire round and black?"")"
14473120,Is the blue can on the right?," # contains a relation (on, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue can on the right?"")"
2987921,What color is the bag on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag on the left?"")"
14187693,Do you see any wire fences or cages?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""wire fence"") or image_patch.exists(""cage""))"
576851,Are there people to the left of the car on the street?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people to the left of the car on the street?"")"
17587137,What is the towel on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the towel on?"")"
10605132,The man is looking at what?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is looking at what?"")"
10281167,Is there a baby?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""baby""))"
15511483,Is the apartment building on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the apartment building on the left?"")"
8958828,What is in front of the houses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the houses?"")"
9562552,Is the candle in the top or in the bottom part of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the candle in the top or in the bottom part of the photo?"")"
18290937,Is there a white mouse or phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_mouse = image_patch.exists(""white mouse"")
    is_phone = image_patch.exists(""phone"")
    return bool_to_yesno(is_white_mouse or is_phone)"
6327914,What type of furniture is to the right of the person that is wearing a skirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the right of the person that is wearing a skirt?"")"
10299432,Is the color of the lid different than the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the lid different than the umbrella?"")"
4911037,What is on the door?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the door?"")"
12289316,"In which part of the image is the car, the top or the bottom?"," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the car, the top or the bottom?"")"
1668843,What color is the woman's hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the woman's hair?"")"
4757135,What do both the table and the frame have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the table and the frame have in common?"")"
625981,"On which side of the photo is the polar bear, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the polar bear, the left or the right?"")"
8455836,Are there any pigeons or birds in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pigeon"") or image_patch.exists(""bird""))"
15544301,Is the person to the right of a horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of a horse?"")"
16686672,What animal is in the bushes that look thick?," # contains a relation (thick), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the bushes that look thick?"")"
4510472,"What color is the shirt, white or black?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt, white or black?"")"
17909252,What is the name of the blue clothing item?," # returns the name of the clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the blue clothing item?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What is the name of the blue clothing item?"")
    return clothing_patch.simple_query(""What is the name of the blue clothing item?"") # if no blue clothing is found, query the first clothing item"
15514337,Do you see computers to the left of the speaker that looks black?," # speaker is a specific object
    image_patch = ImagePatch(image)
    computer_patches = image_patch.find(""computer"")
    # Question assumes only one speaker patch
    speaker_patches = image_patch.find(""speaker"")
    if len(speaker_patches) == 0:
        # If no speaker is found, query the image directly
        return image_patch.simple_query(""Do you see computers to the left of the speaker that looks black?"")
    for computer_patch in computer_patches:
        for speaker_patch in speaker_patches:
            if computer_patch.horizontal_center < speaker_patch.horizontal_center and computer_patch.simple_query(""What color is the computer?"") == ""black"":
                return ""yes""
    return ""no"""
13516761,Does the dome look white and large?," # returns yes or no
    image_patch = ImagePatch(image)
    dome_patches = image_patch.find(""dome"")
    # Question assumes only one dome patch
    if len(dome_patches) == 0:
        # If no dome is found, query the image directly
        return image_patch.simple_query(""Does the dome look white and large?"")
    dome_patch = dome_patches[0]
    return bool_to_yesno(dome_patch.verify_property(""dome"", ""white"") and dome_patch.verify_property(""dome"", ""large""))"
200641,What is the piece of furniture below the counter on top of the island called?," # contains a relation (on top of, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture below the counter on top of the island called?"")"
16584297,Are there any checkered scarves or hats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""checkered scarf"") or image_patch.exists(""checkered hat"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
1390584,Are there both sand and grass in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sand = image_patch.exists(""sand"")
    is_grass = image_patch.exists(""grass"")
    return bool_to_yesno(is_sand and is_grass)"
2347382,Do you see grass or sand that are not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_grass = image_patch.exists(""grass"")
    is_sand = image_patch.exists(""sand"")
    if is_grass:
        return bool_to_yesno(image_patch.find(""grass"")[0].verify_property(""grass"", ""brown"") == False)
    if is_sand:
        return bool_to_yesno(image_patch.find(""sand"")[0].verify_property(""sand"", ""brown"") == False)
    return ""no"""
2280882,What is the bowl filled with?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl filled with?"")"
10716461,What is on the tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the tray?"")"
912517,Is the knife silver or blue?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife silver or blue?"")"
11529516,Is there a motorcycle on the side of the road?," # contains a relation (on the side of the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a motorcycle on the side of the road?"")"
12908251,Is the boy to the left of the bag holding a racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left of the bag holding a racket?"")"
8129657,What is the food that is on the round plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is on the round plate?"")"
11723330,What kind of animal is in the snow?," # contains a relation (in the snow), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in the snow?"")"
2180779,Is there any meat to the left of the lettuce in the top of the photo?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any meat to the left of the lettuce in the top of the photo?"")"
16392145,"What type of furniture is folded, the desk of the headphones or the chair?"," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is folded, the desk of the headphones or the chair?"")"
51013771,Is the shirt both long sleeved and black?," # shirt is a predicate
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the shirt both long sleeved and black?"")
    shirt_patch = shirt_patches[0]
    is_long_sleeved = shirt_patch.verify_property(""shirt"", ""long sleeved"")
    is_black = shirt_patch.verify_property(""shirt"", ""black"")
    return bool_to_yesno(is_long_sleeved and is_black)"
5311228,Are there any waste baskets or fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_waste_basket = image_patch.exists(""waste basket"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_waste_basket or is_fence)"
17226123,"How does the cabinet to the left of the other cabinet look like, brown or white?"," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the cabinet to the left of the other cabinet look like, brown or white?"")"
17258954,Are there hats or fences that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hat_black = image_patch.exists(""hat"") and image_patch.verify_property(""hat"", ""black"")
    is_fence_black = image_patch.exists(""fence"") and image_patch.verify_property(""fence"", ""black"")
    return bool_to_yesno(is_hat_black or is_fence_black)"
17284891,Do the flowers that look little look purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the flowers that look little look purple?"")"
18753668,Which color does the sand have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the sand have?"")"
13131716,What animal is in front of the forest?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the forest?"")"
6187093,Which color is the cat?," # returns the color of the cat
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Which color is the cat?"")
    return cat_patches[0].simple_query(""Which color is the cat?"") # crop would include the cat so keep it in the query"
4432636,How clean is the lid?," # returns a string describing the cleanliness of the lid
    image_patch = ImagePatch(image)
    lid_patches = image_patch.find(""lid"")
    # Question assumes only one lid patch
    if len(lid_patches) == 0:
        # If no lid is found, query the image directly
        return image_patch.simple_query(""How clean is the lid?"")
    return lid_patches[0].simple_query(""How clean is the lid?"") # crop would include the lid so keep it in the query"
17242318,Is the pepper to the right of a pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pepper to the right of a pizza?"")"
1027664,What kind of appliance is to the right of the pan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is to the right of the pan?"")"
4865113,Do the leaves look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""leaves"", ""orange""))"
12775871,Is the cutting board on the left side or on the right of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cutting board on the left side or on the right of the image?"")"
19516984,Who is sitting on the bench?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the bench?"")"
16626483,Do you see chairs there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
10827864,On which side of the image is the wood container?," # left or right
    image_patch = ImagePatch(image)
    wood_container_patches = image_patch.find(""wood container"")
    # Question assumes only one wood container patch
    if len(wood_container_patches) == 0:
        # If no wood container is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the wood container?"")
    if wood_container_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11840430,On which side of the photo is the white car?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white car?"")"
15537864,Is the woman on the right side or on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right side or on the left of the image?"")"
19364173,What is covered by the roof?," # contains a relation (under, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the roof?"")"
71038517,Is there any fence that is not made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    for fence_patch in fence_patches:
        if not fence_patch.verify_property(""fence"", ""wood""):
            return ""yes""
    return ""no"""
151044675,Does the sticker have the same color as the cooler?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sticker have the same color as the cooler?"")"
8736491,What device is to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the computer?"")"
191015871,What is that cap on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that cap on?"")"
1440076,Is the man to the right of the woman in the middle of the image?," # image is assumed to be a PIL Image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one man and one woman patch
    if len(man_patches) == 0 or len(woman_patches) == 0:
        # If no man or woman is found, query the image directly
        return image_patch.simple_query(""Is the man to the right of the woman in the middle of the image?"")
    man_patch = man_patches[0]
    woman_patch = woman_patches[0]
    if man_patch.horizontal_center > woman_patch.horizontal_center:
        return ""yes""
    return ""no"""
16652782,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
14288646,Is that dog below a cat?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that dog below a cat?"")"
19180635,Does the hat look yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the hat look yellow?"")"
14831236,Is the hot dog on a bun?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hot dog on a bun?"")"
31027191,Is the small animal above the broken branch?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small animal above the broken branch?"")"
9824712,Are there either zebras or birds in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") or image_patch.exists(""bird""))"
12649492,Is he wearing a tie?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he wearing a tie?"")"
1224917,Which kind of clothing is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is white?"")"
15438166,What animal is in front of the person on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the person on the right side?"")"
101335,Is the beach sandy or rocky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beach sandy or rocky?"")"
13429573,What is the vehicle that is on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is on the road?"")"
12587513,What color is the glass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the glass?"")"
17147900,What is the color of the helmet the logo is on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the helmet the logo is on top of?"")"
1218892,"What type of place is it, the airport or the train station?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of place is it, the airport or the train station?"")"
950237,What is the dog wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog wearing?"")"
15358513,Do you see both windows and cars in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_window and is_car)"
18877375,Where is the building that is not short standing on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the building that is not short standing on?"")"
5827488,Is the man to the right or to the left of the glasses made of plastic?," # glasses made of plastic
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right or to the left of the glasses made of plastic?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return image_patch.simple_query(""Is the man to the right or to the left of the glasses made of plastic?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > man_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18976286,Do the pipe and the sky have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the pipe and the sky have a different colors?"")) # crop would include the sky so keep it in the query"
13292729,Do all these animals have the same species?," # contains a relation (same species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do all these animals have the same species?"")"
7584418,Is there a speaker to the right of the laptop computer in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a speaker to the right of the laptop computer in the middle?"")"
13122692,Is the kid near the other kid young or old?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid near the other kid young or old?"")"
1825870,Do you see trucks or airplanes that are blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck_blue = image_patch.exists(""truck"") and image_patch.exists(""blue"")
    is_airplane_blue = image_patch.exists(""airplane"") and image_patch.exists(""blue"")
    return bool_to_yesno(is_truck_blue or is_airplane_blue)"
15980192,Are there chairs on top of the floor in this photograph?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there chairs on top of the floor in this photograph?"")"
9421474,What is the piece of furniture to the right of the white bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the right of the white bag?"")"
1711949,What's in front of the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the water?"")"
3331457,Is the elephant to the left or to the right of the person that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the elephant to the left or to the right of the person that is to the right of the man?"")"
19302396,Are there hamburgers to the left of the pizza boxes that are to the left of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there hamburgers to the left of the pizza boxes that are to the left of the plate?"")"
9960735,Does the window that is not little look wide?," # contains a relation (is not, wide, little), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the window that is not little look wide?"")"
7197690,Is the chimney on top of the house the tree is in front of?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chimney on top of the house the tree is in front of?"")"
4568997,The sign is on what?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The sign is on what?"")"
19546271,Are there either any benches or ropes in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_bench or is_rope)"
8429950,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
61050172,Is there any broccoli to the right of the sausage that the pasta is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any broccoli to the right of the sausage that the pasta is to the left of?"")"
13431311,Is the old car on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old car on the left side or on the right?"")"
1235272,Is the fence made of stone or wire?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence made of stone or wire?"")"
16781968,Is the paint on top of a traffic sign?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the paint on top of a traffic sign?"")"
7793092,Where is the snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the snow?"")"
3470581,Does the zebra on the grass look black?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra on the grass look black?"")"
1598593,Is the stove to the left or to the right of the person that is to the right of the spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove to the left or to the right of the person that is to the right of the spoon?"")"
9375283,Are there both boats and ropes in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_boat = image_patch.exists(""boat"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_boat and is_rope)"
9731592,Is there a train on top of the grass?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a train on top of the grass?"")"
5324547,Is the bus to the left of the van blue or white?," # contains a relation (left of, blue, white), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus to the left of the van blue or white?"")"
11399570,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
21033995,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
619961,Is there an orange to the right of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an orange to the right of the cup?"")"
12596108,Are both the vegetable to the right of the broccoli and the vegetable which is to the right of the cranberry cooked?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""vegetable"") and image_patch.exists(""vegetable"") and image_patch.exists(""broccoli"") and image_patch.exists(""cranberry""))"
7199903,What is the item of furniture to the left of the binder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the binder?"")"
9552631,What are the items of furniture that are to the right of the food with the lettuce?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture that are to the right of the food with the lettuce?"")"
2432367,What type of vehicle is electronic?," # contains a relation (electronic), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is electronic?"")"
51016373,What kind of furniture is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is large?"")"
898437,Is the woman to the left of a vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left of a vehicle?"")"
7175245,What is around the luggage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the luggage?"")"
2369260,Is the dugout behind the baseball bats that are made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dugout behind the baseball bats that are made of wood?"")"
9594317,"Which part of the image is the small screen in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the image is the small screen in, the bottom or the top?"")"
51005332,Is this train to the right of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this train to the right of a bag?"")"
10224834,Is there a bench in the park?," # contains a relation (in the park), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench""))"
13180967,On which side of the photo are the blankets?," # left or right
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""On which side of the photo are the blankets?"")
    if blanket_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12123806,Is the wire basket behind a dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wire basket behind a dog?"")"
18133722,Are there any bells or umbrellas in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bell"") or image_patch.exists(""umbrella""))"
19851197,Is the plate both white and square?," # contains a relation (and, or, etc), so ask directly
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Is the plate both white and square?"")
    return bool_to_yesno(plate_patches[0].verify_property(""plate"", ""white"") and plate_patches[0].verify_property(""plate"", ""square""))"
7285290,What is in front of the windows the building is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the windows the building is with?"")"
8459999,The woman to the left of the man is eating what?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman to the left of the man is eating what?"")"
44457,The brown dogs sit where?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The brown dogs sit where?"")"
17689242,Are these animals of different types?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different types?"")"
15484716,Does the car to the right of the person look silver?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the car to the right of the person look silver?"")"
15372316,What color is the flower of the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the flower of the plate?"")"
11767897,What's in front of the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the bike?"")"
5806706,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
9814301,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1206284,Is the picture to the right or to the left of the man that is standing in the living room?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture to the right or to the left of the man that is standing in the living room?"")"
3298575,Are there any cars to the left of the person on the left side?," # left side of the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Are there any cars to the left of the person on the left side?"")
    for person_patch in person_patches:
        if person_patch.horizontal_center < image_patch.horizontal_center:
            car_patches = image_patch.find(""car"")
            for car_patch in car_patches:
                if car_patch.horizontal_center < person_patch.horizontal_center:
                    return ""yes""
    return ""no"""
1665981,Do you see a helmet there that is not black?," # helmet is not a standard object, so query the image directly
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you see a helmet there that is not black?"")
    for helmet_patch in helmet_patches:
        if helmet_patch.simple_query(""What color is the helmet?"") != ""black"":
            return ""yes""
    return ""no"""
5630454,Who is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the water?"")"
11812970,Is this a bed or a table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a table?"")"
1987171,What is before the fireplace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is before the fireplace?"")"
6986853,What color does the bike that is on the road have?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the bike that is on the road have?"")"
141042117,Are there any cakes or napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_cake or is_napkin)"
51045055,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
14217459,What's the ground covered with?," # ground is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the ground covered with?"")"
332681,Do you see a television or a telephone that are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a television or a telephone that are on?"")"
16396201,What is the man using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man using?"")"
4376344,What the white clothing item is called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What the white clothing item is called?"")"
15553814,Is there a chair to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a chair to the left of the cabinet?"")"
12828390,Is there any bike or bench in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bike"") or image_patch.exists(""bench""))"
11625908,Is the bowl on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl on the left side or on the right?"")"
986443,What type of device is to the right of the computer on the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the computer on the desk?"")"
1934679,Are the cars that are to the right of the other car white and metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cars that are to the right of the other car white and metallic?"")"
61047502,Are the flowers blue or yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the flowers blue or yellow?"")"
17599506,Is the man wearing glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing glasses?"")"
4231481,Is the man to the left or to the right of the fence that is made of wood?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the fence that is made of wood?"")"
1354174,What color is the pillow to the right of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the pillow to the right of the lamp?"")"
17379202,What type of animal is walking on the dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is walking on the dirt?"")"
181043050,"On which side is the black animal, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the black animal, the right or the left?"")"
14749179,What is covering the man?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covering the man?"")"
8116216,Who is holding the ripe bananas?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the ripe bananas?"")"
873546,Which kind of animal is the woman pulling?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the woman pulling?"")"
5616996,Who rides on the skis?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who rides on the skis?"")"
9426215,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4941283,Is there an onion to the left of the lettuce?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an onion to the left of the lettuce?"")"
13622729,What is the computer on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer on?"")"
6942292,Is there a white bus or truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bus = image_patch.exists(""white bus"")
    is_white_truck = image_patch.exists(""white truck"")
    return bool_to_yesno(is_white_bus or is_white_truck)"
339041,Is the man to the right or to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the car?"")"
2149422,Who is pushing a cart?," # contains a relation (pushing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is pushing a cart?"")"
87605,Where was the image taken?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the image taken?"")"
17195492,"In what vehicle is that dog, a car or a truck?"," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In what vehicle is that dog, a car or a truck?"")"
543477,What do the chair and the artwork have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the chair and the artwork have in common?"")"
8702692,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
77266,Are the trousers blue or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trousers blue or white?"")"
7751612,What does the person hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person hold?"")"
5835417,On which side is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side is the woman?"")
    return ""left"" if woman_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
13959872,"Which animal is that, a bird or a cat?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which animal is that, a bird or a cat?"")"
2877539,Which color is the ground?," # ground is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the ground?"")"
21055715,Which side of the picture is the mirror on?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the mirror on?"")
    return ""right"""
3493767,On which side is the gray car?," # left or right
    image_patch = ImagePatch(image)
    gray_car_patches = image_patch.find(""gray car"")
    # Question assumes only one gray car patch
    if len(gray_car_patches) == 0:
        # If no gray car is found, query the image directly
        return image_patch.simple_query(""On which side is the gray car?"")
    gray_car_patch = gray_car_patches[0]
    if gray_car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9933192,What is the man to the right of the bench holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the bench holding?"")"
11307051,What is the person with the child doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person with the child doing?"")"
13423512,What are the items of furniture that have the same color as the drawers called?," # returns a list of strings
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture that have the same color as the drawers called?"")"
14749077,What is the red clothing item in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the red clothing item in the picture?"")"
8757610,How are the vegetables in the bag on the right called?," # contains a relation (in the bag on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How are the vegetables in the bag on the right called?"")"
1358068,What kind of animal is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is standing?"")"
3871849,Are there men to the left of the person that is in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the person that is in front of the tree?"")"
3624634,Do the leaves and the twigs have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the leaves and the twigs have a different colors?"")) # crop would include the leaves and twigs so keep it in the query"
5718711,On which side of the image is the red bowl?," # left or right
    image_patch = ImagePatch(image)
    red_bowl_patches = image_patch.find(""red bowl"")
    # Question assumes only one red_bowl patch
    if len(red_bowl_patches) == 0:
        # If no red_bowl is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the red bowl?"")
    if red_bowl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11223009,Are there ovens or toasters?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""oven"") or image_patch.exists(""toaster""))"
9830612,Which side of the picture is the red kettle on?," # left or right
    image_patch = ImagePatch(image)
    kettle_patches = image_patch.find(""kettle"")
    # Question assumes only one kettle patch
    if len(kettle_patches) == 0:
        # If no kettle is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the red kettle on?"")
    kettle_patch = kettle_patches[0]
    if kettle_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7811643,Which kind of furniture is not purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is not purple?"")"
121030255,Does the garbage bin look white and small?," # returns yes or no
    image_patch = ImagePatch(image)
    garbage_bin_patches = image_patch.find(""garbage bin"")
    # Question assumes only one garbage bin patch
    if len(garbage_bin_patches) == 0:
        # If no garbage bin is found, query the image directly
        return image_patch.simple_query(""Does the garbage bin look white and small?"")
    return bool_to_yesno(garbage_bin_patches[0].verify_property(""garbage bin"", ""white"") and garbage_bin_patches[0].verify_property(""garbage bin"", ""small""))"
18519146,On which side of the image is the yellow rope?," # left or right
    image_patch = ImagePatch(image)
    rope_patches = image_patch.find(""rope"")
    # Question assumes only one rope patch
    if len(rope_patches) == 0:
        # If no rope is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the yellow rope?"")
    rope_patch = rope_patches[0]
    if rope_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17675636,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
719609,Where is this train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this train?"")"
10310303,What's the lamp on?," # assumes only one lamp
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    if len(lamp_patches) == 0:
        return image_patch.simple_query(""What's the lamp on?"")
    return lamp_patches[0].simple_query(""What's the lamp on?"") # crop would include the object the lamp is on, so keep it in the query"
8536317,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
13811846,On which side of the image is the hot dog?," # left or right
    image_patch = ImagePatch(image)
    hot_dog_patches = image_patch.find(""hot dog"")
    # Question assumes only one hot dog patch
    if len(hot_dog_patches) == 0:
        # If no hot dog is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the hot dog?"")
    hot_dog_patch = hot_dog_patches[0]
    if hot_dog_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18404098,What place was the photo taken at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the photo taken at?"")"
7487903,Is there any black mirror or bed?," # mirror or bed
    image_patch = ImagePatch(image)
    is_black_mirror = image_patch.exists(""black mirror"")
    is_black_bed = image_patch.exists(""black bed"")
    return bool_to_yesno(is_black_mirror or is_black_bed)"
14825198,How long is the black hair?," # returns a string
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""How long is the black hair?"")
    return hair_patches[0].simple_query(""How long is the black hair?"") # crop would include the hair so keep it in the query"
9966976,What do the number and the train car have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the number and the train car have in common?"")"
8836997,What is the white clothing item in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white clothing item in the image?"")"
15274924,What is around the donuts that are inside the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the donuts that are inside the box?"")"
17745915,What animal is wearing a costume?," # contains a relation (wearing a costume), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is wearing a costume?"")"
19390212,What is in the bathroom?," # contains a relation (in the bathroom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bathroom?"")"
15982148,The oven has what color?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The oven has what color?"")"
4634554,Is there a signal light or a hydrant in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_signal_light = image_patch.exists(""signal light"")
    is_hydrant = image_patch.exists(""hydrant"")
    return bool_to_yesno(is_signal_light or is_hydrant)"
16274784,Are there white birds or kittens?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bird = image_patch.exists(""white bird"")
    is_kitten = image_patch.exists(""kitten"")
    return bool_to_yesno(is_white_bird or is_kitten)"
3791928,Do you see a lamp near the wall?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a lamp near the wall?"")"
275933,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
4177047,What is the color of the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the sky?"")"
19790077,Which color is the vase on the left?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the vase on the left?"")"
205121,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
41027928,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
15316903,Who is wearing the shoes?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shoes?"")"
1046910,Does the fence that is to the right of the elephant look metallic and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fence that is to the right of the elephant look metallic and small?"")"
13974685,Is the man in the bottom?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man in the bottom?"")"
5707546,Are there pillows to the right of the curtains the window is with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there pillows to the right of the curtains the window is with?"")"
2701320,"Which side is the pot on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the pot on, the right or the left?"")"
357172,Is the man on the right side or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right side or on the left?"")"
16185605,What is the appliance to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the right of the chair?"")"
6230217,Who is lying on the sand that is on the beach?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is lying on the sand that is on the beach?"")"
1967524,Is the shower behind a rug?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shower behind a rug?"")"
9625239,The man is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man is wearing what?"")"
15288112,Is the can on top of the table orange and metallic?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the can on top of the table orange and metallic?"")"
114637,Are there any women in the picture that are brunette?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman with brown hair"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5860959,Does the outfit look red?," # returns yes or no
    image_patch = ImagePatch(image)
    outfit_patches = image_patch.find(""outfit"")
    # Question assumes only one outfit patch
    if len(outfit_patches) == 0:
        # If no outfit is found, query the image directly
        return image_patch.simple_query(""Does the outfit look red?"")
    return bool_to_yesno(outfit_patches[0].verify_property(""outfit"", ""red""))"
5382035,Do you see trucks or buses that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_truck or is_bus)"
11694581,What piece of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is wooden?"")"
6908291,Is the man that is sitting down wearing a coat?," # contains a relation (sitting down), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is sitting down wearing a coat?"")"
1159818,Is the picture different in color than the apartment building?," # image is the apartment building
    image_patch = ImagePatch(image)
    picture_patches = image_patch.find(""picture"")
    # Question assumes only one picture patch
    if len(picture_patches) == 0:
        # If no picture is found, query the image directly
        return image_patch.simple_query(""Is the picture different in color than the apartment building?"")
    return bool_to_yesno(picture_patches[0].verify_property(""picture"", ""different_color"")) # crop would include the picture so keep it in the query"
15610671,Is the pizza above the dish both round and small?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pizza above the dish both round and small?"")"
764920,Are there any ducks on the murky water?," # murky water
    image_patch = ImagePatch(image)
    duck_patches = image_patch.find(""duck"")
    # Question assumes only one duck patch
    if len(duck_patches) == 0:
        # If no duck is found, query the image directly
        return image_patch.simple_query(""Are there any ducks on the murky water?"")
    for duck_patch in duck_patches:
        if duck_patch.simple_query(""Is the duck on the murky water?"") == ""yes"":
            return ""yes""
    return ""no"""
6643142,Is this cat brown or white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this cat brown or white?"")"
11001186,Is there any unripe banana or orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""unripe banana"") or image_patch.exists(""unripe orange""))"
3620898,Are the couch and the small nightstand beside the bed both brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the couch and the small nightstand beside the bed both brown?"")) # crop would include the bed so keep it in the query"
14123065,Do you see ties that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see ties that are not red?"")"
9343664,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
10388084,What is the white item of furniture in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the white item of furniture in this image?"")"
14574759,"In which part of the picture are the bags, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture are the bags, the top or the bottom?"")"
17908942,Is the fire hydrant to the right or to the left of the man that is wearing shoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fire hydrant to the right or to the left of the man that is wearing shoes?"")"
13119114,What kind of food is in the bowl that the strawberries are to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is in the bowl that the strawberries are to the left of?"")"
21012945,Is the vegetable on the plate white and large?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vegetable on the plate white and large?"")"
11150882,Which color is the pot on the left side?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the pot on the left side?"")"
536851,Is the man to the left of the plate sniffing beer?," # contains a relation (left of, sniffing, beer), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the plate sniffing beer?"")"
4889315,Is the girl on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl on the right?"")"
6602074,What is common to the graffiti and the dirt?," # dirty
    image_patch = ImagePatch(image)
    graffiti_patches = image_patch.find(""graffiti"")
    # Question assumes only one graffiti patch
    if len(graffiti_patches) == 0:
        # If no graffiti is found, query the image directly
        return image_patch.simple_query(""What is common to the graffiti and the dirt?"")
    dirt_patches = image_patch.find(""dirt"")
    # Question assumes only one dirt patch
    if len(dirt_patches) == 0:
        return image_patch.simple_query(""What is common to the graffiti and the dirt?"")
    return graffiti_patches[0].simple_query(""What is common to the graffiti and the dirt?"") # crop would include the dirt so keep it in the query"
13191854,Is the vehicle on the sign white or is it blue?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle on the sign white or is it blue?"")"
15685444,Is the book in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book in the bottom part or in the top of the photo?"")"
2289961,What color is the container to the left of the other containers?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the container to the left of the other containers?"")"
19482867,What color is the cow that is eating grass?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cow that is eating grass?"")"
7371541,Is that sky blue and cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that sky blue and cloudy?"")"
19287658,What is the name of the meat on the pizza with the vegetable?," # contains a relation (on, with, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the meat on the pizza with the vegetable?"")"
161002097,Is there a boat in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat in the water?"")"
180863,Do you see cash registers or traffic lights there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cash register"") or image_patch.exists(""traffic light""))"
3369168,Is it cloudy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it cloudy?"")"
8552309,What is the water in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the water in front of?"")"
161007542,What are the clothing items that are white called?," # clothing items
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What are the clothing items that are white called?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""white""):
            return clothing_patch.simple_query(""What are the clothing items that are white called?"")
    return image_patch.simple_query(""What are the clothing items that are white called?"")"
8143714,Is the cap brown or green?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cap brown or green?"")"
8843683,Who is skiing?," # contains a relation (skiing with, skiing near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing?"")"
1183584,What kind of clothing is not blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if not clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What kind of clothing is not blue?"")
    return image_patch.simple_query(""What kind of clothing is not blue?"") # if no clothing is not blue, query the image directly"
8599951,On which side of the photo is the black bag?," # left or right
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the black bag?"")
    if black_bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16131739,Are there cones or soccer balls in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cone = image_patch.exists(""cone"")
    is_soccer_ball = image_patch.exists(""soccer ball"")
    return bool_to_yesno(is_cone or is_soccer_ball)"
181065395,The motorbike is where?," # returns the location of the motorbike
    image_patch = ImagePatch(image)
    motorbike_patches = image_patch.find(""motorbike"")
    # Question assumes only one motorbike patch
    if len(motorbike_patches) == 0:
        # If no motorbike is found, query the image directly
        return image_patch.simple_query(""The motorbike is where?"")
    return motorbike_patches[0].simple_query(""The motorbike is where?"")"
973874,What is in front of the parked vehicle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the parked vehicle?"")"
38534,What does the woman hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the woman hold?"")"
16750515,What is the pattern of the tie?," # returns the pattern of the tie
    image_patch = ImagePatch(image)
    tie_patches = image_patch.find(""tie"")
    # Question assumes only one tie patch
    if len(tie_patches) == 0:
        # If no tie is found, query the image directly
        return image_patch.simple_query(""What is the pattern of the tie?"")
    return tie_patches[0].simple_query(""What is the pattern of the tie?"") # crop would include the pattern so keep it in the query"
10674500,Which color is the curtain?," # returns the color of the curtain
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Which color is the curtain?"")
    return curtain_patches[0].simple_query(""Which color is the curtain?"")"
7969215,What is the appliance to the left of the apartment?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the apartment?"")"
2729673,Is the man to the right or to the left of the animals on the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the animals on the road?"")"
18415739,Does the bag look beige?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bag"", ""beige""))"
10708814,Is there any motorcycle to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any motorcycle to the left of the car?"")"
13284935,What kind of furniture is on the left of the van?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is on the left of the van?"")"
5530880,Is that bench new or old?," # contains a relation (new or old), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that bench new or old?"")"
9203600,Do the flowers look purple and small?," # returns yes or no
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch.simple_query(""Do the flowers look purple and small?"")
    return bool_to_yesno(flower_patches[0].verify_property(""flowers"", ""purple"") and flower_patches[0].verify_property(""flowers"", ""small""))"
9498876,What is wearing the dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing the dress?"")"
7451188,What stands on the ground?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What stands on the ground?"")"
12222258,On which side of the picture is the water container?," # left or right
    image_patch = ImagePatch(image)
    water_container_patches = image_patch.find(""water container"")
    # Question assumes only one water container patch
    if len(water_container_patches) == 0:
        # If no water container is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the water container?"")
    if water_container_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
910935,What does the dog wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the dog wear?"")"
11222853,On which side of the picture is the black backpack?," # left or right
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""black backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the black backpack?"")
    backpack_patch = backpack_patches[0]
    if backpack_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8962933,Is that a scooter or a skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a scooter or a skateboard?"")"
11296466,Is the mousepad to the left or to the right of the keyboard?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mousepad to the left or to the right of the keyboard?"")"
1886697,What's the woman before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman before?"")"
7993069,What is the young person wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the young person wearing?"")"
14161302,The motorcycle is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The motorcycle is in front of what?"")"
7331982,"Where is the fridge, on the right or on the left side of the image?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the fridge, on the right or on the left side of the image?"")"
11682382,What is the bag that is under the umbrella?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag that is under the umbrella?"")"
9943377,Is the man in the bottom?," # contains a relation (on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man in the bottom?"")"
9556947,What animal is playing with the soccer ball?," # contains a relation (playing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is playing with the soccer ball?"")"
5607156,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
11165918,"Where in this picture is the pink bottle, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this picture is the pink bottle, in the bottom or in the top?"")"
9632563,What is holding the stuffed animal?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is holding the stuffed animal?"")"
11317919,Are there any zebras?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra""))"
13649894,Are there any forks to the left of the knife that is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any forks to the left of the knife that is to the right of the chair?"")"
21023404,What is the person to the left of the wine bottle wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the wine bottle wearing?"")"
4593405,What's on the tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the tray?"")"
5588446,Is the bicycle on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bicycle on the right of the photo?"")"
9513831,Are there white doors in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""white door"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
3818161,What is on the apartment building?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the apartment building?"")"
6487131,Do the glove and the car have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    car_patches = image_patch.find(""car"")
    # Question assumes only one glove and one car patch
    if len(glove_patches) == 0 or len(car_patches) == 0:
        # If no glove or car is found, query the image directly
        return image_patch.simple_query(""Do the glove and the car have the same color?"")
    glove_color = glove_patches[0].simple_query(""What color is the glove?"")
    car_color = car_patches[0].simple_query(""What color is the car?"")
    return bool_to_yesno(glove_color == car_color)"
1416807,What are the items of furniture that are leaning against the wall?," # returns a string of items
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture that are leaning against the wall?"")"
171041074,Who is in front of the horse in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the horse in the middle of the picture?"")"
2844555,Is there a snowboard by the person that wears jeans?," # contains a relation (next to, on, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a snowboard by the person that wears jeans?"")"
972889,Are there red helmets or boots in the photo?," # helmet or boot
    image_patch = ImagePatch(image)
    is_red_helmet = image_patch.exists(""red helmet"")
    is_red_boot = image_patch.exists(""red boot"")
    return bool_to_yesno(is_red_helmet or is_red_boot)"
3352625,Which kind of food is not delicious?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not delicious?"")"
3170438,How is this device called?," # returns the name of the device
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is this device called?"")"
311264,Does the man to the right of the food hold a phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the right of the food hold a phone?"")"
939286,Is there any boat in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
7665625,Do the animals have different species?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.verify_property(""animal"", ""same species""))"
1058533,Is the woman on the right side or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right side or on the left?"")"
13850363,What device is to the left of the device the man is holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the device the man is holding?"")"
91036212,What is the truck on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the truck on?"")"
13327081,Who is wearing a jersey?," # jersey is a type of clothing
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jersey?"")"
5803098,Which kind of food is to the right of the beef?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the right of the beef?"")"
662316,Who is walking into the water?," # contains a relation (walking into), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is walking into the water?"")"
17984951,On which side of the picture is the black bag?," # left or right
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the black bag?"")
    if black_bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18345806,Is the happy man to the left or to the right of the black device?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy man to the left or to the right of the black device?"")"
1019078,What is the device to the right of the laptop computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the laptop computer?"")"
18797995,Does the tall palm tree have green color?," # contains a relation (tall, green, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tall palm tree have green color?"")"
15873272,Is the boy to the left or to the right of the person that is wearing a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Is the boy to the left or to the right of the person that is wearing a helmet?"")
    helmet_patches = image_patch.find(""person wearing a helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        helmet_patches = image_patch.find(""person with helmet"")
        # Question assumes only one helmet patch
        if len(helmet_patches) == 0:
            helmet_patches = image_patch.find(""person with a helmet"")
            # Question assumes only one helmet patch
            if len(helmet_patches) == 0:
                helmet_patches = image_patch.find(""person wearing helmet"")
                # Question assumes only one helmet patch
                if len(helmet_patches) == 0:
                    helmet_patches = image_patch.find(""person with helmet on"")
                    # Question assumes only one helmet patch
                    if len(helmet_patches) == 0:
                        helmet_patches = image_patch.find(""person wearing helmet on"")
                        # Question assumes only one helmet patch
                        if len(helmet_patches) == 0:
                            helmet_patches = image_patch.find(""person with helmet on head"")
                            # Question assumes only one helmet patch
                            if len(helmet_patches) == 0:
                                helmet_patches ="
961420,Is the dog on the chair white and little?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog on the chair white and little?"")"
19937077,What color are the sneakers?," # returns the color of the sneakers
    image_patch = ImagePatch(image)
    sneakers_patches = image_patch.find(""sneakers"")
    # Question assumes only one sneakers patch
    if len(sneakers_patches) == 0:
        # If no sneakers are found, query the image directly
        return image_patch.simple_query(""What color are the sneakers?"")
    return sneakers_patches[0].simple_query(""What color are the sneakers?"") # crop would include the sneakers so keep it in the query"
3814344,Is the ground rough or smooth?," # ground is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground rough or smooth?"")"
5903554,Is the ground bare or covered?," # ground is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground bare or covered?"")"
427631,What color is the gate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the gate?"")"
14848473,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
19446492,Do you see any ladders on the side of the building?," # contains a relation (on the side of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any ladders on the side of the building?"")"
18400989,What do you think is that boy throwing?," # contains a relation (throwing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is that boy throwing?"")"
6965563,The urinal on the left is of what shape?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The urinal on the left is of what shape?"")"
8379047,Do you see any dumpsters or mouse pads?," # returns yes or no
    image_patch = ImagePatch(image)
    is_dumpster = image_patch.exists(""dumpster"")
    is_mouse_pad = image_patch.exists(""mouse pad"")
    return bool_to_yesno(is_dumpster or is_mouse_pad)"
1147212,Which side of the image is the TV on?," # left or right
    image_patch = ImagePatch(image)
    tv_patches = image_patch.find(""TV"")
    # Question assumes only one TV patch
    if len(tv_patches) == 0:
        # If no TV is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the TV on?"")
    return ""left"" if tv_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
12266132,Is there any backpack to the left of the person that is standing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any backpack to the left of the person that is standing?"")"
1016954,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
16769340,Are both the sofa with the pillows and the cabinet brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    sofa_patches = image_patch.find(""sofa with pillows"")
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one sofa and one cabinet patch
    if len(sofa_patches) == 0 or len(cabinet_patches) == 0:
        # If no sofa or cabinet is found, query the image directly
        return image_patch.simple_query(""Are both the sofa with the pillows and the cabinet brown?"")
    return bool_to_yesno(sofa_patches[0].verify_property(""sofa with pillows"", ""brown"") and cabinet_patches[0].verify_property(""cabinet"", ""brown""))"
16506868,What kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is made of wood?"")"
14345468,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
19364685,What is the container made of?," # container is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the container made of?"")"
7763177,Which color does the cow behind the other cow have?," # cow behind cow
    image_patch = ImagePatch(image)
    cow_patches = image_patch.find(""cow"")
    # Question assumes only two cow patches
    if len(cow_patches) < 2:
        # If no two cows are found, query the image directly
        return image_patch.simple_query(""Which color does the cow behind the other cow have?"")
    cow1 = cow_patches[0]
    cow2 = cow_patches[1]
    if cow1.horizontal_center < cow2.horizontal_center:
        cow1, cow2 = cow2, cow1
    return cow2.simple_query(""What color is the cow?"")"
11667181,What's on the pole?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the pole?"")"
3471374,On which side is the white animal?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the white animal?"")"
4243296,Are there any rackets or mattresses?," # returns yes or no
    image_patch = ImagePatch(image)
    is_racket = image_patch.exists(""racket"")
    is_mattress = image_patch.exists(""mattress"")
    return bool_to_yesno(is_racket or is_mattress)"
16522200,Do the bags that are to the left of the other bags have black color?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the bags that are to the left of the other bags have black color?"")"
789875,The man to the left of the mailbox is holding what?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the left of the mailbox is holding what?"")"
314698,Do you see red chairs or pots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_chair = image_patch.exists(""red chair"")
    is_pot = image_patch.exists(""pot"")
    return bool_to_yesno(is_red_chair or is_pot)"
19269815,Are there motorcycles in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""motorcycle""))"
1099850,What is the man using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man using?"")"
4592308,What is the woman to the left of the stroller wearing?," # contains a relation (to the left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the left of the stroller wearing?"")"
2649902,"On which side is the cardboard box, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the cardboard box, the right or the left?"")"
15844117,What is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate?"")"
15411678,"What vehicle is this, a bus or a train?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is this, a bus or a train?"")"
8935192,What does the skateboarder wear?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the skateboarder wear?"")"
2632483,Are there either bags or backpacks that are orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"") and image_patch.find(""bag"")[0].verify_property(""bag"", ""orange"")
    is_backpack = image_patch.exists(""backpack"") and image_patch.find(""backpack"")[0].verify_property(""backpack"", ""orange"")
    return bool_to_yesno(is_bag or is_backpack)"
151021418,What appliance is the pan on?," # assumes only one pan patch
    image_patch = ImagePatch(image)
    pan_patches = image_patch.find(""pan"")
    if len(pan_patches) == 0:
        return image_patch.simple_query(""What appliance is the pan on?"")
    return pan_patches[0].simple_query(""What appliance is the pan on?"")"
9908726,How tall is the grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the grass?"")"
62799,Is that street both calm and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is that street both calm and black?"")) # crop would include the street so keep it in the query"
6839512,What kind of animal is on the beach?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the beach?"")"
4366488,Is the man to the right of the bicycle wearing a cap?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the bicycle wearing a cap?"")"
101043716,What animal is presented in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is presented in the image?"")"
481092,Are there frisbees to the right of the person who is wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""frisbee"") and image_patch.exists(""person wearing a hat"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
16784116,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
19891406,What is printed on the device that the person is holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is printed on the device that the person is holding?"")"
14289155,"Which food item is not large, the pepper or the hot dog?"," # contains a relation (larger/smaller than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which food item is not large, the pepper or the hot dog?"")"
18314049,Are there any white cakes or cupcakes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_cupcake = image_patch.exists(""cupcake"")
    return bool_to_yesno(is_cake or is_cupcake)"
12257391,Are there both a window and a door in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
17318609,Is there a black briefcase or purse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a black briefcase or purse?"")"
3838516,What is the chair in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chair in front of?"")"
18501469,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
1171376,What clothing item is pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is pink?"")"
10374371,That shirt is what color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That shirt is what color?"")"
1973788,Does the faucet look silver and metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""faucet"", ""silver"") and image_patch.verify_property(""faucet"", ""metallic""))"
1149225,Is he to the left or to the right of the drawer in the bottom of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the left or to the right of the drawer in the bottom of the photo?"")"
91008192,Are there any sailboats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sailboat""))"
177951,Is the computer mouse plugged into a keyboard?," # contains a relation (plugged into), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer mouse plugged into a keyboard?"")"
7762707,The plane in the bottom part of the photo has what color?," # contains a relation (bottom part of the photo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The plane in the bottom part of the photo has what color?"")"
1402447,Is the towel below the produce?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the towel below the produce?"")"
16625689,On which side of the picture is the girl?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the girl?"")
    return ""left"" if girl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
736766,Does the shirt have a different color than the cap?," # contains a relation (different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt have a different color than the cap?"")"
65804,Who is wearing a ski?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a ski?"")"
14948020,What color is the car that is driving down the street?," # contains a relation (driving down the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the car that is driving down the street?"")"
1734783,Does the sky have a different color than the jacket?," # returns yes or no
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one sky and one jacket patch
    if len(sky_patches) == 0 or len(jacket_patches) == 0:
        # If no sky or jacket is found, query the image directly
        return image_patch.simple_query(""Does the sky have a different color than the jacket?"")
    sky_color = sky_patches[0].simple_query(""What color is the sky?"")
    jacket_color = jacket_patches[0].simple_query(""What color is the jacket?"")
    return bool_to_yesno(sky_color != jacket_color)"
1459410,Where is it?," # contains a relation (where is it?), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is it?"") # contains a relation (where is it?), so ask directly"
560524,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
11342224,Is there a fence on the side of the road?," # contains a relation (on the side of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a fence on the side of the road?"")"
6380253,Do you see both apples and bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_apple = image_patch.exists(""apple"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_apple and is_bag)"
1081225,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
11392385,Does the skateboard have a different color than the fence?," # returns yes or no
    image_patch = ImagePatch(image)
    skateboard_patches = image_patch.find(""skateboard"")
    # Question assumes only one skateboard patch
    if len(skateboard_patches) == 0:
        # If no skateboard is found, query the image directly
        return image_patch.simple_query(""Does the skateboard have a different color than the fence?"")
    for skateboard_patch in skateboard_patches:
        fence_patches = image_patch.find(""fence"")
        # Question assumes only one fence patch
        if len(fence_patches) == 0:
            return ""no""
        for fence_patch in fence_patches:
            if (skateboard_patch.simple_query(""What color is the skateboard?"") != fence_patch.simple_query(""What color is the fence?"")):
                return ""yes""
    return ""no"""
2401216,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
15740040,Are there any rackets to the left of the person on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any rackets to the left of the person on the right?"")"
11301959,Is it cloudy or clear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it cloudy or clear?"")"
11291960,What kind of device is to the right of the chair in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the right of the chair in the middle of the picture?"")"
815127,What color do you think her hair has?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think her hair has?"")"
6878058,Does the comb to the left of the toilet look gray or red?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the comb to the left of the toilet look gray or red?"")"
3809754,What color do you think the plastic chair is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the plastic chair is?"")"
6733257,What is the kite in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kite in?"")"
10691044,What is the name of the item of furniture that is made of the same material as the backpack by the sculpture?," # contains a relation (made of the same material as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture that is made of the same material as the backpack by the sculpture?"")"
4353534,Which side of the photo is the black container on?," # left or right
    image_patch = ImagePatch(image)
    black_container_patches = image_patch.find(""black container"")
    # Question assumes only one black container patch
    if len(black_container_patches) == 0:
        # If no black container is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the black container on?"")
    if black_container_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8567826,What is the color of the shelf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shelf?"")"
12264017,Is the sky clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky clear?"")"
3755118,Who is holding the tennis racket in the center of the picture?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the tennis racket in the center of the picture?"")"
4292043,Is the man on the left side of the image?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the left side of the image?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
18607732,Is the glove the same color as the bed sheet?," # returns yes or no
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Is the glove the same color as the bed sheet?"")
    glove_color = glove_patches[0].simple_query(""What color is the glove?"")
    bed_sheet_patches = image_patch.find(""bed sheet"")
    # Question assumes only one bed sheet patch
    if len(bed_sheet_patches) == 0:
        # If no bed sheet is found, query the image directly
        return image_patch.simple_query(""Is the glove the same color as the bed sheet?"")
    bed_sheet_color = bed_sheet_patches[0].simple_query(""What color is the bed sheet?"")
    return bool_to_yesno(glove_color == bed_sheet_color)"
10374402,What is on the shelf on the left side?," # contains a relation (on the left, on the right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf on the left side?"")"
722873,What's in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the building?"")"
6358369,Are the shorts black and white or colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shorts black and white or colorful?"")"
18735598,What is the piece of furniture that is to the right of the plate that looks white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is to the right of the plate that looks white?"")"
19751750,What is the black comb that is to the right of the scissors reflected in?," # returns the surface the comb is reflected in
    image_patch = ImagePatch(image)
    comb_patches = image_patch.find(""black comb"")
    # Question assumes only one comb patch
    if len(comb_patches) == 0:
        # If no comb is found, query the image directly
        return image_patch.simple_query(""What is the black comb that is to the right of the scissors reflected in?"")
    for comb_patch in comb_patches:
        if comb_patch.horizontal_center > image_patch.horizontal_center:
            return comb_patch.simple_query(""What is the black comb that is to the right of the scissors reflected in?"")
    return comb_patch.simple_query(""What is the black comb that is to the right of the scissors reflected in?"")"
814829,What color is the flower?," # returns the color of the flower
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""What color is the flower?"")
    return flower_patches[0].simple_query(""What color is the flower?"")"
16635120,Is he a baseball or soccer player?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he a baseball or soccer player?"")"
1838750,"In which part is the bread, the bottom or the top?"," # same as above
    image_patch = ImagePatch(image)
    bread_patches = image_patch.find(""bread"")
    # Question assumes only one bread patch
    if len(bread_patches) == 0:
        # If no bread is found, query the image directly
        return image_patch.simple_query(""In which part is the bread, the bottom or the top?"")
    if bread_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
17863959,Which kind of animal is small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is small?"")"
12801659,Are the stones small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the stones small?""))"
14337859,Are there trash cans on the sidewalk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""trash can"") and image_patch.exists(""sidewalk""))"
18965023,Is the metal gate in front of the leafless tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal gate in front of the leafless tree?"")"
7266734,What color do you think the shirt the girl is wearing is?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What color do you think the shirt the girl is wearing is?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What color do you think the shirt the girl is wearing is?"") # crop would include the shirt so keep it in the query"
15233557,Does the bunny have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bunny"", ""white""))"
12339888,Is the train in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train in the bottom part or in the top of the photo?"")"
11472877,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16332265,Is the telephone on the nightstand to the left of the office chair?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the telephone on the nightstand to the left of the office chair?"")"
8432725,On which side are the long curtains?," # left or right
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtains"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""On which side are the long curtains?"")
    if curtain_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18343137,Does the ground look brown?," # ground is a common object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ground"", ""brown""))"
43054,What animal is the hat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the hat on?"")"
18325758,Do you see both windows and doors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
433678,Does the lawn look ugly?," # ugly is a property of the lawn
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""lawn"", ""ugly""))"
4582483,Is the spectator in the bottom or in the top of the picture?," # spectator is a specific object
    image_patch = ImagePatch(image)
    spectator_patches = image_patch.find(""spectator"")
    # Question assumes only one spectator patch
    if len(spectator_patches) == 0:
        # If no spectator is found, query the image directly
        return image_patch.simple_query(""Is the spectator in the bottom or in the top of the picture?"")
    if spectator_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
15355541,What place was the picture taken at?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the picture taken at?"")"
121016708,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
2945853,The young girl is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The young girl is wearing what?"")"
15944624,Is the leaf different in color than the flower?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the leaf different in color than the flower?"")"
7901852,Do you see a woman to the right of the men in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a woman to the right of the men in the center?"")"
1232505,Are there either any closed windows or doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""closed window"") or image_patch.exists(""closed door"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
91029590,Is the drawer to the left of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drawer to the left of the lamp?"")"
2729096,Are there keyboards in this image that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    for keyboard_patch in keyboard_patches:
        if keyboard_patch.verify_property(""keyboard"", ""black""):
            return ""yes""
    return ""no"""
515138,What is the gate in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the gate in front of?"")"
7703190,What animal is on the bed in this photo?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the bed in this photo?"")"
2796457,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
6566234,Is it a garage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it a garage?"")"
3444524,Is there a plate to the right of the tray that the pizza lies on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate to the right of the tray that the pizza lies on?"")"
6307310,Are there skateboards or chess pieces?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_chess_piece = image_patch.exists(""chess piece"")
    return bool_to_yesno(is_skateboard or is_chess_piece)"
7914901,Are all the people the same gender?," # gender is not a property of people, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are all the people the same gender?"")) # gender is not a property of people, so ask directly"
16649693,Are there either any pictures or motorcycles in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture"") or image_patch.exists(""motorcycle""))"
17680743,What is the pan on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pan on?"")"
6998457,What are the items of furniture to the left of the plate with the vegetables?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture to the left of the plate with the vegetables?"")"
3590757,"In which part of the photo is the metal container, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the metal container, the bottom or the top?"")"
18868642,What color is the scarf?," # returns the color of the scarf
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch.simple_query(""What color is the scarf?"")
    return scarf_patches[0].simple_query(""What color is the scarf?"") # crop would include the scarf so keep it in the query"
18361673,What do you think is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the wall?"")"
14458597,Is the town small or large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the town small or large?"")"
5945266,Are there vegetables on the dish?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there vegetables on the dish?"")"
10990142,Which side is the bookshelf on?," # left or right
    image_patch = ImagePatch(image)
    bookshelf_patches = image_patch.find(""bookshelf"")
    # Question assumes only one bookshelf patch
    if len(bookshelf_patches) == 0:
        # If no bookshelf is found, query the image directly
        return image_patch.simple_query(""Which side is the bookshelf on?"")
    if bookshelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18580488,What's the penguin on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the penguin on?"")"
3338493,What is the person behind the catcher wearing?," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person behind the catcher wearing?"")"
14644573,What appliance is to the left of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the table?"")"
922944,What do you think is the piece of furniture that the wires are on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the piece of furniture that the wires are on?"")"
2692916,What is the color of the helmet the skier is to the left of?," # helmet is to the left of the skier
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""What is the color of the helmet the skier is to the left of?"")
    helmet_patch = helmet_patches[0]
    skier_patches = image_patch.find(""skier"")
    # Question assumes only one skier patch
    if len(skier_patches) == 0:
        # If no skier is found, query the image directly
        return helmet_patch.simple_query(""What is the color of the helmet the skier is to the left of?"")
    skier_patch = skier_patches[0]
    if helmet_patch.horizontal_center < skier_patch.horizontal_center:
        return helmet_patch.simple_query(""What is the color of the helmet the skier is to the left of?"")
    return helmet_patch.simple_query(""What is the color of the helmet the skier is to the right of?"") # crop would include the skier so keep it in the query"
16637450,What animal is walking on the dirt that looks brown?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is walking on the dirt that looks brown?"")"
16405557,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
5222914,Is the girl on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl on the right of the picture?"")"
6932781,Is the lady on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady on the left?"")"
6564537,Are there umbrellas to the left of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella"") and image_patch.find(""umbrella"")[0].horizontal_center < image_patch.find(""fence"")[0].horizontal_center)"
5130677,Which kind of animal is eating in the field?," # contains a relation (eating in the field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is eating in the field?"")"
10219313,Are there any skateboards or pictures?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_skateboard or is_picture)"
13698608,Are there any apples that are not green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    apple_patches = image_patch.find(""apple"")
    # Question assumes only one apple patch
    if len(apple_patches) == 0:
        # If no apple is found, query the image directly
        return image_patch.simple_query(""Are there any apples that are not green?"")
    for apple_patch in apple_patches:
        if apple_patch.simple_query(""Is the apple green?"") != ""yes"":
            return ""yes""
    return ""no"""
4395929,Who is wearing gloves?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing gloves?"")"
5156808,What is on the sandwich?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sandwich?"")"
9435802,Do you see ties?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tie"")) # Question assumes only one tie patch"
10961152,Is the teddy bear on the right?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the teddy bear on the right?"")"
1027375,Which kind of vehicle is parked on the street?," # contains a relation (parked on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is parked on the street?"")"
14615653,Is the lemon in the top part or in the bottom?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lemon in the top part or in the bottom?"")"
12671505,Is there a television to the right of the man who is wearing glasses?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a television to the right of the man who is wearing glasses?"")"
1557984,What does the cat sit in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the cat sit in?"")"
6774354,What color is the car on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the car on the left of the photo?"")"
577273,What is the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the floor made of?"")"
6364102,What is the frosting on?," # cake or cupcake
    image_patch = ImagePatch(image)
    frosting_patches = image_patch.find(""frosting"")
    # Question assumes only one frosting patch
    if len(frosting_patches) == 0:
        # If no frosting is found, query the image directly
        return image_patch.simple_query(""What is the frosting on?"")
    return frosting_patches[0].simple_query(""What is the frosting on?"") # crop would include the object so keep it in the query"
6287646,What color is the umbrella to the left of the suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella to the left of the suitcase?"")"
4121498,Is the chair to the right of the black television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right of the black television?"")"
127049,Are there either lambs or monkeys in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamb"") or image_patch.exists(""monkey""))"
17289559,"What kind of food is not sliced, the pizza or the olive?"," # contains a relation (sliced), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is not sliced, the pizza or the olive?"")"
2305256,Is the bowl to the right or to the left of the chair that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl to the right or to the left of the chair that is to the right of the man?"")"
598995,Which side of the photo is the umpire on?," # left or right
    image_patch = ImagePatch(image)
    umpire_patches = image_patch.find(""umpire"")
    # Question assumes only one umpire patch
    if len(umpire_patches) == 0:
        # If no umpire is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the umpire on?"")
    if umpire_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10759644,Is the painting in the bottom or in the top part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the painting in the bottom or in the top part of the photo?"")"
10516829,What's the giraffe in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the giraffe in front of?"")"
17671652,Are all the animals cows?," # contains a relation (all, some, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are all the animals cows?"")) # crop would include the animals so keep it in the query"
8553909,Who is on the surfboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the surfboard?"")"
2724053,What articles of clothing are blue?," # returns a string
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What articles of clothing are blue?"")
    for clothing_patch in clothing_patches:
        blue_patches = clothing_patch.find(""blue"")
        # Question assumes only one blue patch
        if len(blue_patches) == 0:
            return clothing_patch.simple_query(""What articles of clothing are blue?"")
        return blue_patches[0].simple_query(""What articles of clothing are blue?"")"
10146072,What color does the basket have?," # basket is a container so it has a color
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the basket have?"")"
3870591,What kind of furniture is to the left of the cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the cabinet?"")"
6591034,The man to the left of the bike is adjusting what?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the left of the bike is adjusting what?"")"
16283577,That train is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That train is in front of what?"")"
21009228,Is there a pillow to the right of the woman that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow to the right of the woman that is wearing a shirt?"")"
16179280,Does the dishwasher that is to the left of the cupboard have white color?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dishwasher that is to the left of the cupboard have white color?"")"
15183145,Is the vase to the right or to the left of the candle that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vase to the right or to the left of the candle that is on the right?"")"
8575655,Is the batter to the left or to the right of the catcher?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the batter to the left or to the right of the catcher?"")"
5716073,Are there pigs or plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pig = image_patch.exists(""pig"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_pig or is_plate)"
281788,Does the truck to the right of the car look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the truck to the right of the car look red?"")"
3211128,What is he serving?," # contains a relation (serving), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he serving?"")"
404640,Does the pepper to the left of the other pepper look grilled?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pepper to the left of the other pepper look grilled?"")"
1141833,What type of animal is on the path in this photo?," # contains a relation (on the path), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is on the path in this photo?"")"
1568195,What is the piece of furniture to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the woman?"")"
165325,Is the woman to the left or to the right of the bike?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the bike?"")"
9718279,Are there any palm trees to the left of the American flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""palm tree"") and image_patch.exists(""American flag"") and image_patch.find(""palm tree"")[0].horizontal_center < image_patch.find(""American flag"")[0].horizontal_center)"
13228557,Who is wearing a tie?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a tie?"")"
15577859,On which side of the image is the happy man?," # left or right
    image_patch = ImagePatch(image)
    happy_man_patches = image_patch.find(""happy man"")
    # Question assumes only one happy man patch
    if len(happy_man_patches) == 0:
        # If no happy man is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the happy man?"")
    happy_man_patch = happy_man_patches[0]
    if happy_man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1124753,What is the animal that the man is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the man is on?"")"
1957962,What is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl holding?"")"
1680392,What color is the chair the place mat is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the chair the place mat is to the right of?"")"
13639297,Is the bridge white and curved?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bridge white and curved?"")"
1245156,What color is the hat the man is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hat the man is with?"")"
6961386,Which side is the silver fork on?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Which side is the silver fork on?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
151057683,What is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing shorts?"")"
13961841,Does the sky look cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""cloudy"") and image_patch.verify_property(""sky"", ""blue""))"
14310460,Is the man to the right of the woman on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the woman on the right of the image?"")"
16326116,What is standing under the open umbrella?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is standing under the open umbrella?"")"
5866090,Is the curtain on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain on the right?"")"
6393467,Which kind of device is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the person?"")"
15995351,Does the cow in front of the building have small size?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cow in front of the building have small size?"")"
5849313,"What piece of furniture is this, a table or a chair?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is this, a table or a chair?"")"
19497368,Does the field look green and short?," # field is a common object
    image_patch = ImagePatch(image)
    field_patches = image_patch.find(""field"")
    # Question assumes only one field patch
    if len(field_patches) == 0:
        # If no field is found, query the image directly
        return image_patch.simple_query(""Does the field look green and short?"")
    return bool_to_yesno(field_patches[0].verify_property(""field"", ""green"") and field_patches[0].verify_property(""field"", ""short""))"
12155516,Who is wearing the t-shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the t-shirt?"")"
9201010,Who is carrying the umbrella?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the umbrella?"")"
1353099,Is the flag in the bottom part of the picture?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the flag in the bottom part of the picture?"")"
13425779,What are the scissors in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the scissors in?"")"
16211836,Are there boys on the beach near the sea foam?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy on beach near sea foam"")) # crop would include the sea foam so keep it in the query"
3354541,What kind of vehicle is behind the sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is behind the sign?"")"
17824180,Are there any oranges?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""orange""))"
13731983,What is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman holding?"")"
1778405,Is there any food to the left of the bun that is to the right of the tray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any food to the left of the bun that is to the right of the tray?"")"
8355701,How big is the monitor to the right of the other monitor?," # returns a string
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only two monitor patches
    if len(monitor_patches) < 2:
        # If no two monitors are found, query the image directly
        return image_patch.simple_query(""How big is the monitor to the right of the other monitor?"")
    right_monitor_patch = monitor_patches[0]
    for monitor_patch in monitor_patches:
        if monitor_patch.horizontal_center > right_monitor_patch.horizontal_center:
            right_monitor_patch = monitor_patch
    return right_monitor_patch.simple_query(""How big is the monitor to the right of the other monitor?"")"
13172808,What place is this image at?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this image at?"") # assumes the image is a photo of a place"
9228861,The seat is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The seat is on what?"")"
1627013,Are both the antenna and the sky the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are both the antenna and the sky the same color?"")) # crop would include the antenna and sky so keep it in the query"
18327762,Is the drink in the top or in the bottom of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drink in the top or in the bottom of the image?"")"
5354229,What is the poster on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the poster on?"")"
13671867,On which side of the picture is the lettuce?," # left or right
    image_patch = ImagePatch(image)
    lettuce_patches = image_patch.find(""lettuce"")
    # Question assumes only one lettuce patch
    if len(lettuce_patches) == 0:
        # If no lettuce is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the lettuce?"")
    if lettuce_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3466617,"Which is healthier, the cabbage or the cake?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which is healthier, the cabbage or the cake?"")"
179459,Which kind of furniture isn't wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture isn't wooden?"")"
1230079,Is there a bench or a bird in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_bench or is_bird)"
191875,What color do you think are the feathers?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think are the feathers?"")"
6555670,Does the bag to the right of the purse look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag to the right of the purse look blue?"")"
141017193,What's the man sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man sitting on?"")"
9804972,What vehicle isn't yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle isn't yellow?"")"
17313655,Which color is the sweater?," # returns the color of the sweater
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        # If no sweater is found, query the image directly
        return image_patch.simple_query(""Which color is the sweater?"")
    return sweater_patches[0].simple_query(""Which color is the sweater?"")"
8321403,Is the truck to the right or to the left of the person who is standing beside the plane?," # contains a relation (right, left, beside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck to the right or to the left of the person who is standing beside the plane?"")"
1442746,What type of place is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of place is it?"")"
11963875,Is the statue near the clock both bright and white?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue near the clock both bright and white?"")"
443753,What is the color of the shirt that the man is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt that the man is in?"")"
7815414,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
14811925,What device is the laptop in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the laptop in front of?"")"
14221158,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
10103473,Which kind of device is on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the floor?"")"
17514632,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
18408462,Are there orange umbrellas or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""orange umbrella"")
    is_bag = image_patch.exists(""orange bag"")
    return bool_to_yesno(is_umbrella or is_bag)"
18683208,What is the vehicle that the building is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that the building is behind of?"")"
1419677,What is the boy that is to the right of the glasses wearing?," # glasses is a relational verb
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""What is the boy that is to the right of the glasses wearing?"")
    glasses_patch = glasses_patches[0]
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What is the boy that is to the right of the glasses wearing?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center > glasses_patch.horizontal_center:
        return boy_patch.simple_query(""What is the boy that is to the right of the glasses wearing?"")
    return boy_patch.simple_query(""What is the boy wearing?"") # crop would include the glasses so keep it in the query"
7895554,Is the man to the left of a lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of a lady?"")"
16525461,On which side of the picture is the cab?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the cab?"")"
8441762,What animal is above the watch?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is above the watch?"")"
17460485,Which kind of animal is above the rock?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is above the rock?"")"
9879587,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
17315149,Are there girls to the left of the chair that is made out of wood?," # contains a relation (left of, made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there girls to the left of the chair that is made out of wood?"")"
5917530,Is the lady on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady on the left side or on the right?"")"
7160858,What is the vegetable that is to the left of the plate in the top part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is to the left of the plate in the top part?"")"
14837633,Are there any shelves or chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelf"") or image_patch.exists(""chair""))"
1816665,Which kind of animal is tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is tan?"")"
111026174,What piece of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is it?"")"
3487378,Is the vest yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vest yellow?"")"
7733796,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
9716597,Do the curtain and the toilet have the same color?," # returns a boolean
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtain"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Do the curtain and the toilet have the same color?"")
    curtain_color = curtain_patches[0].simple_query(""What color is the curtain?"")
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Do the curtain and the toilet have the same color?"")
    toilet_color = toilet_patches[0].simple_query(""What color is the toilet?"")
    return bool_to_yesno(curtain_color == toilet_color)"
6506168,Which kind of device is to the left of the bookcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the left of the bookcase?"")"
14160842,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
19188145,Is the tall man to the right or to the left of the glasses that are on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tall man to the right or to the left of the glasses that are on the right of the image?"")"
1160348,What color is the goat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the goat?"")"
17556856,Is the sky white and clear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky white and clear?"")"
1945089,What is the kid holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kid holding?"")"
3503,What type of vehicle is pulling a trailer?," # contains a relation (pulling a trailer), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is pulling a trailer?"")"
3398720,"In which part of the photo is the statue, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the statue, the bottom or the top?"")"
596820,What color is the tunnel the train is leaving?," # contains a relation (leaving), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tunnel the train is leaving?"")"
161057098,Is the old lady on the left or on the right side?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old lady on the left or on the right side?"")"
6943769,Is the man to the right or to the left of the people that are on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the people that are on the left?"")"
4330417,Are there any knives in this photo that are small?," # knife is a small object
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""Are there any knives in this photo that are small?"")
    for knife_patch in knife_patches:
        if knife_patch.verify_property(""knife"", ""small""):
            return ""yes""
    return ""no"""
19363772,Is the hat blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hat blue?"")"
7128043,Is the bottle to the left of a plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle to the left of a plate?"")"
4799673,Do you see any passengers on the bike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any passengers on the bike?"")"
1436305,What is the item of furniture in the picture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture in the picture called?"")"
12767390,Is the box on the left side of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box on the left side of the photo?"")"
18443874,What's the bicycle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bicycle on?"")"
11619236,Is the color of the door the same as that of the floor?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the door the same as that of the floor?"")"
81657,Which side is the open bed on?," # left or right
    image_patch = ImagePatch(image)
    bed_patches = image_patch.find(""bed"")
    # Question assumes only one bed patch
    if len(bed_patches) == 0:
        # If no bed is found, query the image directly
        return image_patch.simple_query(""Which side is the open bed on?"")
    if bed_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16783726,Which kind of furniture is to the left of the drum?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the drum?"")"
10888077,What color is the cow that is on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cow that is on the right?"")"
8167378,"Which is younger, the child or the lady?"," # assumes only one child and one lady
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    lady_patches = image_patch.find(""lady"")
    if len(child_patches) == 0 or len(lady_patches) == 0:
        return image_patch.simple_query(""Which is younger, the child or the lady?"")
    child_patch = child_patches[0]
    lady_patch = lady_patches[0]
    if child_patch.simple_query(""Is the child younger than the lady?"") == ""yes"":
        return ""the child""
    else:
        return ""the lady"""
11642481,Is the black chair to the left or to the right of the black object that is to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black chair to the left or to the right of the black object that is to the left of the computer?"")"
18626067,What appliance is the juice on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is the juice on?"")"
5123813,What type of vehicle do you think are the trees behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle do you think are the trees behind of?"")"
17995652,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
2810870,Is the fire hydrant near the garbage bin both white and large?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fire hydrant near the garbage bin both white and large?"")"
14988692,What color is the shirt the players wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the players wear?"")"
16983968,Are the glasses on the left side or on the right?," # glasses are on the right
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses on the left side or on the right?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
3116174,What animal does the rope hold?," # holds is a relational verb
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What animal does the rope hold?"")"
15428024,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
962209,Which kind of animal is on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the desk?"")"
9931849,Do you see any plates in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plate""))"
10327283,Who is in front of the woman that is to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the woman that is to the left of the car?"")"
1532128,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
19794013,What piece of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is brown?"")"
13168175,What is the green vehicle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the green vehicle called?"")"
11188259,Is the batter to the right or to the left of the helmet that is to the left of the umpire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the batter to the right or to the left of the helmet that is to the left of the umpire?"")"
9958379,What device is to the right of the laptop keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the laptop keyboard?"")"
2139946,"Which material is the fence to the left of the car made of, iron or wire?"," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material is the fence to the left of the car made of, iron or wire?"")"
12109940,What are the oranges in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the oranges in?"")"
14670492,Are there either any cows or dogs that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cow = image_patch.exists(""cow"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_cow or is_dog)"
17979814,Are there any bags to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.find(""bag"")[0].horizontal_center < image_patch.find(""chair"")[0].horizontal_center)"
6713784,Is the white bowl to the right or to the left of the container that is not big?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bowl to the right or to the left of the container that is not big?"")"
13949240,Are the women to the left of the pizza wearing a necklace?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the women to the left of the pizza wearing a necklace?"")"
16349092,Is the small boat to the left of the house?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small boat to the left of the house?"")"
14244414,Who is holding the baseball bat?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the baseball bat?"")"
18788972,Is the air conditioner on the left?," # contains a relation (on the left of, on the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the air conditioner on the left?"")"
3706478,Do you see beds in front of the wall?," # contains a relation (in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see beds in front of the wall?"")"
8689322,The bottle the phone is to the left of has what color?," # bottle and phone are assumed to be in the same image
    image_patch = ImagePatch(image)
    phone_patches = image_patch.find(""phone"")
    # Question assumes only one phone patch
    if len(phone_patches) == 0:
        # If no phone is found, query the image directly
        return image_patch.simple_query(""The bottle the phone is to the left of has what color?"")
    phone_patch = phone_patches[0]
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        return image_patch.simple_query(""The bottle the phone is to the left of has what color?"")
    bottle_patch = bottle_patches[0]
    if phone_patch.horizontal_center < bottle_patch.horizontal_center:
        return bottle_patch.simple_query(""What color is the bottle?"")
    return image_patch.simple_query(""The bottle the phone is to the left of has what color?"")"
15271996,What is the color of the trousers?," # returns the color of the trousers
    image_patch = ImagePatch(image)
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one trousers patch
    if len(trousers_patches) == 0:
        # If no trousers are found, query the image directly
        return image_patch.simple_query(""What is the color of the trousers?"")
    return trousers_patches[0].simple_query(""What is the color of the trousers?"") # crop would include the trousers so keep it in the query"
11404110,What color is the bookcase that is on the left?," # contains a relation (on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bookcase that is on the left?"")"
1336780,Is the ground made of rubber red or gray?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground made of rubber red or gray?"")"
6220671,Who is holding the plate in the middle of the picture?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the plate in the middle of the picture?"")"
14569373,Is the girl to the left of the chair the cat is on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of the chair the cat is on top of?"")"
345617,Are there either shelves or knives in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelves"") or image_patch.exists(""knife"")) # Question assumes only one knife patch"
1693179,Are there black letters or numbers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_letter = image_patch.exists(""black letter"")
    is_black_number = image_patch.exists(""black number"")
    return bool_to_yesno(is_black_letter or is_black_number)"
3895788,What is the person with the headband holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person with the headband holding?"")"
1225698,Do you see any boats in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
14347118,What is the meat on top of the crust that looks brown called?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the meat on top of the crust that looks brown called?"")"
1260665,Are there either cucumbers or sandwiches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cucumber"") or image_patch.exists(""sandwich""))"
866643,Is the picture showing a beach?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the picture showing a beach?"")) # query the image directly"
6473619,What's the giraffe in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the giraffe in front of?"")"
19937990,Is the necktie blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the necktie blue?"")"
3122075,What does the horse stand in?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the horse stand in?"")"
8510356,What kind of furniture is to the right of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the girl?"")"
1834713,Which side is the bicycle on?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""Which side is the bicycle on?"")
    if bicycle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1105437,What's the food on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the food on?"")"
16812930,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
9589738,What are the red pieces of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the red pieces of furniture?"")"
13443529,Is there any umbrella that is pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    for umbrella_patch in umbrella_patches:
        if umbrella_patch.verify_property(""umbrella"", ""pink""):
            return ""yes""
    return ""no"""
7528410,Which kind of device is the cat looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the cat looking at?"")"
5406187,On which side is the green curtain?," # left or right
    image_patch = ImagePatch(image)
    green_curtain_patches = image_patch.find(""green curtain"")
    # Question assumes only one green curtain patch
    if len(green_curtain_patches) == 0:
        # If no green curtain is found, query the image directly
        return image_patch.simple_query(""On which side is the green curtain?"")
    green_curtain_patch = green_curtain_patches[0]
    horizontal_center = green_curtain_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4480309,Is the man in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the bottom part or in the top of the image?"")
    man_patch = man_patches[0]
    if man_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
19381569,"Where in the picture is the fence, in the top or in the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the fence, in the top or in the bottom?"")"
1189990,The frisbee is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The frisbee is where?"")"
11182275,Is the orange carrot in the top part or in the bottom of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange carrot in the top part or in the bottom of the image?"")"
349179,"What color is the outfit, pink or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the outfit, pink or black?"")"
6324093,What type of furniture is to the left of the salt shaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the left of the salt shaker?"")"
7882274,Are there any forks in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fork""))"
2718752,What is the animal that is dirty called?," # dirty is a property of the animal
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""What is the animal that is dirty called?"")
    return animal_patches[0].simple_query(""What is the animal that is dirty called?"") # crop would include the dirt so keep it in the query"
13683045,Is the sky white or blue?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky white or blue?"")"
8821487,The guy to the right of the girl is holding what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The guy to the right of the girl is holding what?"")"
399351,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
19718603,What is the train on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the train on?"")"
7786114,On which side is the large clock?," # left or right
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""On which side is the large clock?"")
    if clock_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3302818,Are there any statues or fences in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""statue"") or image_patch.exists(""fence""))"
6400893,What vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is it?"")"
6887243,Are there remote controls or keyboards that are not gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_remote_control = image_patch.exists(""remote control"")
    is_keyboard = image_patch.exists(""keyboard"")
    is_gray_remote_control = image_patch.exists(""remote control"") and image_patch.find(""remote control"")[0].verify_property(""remote control"", ""gray"")
    is_gray_keyboard = image_patch.exists(""keyboard"") and image_patch.find(""keyboard"")[0].verify_property(""keyboard"", ""gray"")
    return bool_to_yesno(is_remote_control or is_keyboard) and not (is_gray_remote_control or is_gray_keyboard)"
17229402,What color is the suit?," # returns the color of the suit
    image_patch = ImagePatch(image)
    suit_patches = image_patch.find(""suit"")
    # Question assumes only one suit patch
    if len(suit_patches) == 0:
        # If no suit is found, query the image directly
        return image_patch.simple_query(""What color is the suit?"")
    return suit_patches[0].simple_query(""What color is the suit?"") # crop would include the suit so keep it in the query"
191007651,What's in front of the saucer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's in front of the saucer?"")"
13825992,What device is to the right of the DVD player?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the DVD player?"")"
9856068,Are there snowboards above the white snow?," # snowboards are above the white snow
    image_patch = ImagePatch(image)
    is_snowboard = image_patch.exists(""snowboard"")
    is_white_snow = image_patch.exists(""white snow"")
    return bool_to_yesno(is_snowboard and is_white_snow)"
12697085,Is the bird in the top part or in the bottom?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bird in the top part or in the bottom?"")"
2566244,What are the flowers in?," # container
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""What are the flowers in?"")
    return flower_patches[0].simple_query(""What are the flowers in?"") # crop would include the container so keep it in the query"
2798615,What kind of furniture is to the left of the carriage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the carriage?"")"
1161467,What is in the jar?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the jar?"")"
5897613,Are there men to the right of the fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""fork"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
61057195,Is this a zebra or a cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""zebra"", ""cow""])"
1924269,What is on the sofa to the right of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sofa to the right of the table?"")"
10788492,Who is in front of the surfboards that are in front of the palm?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the surfboards that are in front of the palm?"")"
2671017,Is the lamp on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Is the lamp on the left side?"")
    return bool_to_yesno(lamp_patches[0].horizontal_center < image_patch.horizontal_center)"
8237324,Is the wrist band blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wrist band blue?"")"
6826454,Do you see a bench there that is not white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bench there that is not white?"")"
6532461,Do you see a brown chair or plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a brown chair or plate?"")"
10596308,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
724689,On which side is the ski?," # left or right
    image_patch = ImagePatch(image)
    ski_patches = image_patch.find(""ski"")
    # Question assumes only one ski patch
    if len(ski_patches) == 0:
        # If no ski is found, query the image directly
        return image_patch.simple_query(""On which side is the ski?"")
    if ski_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15989921,Do you see a helmet or a fence in the image?," # helmet or fence
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_helmet or is_fence)"
3681549,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
12781977,Are the denim shorts short and gray?," # returns yes or no
    image_patch = ImagePatch(image)
    denim_shorts_patches = image_patch.find(""denim shorts"")
    # Question assumes only one denim shorts patch
    if len(denim_shorts_patches) == 0:
        # If no denim shorts are found, query the image directly
        return image_patch.simple_query(""Are the denim shorts short and gray?"")
    denim_shorts_patch = denim_shorts_patches[0]
    is_short = denim_shorts_patch.verify_property(""denim shorts"", ""short"")
    is_gray = denim_shorts_patch.verify_property(""denim shorts"", ""gray"")
    return bool_to_yesno(is_short and is_gray)"
968365,What color is the vase?," # returns the color of the vase
    image_patch = ImagePatch(image)
    vase_patches = image_patch.find(""vase"")
    # Question assumes only one vase patch
    if len(vase_patches) == 0:
        # If no vase is found, query the image directly
        return image_patch.simple_query(""What color is the vase?"")
    return vase_patches[0].simple_query(""What color is the vase?"") # crop would include the vase so keep it in the query"
14930137,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
4334004,Is the food to the right or to the left of the giraffe the wall is next to?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the food to the right or to the left of the giraffe the wall is next to?"")"
7728106,"Which type of furniture is this, a couch or a coffee table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of furniture is this, a couch or a coffee table?"")"
9943386,Is the man to the right of an umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of an umbrella?"")"
5311770,Which kind of animal is on the feeder?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the feeder?"")"
556173,What is in front of the people near the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the people near the building?"")"
7600085,Are there either pizza boxes or faucets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pizza_box = image_patch.exists(""pizza box"")
    is_faucet = image_patch.exists(""faucet"")
    return bool_to_yesno(is_pizza_box or is_faucet)"
19696327,What are the fruits that have the same color as the trees called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits that have the same color as the trees called?"")"
10428402,The box is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The box is on what?"")"
17765693,Is the green food to the right of the ripe fruits?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green food to the right of the ripe fruits?"")"
10325569,Do the dog and the collar have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Do the dog and the collar have a different colors?"")
    dog_color = dog_patches[0].simple_query(""What color is the dog?"")
    collar_patches = image_patch.find(""collar"")
    # Question assumes only one collar patch
    if len(collar_patches) == 0:
        return ""no""
    collar_color = collar_patches[0].simple_query(""What color is the collar?"")
    return bool_to_yesno(dog_color != collar_color)"
141003919,What vehicle is parked next to the ambulance?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is parked next to the ambulance?"")"
950914,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
3270247,What's on the rock?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the rock?"")"
13743747,What is the man walking with?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man walking with?"")"
833909,Is the trailer to the right of a horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the trailer to the right of a horse?"")"
14389464,Who is in the grass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the grass?"")"
12454924,Is the policeman to the left of the horse that the person is riding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the policeman to the left of the horse that the person is riding?"")"
12614533,Who wears the wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the wetsuit?"")"
12846047,What do both the plate and the liquid have in common?," # liquid is a common object
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    liquid_patches = image_patch.find(""liquid"")
    # Question assumes only one plate and one liquid patch
    if len(plate_patches) == 0 or len(liquid_patches) == 0:
        # If no plate or liquid is found, query the image directly
        return image_patch.simple_query(""What do both the plate and the liquid have in common?"")
    plate_patch = plate_patches[0]
    liquid_patch = liquid_patches[0]
    common_properties = plate_patch.verify_property(""plate"", ""color"") and liquid_patch.verify_property(""liquid"", ""color"")
    if common_properties:
        return plate_patch.simple_query(""What color do the plate and the liquid have in common?"")
    return plate_patch.simple_query(""What do both the plate and the liquid have in common?"") # crop would include the liquid so keep it in the query"
1491020,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
4937775,Is this image showing the beach?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this image showing the beach?"")"
17707808,What animal is in the cage?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the cage?"")"
11881445,Is the black bag to the left of the red car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the left of the red car?"")"
2605168,Are there either white tablecloths or spoons?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_tablecloth = image_patch.exists(""white tablecloth"")
    is_spoon = image_patch.exists(""spoon"")
    return bool_to_yesno(is_white_tablecloth or is_spoon)"
9596824,What is the bird on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bird on?"")"
18981244,How do you think is the gray clothing item called?," # gray clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""How do you think is the gray clothing item called?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""coat"", ""jacket"", ""sweater"", ""dress"", ""hat"", ""scarf"", ""gloves"", ""socks"", ""shoes"", ""shirt"", ""pants"", ""skirt"", ""tunic"", ""vest"", ""cape"", ""mask"", ""boots"", ""gown"", ""capelet"", ""apron"", ""hood"", ""mittens"", ""slippers"", ""tights"", ""underwear"", ""jumpsuit"", ""overalls"", ""robe"", ""hijab"", ""headband"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""bandana"", ""bandit"", ""band"
17924828,Do you see any black sandals or boots?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black sandals"") or image_patch.exists(""black boots""))"
1866949,What is the man to the right of the woman sitting in?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the woman sitting in?"")"
4332008,Is the picture different in color than the pillow?," # Pillow is a Python library for image processing
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the picture different in color than the pillow?"")
    pillow_patch = pillow_patches[0]
    return bool_to_yesno(image_patch.simple_query(""Is the picture different in color than the pillow?"") != pillow_patch.simple_query(""What is the color of the pillow?""))"
365446,On which side of the photo is the cart?," # left or right
    image_patch = ImagePatch(image)
    cart_patches = image_patch.find(""cart"")
    # Question assumes only one cart patch
    if len(cart_patches) == 0:
        # If no cart is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the cart?"")
    if cart_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11034867,What's on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the cake?"")"
775246,Who is wearing gloves?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing gloves?"")"
11124715,Does the device to the left of the mouse look white and thin?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device to the left of the mouse look white and thin?"")"
647661,What is the shelf made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shelf made of?"")"
14660244,What kind of furniture is not pink?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is not pink?"")"
1024891,Is the shelf in the bottom part or in the top of the image?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf in the bottom part or in the top of the image?"")"
12569561,Which color is the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the door?"")"
13933901,How large is the wood countertop?," # returns a string
    image_patch = ImagePatch(image)
    wood_patches = image_patch.find(""wood"")
    # Question assumes only one wood patch
    if len(wood_patches) == 0:
        # If no wood is found, query the image directly
        return image_patch.simple_query(""How large is the wood countertop?"")
    return wood_patches[0].simple_query(""How large is the wood countertop?"") # crop would include the countertop so keep it in the query"
182657,Is the tan table on the carpet?," # carpet is not a property of the table
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""tan table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Is the tan table on the carpet?"")
    return bool_to_yesno(table_patches[0].verify_property(""tan table"", ""on carpet""))"
18369679,What is the person to the left of the bench wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the bench wearing?"")"
3230391,Who is in the boat on the right side?," # contains a relation (in the boat, on the right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in the boat on the right side?"")"
11877129,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14716932,Are there any blankets to the right of the bag on the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any blankets to the right of the bag on the chair?"")"
1585580,Which side of the image is the bell on?," # left or right
    image_patch = ImagePatch(image)
    bell_patches = image_patch.find(""bell"")
    # Question assumes only one bell patch
    if len(bell_patches) == 0:
        # If no bell is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the bell on?"")
    if bell_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5260159,Is the woman on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the left or on the right?"")"
8380495,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
10556236,The leaves have which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The leaves have which color?"")"
9804431,Is the pillow on the right of the photo?," # contains a relation (on the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow on the right of the photo?"")"
9261276,Who is adjusting the black tie?," # contains a relation (adjusting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is adjusting the black tie?"")"
10589004,Is the knife in the top or in the bottom part of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the top or in the bottom part of the picture?"")"
11896932,The shirt he is wearing is what color?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt he is wearing is what color?"")"
14875828,Is the color of the jersey the same as that of the sign?," # jersey and sign
    image_patch = ImagePatch(image)
    jersey_patches = image_patch.find(""jersey"")
    # Question assumes only one jersey patch
    if len(jersey_patches) == 0:
        # If no jersey is found, query the image directly
        return image_patch.simple_query(""Is the color of the jersey the same as that of the sign?"")
    jersey_color = jersey_patches[0].simple_query(""What is the color of the jersey?"")
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch.simple_query(""Is the color of the jersey the same as that of the sign?"")
    sign_color = sign_patches[0].simple_query(""What is the color of the sign?"")
    return bool_to_yesno(jersey_color == sign_color)"
8465362,Does the device on top of the desk have black color and long length?," # returns yes or no
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Does the device on top of the desk have black color and long length?"")
    device_patch = device_patches[0]
    if device_patch.horizontal_center < image_patch.horizontal_center:
        return ""no""
    return bool_to_yesno(device_patch.verify_property(""device"", ""black"") and device_patch.verify_property(""device"", ""long""))"
680014,Does the door look large and closed?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Does the door look large and closed?"")
    return bool_to_yesno(door_patches[0].verify_property(""door"", ""large"") and door_patches[0].verify_property(""door"", ""closed""))"
15206069,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
18757478,Is the woman to the left or to the right of the girl that is carrying a purse?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the girl that is carrying a purse?"")"
14911544,On which side of the image is the bench?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bench?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8890283,What is the dock made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dock made of?"")"
16658876,Which color is the boy shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Which color is the boy shirt?"")
    boy_patch = boy_patches[0]
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return image_patch.simple_query(""Which color is the boy shirt?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""Which color is the shirt?"") # crop would include the shirt so keep it in the query"
19169732,Which kind of clothing is tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is tan?"")"
8706962,"Which type of clothing is white, the trousers or the shorts?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is white, the trousers or the shorts?"")"
1762101,Does the smoke look black?," # smoke is a special case
    image_patch = ImagePatch(image)
    smoke_patches = image_patch.find(""smoke"")
    # Question assumes only one smoke patch
    if len(smoke_patches) == 0:
        # If no smoke is found, query the image directly
        return image_patch.simple_query(""Does the smoke look black?"")
    return bool_to_yesno(smoke_patches[0].verify_property(""smoke"", ""black""))"
10298977,What vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is it?"")"
550811,Is the stop sign that looks octagonal red or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stop sign that looks octagonal red or white?"")"
6971234,Is the color of the celery different than that of the paper?," # celery and paper
    image_patch = ImagePatch(image)
    celery_patches = image_patch.find(""celery"")
    # Question assumes only one celery patch
    if len(celery_patches) == 0:
        # If no celery is found, query the image directly
        return image_patch.simple_query(""Is the color of the celery different than that of the paper?"")
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        return ""no""
    return bool_to_yesno(celery_patches[0].verify_property(""celery"", ""color"") != paper_patches[0].verify_property(""paper"", ""color""))"
1545207,Where is the street light?," # returns the location of the street light
    image_patch = ImagePatch(image)
    street_light_patches = image_patch.find(""street light"")
    # Question assumes only one street light patch
    if len(street_light_patches) == 0:
        # If no street light is found, query the image directly
        return image_patch.simple_query(""Where is the street light?"")
    return street_light_patches[0].simple_query(""Where is the street light?"")"
3453754,What animal is in front of the fence made of metal?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the fence made of metal?"")"
19760833,What is the item of furniture to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the right of the chair?"")"
15478862,"Which side is the pillow on, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the pillow on, the left or the right?"")"
17120386,Are there any cats or keyboards that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_keyboard = image_patch.exists(""keyboard"")
    return bool_to_yesno(is_cat or is_keyboard)"
91052119,Is the house to the right or to the left of the man that wears a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house to the right or to the left of the man that wears a shirt?"")"
10245118,Is the umbrella to the right or to the left of the car on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the right or to the left of the car on the right side?"")"
108077,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
8376093,Is the man to the left of the soap dispenser reflected in a cabinet?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the soap dispenser reflected in a cabinet?"")"
1518683,Is the man to the right or to the left of the helmet that is to the left of the umpire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the helmet that is to the left of the umpire?"")"
14452465,What do you think is the color of the chair?," # returns the color of the chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the chair?"")
    return chair_patches[0].simple_query(""What do you think is the color of the chair?"") # crop would include the chair so keep it in the query"
612275,Are there batters at the ball to the right of the helmet?," # contains a relation (at the ball, to the right of the helmet), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there batters at the ball to the right of the helmet?"")"
9774309,Who wears shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears shorts?"")"
19438807,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
4305348,Is the jar made of the same material as the dish?," # assumes only one jar and one dish
    image_patch = ImagePatch(image)
    jar_patches = image_patch.find(""jar"")
    dish_patches = image_patch.find(""dish"")
    if len(jar_patches) == 0 or len(dish_patches) == 0:
        return ""no""
    jar_patch = jar_patches[0]
    dish_patch = dish_patches[0]
    return bool_to_yesno(jar_patch.verify_property(""jar"", ""material"") == dish_patch.verify_property(""dish"", ""material""))"
10300234,Which side of the picture is the camera on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture is the camera on?"")"
8331579,Are there any surfboards or horses in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_horse = image_patch.exists(""horse"")
    return bool_to_yesno(is_surfboard or is_horse)"
2670930,Is the curtain to the right of a blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain to the right of a blanket?"")"
114846,What's the vehicle approaching?," # contains a relation (approaching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the vehicle approaching?"")"
1307867,What color is the cap?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cap?"")"
15514361,Is the clock on top of the white desk?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock on top of the white desk?"")"
1392427,Are these animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different species?"")"
7656363,What is on the pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pole?"")"
5621041,Do you see whisks or spatulas that are made out of metal?," # contains a relation (made out of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see whisks or spatulas that are made out of metal?"")"
12507723,Do you see either any doors or cabinets that are white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_cabinet = image_patch.exists(""cabinet"")
    is_white = image_patch.exists(""white"")
    return bool_to_yesno(is_door or is_cabinet or is_white)"
5392713,Does the dishwasher in the kitchen look white?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the dishwasher in the kitchen look white?"")"
1692960,Is the dog on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog on the right side of the picture?"")"
15461258,How tall is the bookcase to the right of the pillow?," # returns a string
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""How tall is the bookcase to the right of the pillow?"")
    pillow_patch = pillow_patches[0]
    bookcase_patches = image_patch.find(""bookcase"")
    # Question assumes only one bookcase patch
    if len(bookcase_patches) == 0:
        return image_patch.simple_query(""How tall is the bookcase to the right of the pillow?"")
    bookcase_patch = bookcase_patches[0]
    if bookcase_patch.horizontal_center > pillow_patch.horizontal_center:
        return bookcase_patch.simple_query(""How tall is the bookcase to the right of the pillow?"")
    return bookcase_patch.simple_query(""How tall is the bookcase to the right of the pillow?"")"
8997896,Is the pillow on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Is the pillow on the left side?"")
    pillow_patch = pillow_patches[0]
    if pillow_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
4151224,Who is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a glove?"")"
2328727,What is located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the table?"")"
3384797,Is the sweater red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sweater red?"")"
2604488,Is the box different in color than the dress?," # contains a relation (different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box different in color than the dress?"")"
181040245,What vehicle is to the right of the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the truck?"")"
81016447,Who is wearing the uniform?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the uniform?"")"
5980707,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
7431152,In which part of the picture is the man?," # horizontal center
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7174870,What are the scissors on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the scissors on?"")"
1003588,How is the animal behind the frisbee called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal behind the frisbee called?"")"
1663224,What are the carrots on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the carrots on?"")"
3811614,What is on the plate to the left of the cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate to the left of the cup?"")"
13843456,Is the green couch to the left or to the right of her?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green couch to the left or to the right of her?"")"
1718387,What animal is in the short grass?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the short grass?"")"
13658252,Are there any fences to the left of the little boy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.find(""little boy"")[0].horizontal_center > image_patch.horizontal_center)"
9301437,Are there any vases behind the dry leaf?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""vase"") and image_patch.exists(""dry leaf"")) # assumes only one dry leaf patch"
11610250,Is the man to the right of the helmet wearing a tie?," # helmet is a type of headgear
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man to the right of the helmet wearing a tie?"")
    man_patch = man_patches[0]
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        return ""no""
    helmet_patch = helmet_patches[0]
    if helmet_patch.horizontal_center < man_patch.horizontal_center:
        return bool_to_yesno(man_patch.verify_property(""man"", ""tie""))
    return ""no"""
17634520,What's the grass on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the grass on?"")"
3917778,On which side of the picture is the bicycle?," # left or right
    image_patch = ImagePatch(image)
    bicycle_patches = image_patch.find(""bicycle"")
    # Question assumes only one bicycle patch
    if len(bicycle_patches) == 0:
        # If no bicycle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bicycle?"")
    return ""left"" if bicycle_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
18876636,Which kind of vehicle is driving on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is driving on the street?"")"
3201824,Are there any boys to the left of the person in the center of the image?," # contains a relation (left, right, center, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy"") and image_patch.simple_query(""Is the boy to the left of the person in the center of the image?"") == ""yes"")"
11335064,What is the device to the left of the device on the right side?," # assumes only one device on the right
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch on the right
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What is the device to the left of the device on the right side?"")
    rightmost_device = max(device_patches, key=lambda device: device.horizontal_center)
    for device in device_patches:
        if device.horizontal_center < rightmost_device.horizontal_center:
            return device.simple_query(""What is the device to the left of the device on the right side?"")
    return rightmost_device.simple_query(""What is the device to the left of the device on the right side?"")"
15806797,Are there trains to the right of the lady that is wearing eyeglasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there trains to the right of the lady that is wearing eyeglasses?"")"
14754608,Do the flags have a different color than the gloves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the flags have a different color than the gloves?"")"
12394234,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2563115,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17440855,Where are the bushes?," # returns the location of the bushes
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where are the bushes?"")"
16348381,Are there both pillow and a can in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pillow = image_patch.exists(""pillow"")
    is_can = image_patch.exists(""can"")
    return bool_to_yesno(is_pillow and is_can)"
15940763,Was this picture taken at a village or in a city?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was this picture taken at a village or in a city?"")"
5156833,Is the sauce above the fish?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sauce above the fish?"")"
5603471,Is the raspberry red or black?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the raspberry red or black?"")"
5817187,The dog is inside what?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The dog is inside what?"")"
13152323,Is the bag to the right of a knife?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the right of a knife?"")"
15850244,What type of device is to the left of the lady that is wearing a belt?," # contains a relation (left of, wearing a belt, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the left of the lady that is wearing a belt?"")"
19679623,Is the person to the left of the box wearing a coat?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the box wearing a coat?"")"
1170619,Is the motorcycle on the right side or on the left?," # contains a relation (right, left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the motorcycle on the right side or on the left?"")"
11952432,What type of vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is on the street?"")"
14561232,What is the man in the air wearing?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in the air wearing?"")"
16511243,What animal is to the left of the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the couch?"")"
18305625,What vehicle is the same color as the sky?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the same color as the sky?"")"
9390001,What is the device to the left of the broccoli the TV is to the right of?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the broccoli the TV is to the right of?"")"
9562953,What is common to the sheet and the canopy?," # assumes only one sheet and one canopy
    image_patch = ImagePatch(image)
    sheet_patches = image_patch.find(""sheet"")
    canopy_patches = image_patch.find(""canopy"")
    # Question assumes only one sheet and one canopy patch
    if len(sheet_patches) == 0 or len(canopy_patches) == 0:
        # If no sheet or canopy is found, query the image directly
        return image_patch.simple_query(""What is common to the sheet and the canopy?"")
    sheet_patch = sheet_patches[0]
    canopy_patch = canopy_patches[0]
    common_properties = set(sheet_patch.simple_query(""What properties does the sheet have?"").split("", "")) & set(canopy_patch.simple_query(""What properties does the canopy have?"").split("", ""))
    return common_properties[0]"
4159428,On which side of the photo is the bench?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the bench?"")
    if bench_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17359673,Who is touching the catcher?," # contains a relation (touching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is touching the catcher?"")"
1243921,Do the goggles look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""goggles"", ""green""))"
11288817,Is the laptop on a bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop on a bed?"")"
11549559,What do both the candle and the bed sheet have in common?," # returns a string
    image_patch = ImagePatch(image)
    candle_patches = image_patch.find(""candle"")
    bed_sheet_patches = image_patch.find(""bed sheet"")
    # Question assumes only one candle patch and one bed sheet patch
    if len(candle_patches) == 0 or len(bed_sheet_patches) == 0:
        # If no candle or bed sheet is found, query the image directly
        return image_patch.simple_query(""What do both the candle and the bed sheet have in common?"")
    candle_patch = candle_patches[0]
    bed_sheet_patch = bed_sheet_patches[0]
    common_properties = set(candle_patch.simple_query(""What properties does the candle have?"").split("", "")) # split by comma and space
    common_properties.update(bed_sheet_patch.simple_query(""What properties does the bed sheet have?"").split("", "")) # split by comma and space
    return common_properties.pop() # returns the first property in the set"
17318884,What color are the flowers of the hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the flowers of the hat?"")"
10507442,Of which color are the socks the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of which color are the socks the man is wearing?"")"
7386256,What color is the nose?," # returns the color of the nose
    image_patch = ImagePatch(image)
    nose_patches = image_patch.find(""nose"")
    # Question assumes only one nose patch
    if len(nose_patches) == 0:
        # If no nose is found, query the image directly
        return image_patch.simple_query(""What color is the nose?"")
    return nose_patches[0].simple_query(""What color is the nose?"") # crop would include the nose so keep it in the query"
10609664,Are there towels in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel""))"
6628228,Does the open umbrella to the left of the other umbrella look pink?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the open umbrella to the left of the other umbrella look pink?"")"
2781648,Is the ground green or brown?," # ground is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground green or brown?"")"
4608395,Do the shoes look black and small?," # returns yes or no
    image_patch = ImagePatch(image)
    shoe_patches = image_patch.find(""shoes"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        # If no shoes are found, query the image directly
        return image_patch.simple_query(""Do the shoes look black and small?"")
    shoe_patch = shoe_patches[0]
    return bool_to_yesno(shoe_patch.verify_property(""shoes"", ""black"") and shoe_patch.verify_property(""shoes"", ""small""))"
4456631,Is the device near the vase small and black?," # device is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the device near the vase small and black?"")"
7754490,Is the screen on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen on the left side of the image?"")"
8418716,Is the ground sitting?," # ground is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ground sitting?"")"
354972,Is the girl to the left or to the right of the person that is wearing a jacket?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left or to the right of the person that is wearing a jacket?"")"
7703958,Is the appliance to the right of the bag both black and metallic?," # returns yes or no
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Is the appliance to the right of the bag both black and metallic?"")
    appliance_patch = appliance_patches[0]
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Is the appliance to the right of the bag both black and metallic?"")
    bag_patch = bag_patches[0]
    is_black = appliance_patch.verify_property(""appliance"", ""black"")
    is_metallic = appliance_patch.verify_property(""appliance"", ""metallic"")
    is_right = appliance_patch.horizontal_center > bag_patch.horizontal_center
    return bool_to_yesno(is_black and is_metallic and is_right)"
14266217,Which kind of furniture is to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the chair?"")"
14874182,Is the wood chair brown or white?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood chair brown or white?"")"
6194273,Do you see a door in the image that is yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a door in the image that is yellow?"")"
15219384,Is that man to the right of a girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that man to the right of a girl?"")"
12971748,Is the white van to the left or to the right of the person that is standing in the street?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white van to the left or to the right of the person that is standing in the street?"")"
10457860,What kind of device is to the left of the cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the cat?"")"
12513536,What vegetable is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on the shelf?"")"
3462383,Is he riding on a skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he riding on a skateboard?"")"
131018438,What are the vegetables on the onion pizza?," # onion is a type of vegetable
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vegetables on the onion pizza?"")"
1991384,Is the mirror to the left or to the right of the container the dresser is to the left of?," # mirror is to the right of the dresser
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Is the mirror to the left or to the right of the container the dresser is to the left of?"")
    for mirror_patch in mirror_patches:
        dresser_patches = image_patch.find(""dresser"")
        # Question assumes only one dresser patch
        if len(dresser_patches) == 0:
            # If no dresser is found, query the image directly
            return image_patch.simple_query(""Is the mirror to the left or to the right of the container the dresser is to the left of?"")
        for dresser_patch in dresser_patches:
            if mirror_patch.horizontal_center > dresser_patch.horizontal_center:
                return ""right""
    return ""left"""
13434714,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
5387662,Do you see either a bag or an umbrella there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") or image_patch.exists(""umbrella""))"
13172066,Does the fence look green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fence look green?"")"
17284749,What is this animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this animal called?"")"
9328763,Are there any donuts in this photograph that are not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    donut_patches = image_patch.find(""donut"")
    for donut_patch in donut_patches:
        if donut_patch.simple_query(""What color is the donut?"") != ""brown"":
            return ""yes""
    return ""no"""
1387094,Do you see a woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman""))"
13420094,Which kind of furniture is the sugar on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the sugar on?"")"
6282792,How is the watercraft that is in front of the gray building called?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the watercraft that is in front of the gray building called?"")"
6473802,Are the skis to the left of the mirror gray or orange?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the skis to the left of the mirror gray or orange?"")"
1524496,Do you see any men to the left of the plastic tablecloth?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the left of the plastic tablecloth?"")"
17190113,What's the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man doing?"")"
13966414,Is the man wearing boots?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man wearing boots?"")"
2739332,Is there a cabinet to the left of the fridge that looks black and silver?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cabinet to the left of the fridge that looks black and silver?"")"
17499447,Is this a cabinet or a lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a cabinet or a lamp?"")"
191036733,Which kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is blue?"")"
334657,Who is in front of the skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the skateboard?"")"
12848382,Is the person to the right of the vehicle wearing a glove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the vehicle wearing a glove?"")"
11188851,Is the rug to the right of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the rug to the right of a chair?"")"
9153784,What is on the fence?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the fence?"")"
654614,Where are the spectators sitting?," # assumes only one image patch
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where are the spectators sitting?"")"
18730796,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
2525496,What is in the glass that looks clear?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass that looks clear?"")"
12778142,What is the vegetable in the glass bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable in the glass bowl?"")"
131029649,What is he wearing?," # assumes one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is he wearing?"")
    return man_patches[0].simple_query(""What is he wearing?"")"
10540519,Is the bike to the right or to the left of the bicycle that is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bike to the right or to the left of the bicycle that is to the right of the man?"")"
7743207,What's the boy doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the boy doing?"")"
914056,Are there any containers or clocks in this image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_container = image_patch.exists(""container"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_container or is_clock)"
5977390,Is there a pillow near the sand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow near the sand?"")"
18756868,Is there a bookcase to the right of the silver bottles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a bookcase to the right of the silver bottles?"")"
14610317,Is the sweater the same color as the cap?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sweater the same color as the cap?"")"
6535089,Is the sky blue and clear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky blue and clear?"")"
10724427,Is the yellow taxi to the right of a SUV?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow taxi to the right of a SUV?"")"
18811970,Is the red car to the left or to the right of the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red car to the left or to the right of the bus?"")"
15687201,What is driving on the road?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is driving on the road?"")"
2609189,Is the bottle in the bottom part or in the top of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bottle in the bottom part or in the top of the image?"")"
13134190,What is in the sandwich?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the sandwich?"")"
1191019,Are there any red bikes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red bike"")) # crop would include the color so keep it in the query"
4344237,What is on the couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the couch?"")"
8789861,Does the hair have blond color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""hair"", ""blond""))"
11324817,Are there both a window and a door in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
61001695,What color is the jacket the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the jacket the man is wearing?"")"
11873516,What animal is she holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is she holding?"")"
13354403,Does the toilet look white and tall?," # returns yes or no
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Does the toilet look white and tall?"")
    return bool_to_yesno(toilet_patches[0].verify_property(""toilet"", ""white"") and toilet_patches[0].verify_property(""toilet"", ""tall""))"
2104655,Is the batter on the left?," # batter is a type of food
    image_patch = ImagePatch(image)
    batter_patches = image_patch.find(""batter"")
    # Question assumes only one batter patch
    if len(batter_patches) == 0:
        # If no batter is found, query the image directly
        return image_patch.simple_query(""Is the batter on the left?"")
    return bool_to_yesno(batter_patches[0].horizontal_center < image_patch.horizontal_center)"
13193036,Are there both trucks and cars in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_truck and is_car)"
17311174,What is the name of the vegetable to the left of the bag on the towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable to the left of the bag on the towel?"")"
9979655,What is in front of the medicine cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the medicine cabinet?"")"
13831221,Are there snowboards to the left of the skier?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""snowboard"") and image_patch.exists(""skier"") and image_patch.find(""snowboard"")[0].horizontal_center < image_patch.find(""skier"")[0].horizontal_center)"
2959216,Is there a white tie in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white tie in the picture?"")"
1414872,What is wearing a blouse?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing a blouse?"")"
11116534,Are the brown food in the top of the photo?," # brown food
    image_patch = ImagePatch(image)
    brown_food_patches = image_patch.find(""brown food"")
    # Question assumes only one brown food patch
    if len(brown_food_patches) == 0:
        # If no brown food is found, query the image directly
        return image_patch.simple_query(""Are the brown food in the top of the photo?"")
    for brown_food_patch in brown_food_patches:
        if brown_food_patch.vertical_center > image_patch.vertical_center:
            return ""yes""
    return ""no"""
14196294,Is the napkin on the left side?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin on the left side?"")"
9240185,Are there palm trees to the left of the animal in the center of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there palm trees to the left of the animal in the center of the image?"")"
3154942,Is the table cloth to the right or to the left of the plastic chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table cloth to the right or to the left of the plastic chair?"")"
1183146,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
1440152,On which side of the photo are the nuts?," # left or right
    image_patch = ImagePatch(image)
    nut_patches = image_patch.find(""nuts"")
    # Question assumes only one nut patch
    if len(nut_patches) == 0:
        # If no nut is found, query the image directly
        return image_patch.simple_query(""On which side of the photo are the nuts?"")
    return ""left"" if nut_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
2457590,What's the cup made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the cup made of?"")"
12808088,Is the mom wearing a backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mom wearing a backpack?"")"
18519928,Is the bowl in the top part or in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl in the top part or in the bottom of the photo?"")"
3839911,Are both the pizza oven and the wall the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    pizza_oven_patches = image_patch.find(""pizza oven"")
    wall_patches = image_patch.find(""wall"")
    if len(pizza_oven_patches) == 0 or len(wall_patches) == 0:
        return ""no""
    pizza_oven_color = pizza_oven_patches[0].simple_query(""What color is the pizza oven?"")
    wall_color = wall_patches[0].simple_query(""What color is the wall?"")
    return bool_to_yesno(pizza_oven_color == wall_color)"
191000847,Are there skis on the snow?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there skis on the snow?"")"
11633966,Is the telephone small and black?," # telephone is a common object
    image_patch = ImagePatch(image)
    telephone_patches = image_patch.find(""telephone"")
    # Question assumes only one telephone patch
    if len(telephone_patches) == 0:
        # If no telephone is found, query the image directly
        return image_patch.simple_query(""Is the telephone small and black?"")
    return bool_to_yesno(telephone_patches[0].verify_property(""telephone"", ""small"") and telephone_patches[0].verify_property(""telephone"", ""black""))"
17927857,What is on the pouch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pouch?"")"
1815699,Does the grass seem to be tall and brown?," # grass is a common object
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Does the grass seem to be tall and brown?"")
    return bool_to_yesno(grass_patches[0].verify_property(""grass"", ""tall"") and grass_patches[0].verify_property(""grass"", ""brown""))"
18559773,What is the apple on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the apple on?"")"
833703,The girl to the right of the car washes what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The girl to the right of the car washes what?"")"
8219190,Is the lamp to the left or to the right of the car that is to the left of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the left or to the right of the car that is to the left of the helmet?"")"
12675427,On which side of the image are the bottles?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the bottles?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5918819,In which part is the American flag?," # assumes only one flag
    image_patch = ImagePatch(image)
    flag_patches = image_patch.find(""American flag"")
    if len(flag_patches) == 0:
        return image_patch.simple_query(""In which part is the American flag?"")
    flag_patch = flag_patches[0]
    if flag_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
7342477,Which kind of furniture is behind the coffee table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is behind the coffee table?"")"
8389940,What is parked on the water?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is parked on the water?"")"
7904522,Which kind of clothing is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is not brown?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.simple_query(""Which kind of clothing is not brown?"") # crop would include the clothing so keep it in the query"
17957360,What kind of animal are the trees in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal are the trees in front of?"")"
971966,Are the shoes different in color than the gloves?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shoes different in color than the gloves?"")"
4572587,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
2190953,Are there either any tablecloths or plates that are purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tablecloth = image_patch.exists(""tablecloth"")
    is_plate = image_patch.exists(""plate"")
    is_purple = image_patch.exists(""purple"")
    return bool_to_yesno(is_tablecloth or is_plate or is_purple)"
10879416,Does the van look long?," # assumes only one van patch
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""Does the van look long?"")
    van_patch = van_patches[0]
    return bool_to_yesno(van_patch.width > 200) # assuming a van is long if it is wider than 200 pixels"
3903190,Who is wearing the coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the coat?"")"
10533260,What does the person to the left of the boy hold?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person to the left of the boy hold?"")"
8294581,Are the cars on the right side?," # contains a relation (on the right side of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the cars on the right side?"")) # crop would include the right side so keep it in the query"
12673208,Which kind of animal is running on the beach?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is running on the beach?"")"
13947744,What is on the red tray?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the red tray?"")"
19122725,Which kind of appliance is to the right of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of appliance is to the right of the table?"")"
31030458,Is there any cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet""))"
2349077,Is this a silver monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a silver monitor?"")"
8871059,Are the orange clouds behind the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the orange clouds behind the grass?"")"
13217265,Which kind of vegetable is on the left of the spoon?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is on the left of the spoon?"")"
18985972,Do you see cars to the left of the vehicle that is on the street?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cars to the left of the vehicle that is on the street?"")"
18301953,What is the girl below the window wearing?," # contains a relation (below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl below the window wearing?"")"
51069961,Is the tomato to the right of the crackers that are on top of the salad?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tomato to the right of the crackers that are on top of the salad?"")"
10687030,What is the piece of furniture on the carpet?," # carpet is a piece of furniture
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture on the carpet?"")"
51003748,What are the items of furniture in this picture called?," # returns a list of strings
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the items of furniture in this picture called?"")"
8315616,Do the mouse and the bucket have a different colors?," # mouse and bucket are assumed to be in the same image
    image_patch = ImagePatch(image)
    mouse_patches = image_patch.find(""mouse"")
    bucket_patches = image_patch.find(""bucket"")
    # Question assumes only one mouse and one bucket patch
    if len(mouse_patches) == 0 or len(bucket_patches) == 0:
        # If no mouse or bucket is found, query the image directly
        return image_patch.simple_query(""Do the mouse and the bucket have a different colors?"")
    mouse_color = mouse_patches[0].simple_query(""What is the color of the mouse?"")
    bucket_color = bucket_patches[0].simple_query(""What is the color of the bucket?"")
    return bool_to_yesno(mouse_color != bucket_color)"
10353926,What animal is in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the field?"")"
15955965,Is that sky both cloudy and white?," # contains a relation (and, or, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that sky both cloudy and white?"")"
1131169,What kind of fruit is to the right of the grape on the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is to the right of the grape on the bag?"")"
11460366,What is that cat inside of?," # contains a relation (inside of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that cat inside of?"")"
5361271,Who is on the bike?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bike?"")"
19941532,Is the bird in the top part of the photo?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bird in the top part of the photo?"")"
151033195,Which kind of furniture is to the right of the stove?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the right of the stove?"")"
7237029,Are the people on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the people on the right?"")) # contains a relation (on the right of), so ask directly"
16311186,Do you see any broccoli on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any broccoli on the floor?"")"
5505084,What is the chocolate on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chocolate on?"")"
8999809,Which side of the photo is the pasta on?," # left or right
    image_patch = ImagePatch(image)
    pasta_patches = image_patch.find(""pasta"")
    # Question assumes only one pasta patch
    if len(pasta_patches) == 0:
        # If no pasta is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the pasta on?"")
    if pasta_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19658767,Is this catcher wearing a uniform?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this catcher wearing a uniform?"")"
358104,Does the sky look blue and bright?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""blue"") and image_patch.verify_property(""sky"", ""bright""))"
9754033,Is this a desk or a mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a desk or a mirror?"")"
4231329,Is the fence to the left of a sheep?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence to the left of a sheep?"")"
6817638,What is he holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he holding?"")"
12939809,Is the calf of man in the top of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the calf of man in the top of the photo?"")"
10346121,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
138107,Is the zebra to the left or to the right of the animals in the grass?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra to the left or to the right of the animals in the grass?"")"
1951291,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
135165,Is the man on the right?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right?"")"
2414018,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18904012,Are there letters or bicycles in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_letter = image_patch.exists(""letters"")
    is_bicycle = image_patch.exists(""bicycle"")
    return bool_to_yesno(is_letter or is_bicycle)"
18892461,What is the item of furniture that is to the left of the bowl in the middle of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is to the left of the bowl in the middle of the picture?"")"
18297027,Is the picture above a fireplace?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture above a fireplace?"")"
5113052,What item of furniture is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is to the right of the chair?"")"
16166876,Are there plates to the left of the cookie the cart is to the right of?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there plates to the left of the cookie the cart is to the right of?"")"
18809469,"In which part is the train, the top or the bottom?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the train, the top or the bottom?"")"
19417384,Does that chair look wooden and purple?," # returns yes or no
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Does that chair look wooden and purple?"")
    return bool_to_yesno(chair_patches[0].verify_property(""chair"", ""wooden"") and chair_patches[0].verify_property(""chair"", ""purple""))"
19366154,What meat is to the right of the fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What meat is to the right of the fork?"")"
6169884,What kind of fruit is the woman posing with?," # contains a relation (posing with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is the woman posing with?"")"
6411742,Is the sign in front of the beans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sign in front of the beans?"")"
6101888,Is the girl that is standing wearing a bikini?," # contains a relation (standing, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl that is standing wearing a bikini?"")"
15514712,What device is on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the desk?"")"
3954652,Do you see both speakers and televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_speaker = image_patch.exists(""speaker"")
    is_tv = image_patch.exists(""television"")
    return bool_to_yesno(is_speaker and is_tv)"
195418,Which kind of furniture is the keyboard on?," # keyboard is on a table
    image_patch = ImagePatch(image)
    keyboard_patches = image_patch.find(""keyboard"")
    # Question assumes only one keyboard patch
    if len(keyboard_patches) == 0:
        # If no keyboard is found, query the image directly
        return image_patch.simple_query(""Which kind of furniture is the keyboard on?"")
    return keyboard_patches[0].simple_query(""Which kind of furniture is the keyboard on?"") # crop would include the keyboard so keep it in the query"
9604983,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
15951821,Are the railroad tracks dark brown?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""railroad tracks"", ""dark brown"")) # crop would include the tracks so keep it in the query"
581109,"Which part of the photo is the croissant in, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the photo is the croissant in, the top or the bottom?"")"
9689659,What is the vehicle to the right of the white fence called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the white fence called?"")"
13334018,Which side of the image is the toilet on?," # left or right
    image_patch = ImagePatch(image)
    toilet_patches = image_patch.find(""toilet"")
    # Question assumes only one toilet patch
    if len(toilet_patches) == 0:
        # If no toilet is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the toilet on?"")
    if toilet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14350087,"What animal is the girl on, a horse or an elephant?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the girl on, a horse or an elephant?"")"
18852807,What vegetable is to the left of the knife?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the knife?"")"
19815488,What animal is on the cart?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the cart?"")"
1013782,Who is holding the mobile phone in the bottom part of the picture?," # contains a relation (holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the mobile phone in the bottom part of the picture?"")"
934904,Is the person that is surfing wearing glasses?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is surfing wearing glasses?"")"
19876978,On which side is the van?," # left or right
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""On which side is the van?"")
    van_patch = van_patches[0]
    if van_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18173580,Is there a woman that is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman that is sitting?"")"
4556578,Do you see any curtains to the right of the pillows on the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any curtains to the right of the pillows on the couch?"")"
3875429,Are there either black gloves or hats in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_glove = image_patch.exists(""black glove"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_black_glove or is_hat)"
15482570,On which side of the image is the white refrigerator?," # left or right
    image_patch = ImagePatch(image)
    fridge_patches = image_patch.find(""fridge"")
    # Question assumes only one fridge patch
    if len(fridge_patches) == 0:
        # If no fridge is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the white refrigerator?"")
    fridge_patch = fridge_patches[0]
    if fridge_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13639503,Is the table green or brown?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table green or brown?"")"
1339420,On which side is the picture?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the picture?"")"
4988415,Is the powerline above a bus?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the powerline above a bus?"")"
11239415,Are there children to the left of the girl on the right side of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there children to the left of the girl on the right side of the photo?"")"
2880855,Is the table both square and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Is the table both square and brown?"")
    for table_patch in table_patches:
        is_square = table_patch.verify_property(""table"", ""square"")
        is_brown = table_patch.verify_property(""table"", ""brown"")
        return bool_to_yesno(is_square and is_brown)"
9956173,Does that bench look red?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that bench look red?"")"
7908587,Is the TV on the left?," # left of what?
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.find(""TV"")[0].horizontal_center < image_patch.horizontal_center)"
9416353,Is the green tree behind the house that looks tall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green tree behind the house that looks tall?"")"
915129,What do the lamp and the apple logo have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the lamp and the apple logo have in common?"")"
3578194,What do both the bench and the bus have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the bench and the bus have in common?"")"
15287942,Are there bicycles or dish soaps in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bicycle = image_patch.exists(""bicycle"")
    is_dish_soap = image_patch.exists(""dish soap"")
    return bool_to_yesno(is_bicycle or is_dish_soap)"
18766525,"Who are older, the man or the kids?"," # contains a relation (older than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who are older, the man or the kids?"")"
1437813,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
179519,What animal is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is brown?"")"
257793,Is the window round or square?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window round or square?"")"
15557657,Is the carriage to the left or to the right of the person that is walking on the road?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the carriage to the left or to the right of the person that is walking on the road?"")"
9287809,Does the device to the right of the bookshelf look white or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device to the right of the bookshelf look white or blue?"")"
19665872,Are there both an elephant and a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_elephant = image_patch.exists(""elephant"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_elephant and is_fence)"
10616541,In which part of the photo is the black lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the black lamp?"")"
18332506,What is the food in the bread the bowl is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food in the bread the bowl is to the right of?"")"
3116727,What place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is pictured?"")"
9110423,Is the man to the left of the white couch?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the white couch?"")"
5109026,Do you see any women that are standing?," # returns yes or no
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Do you see any women that are standing?"")
    for woman_patch in woman_patches:
        if woman_patch.verify_property(""woman"", ""standing""):
            return ""yes""
    return ""no"""
3456490,Which color do you think the purse on the left side is?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the purse on the left side is?"")"
9369256,Is the color of the pot different than the stove burner?," # returns yes or no
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Is the color of the pot different than the stove burner?"")
    pot_color = pot_patches[0].simple_query(""What is the color of the pot?"")
    stove_burner_patches = image_patch.find(""stove burner"")
    # Question assumes only one stove burner patch
    if len(stove_burner_patches) == 0:
        return ""no""
    for stove_burner_patch in stove_burner_patches:
        burner_color = stove_burner_patch.simple_query(""What is the color of the stove burner?"")
        return bool_to_yesno(pot_color != burner_color)"
12130568,Are there either any dogs or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_dog or is_fence)"
1537528,What color do you think the roasted turkey is?," # contains a relation (roasted), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the roasted turkey is?"")"
3821575,Which color is the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the umbrella?"")"
19127162,Is the van both white and antique?," # returns yes or no
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""Is the van both white and antique?"")
    van_patch = van_patches[0]
    is_white = van_patch.verify_property(""van"", ""white"")
    is_antique = van_patch.verify_property(""van"", ""antique"")
    return bool_to_yesno(is_white and is_antique)"
3132095,Does that cup look blue or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that cup look blue or brown?"")"
14798168,Is the man on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the left side?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
6638346,Do you see both benches and traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_bench and is_traffic_light)"
1628863,Is the young woman to the left or to the right of the bicycle that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young woman to the left or to the right of the bicycle that is on the right?"")"
7581137,What is that man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that man in front of?"")"
1868830,What is on the nightstand on the right of the image?," # contains a relation (right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the nightstand on the right of the image?"")"
15273902,Do you see a bench to the right of the boy that is not old?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bench to the right of the boy that is not old?"")"
8935276,Is there a skateboard or a helmet in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_skateboard = image_patch.exists(""skateboard"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_skateboard or is_helmet)"
71034142,Are there any mirrors on top of the floor made of wood?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mirror on top of floor made of wood"")) # crop would include the floor so keep it in the query"
14209053,What is the boy playing in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy playing in?"")"
3421487,The stop sign is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The stop sign is on what?"")"
4162079,What is the vehicle to the right of the vehicle in the middle?," # assumes only one vehicle in the middle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What is the vehicle to the right of the vehicle in the middle?"")
    middle_vehicle = vehicle_patches[0]
    right_vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(right_vehicle_patches) == 0:
        return image_patch.simple_query(""What is the vehicle to the right of the vehicle in the middle?"")
    right_vehicle = right_vehicle_patches[0]
    if right_vehicle.horizontal_center > middle_vehicle.horizontal_center:
        return right_vehicle.simple_query(""What is the vehicle to the right of the vehicle in the middle?"")
    return middle_vehicle.simple_query(""What is the vehicle to the right of the vehicle in the middle?"")"
19316763,Is the cabinet in the top?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet in the top?"")"
15468399,Is the small fruit to the left of the apple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small fruit to the left of the apple?"")"
6993691,What are the spices in?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""What are the spices in?"")
    container_patch = container_patches[0]
    return container_patch.simple_query(""What are the spices in?"")"
5201414,Are there any drawers in the kitchen near the doors?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""drawer"") and image_patch.exists(""kitchen"") and image_patch.exists(""door""))"
112212,Is the car to the left or to the right of the vehicle that is white?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car to the left or to the right of the vehicle that is white?"")"
11572725,Do you see any printer to the left of the couch?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any printer to the left of the couch?"")"
271331,What is the vehicle that is presented in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is presented in the picture?"")"
121045070,Is the chair to the right of the cat on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right of the cat on the left?"")"
9588994,Are there crates or wheelchairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_crates = image_patch.exists(""crates"")
    is_wheelchair = image_patch.exists(""wheelchair"")
    return bool_to_yesno(is_crates or is_wheelchair)"
1153263,Is the ball in the top part of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball in the top part of the photo?"")"
4207406,What is the name of the pieces of furniture to the right of the man that is holding the phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the pieces of furniture to the right of the man that is holding the phone?"")"
3476685,Is there any cup in the image that is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    for cup_patch in cup_patches:
        if cup_patch.simple_query(""Is the cup black?"") != ""yes"":
            return ""yes""
    return ""no"""
12667585,Is the cake different in color than the forest?," # forest is a general term, so query directly
    image_patch = ImagePatch(image)
    cake_patches = image_patch.find(""cake"")
    # Question assumes only one cake patch
    if len(cake_patches) == 0:
        # If no cake is found, query the image directly
        return image_patch.simple_query(""Is the cake different in color than the forest?"")
    return bool_to_yesno(cake_patches[0].verify_property(""cake"", ""different_color"") and cake_patches[0].verify_property(""cake"", ""forest_color"") != cake_patches[0].verify_property(""cake"", ""color"")) # crop would include the forest so keep it in the query"
5607715,Do you see any pies to the right of the meatballs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any pies to the right of the meatballs?"")"
1877859,Is that headband Nike and white?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that headband Nike and white?"")"
19621543,Do you see helmets or pictures there?," # helmet or picture
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_helmet or is_picture)"
812795,What is the piece of furniture that is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is on the wall?"")"
16118647,Is there any door that is not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    for door_patch in door_patches:
        if door_patch.simple_query(""Is the door red?"") == ""no"":
            return ""yes""
    return ""no"""
31061560,What is the cat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat on?"")"
13130182,Is the couple walking or sitting?," # contains a relation (walking or sitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couple walking or sitting?"")"
5192964,Is there a stuffed bear in this picture that is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a white stuffed bear in this picture?"") # crop would include the bear so keep it in the query"
10487566,Which side is the chair on?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which side is the chair on?"")
    if chair_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
71021599,Which kind of meat is brown?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is brown?"")"
171016596,What is the person by the pots doing?," # contains a relation (by, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person by the pots doing?"")"
3391052,Are there chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair""))"
113190,Is the man to the right or to the left of the car that looks blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the car that looks blue?"")"
16433753,Are there any eggs to the right of the bowl that is to the right of the napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any eggs to the right of the bowl that is to the right of the napkins?"")"
70476,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1598987,Is the knife to the right or to the left of the sandwich with the lettuce?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife to the right or to the left of the sandwich with the lettuce?"")"
2920094,Is the long bus to the right or to the left of the large bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long bus to the right or to the left of the large bag?"")"
18970773,How large is the wood fence?," # returns a string
    image_patch = ImagePatch(image)
    wood_fence_patches = image_patch.find(""wood fence"")
    # Question assumes only one wood_fence patch
    if len(wood_fence_patches) == 0:
        # If no wood_fence is found, query the image directly
        return image_patch.simple_query(""How large is the wood fence?"")
    return wood_fence_patches[0].simple_query(""How large is the wood fence?"") # crop would include the fence so keep it in the query"
988711,On which side of the image are the towels?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the towels?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7215061,Who is standing in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing in the water?"")"
14252138,Are there both a door and a window in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
13747262,Is the woman to the left or to the right of the truck on the road?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the truck on the road?"")"
18717917,What do you think is the color of the baby's hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the color of the baby's hair?"")"
15620112,Which kind of animal is the fence post behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the fence post behind of?"")"
14961097,How is the food that is not piled called?," # contains a relation (piled, not piled), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the food that is not piled called?"")"
5944183,Are there any frisbees or glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_frisbee = image_patch.exists(""frisbee"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_frisbee or is_glasses)"
18628415,Do you see both a bed and a mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bed"") and image_patch.exists(""mirror""))"
1515285,What is in front of the palm tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the palm tree?"")"
129044,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is white?"")"
4563713,What animal is watching the television?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is watching the television?"")"
654121,Do you see dogs or cats that are lying?," # contains a relation (lying), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_dog or is_cat)"
12922953,Is the tennis racket in the top?," # assumes only one tennis racket
    image_patch = ImagePatch(image)
    tennis_racket_patches = image_patch.find(""tennis racket"")
    if len(tennis_racket_patches) == 0:
        # If no tennis racket is found, query the image directly
        return image_patch.simple_query(""Is the tennis racket in the top?"")
    return bool_to_yesno(tennis_racket_patches[0].vertical_center > image_patch.vertical_center)"
4125874,Is the drawer on the right or on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drawer on the right or on the left of the photo?"")"
1456728,What is covered by the frosting?," # cake
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is covered by the frosting?"")"
6858354,Are there both women and men in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman and is_man)"
18807326,Is the plate to the left of the cat full or empty?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the left of the cat full or empty?"")"
15863993,Which kind of animal is the wall behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the wall behind of?"")"
4825754,Are there either fences or spray cans in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_spray_can = image_patch.exists(""spray can"")
    return bool_to_yesno(is_fence or is_spray_can)"
16966897,Is the gray car to the right of the man in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray car to the right of the man in the middle?"")"
9509182,What is the material of the door?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the material of the door?"")"
16504588,Is the pink meat under the cucumbers that are to the right of the computer?," # contains a relation (under, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pink meat under the cucumbers that are to the right of the computer?"")"
18286885,Are there both toys and napkins?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_toy = image_patch.exists(""toy"")
    is_napkin = image_patch.exists(""napkin"")
    return bool_to_yesno(is_toy and is_napkin)"
2332104,Is the cap different in color than the traffic signal?," # traffic signal is a different object than the cap
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch.simple_query(""Is the cap different in color than the traffic signal?"")
    cap_color = cap_patches[0].simple_query(""What color is the cap?"")
    traffic_signal_patches = image_patch.find(""traffic signal"")
    # Question assumes only one traffic signal patch
    if len(traffic_signal_patches) == 0:
        # If no traffic signal is found, query the image directly
        return image_patch.simple_query(""Is the cap different in color than the traffic signal?"")
    traffic_signal_color = traffic_signal_patches[0].simple_query(""What color is the traffic signal?"")
    return bool_to_yesno(cap_color != traffic_signal_color)"
17193005,Who holds the surfboard?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the surfboard?"")"
3846336,"Which kind of vehicle is this, a train or a truck?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is this, a train or a truck?"")"
13689344,Are the fence and the building made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the fence and the building made of the same material?"")"
15605001,Who wears a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a hat?"")"
91002312,Is there a truck in the street?," # contains a relation (in the street), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""truck in the street"")) # contains a relation (in the street), so ask directly"
2102388,"What kind of furniture is large, the couch or the coffee table?"," # contains a relation (large, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is large, the couch or the coffee table?"")"
334750,What kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the plate?"")"
2249529,Do you think the grass is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the grass is green?"")"
16831866,Is the cupcake to the left of a cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cupcake to the left of a cup?"")"
8487998,Who is skiing?," # contains a relation (skiing with, skiing at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing?"")"
16849911,"Where in the photograph is the rug, on the right or on the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the photograph is the rug, on the right or on the left?"")"
5648386,"What color is the animal that is to the left of the washing machine, cream colored or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the animal that is to the left of the washing machine, cream colored or black?"")"
12613287,Is this mug red or blue?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this mug red or blue?"")"
8674047,Does the girl shirt look checkered and white?," # shirt is a relation so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the girl shirt look checkered and white?"")"
10462336,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
17559112,Is the lamp to the right or to the left of the chair that looks black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the right or to the left of the chair that looks black?"")"
179882,The building near the shrub is surrounded by what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The building near the shrub is surrounded by what?"")"
1724975,Is the chair to the right of the other chair metallic and yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right of the other chair metallic and yellow?"")"
11774964,What is the animal that eats the fruit?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that eats the fruit?"")"
8167205,What type of furniture do you think is the vase on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture do you think is the vase on?"")"
12414355,On which side of the picture are the boxes?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the boxes?"")
    box_patch = box_patches[0]
    if box_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6986026,Are both the shower and the door made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are both the shower and the door made of the same material?"")) # crop would include the material so keep it in the query"
17971984,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
3505943,What is on the dog that is on the napkin?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dog that is on the napkin?"")"
5307712,Is the crate on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the crate on the right?"")"
17464028,What kind of vehicle has the same color as the door that is not closed?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle has the same color as the door that is not closed?"")"
1433608,Do you see both flags and boats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_boat = image_patch.exists(""boat"")
    return bool_to_yesno(is_flag and is_boat)"
15980448,Which side of the picture is the pot on?," # left or right
    image_patch = ImagePatch(image)
    pot_patches = image_patch.find(""pot"")
    # Question assumes only one pot patch
    if len(pot_patches) == 0:
        # If no pot is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the pot on?"")
    pot_patch = pot_patches[0]
    if pot_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
527835,Who is driving the bus?," # contains a relation (driving), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is driving the bus?"")"
1478441,Is the tower on the left of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower on the left of the photo?"")"
10992840,The wood cabinet is which color?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The wood cabinet is which color?"")"
2464130,Where is he?," # assumes one person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    if len(person_patches) == 0:
        return image_patch.simple_query(""Where is he?"")
    return person_patches[0].simple_query(""Where is he?"")"
482175,Does the shirt look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look blue?"")"
590918,Are there little cats or dogs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""little cat"")
    is_dog = image_patch.exists(""little dog"")
    return bool_to_yesno(is_cat or is_dog)"
18379074,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
16264801,What is the cooking utensil to the right of the chef on the left of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil to the right of the chef on the left of the photo?"")"
8505476,"On which side is the mirror, the right or the left?"," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""On which side is the mirror, the right or the left?"")
    mirror_patch = mirror_patches[0]
    if mirror_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
7888452,"Which color is the racket to the right of the woman, black or white?"," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the racket to the right of the woman, black or white?"")"
632712,"What type of vehicle is this, a truck or a train?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is this, a truck or a train?"")"
16843330,Who is talking?," # contains a relation (talking to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is talking?"")"
19236360,What kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is wooden?"")"
181033390,Are there umbrellas in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella""))"
1932316,"How does the window look, open or closed?"," # contains a relation (open or closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the window look, open or closed?"")"
356953,Who is sitting in the chair?," # contains a relation (sitting in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting in the chair?"")"
112745,What cooking utensil is to the left of the utensil that is to the left of the pan?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is to the left of the utensil that is to the left of the pan?"")"
329218,Which side is the bag on?," # left or right
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""Which side is the bag on?"")
    if bag_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8858130,Is the black skillet to the left of a wine bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black skillet to the left of a wine bottle?"")"
11902212,What is the cat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat on?"")"
12384523,What kind of device is to the left of the mannequin on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the mannequin on the right?"")"
6908853,Are there any silver laptops or DVD players?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_laptop = image_patch.exists(""laptop"")
    is_dvd_player = image_patch.exists(""DVD player"")
    return bool_to_yesno(is_laptop or is_dvd_player)"
4789377,What piece of furniture is white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is white?"")"
1730445,What place is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is this?"")"
3277014,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
16748005,Does the person that looks blond wear glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the person that looks blond wear glasses?"")"
1711896,What color is the umbrella in front of the water?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella in front of the water?"")"
960107,Is there either any bird or eagle in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bird"") or image_patch.exists(""eagle""))"
760219,Are there both a window and a door in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
11957407,What's the bus stop made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bus stop made of?"")"
13764825,What is the vegetable to the left of the doughnuts that are on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the doughnuts that are on the right of the picture?"")"
8531173,Do you think that garbage can is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think that garbage can is green?"")"
2367287,Who is wearing the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the cap?"")"
1553765,What color is the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bench?"")"
1320098,What kind of food is to the left of the pizza slice?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the left of the pizza slice?"")"
416546,Who is in front of the gray car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the gray car?"")"
2707634,The plastic bag is what color?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The plastic bag is what color?"")"
16780468,Are there radiators to the right of the computer desk in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""radiator"") and image_patch.find(""radiator"")[0].horizontal_center > image_patch.horizontal_center)"
12814767,Is the fence tall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence tall?"")"
9221356,Which kind of furniture is in front of the windows?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in front of the windows?"")"
8810518,What do the coat and the shoe have in common?," # returns a string
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""What do the coat and the shoe have in common?"")
    coat_patch = coat_patches[0]
    shoe_patches = image_patch.find(""shoe"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        return coat_patch.simple_query(""What do the coat and the shoe have in common?"")
    shoe_patch = shoe_patches[0]
    common_properties = coat_patch.verify_property(""coat"", ""color"") and shoe_patch.verify_property(""shoe"", ""color"")
    if common_properties:
        return coat_patch.simple_query(""What do the coat and the shoe have in common?"")
    return coat_patch.simple_query(""What do the coat and the shoe have in common?"")"
19729919,Is the bookshelf to the right of a notebook?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bookshelf to the right of a notebook?"")"
757584,What is the man in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in?"")"
16978353,Do the collar and the animal have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    collar_patches = image_patch.find(""collar"")
    # Question assumes only one collar patch
    if len(collar_patches) == 0:
        # If no collar is found, query the image directly
        return image_patch.simple_query(""Do the collar and the animal have the same color?"")
    collar_patch = collar_patches[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        return ""no""
    animal_patch = animal_patches[0]
    return bool_to_yesno(collar_patch.verify_property(""collar"", ""color"") == animal_patch.verify_property(""animal"", ""color""))"
13215269,What color is the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag?"")"
6254432,On which side of the photo is the drum?," # left or right
    image_patch = ImagePatch(image)
    drum_patches = image_patch.find(""drum"")
    # Question assumes only one drum patch
    if len(drum_patches) == 0:
        # If no drum is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the drum?"")
    drum_patch = drum_patches[0]
    horizontal_center = image_patch.horizontal_center
    if drum_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
5360171,Where is the train car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the train car?"")"
5744341,Are the shrubs behind an elephant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shrubs behind an elephant?"")"
10612232,Which color does the sky have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the sky have?"")"
17369744,"Where is it, a park or a beach?"," # contains a relation (in, on, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is it, a park or a beach?"")"
11609890,What color are the letters?," # returns a string
    image_patch = ImagePatch(image)
    letters_patches = image_patch.find(""letters"")
    # Question assumes only one letter patch
    if len(letters_patches) == 0:
        # If no letters are found, query the image directly
        return image_patch.simple_query(""What color are the letters?"")
    return letters_patches[0].simple_query(""What color are the letters?"")"
17909943,What are the vegetables in the bowl on the left side?," # contains a relation (on the left side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vegetables in the bowl on the left side?"")"
12565319,Does the man who to the right of the purse wear jeans?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man who to the right of the purse wear jeans?"")"
19762201,Are there scooters or mattresses in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_scooter = image_patch.exists(""scooter"")
    is_mattress = image_patch.exists(""mattress"")
    return bool_to_yesno(is_scooter or is_mattress)"
9826758,"What is this, a bed or a table?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a bed or a table?"")"
5889167,Do you see long trains or bridges?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see long trains or bridges?"")"
830632,Does that tail appear to be short and gray?," # assumes only one cat
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    if len(cat_patches) == 0:
        return image_patch.simple_query(""Does that tail appear to be short and gray?"")
    cat_patch = cat_patches[0]
    return bool_to_yesno(cat_patch.verify_property(""tail"", ""short"") and cat_patch.verify_property(""tail"", ""gray""))"
1196402,What is the item of furniture to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the chair?"")"
180538,Is the car in the top part of the image?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the top part of the image?"")"
11806743,What are the people that are to the left of the other people doing?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the people that are to the left of the other people doing?"")"
955984,"On which side is the faucet, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the faucet, the left or the right?"")"
16798070,Is the tent above the cooler?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tent above the cooler?"")"
1816816,Where is the man working?," # assumes only one man patch
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man working?"")
    man_patch = man_patches[0]
    return man_patch.simple_query(""Where is the man working?"") # crop would include the man working so keep it in the query"
8307115,On which side of the photo is the utensil?," # left or right
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""utensil"")
    # Question assumes only one utensil patch
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the utensil?"")
    if utensil_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11191008,Is the black bag to the left or to the right of the people that are waiting?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the left or to the right of the people that are waiting?"")"
17433021,Are there either any old men or women?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_old_man = image_patch.exists(""old man"")
    is_old_woman = image_patch.exists(""old woman"")
    return bool_to_yesno(is_old_man or is_old_woman)"
7553728,The boat near the pier has what color?," # contains a relation (near, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The boat near the pier has what color?"")"
16500783,Inside what's the drawing?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Inside what's the drawing?"")"
1129801,Is the crate made of the same material as the grill?," # assumes grill is in the image
    image_patch = ImagePatch(image)
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one crate patch
    if len(crate_patches) == 0:
        # If no crate is found, query the image directly
        return image_patch.simple_query(""Is the crate made of the same material as the grill?"")
    crate_patch = crate_patches[0]
    grill_patches = image_patch.find(""grill"")
    # Question assumes only one grill patch
    if len(grill_patches) == 0:
        return ""no""
    grill_patch = grill_patches[0]
    return bool_to_yesno(crate_patch.verify_property(""crate"", ""material"") == grill_patch.verify_property(""grill"", ""material""))"
2738205,Do you see any bowls to the right of the appliance in the top?," # appliance in the top
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Do you see any bowls to the right of the appliance in the top?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.vertical_center > image_patch.vertical_center:
        return ""no""
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        return ""no""
    for bowl_patch in bowl_patches:
        if bowl_patch.horizontal_center > appliance_patch.horizontal_center:
            return ""yes""
    return ""no"""
17428960,What's the boy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the boy wearing?"")"
14833579,Who is the tree in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the tree in front of?"")"
4583193,Does the man to the left of the hot dog wear a helmet?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the hot dog wear a helmet?"")"
19539202,Is the soup to the right or to the left of the brown bread?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soup to the right or to the left of the brown bread?"")"
5517768,What color is the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What color is the hat?"")
    return hat_patches[0].simple_query(""What color is the hat?"")"
16859375,Is the cabinet to the left of the appliance that is on the left side of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Is the cabinet to the left of the appliance that is on the left side of the image?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center < image_patch.horizontal_center:
        cabinet_patches = image_patch.find(""cabinet"")
        # Question assumes only one cabinet patch
        if len(cabinet_patches) == 0:
            return image_patch.simple_query(""Is the cabinet to the left of the appliance that is on the left side of the image?"")
        for cabinet_patch in cabinet_patches:
            if cabinet_patch.horizontal_center < appliance_patch.horizontal_center:
                return ""yes""
    return ""no"""
17707566,What is the child riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child riding?"")"
2389064,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
6356197,Is the can on the left side?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the can on the left side?"")"
1794569,Is the keyboard black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the keyboard black?"")"
689941,What is the vehicle that is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is on?"")"
19539057,Is there a fork in the small bowl?," # fork is in the bowl, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a fork in the small bowl?"")"
13960259,What kind of animal is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the bench?"")"
8846542,What is the woman that is to the left of the other woman doing?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman that is to the left of the other woman doing?"")"
19559917,Do you see either any black cell phones or televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_cell_phone = image_patch.exists(""black cell phone"")
    is_black_tlevision = image_patch.exists(""black television"")
    return bool_to_yesno(is_black_cell_phone or is_black_tlevision)"
19224023,Are there any trucks or vans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""truck"")
    is_van = image_patch.exists(""van"")
    return bool_to_yesno(is_truck or is_van)"
121035844,Does the sky look blue and clear?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""blue"") and image_patch.verify_property(""sky"", ""clear""))"
15567140,Is the onion green?," # onion is a vegetable
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    # Question assumes only one onion patch
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""Is the onion green?"")
    return bool_to_yesno(onion_patches[0].verify_property(""onion"", ""green""))"
741523,Is the fence on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left side or on the right?"")"
161870,What is the animal to the left of the man in the middle called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the man in the middle called?"")"
15336558,Do the soccer ball and the hat have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    soccer_ball_patches = image_patch.find(""soccer ball"")
    # Question assumes only one soccer ball patch
    if len(soccer_ball_patches) == 0:
        # If no soccer ball is found, query the image directly
        return image_patch.simple_query(""Do the soccer ball and the hat have a different colors?"")
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        return ""no""
    hat_patch = hat_patches[0]
    return bool_to_yesno(soccer_ball_patches[0].verify_property(""soccer ball"", ""color"") != hat_patch.verify_property(""hat"", ""color""))"
6259822,Do the house and the roof have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the house and the roof have a different colors?"")) # crop would include the roof so keep it in the query"
1866557,Are there any cowboys on the horse on the right?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any cowboys on the horse on the right?"")"
11531144,What do you think is in front of the ambulance on the right side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is in front of the ambulance on the right side?"")"
17763482,Is the person to the left of the van wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the van wearing a hat?"")"
1928159,Which color is the helmet?," # returns the color of the helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Which color is the helmet?"")
    return helmet_patches[0].simple_query(""Which color is the helmet?"")"
9865941,What is the girl to the right of the candle wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl to the right of the candle wearing?"")"
2424416,Are there any traffic lights or armors in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""traffic light"") or image_patch.exists(""armor"")) # or operator is used to check for either"
14935796,Do you see any pillows to the left of the lamp on the right of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any pillows to the left of the lamp on the right of the picture?"")"
14236713,What color does the cat on the right have?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the cat on the right have?"")"
31070674,Are there fences in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence"") and image_patch.exists(""tree""))"
13604076,He is sitting on what?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""He is sitting on what?"")"
15814892,What is the name of the large item of furniture in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the large item of furniture in this scene?"")"
18107766,Who is on the skateboard on the left of the photo?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the skateboard on the left of the photo?"")"
11100306,How tall is the green grass?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How tall is the green grass?"")"
1358011,"What is the door behind of, a dog or a cat?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the door behind of, a dog or a cat?"")"
325802,Does the woman hold the person that watches the animals?," # contains a relation (holding, watching, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the woman hold the person that watches the animals?"")"
11297531,Is the chair on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair on the right?"")"
4643709,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
15799001,What is the bowl on the stove made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl on the stove made of?"")"
13596300,What is covered with snow?," # contains a relation (covered with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with snow?"")"
135174,Do you see donuts on the napkin that is on the right side of the picture?," # contains a relation (on the right side of the picture), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see donuts on the napkin that is on the right side of the picture?"")"
15611044,Are these people of the same gender?," # gender is not a property of the object, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these people of the same gender?"")"
2133898,Do you see a zebra on the green grass?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a zebra on the green grass?"")"
1564390,What is the girl on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl on?"")"
10870390,Does the field look dirty and red?," # dirty and red
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""field"", ""dirty"") and image_patch.verify_property(""field"", ""red""))"
5195715,What do the door frame and the wall have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the door frame and the wall have in common?"")"
6850882,Are there any sheep in the grass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sheep in the grass"")) # crop would include the grass so keep it in the query"
6208958,What is the person to the right of the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the man wearing?"")"
4925288,What is the image showing?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the image showing?"") # image is a PIL Image"
8473442,What is the name of the piece of furniture to the right of the magazine in the bottom of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the piece of furniture to the right of the magazine in the bottom of the image?"")"
19750498,Are there either any buses or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_bus or is_mirror)"
12257213,Which kind of animal is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is white?"")"
1134242,Are there peanuts or chairs in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_peanut = image_patch.exists(""peanut"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_peanut or is_chair)"
18543144,Is the computer monitor on a cabinet?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the computer monitor on a cabinet?"")"
16799793,On which side of the picture is the red bag?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the red bag?"")"
161027859,Is the woman to the right or to the left of the man in the middle?," # assumes only one man patch
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""Is the woman to the right or to the left of the man in the middle?"")
    man_center = man_patches[0].horizontal_center
    for woman_patch in woman_patches:
        if woman_patch.horizontal_center > man_center:
            return ""right""
        elif woman_patch.horizontal_center < man_center:
            return ""left""
    return ""right"" # if no woman is found, assume she is to the right of the man"
13965298,What is the water in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the water in?"")"
12698017,Do you see doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""door""))"
379278,Is she sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she sitting?"")"
19783487,Is the bottle made of the same material as the tap?," # bottle and tap are assumed to be found
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    tap_patches = image_patch.find(""tap"")
    # Question assumes only one bottle and one tap patch
    if len(bottle_patches) == 0 or len(tap_patches) == 0:
        # If no bottle or tap is found, query the image directly
        return image_patch.simple_query(""Is the bottle made of the same material as the tap?"")
    bottle_patch = bottle_patches[0]
    tap_patch = tap_patches[0]
    return bool_to_yesno(bottle_patch.verify_property(""bottle"", ""material"") == tap_patch.verify_property(""tap"", ""material""))"
557099,On which side of the photo is the television?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the television?"")"
8241421,Is this a zebra or a cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.best_text_match([""zebra"", ""cow""])"
8107015,Are the glasses on the right side?," # glasses are on the right side
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses on the right side?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
13244983,Are there both a window and a door in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
4665088,Which kind of food is in the sandwich?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is in the sandwich?"")"
9781844,Which kind of animal is the fence in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the fence in front of?"")"
13769526,On which side of the photo is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the woman?"")
    woman_patch = woman_patches[0]
    horizontal_center = image_patch.horizontal_center
    if woman_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
1990371,What is the woman that is to the left of the person carrying?," # contains a relation (left of, carrying, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman that is to the left of the person carrying?"")"
15335757,Which color is the cow to the left of the other cow?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the cow to the left of the other cow?"")"
18427858,Is the white tent to the left of a person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white tent to the left of a person?"")"
31072654,Which side of the photo are the palm trees on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo are the palm trees on?"")"
5615815,Who is in front of the blue water?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the blue water?"")"
11693416,Do you see chairs or pans there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_pan = image_patch.exists(""pan"")
    return bool_to_yesno(is_chair or is_pan)"
18324180,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
9720398,Is the plastic bag to the right of the people that are to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic bag to the right of the people that are to the left of the man?"")"
9383606,Is the woman to the left of a helmet?," # helmet is a specific type of hat
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the left of a helmet?"")
    for woman_patch in woman_patches:
        helmet_patches = image_patch.find(""helmet"")
        for helmet_patch in helmet_patches:
            if helmet_patch.horizontal_center > woman_patch.horizontal_center:
                return ""yes""
    return ""no"""
19773285,What does the cow in front of the horse wear?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the cow in front of the horse wear?"")"
13131951,Which kind of clothing is checkered?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is checkered?"")"
119196,Who is wearing the wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the wetsuit?"")"
4896704,Are there any skis?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skis""))"
8927811,Does the dessert to the right of the soldiers look large and red?," # dessert is to the right of soldiers
    image_patch = ImagePatch(image)
    soldiers_patches = image_patch.find(""soldiers"")
    # Question assumes only one soldiers patch
    if len(soldiers_patches) == 0:
        # If no soldiers are found, query the image directly
        return image_patch.simple_query(""Does the dessert to the right of the soldiers look large and red?"")
    soldiers_patch = soldiers_patches[0]
    dessert_patches = image_patch.find(""dessert"")
    # Question assumes only one dessert patch
    if len(dessert_patches) == 0:
        return ""no""
    for dessert_patch in dessert_patches:
        if dessert_patch.horizontal_center > soldiers_patch.horizontal_center:
            return bool_to_yesno(dessert_patch.verify_property(""dessert"", ""large"") and dessert_patch.verify_property(""dessert"", ""red""))
    return ""no"""
11528241,"On which side is the fence, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the fence, the left or the right?"")"
6505098,What is the color of the shirt?," # returns the color of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the color of the shirt?"")
    return shirt_patches[0].simple_query(""What is the color of the shirt?"") # crop would include the shirt so keep it in the query"
101030236,Does the hair look long and dark?," # hair is a tricky one, as it can be long or short, light or dark
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the hair look long and dark?"")
    return bool_to_yesno(hair_patches[0].verify_property(""hair"", ""long"") and hair_patches[0].verify_property(""hair"", ""dark""))"
16388731,Which kind of furniture is to the left of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the chair?"")"
91038850,What does the woman wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the woman wear?"")"
1724123,Do you see either cigars or dispensers in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cigar"") or image_patch.exists(""dispenser""))"
15331301,Is the man holding an umbrella?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man holding an umbrella?"")"
19804831,Which kind of food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is it?"")"
7904783,On which side are the man glasses?," # glasses are on the right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side are the man glasses?"")
    man_patch = man_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        return ""right""
    glasses_patch = glasses_patches[0]
    if glasses_patch.horizontal_center > man_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
1273217,Is the brown animal to the right or to the left of the white pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown animal to the right or to the left of the white pillow?"")"
954350,Does the vehicle on the railroad tracks have red color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle on the railroad tracks have red color?"")"
8455996,What kind of animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is large?"")"
71038221,What's the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man wearing?"")"
13530062,What is on the shelf on the right side?," # contains a relation (on the right side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf on the right side?"")"
1850615,Do you see collars or trash cans in the picture?," # trash cans are not in the image
    image_patch = ImagePatch(image)
    is_trash_can = image_patch.exists(""trash can"")
    is-collar = image_patch.exists(""collar"")
    return bool_to_yesno(is_trash_can or is-collar)"
2377767,What kind of vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is on the street?"")"
4277462,Are there bottles to the left of the wine that is on the shelf?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bottles to the left of the wine that is on the shelf?"")"
13326336,Is this a bed or a desk?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a desk?"")"
8564074,Is the factory on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the factory on the left side?"")"
1173009,Is the girl to the left or to the right of the boy?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left or to the right of the boy?"")"
3962144,Is the man on the right side or on the left of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the right side or on the left of the image?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
18232152,Are there lipsticks or bottle caps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lipstick"") or image_patch.exists(""bottle cap""))"
8682536,Is the brown bag on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bag on the right or on the left?"")"
977697,Are there any bananas on top of the brown object under the watermelon?," # contains a relation (on top of, under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any bananas on top of the brown object under the watermelon?"")"
16353597,What color is the man's hair?," # returns the color of the man's hair
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What color is the man's hair?"")
    return man_patches[0].simple_query(""What color is the man's hair?"")"
2375499,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
6822711,Do you see any guys beside the bag that is not closed?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any guys beside the bag that is not closed?"")"
19868015,What is sitting on the dish?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the dish?"")"
13475949,What does the man near the skateboard wear?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man near the skateboard wear?"")"
7721717,Do the shirt and the helmet have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one shirt and helmet patch
    if len(shirt_patches) == 0 or len(helmet_patches) == 0:
        # If no shirt or helmet is found, query the image directly
        return image_patch.simple_query(""Do the shirt and the helmet have the same color?"")
    shirt_color = shirt_patches[0].simple_query(""What color is the shirt?"")
    helmet_color = helmet_patches[0].simple_query(""What color is the helmet?"")
    return bool_to_yesno(shirt_color == helmet_color)"
41002522,Is the bottle to the left or to the right of the man that is wearing glasses?," # bottle and glasses are not in the same image
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the left or to the right of the man that is wearing glasses?"")
    bottle_patch = bottle_patches[0]
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""Is the bottle to the left or to the right of the man that is wearing glasses?"")
    glasses_patch = glasses_patches[0]
    if bottle_patch.horizontal_center < glasses_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8962289,On which side of the image is the drawer?," # left or right
    image_patch = ImagePatch(image)
    drawer_patches = image_patch.find(""drawer"")
    # Question assumes only one drawer patch
    if len(drawer_patches) == 0:
        # If no drawer is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the drawer?"")
    if drawer_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17124995,Do you see fences there that are metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see fences there that are metallic?"")"
12956743,Are there both glasses and ties in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_glasses = image_patch.exists(""glasses"")
    is_tie = image_patch.exists(""tie"")
    return bool_to_yesno(is_glasses and is_tie)"
10924726,What are the numbers around of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the numbers around of?"")"
14326889,Are there any people to the left of the girl that is to the left of the cracker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the left of the girl that is to the left of the cracker?"")"
16918998,What kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is on the plate?"")"
12518806,What is the computer mouse on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the computer mouse on?"")"
14384330,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
71040923,What color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color is the jacket?"")
    return jacket_patches[0].simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query"
3909144,What is the sign on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign on?"")"
36863,Are there letters in the image that are not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""letters"") and not image_patch.verify_property(""letters"", ""red""))"
3577391,Is the vehicle that is not long red or white?," # contains a relation (is not long), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle that is not long red or white?"")"
8462916,What is the cat looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat looking at?"")"
14449142,Which kind of furniture is to the left of the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the girl?"")"
5353118,Is the cabinet in the top or in the bottom part of the picture?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet in the top or in the bottom part of the picture?"")"
18943849,In which part of the photo is the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the woman?"")"
8521135,Are there any girls to the right of the device that looks black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""girl"") and image_patch.find(""girl"")[0].horizontal_center > image_patch.find(""black"")[0].horizontal_center)"
1612073,Is that girl holding a phone?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that girl holding a phone?"")"
19556591,What does the cat look at?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the cat look at?"")"
12676026,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
6554890,What is on the sink?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sink?"")"
5808451,What color does the meat that is in the bowl have?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the meat that is in the bowl have?"")"
10205585,Is the fork in the top?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork in the top?"")"
9291443,Are there both numbers and cars in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_number = image_patch.exists(""number"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_number and is_car)"
161017721,Are there both a door and a window in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
331097,What item of furniture is the dog in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is the dog in front of?"")"
11971207,Are there cups or coffee mugs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_coffee_mug = image_patch.exists(""coffee mug"")
    return bool_to_yesno(is_cup or is_coffee_mug)"
14310739,Is there a surfboard on top of the car that is parked on the road?," # contains a relation (on top of, parked on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a surfboard on top of the car that is parked on the road?"")"
5968706,Where do you think is the player?," # assumes one player
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    if len(player_patches) == 0:
        return image_patch.simple_query(""Where do you think is the player?"")
    return player_patches[0].simple_query(""Where do you think is the player?"")"
4855534,Are there either black TVs or cell phones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_tv = image_patch.exists(""black TV"")
    is_cell_phone = image_patch.exists(""cell phone"")
    return bool_to_yesno(is_black_tv or is_cell_phone)"
15578384,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
3673252,Are both the pole and the fence made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are both the pole and the fence made of the same material?"")) # crop would include the fence so keep it in the query"
11287022,What is on the sink?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sink?"")"
3739794,On which side is the black device?," # left or right
    image_patch = ImagePatch(image)
    black_patches = image_patch.find(""black device"")
    # Question assumes only one black patch
    if len(black_patches) == 0:
        # If no black device is found, query the image directly
        return image_patch.simple_query(""On which side is the black device?"")
    black_patch = black_patches[0]
    if black_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10144845,Are there any kittens to the left of the vehicle that is in front of the sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any kittens to the left of the vehicle that is in front of the sign?"")"
11353771,What is in the basket on the counter?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the basket on the counter?"")"
101060431,What length is that horn?," # returns a string
    image_patch = ImagePatch(image)
    horn_patches = image_patch.find(""horn"")
    # Question assumes only one horn patch
    if len(horn_patches) == 0:
        # If no horn is found, query the image directly
        return image_patch.simple_query(""What length is that horn?"")
    return horn_patches[0].simple_query(""What length is that horn?"") # crop would include the horn so keep it in the query"
103499,What is inside the sand?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the sand?"")"
2337654,Does the plant have the same color as the table?," # table is assumed to be in the same image
    image_patch = ImagePatch(image)
    plant_patches = image_patch.find(""plant"")
    # Question assumes only one plant patch
    if len(plant_patches) == 0:
        # If no plant is found, query the image directly
        return image_patch.simple_query(""Does the plant have the same color as the table?"")
    plant_color = plant_patches[0].simple_query(""What color is the plant?"")
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Does the plant have the same color as the table?"")
    table_color = table_patches[0].simple_query(""What color is the table?"")
    return bool_to_yesno(plant_color == table_color)"
15687229,What color do you think is the door?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think is the door?"")"
11913764,What animal is eating the pineapple?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating the pineapple?"")"
1614434,Which color do you think the vases on the left are?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the vases on the left are?"")"
1795853,Are there any people to the right of the bench on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.horizontal_center > image_patch.find(""bench"")[0].horizontal_center)"
16845999,What's hanging on the wall?," # contains a relation (hanging on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's hanging on the wall?"")"
1730279,Does the man that to the right of the cone wear a hat?," # contains a relation (to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man that to the right of the cone wear a hat?"")"
8859067,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
12505719,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
7288879,What is the animal that is eating from the large tree?," # contains a relation (eating from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is eating from the large tree?"")"
1518985,What is the large animal looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large animal looking at?"")"
6822667,What's the guy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the guy holding?"")"
9304293,Are there any people to the left of the woman in the photograph?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman"") and image_patch.exists(""person"") and image_patch.find(""woman"")[0].horizontal_center < image_patch.find(""person"")[0].horizontal_center)"
4881481,Are there either any white bowls or bottles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""white bowl"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_bowl or is_bottle)"
31070996,Is there an umbrella on the side walk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an umbrella on the side walk?"")"
4794793,What is the vegetable to the left of the onions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the onions?"")"
231593,Which kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is blue?"")"
171028760,What does the boy to the left of the spoon wear?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the boy to the left of the spoon wear?"")"
8177182,Is that shirt short sleeved and blue?," # shirt is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that shirt short sleeved and blue?"")"
13301511,Is the person that is skiing wearing shorts?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is skiing wearing shorts?"")"
18641627,Is that lady to the left of a child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that lady to the left of a child?"")"
17564181,What is the size of the toy that looks brown?," # returns the size of the toy
    image_patch = ImagePatch(image)
    toy_patches = image_patch.find(""toy"")
    # Question assumes only one toy patch
    if len(toy_patches) == 0:
        # If no toy is found, query the image directly
        return image_patch.simple_query(""What is the size of the toy that looks brown?"")
    for toy_patch in toy_patches:
        is_brown = (toy_patch.simple_query(""Is the toy brown?"") == ""yes"")
        if is_brown:
            return toy_patch.simple_query(""What is the size of the toy that looks brown?"") # crop would include the brown color so keep it in the query
    # If no brown toy is found, pick the first toy
    return toy_patches[0].simple_query(""What is the size of the toy that looks brown?"")"
4641733,What is on the brown food?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the brown food?"")"
6973079,Which kind of device is the man in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is the man in front of?"")"
13369718,What is the lady in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady in front of?"")"
15644272,Is the beer to the left or to the right of the person that is holding the bun?," # contains a relation (left, right, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the beer to the left or to the right of the person that is holding the bun?"")"
16682833,Is the asparagus in the bottom part or in the top?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the asparagus in the bottom part or in the top?"")"
1351955,Is the red motorcycle small or large?," # contains a relation (small, large, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red motorcycle small or large?"")"
14798003,Who is wearing the gloves?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the gloves?"")"
19587265,The forest is filled with what?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The forest is filled with what?"")"
11160651,Who looks at the ball?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who looks at the ball?"")"
12808014,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1613529,Are there both frisbees and dogs in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_frisbee = image_patch.exists(""frisbee"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_frisbee and is_dog)"
9717352,What kind of food is in the bowl?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is in the bowl?"")"
9650392,"What is that woman on, a bus or a train?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that woman on, a bus or a train?"")"
8316337,Are there carrots or peppers that are not green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    carrot_patches = image_patch.find(""carrot"")
    pepper_patches = image_patch.find(""pepper"")
    carrot_not_green = False
    pepper_not_green = False
    for carrot_patch in carrot_patches:
        if not carrot_patch.verify_property(""carrot"", ""green""):
            carrot_not_green = True
    for pepper_patch in pepper_patches:
        if not pepper_patch.verify_property(""pepper"", ""green""):
            pepper_not_green = True
    return bool_to_yesno(carrot_not_green or pepper_not_green)"
1503479,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
14272248,What color do the pants have?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""What color do the pants have?"")
    return pants_patches[0].simple_query(""What color do the pants have?"") # crop would include the pants so keep it in the query"
221627,On which side of the image is the trash bin?," # left or right
    image_patch = ImagePatch(image)
    trash_bin_patches = image_patch.find(""trash bin"")
    # Question assumes only one trash bin patch
    if len(trash_bin_patches) == 0:
        # If no trash bin is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the trash bin?"")
    trash_bin_patch = trash_bin_patches[0]
    if trash_bin_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15245574,What appliance is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the man?"")"
31072066,In which part is the book?," # assumes only one book patch
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""In which part is the book?"")
    book_patch = book_patches[0]
    if book_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
3979340,What kind of furniture is above the gravel?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is above the gravel?"")"
685050,Do you see any bottles on the table that is made of wood?," # contains a relation (on, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any bottles on the table that is made of wood?"")"
16432469,Are there canes or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cane = image_patch.exists(""cane"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_cane or is_cup)"
6751068,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
9863084,On which side is the truck?," # left or right
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""On which side is the truck?"")
    truck_patch = truck_patches[0]
    horizontal_center = image_patch.horizontal_center
    if truck_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
3247484,Is the player to the right or to the left of the batter?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the player to the right or to the left of the batter?"")"
101034869,Are the pedestrians to the left or to the right of the man that is wearing jeans?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pedestrians to the left or to the right of the man that is wearing jeans?"")"
854614,"Which color is the coat, gray or red?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the coat, gray or red?"")"
8107600,Is the white towel on the left side?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white towel on the left side?"")"
19726149,What is the piece of furniture that the papers are sitting on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the papers are sitting on called?"")"
131063289,Is the gray truck in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray truck in the bottom part of the photo?"")"
543492,Is the window behind a couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window behind a couch?"")"
2107927,Is the garbage bin on the left side?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garbage bin on the left side?"")"
2240376,What does the person that looks wet hold?," # contains a relation (wet, holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person that looks wet hold?"")"
114760,Is the display the same color as the vehicle?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the display the same color as the vehicle?"")"
15559423,Is that ground sandy or snowy?," # ground is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that ground sandy or snowy?"")"
4774559,Is the lamp to the right or to the left of the person on the left?," # assumes only one person on the left
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Is the lamp to the right or to the left of the person on the left?"")
    for lamp_patch in lamp_patches:
        person_patches = image_patch.find(""person"")
        # Question assumes only one person patch
        if len(person_patches) == 0:
            # If no person is found, query the image directly
            return image_patch.simple_query(""Is the lamp to the right or to the left of the person on the left?"")
        for person_patch in person_patches:
            if person_patch.horizontal_center < image_patch.horizontal_center:
                if lamp_patch.horizontal_center > person_patch.horizontal_center:
                    return ""right""
                else:
                    return ""left""
    return ""right"""
2103721,Is the green tree behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green tree behind the fence?"")"
5631134,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
3913033,On which side is the guy?," # left or right
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""On which side is the guy?"")
    guy_patch = guy_patches[0]
    if guy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16286064,Who is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the hat?"")"
17490917,"In which part of the image is the vehicle, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the vehicle, the top or the bottom?"")"
746588,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
5657685,Does the hair have long length?," # hair is a general term, so query directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""hair"", ""long"")) # hair is a general term, so query directly"
7217208,Do you see a horse to the right of the helmet?," # helmet is a part of the horse
    image_patch = ImagePatch(image)
    horse_patches = image_patch.find(""horse"")
    # Question assumes only one horse patch
    if len(horse_patches) == 0:
        # If no horse is found, query the image directly
        return image_patch.simple_query(""Do you see a horse to the right of the helmet?"")
    for horse_patch in horse_patches:
        if horse_patch.horizontal_center > image_patch.horizontal_center:
            return ""yes""
    return ""no"""
4240188,What kind of animal walks on the road?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal walks on the road?"")"
151020466,Are there any pink boots or sandals?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pink boots"") or image_patch.exists(""pink sandals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
15153094,Which kind of device is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on top of the table?"")"
15807176,Are there either any cans or mirrors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_can = image_patch.exists(""can"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_can or is_mirror)"
14652990,What kind of clothing is brown?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is brown?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""coat"", ""dress"", ""hat"", ""jacket"", ""pants"", ""scarf"", ""shirt"", ""shoes"", ""socks"", ""suit"", ""t-shirt"", ""vest""])"
11441771,What is the train in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the train in front of?"")"
18770503,What is located on top of the plate that is to the left of the person?," # contains a relation (on top of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the plate that is to the left of the person?"")"
15543134,Are there both bikes and cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bike and is_car)"
15796154,What is under the man that is to the left of the dog?," # contains a relation (under, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the man that is to the left of the dog?"")"
13665335,Does the mirror look black or blue?," # mirror is a tricky one, it's not always black or blue
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Does the mirror look black or blue?"")
    mirror_patch = mirror_patches[0]
    return mirror_patch.best_text_match([""black"", ""blue""]) # mirror is a tricky one, it's not always black or blue"
17345520,What is on the blanket?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the blanket?"")"
3805203,Do you see any black shelves or laptops?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black laptop"") or image_patch.exists(""black shelf""))"
3327889,Is the small potato on the left of the photo?," # contains a relation (left, right, top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small potato on the left of the photo?"")"
141023008,What is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the wall?"")"
10524157,Where is the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the truck?"")"
2589950,Is the bun on the burger toasted and dark?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bun on the burger toasted and dark?"")"
4835998,Is the monitor on the right side?," # assumes only one monitor
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    if len(monitor_patches) == 0:
        return image_patch.simple_query(""Is the monitor on the right side?"")
    monitor_patch = monitor_patches[0]
    if monitor_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
14665448,What does the baby in the bed wear?," # contains a relation (in the bed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the baby in the bed wear?"")"
3508828,What is in front of the flowers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the flowers?"")"
1212405,What animals are to the left of the man?," # returns a string with the names of the animals
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What animals are to the left of the man?"")
    man_patch = man_patches[0]
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        return image_patch.simple_query(""What animals are to the left of the man?"")
    for animal_patch in animal_patches:
        if animal_patch.horizontal_center < man_patch.horizontal_center:
            return animal_patch.simple_query(""What animals are to the left of the man?"")
    return image_patch.simple_query(""What animals are to the left of the man?"")"
18774532,On which side of the image is the tap?," # left or right
    image_patch = ImagePatch(image)
    tap_patches = image_patch.find(""tap"")
    # Question assumes only one tap patch
    if len(tap_patches) == 0:
        # If no tap is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the tap?"")
    if tap_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4708820,What color is the zebra that is lying on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the zebra that is lying on the ground?"")"
18363829,What color is the minivan?," # returns the color of the minivan
    image_patch = ImagePatch(image)
    minivan_patches = image_patch.find(""minivan"")
    # Question assumes only one minivan patch
    if len(minivan_patches) == 0:
        # If no minivan is found, query the image directly
        return image_patch.simple_query(""What color is the minivan?"")
    return minivan_patches[0].simple_query(""What color is the minivan?"") # crop would include the minivan so keep it in the query"
5623277,Are the people the same gender?," # gender is not a property of people, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people the same gender?"")"
13504874,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12885188,What is the woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman holding?"")"
17154327,Is the color of the napkin different than the apple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the napkin different than the apple?"")"
9269125,Is the salt shaker on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the salt shaker on the left or on the right?"")"
1185477,Are there any bottles to the left of the stove that is in the kitchen?," # contains a relation (left of, in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle"") and image_patch.exists(""stove"") and image_patch.exists(""kitchen""))"
8487870,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
3811942,What is the color of the cow on the right?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the cow on the right?"")"
4838622,On which side are the bottles?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side are the bottles?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16354183,Do you see pasta or rice that are not cooked?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pasta = image_patch.exists(""pasta"")
    is_rice = image_patch.exists(""rice"")
    return bool_to_yesno(is_pasta or is_rice)"
5647952,What is the grass made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the grass made of?"")"
14568878,Is the apple behind a kitten?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the apple behind a kitten?"")"
8536712,Are the cars on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cars on the left or on the right?"")"
4624801,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
131021864,Is the person to the left of the bookshelf playing a keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the bookshelf playing a keyboard?"")"
5279985,Does the man to the left of the people appear to be posing?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the people appear to be posing?"")"
12850374,Is the cab different in color than the logo?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cab different in color than the logo?"")"
9754459,What is the name of the device to the left of the computer?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device to the left of the computer?"")"
12292563,What is the bicycle leaning on?," # contains a relation (leaning on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bicycle leaning on?"")"
10948908,What do you think is the man in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man in?"")"
208803,Are there fences in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
210127,Are there either horses or cows that are not dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_horse = image_patch.exists(""horse"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_horse or is_cow)"
19935842,Are the cooked noodles to the right or to the left of the vegetable on the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cooked noodles to the right or to the left of the vegetable on the plate?"")"
7343576,Is the car in the bottom part of the photo?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the bottom part of the photo?"")"
12186536,On which side of the image is the bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15925903,What type of vehicle is to the left of the brick house?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vehicle is to the left of the brick house?"")"
18421727,Are there both cars and windows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_car and is_window)"
207825,Are there any brown nightstands or cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown nightstand"") or image_patch.exists(""brown cabinet""))"
8888905,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
41047707,Are there fences to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there fences to the right of the man?"")"
18738170,What is the name of the device that the guy is holding?," # returns the name of the device
    image_patch = ImagePatch(image)
    guy_patches = image_patch.find(""guy"")
    # Question assumes only one guy patch
    if len(guy_patches) == 0:
        # If no guy is found, query the image directly
        return image_patch.simple_query(""What is the name of the device that the guy is holding?"")
    guy_patch = guy_patches[0]
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        return image_patch.simple_query(""What is the name of the device that the guy is holding?"")
    device_patch = device_patches[0]
    return device_patch.simple_query(""What is the name of the device that the guy is holding?"") # crop would include the device so keep it in the query"
9161266,Does the vehicle to the left of the fence have black color?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle to the left of the fence have black color?"")"
6234812,Is there any snow or ice that is white?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    snow_patches = image_patch.find(""snow"")
    ice_patches = image_patch.find(""ice"")
    for snow_patch in snow_patches:
        if snow_patch.verify_property(""snow"", ""white""):
            return ""yes""
    for ice_patch in ice_patches:
        if ice_patch.verify_property(""ice"", ""white""):
            return ""yes""
    return ""no"""
13104806,Are there any fences or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_fence or is_umbrella)"
1812722,Do the clothes and the trousers have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    clothes_patches = image_patch.find(""clothes"")
    trousers_patches = image_patch.find(""trousers"")
    # Question assumes only one clothes patch and one trousers patch
    if len(clothes_patches) == 0 or len(trousers_patches) == 0:
        # If no clothes or trousers are found, query the image directly
        return image_patch.simple_query(""Do the clothes and the trousers have the same color?"")
    clothes_color = clothes_patches[0].simple_query(""What color are the clothes?"")
    trousers_color = trousers_patches[0].simple_query(""What color are the trousers?"")
    return bool_to_yesno(clothes_color == trousers_color)"
9964383,What is the bedspread covering?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bedspread covering?"")"
4983739,"What is the skateboarder doing, performing trick or riding?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the skateboarder doing, performing trick or riding?"")"
679738,Who is sitting on the chair to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the chair to the left of the man?"")"
10632815,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
1677374,Is the stainless steel spoon to the left of the plates on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stainless steel spoon to the left of the plates on the right?"")"
7280388,On which side of the photo is the house?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the house?"")
    house_patch = house_patches[0]
    horizontal_center = image_patch.horizontal_center
    if house_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
5612635,What color is the shirt the woman is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the woman is in?"")"
18732293,Do the shoe and the arrow have the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the shoe and the arrow have the same color?"")"
111056113,What food is above the palm tree?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is above the palm tree?"")"
14435039,Which kind of meat is on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is on the pizza?"")"
18917701,Is there a white fence or hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""white fence"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_fence or is_hat)"
13863214,What is the umpire wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the umpire wearing?"")"
21022782,Which side of the image is the tennis racket on?," # left or right
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""tennis racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the tennis racket on?"")
    return ""left"" if racket_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
8117908,Are there either dogs or fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_dog or is_fence)"
2713439,What is on the shelves on the left?," # contains a relation (on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelves on the left?"")"
15995473,Are there any people to the right of the man in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there any people to the right of the man in the middle of the photo?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center != image_patch.horizontal_center:
        return ""no""
    people_patches = image_patch.find(""people"")
    for people_patch in people_patches:
        if people_patch.horizontal_center > man_patch.horizontal_center:
            return ""yes""
    return ""no"""
17318304,Does the bathing suit look black?," # returns yes or no
    image_patch = ImagePatch(image)
    bathing_suit_patches = image_patch.find(""bathing suit"")
    # Question assumes only one bathing suit patch
    if len(bathing_suit_patches) == 0:
        # If no bathing suit is found, query the image directly
        return image_patch.simple_query(""Does the bathing suit look black?"")
    return bool_to_yesno(bathing_suit_patches[0].verify_property(""bathing suit"", ""black""))"
6471574,Are there towels to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towel"") and image_patch.exists(""man"")) # contains a relation (left of, right of, etc), so ask directly"
11580290,Is the ornament on the tree?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ornament on the tree?"")"
615807,Is the green bottle to the right or to the left of the man that is wearing a tie?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green bottle to the right or to the left of the man that is wearing a tie?"")"
229825,Do you think the grass that is not short is short or tall?," # contains a relation (is not short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the grass that is not short is short or tall?"")"
5472351,Are there either any mouse pads or laptops?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mouse_pad = image_patch.exists(""mouse pad"")
    is_laptop = image_patch.exists(""laptop"")
    return bool_to_yesno(is_mouse_pad or is_laptop)"
19204578,Are there both a speaker and a keyboard in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_speaker = image_patch.exists(""speaker"")
    is_keyboard = image_patch.exists(""keyboard"")
    return bool_to_yesno(is_speaker and is_keyboard)"
14108915,How old is the kid the cars are to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How old is the kid the cars are to the left of?"")"
10308609,Is this dog facing a mug?," # contains a relation (facing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this dog facing a mug?"")"
8590041,Is the tree behind a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind a fence?"")"
5666389,Who looks at the mobile phone to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who looks at the mobile phone to the right of the person?"")"
2364471,What's the fence surrounding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the fence surrounding?"")"
19909808,What kind of animal is to the left of the cane?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the left of the cane?"")"
12600964,Who is sitting in the chair that is to the left of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting in the chair that is to the left of the pillow?"")"
4325009,On which side of the picture is the small boy?," # left or right
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""small boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the small boy?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19950160,Is there a fork or a wine glass in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fork = image_patch.exists(""fork"")
    is_wine_glass = image_patch.exists(""wine glass"")
    return bool_to_yesno(is_fork or is_wine_glass)"
4700544,Which kind of vegetable is not chopped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vegetable is not chopped?"")"
13297991,Is the hat blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hat blue?"")"
1508417,Is the ship large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ship large?"")"
1957297,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
189511,What is the person that is not old wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is not old wearing?"")"
8116613,On which side of the photo is the apple?," # left or right
    image_patch = ImagePatch(image)
    apple_patches = image_patch.find(""apple"")
    # Question assumes only one apple patch
    if len(apple_patches) == 0:
        # If no apple is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the apple?"")
    apple_patch = apple_patches[0]
    if apple_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
626488,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
310754,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
13580085,The horse on the road walks toward what?," # contains a relation (toward), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The horse on the road walks toward what?"")"
13791551,Do the jeans that are not short look gray?," # contains a relation (not short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the jeans that are not short look gray?"")"
18294075,Are there either pedestrians or women in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pedestrian = image_patch.exists(""pedestrian"")
    is_woman = image_patch.exists(""woman"")
    return bool_to_yesno(is_pedestrian or is_woman)"
890221,Is the black robe closed or open?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black robe closed or open?"")"
15830161,What is the person to the right of the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the man holding?"")"
8782665,What is lying on the pan?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is lying on the pan?"")"
9446702,What is mounted on the lit building?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is mounted on the lit building?"")"
11617248,Is the tent to the left or to the right of the umbrella that is not small?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tent to the left or to the right of the umbrella that is not small?"")"
14954627,What place could this be?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place could this be?"")"
346455,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
18287822,What is that motorbike in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that motorbike in front of?"")"
19531087,Is the fence in front or behind the animal that is standing under the tree branches?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in front or behind the animal that is standing under the tree branches?"")"
6540830,What kind of device is to the left of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the left of the laptop?"")"
10470953,Is the passenger on the left or on the right side of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the passenger on the left or on the right side of the picture?"")"
5841508,On which side is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13695688,What is the water bottle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the water bottle on?"")"
14965146,What is the cat lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat lying on?"")"
12566539,Is it an outdoors or indoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors scene?"")"
12163851,What is the animal that is on the sand?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is on the sand?"")"
812691,Is the woman in front of the plant wearing a watch?," # contains a relation (in front of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman in front of the plant wearing a watch?"")"
9865060,On which side of the picture is the bed sheet?," # left or right
    image_patch = ImagePatch(image)
    bed_sheet_patches = image_patch.find(""bed sheet"")
    # Question assumes only one bed sheet patch
    if len(bed_sheet_patches) == 0:
        # If no bed sheet is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the bed sheet?"")
    bed_sheet_patch = bed_sheet_patches[0]
    horizontal_center = image_patch.horizontal_center
    if bed_sheet_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
2477695,Are there any ties or glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie or is_glasses)"
1472916,Is the brown box to the right or to the left of the man that is standing in the people?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown box to the right or to the left of the man that is standing in the people?"")"
3458869,What is he wearing?," # assumes one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is he wearing?"")
    return man_patches[0].simple_query(""What is he wearing?"")"
15127863,Is the white napkin to the right or to the left of the sandwich on the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white napkin to the right or to the left of the sandwich on the plate?"")"
10461454,What is the person that is to the right of the fence wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the right of the fence wearing?"")"
235986,Is there a white towel or pillow in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_towel = image_patch.exists(""white towel"")
    is_white_pillow = image_patch.exists(""white pillow"")
    return bool_to_yesno(is_white_towel or is_white_pillow)"
4341619,Are there any balls to the left of the man who is swinging a racket?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ball"") and image_patch.exists(""man"") and image_patch.find(""man"")[0].simple_query(""Is the man swinging a racket?"") == ""yes"")"
5437472,What is covered with trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with trees?"")"
1368238,Are there refrigerators next to the cabinets in the top part of the picture?," # contains a relation (next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there refrigerators next to the cabinets in the top part of the picture?"")"
227397,What's the dog doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the dog doing?"")"
1144670,Are there any surfboards or pictures in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_picture = image_patch.exists(""picture"")
    return bool_to_yesno(is_surfboard or is_picture)"
19722114,What color do you think the lamp in the middle is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the lamp in the middle is?"")"
13615361,What color is the flag on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the flag on the left?"")"
11772363,Which kind of instrument is the player playing?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of instrument is the player playing?"")"
10785352,Are there zebras in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra""))"
14610577,Is the white refrigerator to the right or to the left of the man that wears a sweater?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white refrigerator to the right or to the left of the man that wears a sweater?"")"
9966552,What kind of furniture is the window behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the window behind of?"")"
8453044,Do you see boys to the left of the large bucket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see boys to the left of the large bucket?"")"
14450918,What is the sign before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sign before?"")"
373822,Do you see any screens or cameras there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""screen"") or image_patch.exists(""camera""))"
3139982,What size is the refrigerator to the left of the pots?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What size is the refrigerator to the left of the pots?"")"
13120086,Do you see any curtains to the left of the shelf near the chair?," # contains a relation (near, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any curtains to the left of the shelf near the chair?"")"
15832700,Which kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is on the plate?"")"
2156627,What is the food on the large plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food on the large plate?"")"
19868621,What is the animal that is standing called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is standing called?"")"
5613685,What is the item of furniture behind the mannequin below the hat called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture behind the mannequin below the hat called?"")"
5648797,What device is on top of the book that is not closed?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on top of the book that is not closed?"")"
19807619,Do you see any girls on the couch on the left of the photo?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any girls on the couch on the left of the photo?"")"
16751371,The nose is of which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The nose is of which color?"")"
131033995,What is on the white toilet?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the white toilet?"")"
10375682,Is the man that is to the right of the people wearing a hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the right of the people wearing a hat?"")"
7728765,Is the paper on a refrigerator?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the paper on a refrigerator?"")"
6799732,Do the bike and the shirt have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    bike_patches = image_patch.find(""bike"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one bike and one shirt patch
    if len(bike_patches) == 0 or len(shirt_patches) == 0:
        # If no bike or shirt is found, query the image directly
        return image_patch.simple_query(""Do the bike and the shirt have the same color?"")
    bike_patch = bike_patches[0]
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(bike_patch.verify_property(""bike"", ""color"") == shirt_patch.verify_property(""shirt"", ""color""))"
5943768,What is the black article of clothing?," # black article of clothing
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the black article of clothing?"")"
7847986,Are there both benches and pigeons in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_pigeon = image_patch.exists(""pigeon"")
    return bool_to_yesno(is_bench and is_pigeon)"
15251575,What is the decoration in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the decoration in front of?"")"
11440764,Is the table on a rug?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table on a rug?"")"
7263524,Are there bowls to the left of the soup in the bottom of the photo?," # contains a relation (left of, bottom of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bowl"") and image_patch.find(""bowl"")[0].horizontal_center < image_patch.find(""soup"")[0].horizontal_center)"
13913992,How large is the crown in the middle?," # returns a string
    image_patch = ImagePatch(image)
    crown_patches = image_patch.find(""crown"")
    # Question assumes only one crown patch
    if len(crown_patches) == 0:
        # If no crown is found, query the image directly
        return image_patch.simple_query(""How large is the crown in the middle?"")
    crown_patch = crown_patches[0]
    return crown_patch.simple_query(""How large is the crown in the middle?"") # crop would include the crown so keep it in the query"
3796497,What appliance is the sink before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is the sink before?"")"
10440225,On which side is the knife?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""On which side is the knife?"")
    if knife_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19250394,What place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is pictured?"")"
17157098,What does the dog look at?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the dog look at?"")"
1336520,What's on the hot dog?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the hot dog?"")"
15976536,He is looking at what?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""He is looking at what?"")"
151055764,The boy is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The boy is on what?"")"
1119836,Do these animals have different species?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do these animals have different species?"")"
17547203,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
536081,Do you see any fork or spoon in the photo?," # fork or spoon
    image_patch = ImagePatch(image)
    is_fork = image_patch.exists(""fork"")
    is_spoon = image_patch.exists(""spoon"")
    return bool_to_yesno(is_fork or is_spoon)"
15227759,What vehicle is to the left of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the fence?"")"
17109234,Is the chair that is made of wood tan or blue?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair that is made of wood tan or blue?"")"
19755723,Are there any ties?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tie"")) # Question assumes only one tie patch"
10934363,What vehicles are parked next to the building?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicles are parked next to the building?"")"
7153246,"On which side of the image is the faucet, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the faucet, the right or the left?"")"
4127884,"How does the blue bag look like, small or large?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the blue bag look like, small or large?"")"
5822629,What color is the tie the man is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the tie the man is with?"")"
3819341,What vegetable is to the left of the pepper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the pepper?"")"
980413,What is on the shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf?"")"
6515705,Are the cars in the top part or in the bottom of the picture?," # contains a relation (top, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cars in the top part or in the bottom of the picture?"")"
3253786,Are there both a chair and a table in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_chair and is_table)"
19859230,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
13129023,Is the statue in front of a cathedral?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue in front of a cathedral?"")"
15262657,Is the container to the left or to the right of the tap that is to the left of the freezer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the container to the left or to the right of the tap that is to the left of the freezer?"")"
5996801,What device is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is the girl holding?"")"
8621098,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
5313585,What drink is to the right of the coffee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is to the right of the coffee?"")"
4196103,Is the color of the box different than the color of the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the box different than the color of the plate?"")"
17498773,Which side of the picture is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13347060,What kind of animal is the collar on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the collar on?"")"
251430,Is the plate to the right of a fork?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the right of a fork?"")"
4444585,Who is swinging the racket?," # contains a relation (swinging), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is swinging the racket?"")"
15838976,What animal is tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is tan?"")"
14867089,Is the black helmet to the right or to the left of the guy the people are to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black helmet to the right or to the left of the guy the people are to the right of?"")"
21061039,Are there dogs or cats that are tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dog = image_patch.exists(""dog"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_dog or is_cat)"
17253658,Which kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is blue?"")"
11518232,Which side of the photo is the towel on?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the towel on?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5683118,Who is wearing a dress?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a dress?"")"
13971599,Does the table have the same color as the freezer?," # freezer is not in the image
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Does the table have the same color as the freezer?"")
    return bool_to_yesno(table_patches[0].verify_property(""table"", ""blue"") == image_patch.verify_property(""freezer"", ""blue"")) # freezer is not in the image"
371472,Is the man on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man on the left side?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
7631493,Do you see a plate above the table?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a plate above the table?"")"
1832647,Are there any butterflies on the banana that is not unripe?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any butterflies on the banana that is not unripe?"")"
8844813,Does the car on the road have yellow color?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the car on the road have yellow color?"")"
1509606,What kind of vegetable is on the plate that is on the table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is on the plate that is on the table?"")"
7482940,Is the cardboard box to the left of the crate that is holding the cans?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cardboard box to the left of the crate that is holding the cans?"")"
1777549,What is the animal in the zoo?," # contains a relation (in the zoo), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal in the zoo?"")"
6690901,Is the mouse pad to the left or to the right of the device in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mouse pad to the left or to the right of the device in the middle of the photo?"")"
14526285,The plant is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The plant is on what?"")"
8350596,Are there batters in front of the person that is in front of the umpire?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there batters in front of the person that is in front of the umpire?"")"
13986435,Are the spoons to the left of the tablecloth?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the spoons to the left of the tablecloth?"")"
5894726,Who is wearing a bathing suit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a bathing suit?"")"
14291498,Where was the picture taken?," # contains a relation (where was taken), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the picture taken?"")"
18595129,What sign is on the intersection?," # contains a relation (on, at, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sign is on the intersection?"")"
12734774,What is the paper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the paper on?"")"
5779412,What kind of food is to the right of the butter knife?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is to the right of the butter knife?"")"
1421059,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8790366,Do you see an orange surfboard?," # surfboard is a type of board
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see an orange surfboard?"")"
4568866,Are there any cars to the right of the fence that is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any cars to the right of the fence that is in front of the building?"")"
191015093,Is the color of the staircase of the train different than the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the staircase of the train different than the train?"")"
1260861,Are there any bears in the image that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    for bear_patch in bear_patches:
        if not bear_patch.verify_property(""bear"", ""white""):
            return ""yes""
    return ""no"""
18560289,Are there either any nuts or grapes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nuts"") or image_patch.exists(""grapes""))"
8806992,Is the shelf to the left or to the right of the girl?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left or to the right of the girl?"")"
19827465,Is there any dog near the book that is lying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any dog near the book that is lying?"")"
18186095,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
8819014,What do the plate and the tray have in common?," # assumes only one plate and one tray
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    tray_patches = image_patch.find(""tray"")
    # Question assumes only one plate and one tray patch
    if len(plate_patches) == 0 or len(tray_patches) == 0:
        # If no plate or tray is found, query the image directly
        return image_patch.simple_query(""What do the plate and the tray have in common?"")
    plate_patch = plate_patches[0]
    tray_patch = tray_patches[0]
    common_properties = plate_patch.verify_property(""plate"", ""has food"") and tray_patch.verify_property(""tray"", ""has food"")
    return ""food"" if common_properties else ""nothing"""
8744630,Do you see boys in the beach?," # beach is a location, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see boys in the beach?"")"
17305983,Is the boat to the left of the man small or large?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boat to the left of the man small or large?"")"
13996668,What is the device that is to the right of the man that is wearing sandals called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the man that is wearing sandals called?"")"
3229224,Does the chair that is to the right of the laptop look black and wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the chair that is to the right of the laptop look black and wooden?"")"
18115937,What type of furniture is to the right of the office chair the man is sitting in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the right of the office chair the man is sitting in?"")"
18320144,Is there any grass that is tall?," # contains a relation (tall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is tall?"")"
11656824,What color is the airplane?," # airplane is a noun, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the airplane?"")"
3384978,What is this elephant standing in?," # contains a relation (standing in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this elephant standing in?"")"
19445032,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
12535479,"On which side is the blue flag, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the blue flag, the left or the right?"")"
13152416,What is the cart holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cart holding?"")"
10418960,Are there bottles to the left of the animal that looks brown and black?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bottles to the left of the animal that looks brown and black?"")"
4158343,Is the man to the right of the red bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the red bus?"")"
19336797,Is this fence both white and metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""fence"", ""white"") and image_patch.verify_property(""fence"", ""metallic""))"
7362229,Is the umpire to the right or to the left of the helmet the catcher is wearing?," # helmet the catcher is wearing
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""Is the umpire to the right or to the left of the helmet the catcher is wearing?"")"
19231134,Is the plastic container white and large?," # returns yes or no
    image_patch = ImagePatch(image)
    plastic_container_patches = image_patch.find(""plastic container"")
    # Question assumes only one plastic container patch
    if len(plastic_container_patches) == 0:
        # If no plastic container is found, query the image directly
        return image_patch.simple_query(""Is the plastic container white and large?"")
    for plastic_container_patch in plastic_container_patches:
        is_white = plastic_container_patch.verify_property(""plastic container"", ""white"")
        is_large = plastic_container_patch.verify_property(""plastic container"", ""large"")
        if is_white and is_large:
            return ""yes""
    return ""no"""
225794,Which color is the car that is on the left?," # contains a relation (on the left), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the car that is on the left?"")"
6779505,What is common to the vase and the leaf?," # assumes only one vase and one leaf
    image_patch = ImagePatch(image)
    vase_patches = image_patch.find(""vase"")
    leaf_patches = image_patch.find(""leaf"")
    # Question assumes only one vase and one leaf patch
    if len(vase_patches) == 0 or len(leaf_patches) == 0:
        # If no vase or leaf is found, query the image directly
        return image_patch.simple_query(""What is common to the vase and the leaf?"")
    vase_patch = vase_patches[0]
    leaf_patch = leaf_patches[0]
    common_properties = set(vase_patch.simple_query(""What properties does the vase have?"").split("", "")) & set(leaf_patch.simple_query(""What properties does the leaf have?"").split("", ""))
    return common_properties[0]"
14123496,What kind of drink is to the right of the bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of drink is to the right of the bread?"")"
14421104,Are there any people to the left of the elephant the palm is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the left of the elephant the palm is to the left of?"")"
17921333,Does the train to the right of the other train look white?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the train to the right of the other train look white?"")"
432927,Which kind of furniture is the plant on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the plant on?"")"
13256582,Is that floor lamp to the left of a book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that floor lamp to the left of a book?"")"
3403504,Which kind of baked good is fried?," # contains a relation (fried), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is fried?"")"
7934383,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1569405,What is the person to the left of the people riding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the people riding?"")"
2905018,"What is the telephone on, a nightstand or a shelf?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the telephone on, a nightstand or a shelf?"")"
8583932,What is the table in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the table in front of?"")"
8167655,Are there men to the left of the bag in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""bag""))"
81021655,Is there a chair that is not made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is there a chair that is not made of metal?"")
    for chair_patch in chair_patches:
        is_made_of_metal = chair_patch.simple_query(""Is the chair made of metal?"") == ""yes""
        if not is_made_of_metal:
            return ""yes""
    return ""no"""
1228913,What is covering the garlic?," # garlic is a food, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covering the garlic?"")"
14411095,Is the brown animal to the left of the sitting people that are on the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown animal to the left of the sitting people that are on the grass?"")"
13760147,Is the bowl to the right or to the left of the white container?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl to the right or to the left of the white container?"")"
2791583,Who rides the bike?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who rides the bike?"")"
2819250,Is the snowboarder to the right of the people that are playing the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the snowboarder to the right of the people that are playing the pole?"")"
14894806,What are the leaves on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the leaves on?"")"
3760939,What is the appliance to the right of the appliance that the tea kettle is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the right of the appliance that the tea kettle is on?"")"
10311922,What is in front of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the man?"")"
51059415,Are the animals all of the same species?," # returns yes or no
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Are the animals all of the same species?"")
    species = animal_patches[0].simple_query(""What species is the animal?"")
    for animal_patch in animal_patches:
        if animal_patch.simple_query(""What species is the animal?"") != species:
            return ""no""
    return ""yes"""
5931933,What is the piece of furniture to the left of the rope called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the rope called?"")"
2370276,Is the couch to the left of the faucet in the middle of the picture?," # image is a 3D array
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""Is the couch to the left of the faucet in the middle of the picture?"")
    for couch_patch in couch_patches:
        faucet_patches = image_patch.find(""faucet"")
        # Question assumes only one faucet patch
        if len(faucet_patches) == 0:
            return ""no""
        for faucet_patch in faucet_patches:
            if faucet_patch.horizontal_center == image_patch.horizontal_center:
                return bool_to_yesno(couch_patch.horizontal_center < faucet_patch.horizontal_center)
    return ""no"""
101025522,What is the blanket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blanket on?"")"
171021,Is there a bottle on the black desk?," # bottle is on the black desk
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is there a bottle on the black desk?"")
    for bottle_patch in bottle_patches:
        if bottle_patch.simple_query(""Is the bottle on the black desk?"") == ""yes"":
            return ""yes""
    return ""no"""
14198350,How is the food that is not wrapped called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the food that is not wrapped called?"")"
111034642,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
18794329,Of what color is the fat book?," # fat book
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""Of what color is the fat book?"")
    return book_patches[0].simple_query(""What color is the book?"")"
10893922,Is the camera on the left side or on the right of the picture?," # left or right
    image_patch = ImagePatch(image)
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one camera patch
    if len(camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch.simple_query(""Is the camera on the left side or on the right of the picture?"")
    camera_patch = camera_patches[0]
    if camera_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17319626,Who is wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing jeans?"")"
4231907,Is this refrigerator to the left of a can?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this refrigerator to the left of a can?"")"
19223012,Does the animal on the bed seem to be brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the animal on the bed seem to be brown?"")"
11565167,On which side of the picture is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14506986,What kind of device is in the living room?," # contains a relation (in the living room), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is in the living room?"")"
17537099,What color is the coat the woman is wearing?," # coat is not a property of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""What color is the coat the woman is wearing?"")
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        return image_patch.simple_query(""What color is the coat the woman is wearing?"")
    return coat_patches[0].simple_query(""What color is the coat the woman is wearing?"") # crop would include the coat so keep it in the query"
14939488,What color is the car?," # returns the color of the car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""What color is the car?"")
    return car_patches[0].simple_query(""What color is the car?"")"
2486842,Are there any jets at the airport?," # contains a relation (at), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""jet""))"
16974454,Is there any broccoli to the left of the mushroom in the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any broccoli to the left of the mushroom in the bowl?"")"
13436619,"Which piece of furniture is not yellow, the chair or the desk?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    desk_patches = image_patch.find(""desk"")
    for chair_patch in chair_patches:
        if chair_patch.verify_property(""chair"", ""yellow""):
            return ""desk""
    for desk_patch in desk_patches:
        if desk_patch.verify_property(""desk"", ""yellow""):
            return ""chair""
    return ""chair"""
7415898,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
14906930,Are the tomatoes in the top or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the tomatoes in the top or in the bottom of the photo?"")"
1699291,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12267740,"Which kind of clothing is black, the coat or the shirt?"," # contains a relation (coat or shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black, the coat or the shirt?"")"
387283,The person to the right of the cabinet is using what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person to the right of the cabinet is using what?"")"
14562067,On which side of the picture is the white towel?," # left or right
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the white towel?"")
    if towel_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1328192,Are there any sheep on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sheep on the road"")) # crop would include the road so keep it in the query"
13102373,The flowers are in what?," # container
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flowers"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flowers are found, query the image directly
        return image_patch.simple_query(""The flowers are in what?"")
    return flower_patches[0].simple_query(""The flowers are in what?"") # crop would include the container so keep it in the query"
1168300,On which side of the image is the large appliance?," # left or right
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""large appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the large appliance?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10451828,What kind of furniture is to the left of the quilt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the quilt?"")"
5394259,Is there a pillow on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow on the bed?"")"
9431275,Is the man to the right of a person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a person?"")"
4352395,Is the open bottle to the left or to the right of the bag?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the open bottle to the left or to the right of the bag?"")"
17692379,What do you think is on the red wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the red wall?"")"
3279134,Is the helmet to the right or to the left of the person that is in the center of the picture?," # assumes only one helmet and one person
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    person_patches = image_patch.find(""person"")
    # Question assumes only one helmet and one person patch
    if len(helmet_patches) == 0 or len(person_patches) == 0:
        # If no helmet or person is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the right or to the left of the person that is in the center of the picture?"")
    helmet_patch = helmet_patches[0]
    person_patch = person_patches[0]
    if helmet_patch.horizontal_center > person_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
17779674,Is that woman wearing a boot?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that woman wearing a boot?"")"
50206,Is the tshirt sleeveless or short sleeved?," # contains a relation (sleeveless, short sleeved, long sleeved, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tshirt sleeveless or short sleeved?"")"
343615,How old is the lady?," # returns a string
    image_patch = ImagePatch(image)
    lady_patches = image_patch.find(""lady"")
    # Question assumes only one lady patch
    if len(lady_patches) == 0:
        # If no lady is found, query the image directly
        return image_patch.simple_query(""How old is the lady?"")
    return lady_patches[0].simple_query(""How old is the lady?"") # crop would include the lady so keep it in the query"
7816098,Do you see trucks that are not white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see trucks that are not white?"")"
19681129,What is the fruit to the left of the orange that is in front of the tomatoes called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit to the left of the orange that is in front of the tomatoes called?"")"
3664349,Which kind of device is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the table?"")"
16948322,Is there a pizza near the silverware?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pizza near the silverware?"")"
14138906,What kind of fast food is to the left of the pan?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is to the left of the pan?"")"
5140926,Is the window on the front of the microwave black and wavy?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the window on the front of the microwave black and wavy?"")"
2369451,Does the door have a different color than the tea kettle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the door have a different color than the tea kettle?"")"
16786665,What color does the container on the right of the photo have?," # container on the right
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""What color does the container on the right of the photo have?"")
    container_patch = container_patches[0]
    if container_patch.horizontal_center > image_patch.horizontal_center:
        return container_patch.simple_query(""What color does the container on the right of the photo have?"")
    return container_patch.simple_query(""What color does the container on the left of the photo have?"")"
7233708,Is the white helmet to the left of a biker?," # helmet is white, biker is wearing a helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the white helmet to the left of a biker?"")
    helmet_patch = helmet_patches[0]
    biker_patches = image_patch.find(""biker"")
    # Question assumes only one biker patch
    if len(biker_patches) == 0:
        return ""no""
    biker_patch = biker_patches[0]
    return bool_to_yesno(helmet_patch.horizontal_center < biker_patch.horizontal_center)"
15784816,Are there both pans and baking sheets in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pan = image_patch.exists(""pan"")
    is_baking_sheet = image_patch.exists(""baking sheet"")
    return bool_to_yesno(is_pan and is_baking_sheet)"
6856200,Do you see both eggs and pancakes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""eggs"") and image_patch.exists(""pancakes""))"
639182,Is the animal near the sticker white and striped?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the animal near the sticker white and striped?"")"
13453532,Is the giraffe behind the pole surrounded by the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the giraffe behind the pole surrounded by the fence?"")"
6750344,Is there any cheese in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cheese""))"
4536582,Is the car in the bottom part of the photo?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car in the bottom part of the photo?"")"
6925266,What color do you think the zebra is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the zebra is?"")"
1515273,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4554065,Who is wearing the jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jeans?"")"
18159331,Are there white keyboards or remote controls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_keyboard = image_patch.exists(""white keyboard"")
    is_remote_control = image_patch.exists(""remote control"")
    return bool_to_yesno(is_white_keyboard or is_remote_control)"
4361166,On which side of the picture is the box?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the box?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11259160,What color is the boat in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the boat in the center?"")"
12217205,Are there either pilots or jets in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pilot = image_patch.exists(""pilot"")
    is_jet = image_patch.exists(""jet"")
    return bool_to_yesno(is_pilot or is_jet)"
16832974,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
2467121,Is the man behind the woman wearing a cap?," # contains a relation (behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man behind the woman wearing a cap?"")"
2925286,Are there any giraffes in the field?," # contains a relation (in the field), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe in the field"")) # crop would include the field so keep it in the query"
8135686,Does the door have a different color than the glove?," # returns yes or no
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Does the door have a different color than the glove?"")
    door_color = door_patches[0].simple_query(""What color is the door?"")
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""Does the door have a different color than the glove?"")
    glove_color = glove_patches[0].simple_query(""What color is the glove?"")
    return bool_to_yesno(door_color != glove_color)"
10300646,What do both the cart and the sandal have in common?," # returns a string
    image_patch = ImagePatch(image)
    cart_patches = image_patch.find(""cart"")
    # Question assumes only one cart patch
    if len(cart_patches) == 0:
        # If no cart is found, query the image directly
        return image_patch.simple_query(""What do both the cart and the sandal have in common?"")
    cart_patch = cart_patches[0]
    sandal_patches = image_patch.find(""sandal"")
    # Question assumes only one sandal patch
    if len(sandal_patches) == 0:
        return image_patch.simple_query(""What do both the cart and the sandal have in common?"")
    sandal_patch = sandal_patches[0]
    common_properties = cart_patch.verify_property(""cart"", ""has wheels"") and sandal_patch.verify_property(""sandal"", ""has straps"")
    return ""has wheels"" if common_properties else ""has straps"""
5862530,Which color do you think the sky is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color do you think the sky is?"")"
19782504,Is there a plate to the left of the tea?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate to the left of the tea?"")"
1516456,Is the cheese on a sandwich?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cheese on a sandwich?"")"
889165,What fruit is in the basket?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is in the basket?"")"
2445050,Is the tall pole in front of a flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tall pole in front of a flag?"")"
14405454,What is the name of the watercraft that is below the bird to the right of the boat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the watercraft that is below the bird to the right of the boat?"")"
12664343,What color is the hair?," # returns the color of the hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""What color is the hair?"")
    return hair_patches[0].simple_query(""What color is the hair?"") # crop would include the hair so keep it in the query"
853888,Do you see any chair or can in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") or image_patch.exists(""can""))"
2112671,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
13757851,What appliance is to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the man?"")"
17389408,What is on the bed on the left of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bed on the left of the picture?"")"
18283822,Do you see any mixers in the white object that is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any mixers in the white object that is on the wall?"")"
6879791,On which side of the image is the couch?," # left or right
    image_patch = ImagePatch(image)
    couch_patches = image_patch.find(""couch"")
    # Question assumes only one couch patch
    if len(couch_patches) == 0:
        # If no couch is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the couch?"")
    if couch_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18226620,What are the papers on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the papers on?"")"
2264902,Are there both windows and doors in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
9624793,Is the white car to the left of a person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white car to the left of a person?"")"
161003981,What is the person wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person wearing?"")"
15982836,Is the chair to the right or to the left of the appliance that is in the kitchen?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the appliance that is in the kitchen?"")"
14257859,Are the chairs on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the chairs on the left?"")) # crop would include the chairs so keep it in the query"
41021721,What is the appliance in the yellow kitchen?," # contains a relation (in the yellow kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance in the yellow kitchen?"")"
6180875,Are there tables in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""table""))"
149643,What is the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman wearing?"")"
10290604,Are there both dumpsters and fire hydrants in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_dumpster = image_patch.exists(""dumpster"")
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    return bool_to_yesno(is_dumpster and is_fire_hydrant)"
3170072,Who is wearing a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a glove?"")"
2646418,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
8477349,What type of furniture is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is not large?"")"
8809593,Is the woman to the left or to the right of the pot?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the pot?"")"
5114760,What is common to the hydrant and the frame?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the hydrant and the frame?"")"
1900761,Is the grass in front of the elephant near the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass in front of the elephant near the person?"")"
141018627,The player that is waiting is wearing what?," # contains a relation (waiting for), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The player that is waiting is wearing what?"")"
13970982,What is the couch in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the couch in front of?"")"
5780523,Who do you think wears a uniform?," # uniform is a property of the person
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think wears a uniform?"")"
9622126,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
5533136,Are there any blue bags or backpacks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_bag = image_patch.exists(""blue bag"")
    is_blue_backpack = image_patch.exists(""blue backpack"")
    return bool_to_yesno(is_blue_bag or is_blue_backpack)"
9219464,What is the vehicle that the biker is in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that the biker is in front of?"")"
8356810,Are there both plates and mushrooms in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_mushroom = image_patch.exists(""mushroom"")
    return bool_to_yesno(is_plate and is_mushroom)"
17592593,The baby is in what?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The baby is in what?"")"
5723974,Do you see either full plates or bottles there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""full plate"") or image_patch.exists(""bottle""))"
13202840,What animal is on the branch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the branch?"")"
121038141,What color is the curly hair?," # curly hair is not a standard object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the curly hair?"")"
3669188,Is the cake to the left or to the right of the child on the left of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake to the left or to the right of the child on the left of the photo?"")"
17638190,Which kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is it?"")"
991666,On which side of the picture is the tower?," # left or right
    image_patch = ImagePatch(image)
    tower_patches = image_patch.find(""tower"")
    # Question assumes only one tower patch
    if len(tower_patches) == 0:
        # If no tower is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the tower?"")
    tower_patch = tower_patches[0]
    if tower_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
181928,What kind of vegetable is to the right of the food the squash is covered with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the food the squash is covered with?"")"
9932100,Is the man to the right of a candle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a candle?"")"
17522033,Is the fire place below a mirror?," # mirror is on top of the fire place
    image_patch = ImagePatch(image)
    fire_place_patches = image_patch.find(""fire place"")
    # Question assumes only one fire place patch
    if len(fire_place_patches) == 0:
        # If no fire place is found, query the image directly
        return image_patch.simple_query(""Is the fire place below a mirror?"")
    for fire_place_patch in fire_place_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center > fire_place_patch.horizontal_center:
                return ""yes""
    return ""no"""
13811747,Which color is the scarf?," # returns the color of the scarf
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch.simple_query(""Which color is the scarf?"")
    return scarf_patches[0].simple_query(""Which color is the scarf?"") # crop would include the scarf so keep it in the query"
620129,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
28036,What is the device to the right of the device in the center of the image called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the device in the center of the image called?"")"
11896086,Who do you think is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who do you think is wearing a jacket?"")"
1879347,Are there any desks or chairs that are made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    is_desk = image_patch.exists(""desk"")
    is_chair = image_patch.exists(""chair"")
    is_wooden = False
    if is_desk:
        for desk_patch in image_patch.find(""desk""):
            is_wooden = desk_patch.verify_property(""desk"", ""wooden"")
            if is_wooden:
                return ""yes""
    if is_chair:
        for chair_patch in image_patch.find(""chair""):
            is_wooden = chair_patch.verify_property(""chair"", ""wooden"")
            if is_wooden:
                return ""yes""
    return ""no"""
12775388,What is the color of the animal that is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the animal that is standing?"")"
4317919,What animals are black?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are black?"")"
1544426,What vehicle is not shiny?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is not shiny?"")"
12579285,Are there cars or umbrellas in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_car or is_umbrella)"
19539912,Are there men to the right of the glasses the girl is with?," # glasses the girl is with
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""Are there men to the right of the glasses the girl is with?"")
    glasses_patch = glasses_patches[0]
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Are there men to the right of the glasses the girl is with?"")
    for man_patch in man_patches:
        if glasses_patch.horizontal_center < man_patch.horizontal_center:
            return ""yes""
    return ""no"""
12151703,Does the helmet to the right of the batter look red?," # batter is a baseball term
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Does the helmet to the right of the batter look red?"")
    for helmet_patch in helmet_patches:
        if helmet_patch.horizontal_center > image_patch.horizontal_center / 2: # center of the batter
            return helmet_patch.simple_query(""Is the helmet red?"")
    return ""no"""
17420963,What is in front of the woman that is to the right of the coffee?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the woman that is to the right of the coffee?"")"
1371221,What is the brown item of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown item of furniture?"")"
9407930,What item of furniture is the person to the right of the blanket sitting on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is the person to the right of the blanket sitting on?"")"
7115563,Do you see any pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow""))"
15125919,"Which part is the person in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part is the person in, the bottom or the top?"")"
2448041,Is the color of the purse different than the coat?," # returns yes or no
    image_patch = ImagePatch(image)
    purse_patches = image_patch.find(""purse"")
    # Question assumes only one purse patch
    if len(purse_patches) == 0:
        # If no purse is found, query the image directly
        return image_patch.simple_query(""Is the color of the purse different than the coat?"")
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        return ""no""
    coat_patch = coat_patches[0]
    purse_patch = purse_patches[0]
    return bool_to_yesno(purse_patch.simple_query(""What is the color of the purse?"") != coat_patch.simple_query(""What is the color of the coat?""))"
16378460,Is the woman on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right side?"")"
1672756,What is on the cake?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the cake?"")"
18680732,Who wears shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears shorts?"")"
9802,Are there any chimneys or paintings in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chimney"") or image_patch.exists(""painting""))"
1331573,Which kind of clothing is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is red?"")"
10288021,What are the vegetables to the left of the small bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the vegetables to the left of the small bowl?"")"
2173572,Is the paper napkin on the left or on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the paper napkin on the left or on the right?"")"
6175256,What is the trash can full of?," # trash can is a container
    image_patch = ImagePatch(image)
    trash_can_patches = image_patch.find(""trash can"")
    # Question assumes only one trash can patch
    if len(trash_can_patches) == 0:
        # If no trash can is found, query the image directly
        return image_patch.simple_query(""What is the trash can full of?"")
    return trash_can_patches[0].simple_query(""What is the trash can full of?"") # crop would include the contents so keep it in the query"
11674152,Is the man to the left or to the right of the wineglass?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the wineglass?"")"
1711866,Do you see either any pizza slices or notebooks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pizza slice"") or image_patch.exists(""notebook"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
31058044,Do the blanket and the bear have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one blanket and one bear patch
    if len(blanket_patches) == 0 or len(bear_patches) == 0:
        # If no blanket or bear is found, query the image directly
        return image_patch.simple_query(""Do the blanket and the bear have a different colors?"")
    blanket_patch = blanket_patches[0]
    bear_patch = bear_patches[0]
    return bool_to_yesno(blanket_patch.verify_property(""blanket"", ""blue"") != bear_patch.verify_property(""bear"", ""blue""))"
852260,Is the sky blue and cloudless?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sky blue and cloudless?"")"
1614860,Are there stop signs in the photo that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""stop sign"") and image_patch.exists(""red""))"
3937330,What animal is the man to the right of the girl holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the man to the right of the girl holding?"")"
300670,Where is the boy?," # returns the location of the boy
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""Where is the boy?"")
    return boy_patches[0].simple_query(""Where is the boy?"") # crop would include the boy so keep it in the query"
18797130,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
8404128,What kind of clothing is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is red?"")"
16877513,What color is the outfit?," # returns the color of the outfit
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the outfit?"")"
18471728,What is the kid wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kid wearing?"")"
8583606,Does that shirt look red?," # contains a property (red, blue, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that shirt look red?"")"
8125967,What is full of the books?," # container
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is full of the books?"")"
122206,The bike below the window is hanging on what?," # contains a relation (below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The bike below the window is hanging on what?"")"
1849027,Is the color of the post the same as the shirt?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the post the same as the shirt?"")"
16457810,What's the girl wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the girl wearing?"")"
6249032,"Where in this image is the man, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this image is the man, in the bottom or in the top?"")"
12518907,Are there cars near the palm tree in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""car"") and image_patch.exists(""palm tree"")) # assumes only one palm tree patch"
1238229,Are there any words in this photograph that are red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""word"") and image_patch.find(""word"")[0].verify_property(""word"", ""red""))"
4777076,What piece of furniture is to the right of the knife that is on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the right of the knife that is on the left?"")"
9845737,Is there a woman to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the right of the man?"")"
3622076,How's the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How's the weather?"")"
3361842,What color is the boy that is wearing a tee shirt?," # contains a relation (wearing a tee shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the boy that is wearing a tee shirt?"")"
19529771,"What type of clothing is not brown, the jacket or the glove?"," # contains a relation (not brown, the jacket or the glove), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is not brown, the jacket or the glove?"")"
8907797,Are there fire hydrants or houses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    is_house = image_patch.exists(""house"")
    return bool_to_yesno(is_fire_hydrant or is_house)"
17762992,Is the girl wearing jeans?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl wearing jeans?"")"
5205382,Are there either any buckets or fences that are silver?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bucket = image_patch.exists(""bucket"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_bucket or is_fence)"
19667449,On which side of the photo are the shelves?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo are the shelves?"")"
19456905,Who is lying?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is lying?"")"
15130657,What is the vehicle to the right of the person that is on the platform?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the person that is on the platform?"")"
3177486,What is the man to the right of the painting wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the right of the painting wearing?"")"
31051446,Is there a helmet to the right of the catcher that is in front of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a helmet to the right of the catcher that is in front of the fence?"")"
12597311,Is the vehicle in front of the tree yellow and large?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vehicle in front of the tree yellow and large?"")"
9574636,Do the shirt and the car have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    car_patches = image_patch.find(""car"")
    # Question assumes only one shirt and one car patch
    if len(shirt_patches) == 0 or len(car_patches) == 0:
        # If no shirt or car is found, query the image directly
        return image_patch.simple_query(""Do the shirt and the car have a different colors?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    car_color = car_patches[0].simple_query(""What is the color of the car?"")
    return bool_to_yesno(shirt_color != car_color)"
1827937,Who is riding a bike?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding a bike?"")"
31012438,Who is wearing the robe?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the robe?"")"
8232554,Is the man to the right or to the left of the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the car?"")"
1368199,Are there both microwaves and containers in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_microwave = image_patch.exists(""microwave"")
    is_container = image_patch.exists(""container"")
    return bool_to_yesno(is_microwave and is_container)"
6941769,Is the house on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the house on the left?"")"
11655934,Is there a blue bus or train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_bus = image_patch.exists(""blue bus"")
    is_blue_train = image_patch.exists(""blue train"")
    return bool_to_yesno(is_blue_bus or is_blue_train)"
19270517,What is in front of the drawers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the drawers?"")"
121042067,Is this lettuce or broccoli?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this lettuce or broccoli?"")"
14920694,Is there a nightstand near the sofa that is not large?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a nightstand near the sofa that is not large?"")"
3623776,Is the lady to the right or to the left of the person that is standing?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the right or to the left of the person that is standing?"")"
17766787,Are the two animals of the same type?," # contains a relation (same type, different type, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the two animals of the same type?"")"
18923935,Is the person in front of the path wearing jeans?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in front of the path wearing jeans?"")"
9409159,What is the electric toothbrush on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the electric toothbrush on?"")"
14290223,What vehicle is to the left of the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the left of the fence?"")"
15916642,What is the name of the device that is in front of the curtains that look orange?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the device that is in front of the curtains that look orange?"")"
780697,Are there any silver laptops in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""silver laptop"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
17355590,Do you see a bread on top of the cooking utensil that is brown?," # contains a relation (on top of) and a property (brown), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bread on top of the cooking utensil that is brown?"")"
3371208,Is the baby to the right or to the left of the woman that is wearing a dress?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the baby to the right or to the left of the woman that is wearing a dress?"")"
10713471,Are there umbrellas or bicycles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_bicycle = image_patch.exists(""bicycle"")
    return bool_to_yesno(is_umbrella or is_bicycle)"
13763153,Is there any airplane that is small in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    for airplane_patch in airplane_patches:
        if airplane_patch.simple_query(""Is the airplane small?"") == ""yes"":
            return ""yes""
    return ""no"""
6636539,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
399777,What is in front of the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trees?"")"
1430617,Are there any buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bus""))"
1943333,Is the television to the right of the curtains on the left?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    television_patches = image_patch.find(""television"")
    # Question assumes only one television patch
    if len(television_patches) == 0:
        # If no television is found, query the image directly
        return image_patch.simple_query(""Is the television to the right of the curtains on the left?"")
    for television_patch in television_patches:
        curtain_patches = image_patch.find(""curtains"")
        for curtain_patch in curtain_patches:
            if curtain_patch.horizontal_center < image_patch.horizontal_center and television_patch.horizontal_center > curtain_patch.horizontal_center:
                return ""yes""
    return ""no"""
7258967,Are both the juice and the drink to the left of the carrots red?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the juice red?"") and image_patch.simple_query(""Is the drink red?"") and image_patch.simple_query(""Are the carrots red?"")) # crop would include the carrots so keep it in the query"
15787588,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
14226686,Is the weather clear today?," # clear is a property of weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""clear""))"
16598265,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
14777866,Is the person with the shorts wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person with the shorts wearing a hat?"")"
4563736,What piece of furniture is the cat behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is the cat behind of?"")"
17682942,What is the cord hanging on?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cord hanging on?"")"
5811275,What aircraft is large?," # aircraft is a broad category
    image_patch = ImagePatch(image)
    aircraft_patches = image_patch.find(""aircraft"")
    # Question assumes only one aircraft patch
    if len(aircraft_patches) == 0:
        # If no aircraft is found, query the image directly
        return image_patch.simple_query(""What aircraft is large?"")
    for aircraft_patch in aircraft_patches:
        if aircraft_patch.width > 100: # arbitrary threshold
            return aircraft_patch.simple_query(""What aircraft is large?"")
    return image_patch.simple_query(""What aircraft is large?"") # if no aircraft is large, query the image directly"
4733898,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
2782248,The train to the right of the can is what color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The train to the right of the can is what color?"")"
11479225,Are there both a fence and a truck in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_fence and is_truck)"
9160672,What piece of furniture is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is green?"")"
3277888,"Which type of clothing is not black, the dress or the suit?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of clothing is not black, the dress or the suit?"")"
272182,What is the name of the pieces of clothing that are black?," # returns the name of the first piece of clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the pieces of clothing that are black?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What is the name of the pieces of clothing that are black?"")
    return clothing_patch.simple_query(""What is the name of the pieces of clothing that are black?"")"
16414229,Which side of the photo is the player on?," # left or right
    image_patch = ImagePatch(image)
    player_patches = image_patch.find(""player"")
    # Question assumes only one player patch
    if len(player_patches) == 0:
        # If no player is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the player on?"")
    return ""left"" if player_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
2476706,How big is the white train to the left of the man?," # returns a string
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""How big is the white train to the left of the man?"")
    man_patch = man_patches[0]
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        return image_patch.simple_query(""How big is the white train to the left of the man?"")
    for train_patch in train_patches:
        if train_patch.horizontal_center < man_patch.horizontal_center:
            return train_patch.simple_query(""How big is the white train to the left of the man?"")
    return image_patch.simple_query(""How big is the white train to the left of the man?"")"
3384158,Who is riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding?"")"
1613341,What is the piece of furniture that is made of glass called?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that is made of glass called?"")"
3918008,Is the truck to the left of the person white and large?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck to the left of the person white and large?"")"
2727126,Is there a snowboard to the left of the skis below the sky?," # contains a relation (above, below, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a snowboard to the left of the skis below the sky?"")"
18634512,"Where in this picture is the faucet, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this picture is the faucet, in the bottom or in the top?"")"
17109828,Is the red drink on the left?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red drink on the left?"")"
17345893,The young woman stands on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The young woman stands on what?"")"
13720082,"In which part is the short ski, the bottom or the top?"," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the short ski, the bottom or the top?"")"
2958711,Who sits at the desk to the left of the child?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who sits at the desk to the left of the child?"")"
6772394,Who is wearing the pajamas?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pajamas?"")"
15849775,Is the train yellow or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the train yellow or blue?"")"
121023545,Is there a cabinet under the sink?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cabinet under the sink?"")"
622732,What is the food to the right of the girl on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the girl on the left?"")"
7535464,Are there any controllers or cell phones in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_controller = image_patch.exists(""controller"")
    is_cell_phone = image_patch.exists(""cell phone"")
    return bool_to_yesno(is_controller or is_cell_phone)"
19346396,What is the pot on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the pot on?"")"
3895795,Who is wearing the bracelets?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the bracelets?"")"
9221351,Is this a red couch?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a red couch?"")"
14449373,Is the statue large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the statue large?"")"
16806960,Is the man on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right or on the left?"")"
9660648,Which side of the image is the catcher on?," # left or right
    image_patch = ImagePatch(image)
    catcher_patches = image_patch.find(""catcher"")
    # Question assumes only one catcher patch
    if len(catcher_patches) == 0:
        # If no catcher is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the catcher on?"")
    if catcher_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8208411,Are the books to the left or to the right of the bag?," # assumes only one book patch and one bag patch
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    bag_patches = image_patch.find(""bag"")
    if len(book_patches) == 0 or len(bag_patches) == 0:
        return image_patch.simple_query(""Are the books to the left or to the right of the bag?"")
    book_center = book_patches[0].horizontal_center
    bag_center = bag_patches[0].horizontal_center
    if book_center < bag_center:
        return ""left""
    else:
        return ""right"""
15774996,Is the person near the train wearing jeans?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person near the train wearing jeans?"")"
9825124,Is this a bookcase or a mirror?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bookcase or a mirror?"")"
18980009,What appliance is that?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is that?"")"
14400092,What is the animal that is eating the grass?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is eating the grass?"")"
6137635,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
5386851,Is the stove on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the stove on the right?"")"
1713444,Is the dessert on a plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dessert on a plate?"")"
14725882,On which side of the photo is the girl?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the girl?"")
    return ""left"" if girl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
7794582,What is the item of furniture to the left of the man that is to the left of the coffee table called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the man that is to the left of the coffee table called?"")"
53855,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
18807786,Which type of furniture is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of furniture is brown?"")"
3114221,Are there fences made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence made of wood"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
3255530,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
19182143,Is the bag different in color than the laptop?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag different in color than the laptop?"")"
14713325,What is the color of the cup?," # returns the color of the cup
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""What is the color of the cup?"")
    return cup_patches[0].simple_query(""What is the color of the cup?"") # crop would include the cup so keep it in the query"
5300371,What is the milk in?," # assumes only one milk patch
    image_patch = ImagePatch(image)
    milk_patches = image_patch.find(""milk"")
    if len(milk_patches) == 0:
        # If no milk is found, query the image directly
        return image_patch.simple_query(""What is the milk in?"")
    return milk_patches[0].simple_query(""What is the milk in?"")"
10348966,Is the bowl different in color than the label?," # assumes only one bowl and one label
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    label_patches = image_patch.find(""label"")
    if len(bowl_patches) == 0 or len(label_patches) == 0:
        return image_patch.simple_query(""Is the bowl different in color than the label?"")
    bowl_patch = bowl_patches[0]
    label_patch = label_patches[0]
    return bool_to_yesno(bowl_patch.verify_property(""bowl"", ""color"") != label_patch.verify_property(""label"", ""color""))"
15166524,Is the orange cat to the left or to the right of the dog that looks brown?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange cat to the left or to the right of the dog that looks brown?"")"
1645,Is the man on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right side?"")"
12762016,What is in the bowl in the top part?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the bowl in the top part?"")"
5741610,Is the bookshelf on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bookshelf on the right of the picture?"")"
2457880,Is the garbage can made of the same material as the planter?," # material is not a property of the object, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the garbage can made of the same material as the planter?"")"
4881855,What is the shoe lace tied around?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the shoe lace tied around?"")"
1107216,What animal is feeding the leaves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is feeding the leaves?"")"
542110,Does the bowl to the left of the bacon look white?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bowl to the left of the bacon look white?"")"
2183751,What piece of furniture is gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is gray?"")"
686941,Does the shirt look red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look red?"")"
667649,Does the belt look blue and wide?," # returns yes or no
    image_patch = ImagePatch(image)
    belt_patches = image_patch.find(""belt"")
    # Question assumes only one belt patch
    if len(belt_patches) == 0:
        # If no belt is found, query the image directly
        return image_patch.simple_query(""Does the belt look blue and wide?"")
    return belt_patches[0].verify_property(""belt"", ""blue"") and belt_patches[0].verify_property(""belt"", ""wide"")"
17153673,Where is the man?," # returns the location of the man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Where is the man?"")
    return man_patches[0].simple_query(""Where is the man?"")"
8559093,Do you see a woman to the left of the container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a woman to the left of the container?"")"
1798822,What kind of furniture is to the left of the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the couch?"")"
16682462,Who is riding the bicycle?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the bicycle?"")"
1810121,On which side of the image is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5484937,Do the shelf and the floor have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the shelf and the floor have a different colors?"")) # crop would include the shelf so keep it in the query"
191007655,Is the plate in front of a lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in front of a lady?"")"
585726,Is the fish on a counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fish on a counter?"")"
15508177,What animal is in front of the green tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the green tree?"")"
14483260,Which clothing item in this photograph is plaid?," # returns the clothing item that is plaid
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which clothing item in this photograph is plaid?"")
    for clothing_patch in clothing_patches:
        is_plaid = clothing_patch.verify_property(""clothing"", ""plaid"")
        if is_plaid:
            return clothing_patch.simple_query(""Which clothing item in this photograph is plaid?"")
    return clothing_patches[0].simple_query(""Which clothing item in this photograph is plaid?"")"
18400626,Is the boy wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy wearing shorts?"")"
19634126,What vehicle is in the sand?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is in the sand?"")"
10841869,Are there any dogs near the young person that is using a spoon?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any dogs near the young person that is using a spoon?"")"
13819878,How is the food that the covered containers contain called?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""How is the food that the covered containers contain called?"")
    container_patch = container_patches[0]
    return container_patch.simple_query(""How is the food that the covered containers contain called?"") # crop would include the container so keep it in the query"
767379,What is parked in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is parked in front of the building?"")"
1748034,Is the black tail curly or straight?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black tail curly or straight?"")"
5326576,Which side is the round bowl on?," # left or right
    image_patch = ImagePatch(image)
    round_bowl_patches = image_patch.find(""round bowl"")
    # Question assumes only one round bowl patch
    if len(round_bowl_patches) == 0:
        # If no round bowl is found, query the image directly
        return image_patch.simple_query(""Which side is the round bowl on?"")
    return ""left"" if round_bowl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
18803547,Is the color of the logo red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the logo red?"")"
7726987,Is the scarf red and striped?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the scarf red and striped?"")"
17101308,Is this picture showing a field or a beach?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this picture showing a field or a beach?"")"
131041936,Are there any skateboards to the right of the person who is in front of the stairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any skateboards to the right of the person who is in front of the stairs?"")"
9680648,What are the fruits on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits on the table?"")"
15284889,On which side of the photo is the large device?," # left or right
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""large device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the large device?"")
    device_patch = device_patches[0]
    if device_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
36852,On which side of the photo is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17181471,What color do you think the cheese on the right side is?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the cheese on the right side is?"")"
15106485,Is the wood picture to the left or to the right of the orange book?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood picture to the left or to the right of the orange book?"")"
2108602,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12778444,Is there any cabinet to the right of the shower curtain that looks black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cabinet to the right of the shower curtain that looks black?"")"
15157186,What is in front of the elephant that is to the right of the nut?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the elephant that is to the right of the nut?"")"
5600037,Which kind of animal is eating from the field?," # contains a relation (eating from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is eating from the field?"")"
14636133,Which side of the picture is the coca-cola on?," # left or right
    image_patch = ImagePatch(image)
    coca_cola_patches = image_patch.find(""coca-cola"")
    # Question assumes only one coca-cola patch
    if len(coca_cola_patches) == 0:
        # If no coca-cola is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the coca-cola on?"")
    coca_cola_patch = coca_cola_patches[0]
    horizontal_center = coca_cola_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17963134,Is the woman wearing a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman wearing a skirt?"")"
19461211,Does the blouse look long sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the blouse look long sleeved?"")"
11280137,Are all these animals of the same species?," # contains a relation (same species), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are all these animals of the same species?"")"
18332643,Is the spoon in a container?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the spoon in a container?"")"
7399862,What is the vehicle to the right of the house?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the house?"")"
8523241,What is the food that is on top of the white plate that is to the right of the food?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is on top of the white plate that is to the right of the food?"")"
1277907,Which side of the photo is the mirror on?," # mirror is on the right
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the mirror on?"")
    return ""right"""
19859192,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
2999183,What vehicle is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is white?"")"
10466534,Is it indoors?," # contains a relation (indoors/outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors?"")"
6772690,Of what color is the fence?," # returns the color of the fence
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Of what color is the fence?"")
    return fence_patches[0].simple_query(""Of what color is the fence?"") # crop would include the fence so keep it in the query"
14554447,Which side of the picture are the houses on?," # left or right
    image_patch = ImagePatch(image)
    house_patches = image_patch.find(""house"")
    # Question assumes only one house patch
    if len(house_patches) == 0:
        # If no house is found, query the image directly
        return image_patch.simple_query(""Which side of the picture are the houses on?"")
    house_patch = house_patches[0]
    if house_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
111025369,On which side of the picture are the pines?," # left or right
    image_patch = ImagePatch(image)
    pines_patches = image_patch.find(""pines"")
    # Question assumes only one pines patch
    if len(pines_patches) == 0:
        # If no pines are found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the pines?"")
    if pines_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9685104,Who is wearing a uniform?," # contains a relation (wearing a uniform), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a uniform?"")"
16337295,Is the floor made of the same material as the chair?," # assumes only one chair and one floor patch
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    floor_patches = image_patch.find(""floor"")
    if len(chair_patches) == 0 or len(floor_patches) == 0:
        return ""no""
    chair_patch = chair_patches[0]
    floor_patch = floor_patches[0]
    return bool_to_yesno(chair_patch.verify_property(""chair"", ""material"") == floor_patch.verify_property(""floor"", ""material""))"
5165767,Do you see any men to the left of the boy in the middle of the photo?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the left of the boy in the middle of the photo?"")"
181006030,Are there any skiers on top of the white thing that is on top of the ground?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any skiers on top of the white thing that is on top of the ground?"")"
12854191,Which color is the wig on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the wig on the left?"")"
6677480,What is in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the tree?"")"
1324748,Are there any skis to the right of the person that is standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""skis"") and image_patch.exists(""person standing"")) # crop would include the person so keep it in the query"
14467277,What is the floor made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the floor made of?"")"
14843274,Does his vest appear to be green?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does his vest appear to be green?"")"
1440581,Is the person wearing a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person wearing a helmet?"")
    return bool_to_yesno(person_patches[0].verify_property(""person"", ""helmet""))"
13440360,What do you think is the animal that is sleeping on the ground?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the animal that is sleeping on the ground?"")"
161052697,What kind of fruit is on the cutting board?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fruit is on the cutting board?"")"
12288440,Is the woman on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman on the right?"")"
3281529,Are the passengers to the left of a house?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the passengers to the left of a house?"")"
14935944,What is the American flag in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the American flag in front of?"")"
151036794,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
7116001,What are the clothes on?," # clothes on a chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""What are the clothes on?"")
    chair_patch = chair_patches[0]
    clothes_patches = image_patch.find(""clothes"")
    # Question assumes only one clothes patch
    if len(clothes_patches) == 0:
        return image_patch.simple_query(""What are the clothes on?"")
    clothes_patch = clothes_patches[0]
    if clothes_patch.horizontal_center > chair_patch.horizontal_center:
        return clothes_patch.simple_query(""What are the clothes on?"")
    return chair_patch.simple_query(""What are the clothes on?"")"
17326281,What is common to the shrub and the car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the shrub and the car?"")"
10388370,What kind of baked good is the glass in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is the glass in front of?"")"
2754321,What is the chain on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the chain on?"")"
5217524,What is the vegetable to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the man?"")"
15574149,What is the young person holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the young person holding?"")"
463979,What color is the t-shirt?," # returns the color of the t-shirt
    image_patch = ImagePatch(image)
    tshirt_patches = image_patch.find(""t-shirt"")
    # Question assumes only one t-shirt patch
    if len(tshirt_patches) == 0:
        # If no t-shirt is found, query the image directly
        return image_patch.simple_query(""What color is the t-shirt?"")
    return tshirt_patches[0].simple_query(""What color is the t-shirt?"") # crop would include the shirt so keep it in the query"
3632250,Who is wearing shirts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shirts?"")"
2417428,Is the color of the coffee cup different than the color of the shirt?," # returns yes or no
    image_patch = ImagePatch(image)
    coffee_cup_patches = image_patch.find(""coffee cup"")
    # Question assumes only one coffee cup patch
    if len(coffee_cup_patches) == 0:
        # If no coffee cup is found, query the image directly
        return image_patch.simple_query(""Is the color of the coffee cup different than the color of the shirt?"")
    coffee_cup_color = coffee_cup_patches[0].simple_query(""What is the color of the coffee cup?"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Is the color of the coffee cup different than the color of the shirt?"")
    shirt_color = shirt_patches[0].simple_query(""What is the color of the shirt?"")
    return bool_to_yesno(coffee_cup_color != shirt_color)"
2739025,What do both the freezer and the label have in common?," # freezer and label are assumed to be in the image
    image_patch = ImagePatch(image)
    freezer_patches = image_patch.find(""freezer"")
    # Question assumes only one freezer patch
    if len(freezer_patches) == 0:
        # If no freezer is found, query the image directly
        return image_patch.simple_query(""What do both the freezer and the label have in common?"")
    freezer_patch = freezer_patches[0]
    label_patches = image_patch.find(""label"")
    # Question assumes only one label patch
    if len(label_patches) == 0:
        return image_patch.simple_query(""What do both the freezer and the label have in common?"")
    label_patch = label_patches[0]
    common_properties = freezer_patch.verify_property(""freezer"", ""has"") # freezer has a property
    for property in common_properties:
        if label_patch.verify_property(""label"", property):
            return property
    return image_patch.simple_query(""What do both the freezer and the label have in common?"") # if no common property is found, query the image directly"
17740693,Is the fence on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence on the left side or on the right of the image?"")"
2130450,The grass is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The grass is on what?"")"
6573026,"On which side is the bowl, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the bowl, the left or the right?"")"
161037660,What are the gray clothing items called?," # returns a list of strings
    image_patch = ImagePatch(image)
    gray_patches = image_patch.find(""gray clothing"")
    # Question assumes only one gray clothing patch
    if len(gray_patches) == 0:
        # If no gray clothing is found, query the image directly
        return image_patch.simple_query(""What are the gray clothing items called?"")
    return gray_patches[0].best_text_match([""sweater"", ""t-shirt"", ""pants"", ""dress""])"
15876433,How is the food to the right of the placemat on the table called?," # contains a relation (on the table), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the food to the right of the placemat on the table called?"")"
19606491,What is in front of the trash?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the trash?"")"
713938,Is the bag to the left of a girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left of a girl?"")"
12698871,Are there any pictures on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""picture on the wall"")) # contains a relation (on, next to, etc), so ask directly"
6784471,Are there any puppies or birds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_puppy = image_patch.exists(""puppy"")
    is_bird = image_patch.exists(""bird"")
    return bool_to_yesno(is_puppy or is_bird)"
13933958,What kind of furniture is to the right of the apples?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the apples?"")"
3236989,Is the sky overcast and blue?," # overcast and blue
    image_patch = ImagePatch(image)
    is_overcast = image_patch.verify_property(""sky"", ""overcast"")
    is_blue = image_patch.verify_property(""sky"", ""blue"")
    return bool_to_yesno(is_overcast and is_blue)"
2584954,What type of vegetable is in the plastic container?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is in the plastic container?"")"
1353321,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9678673,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
1186950,Which kind of animal is on the plain?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the plain?"")"
61023976,What is common to the canopy and the arrow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the canopy and the arrow?"")"
1232559,Which color do you think is the shirt?," # returns the most common color
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Which color do you think is the shirt?"")
    shirt_patch = shirt_patches[0]
    colors = shirt_patch.simple_query(""What colors do you see on the shirt?"").split("", "")
    color_counts = {}
    for color in colors:
        if color in color_counts:
            color_counts[color] += 1
        else:
            color_counts[color] = 1
    return max(color_counts, key=color_counts.get)"
3325950,"What type of clothing is not long sleeved, the sweater or the hat?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of clothing is not long sleeved, the sweater or the hat?"")"
17113678,What is the man to the left of the boxes touching?," # contains a relation (touching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the boxes touching?"")"
161988,On which side is the blanket?," # left or right
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""On which side is the blanket?"")
    return ""right"""
8901281,What is the device that is to the left of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the left of the bag?"")"
17899972,Does the beak look short and black?," # assumes only one bird
    image_patch = ImagePatch(image)
    bird_patches = image_patch.find(""bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch.simple_query(""Does the beak look short and black?"")
    return bool_to_yesno(bird_patches[0].verify_property(""beak"", ""short"") and bird_patches[0].verify_property(""beak"", ""black""))"
18291428,Who is in front of the window near the leaves?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the window near the leaves?"")"
16828371,Do you see a red door or train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a red door or train?"")"
19375749,Is the bottle in the top or in the bottom?," # bottle is a container
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Is the bottle in the top or in the bottom?"")
    if bottle_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
9346605,What is the size of the gray tail?," # returns a string
    image_patch = ImagePatch(image)
    gray_tail_patches = image_patch.find(""gray tail"")
    # Question assumes only one gray tail patch
    if len(gray_tail_patches) == 0:
        # If no gray tail is found, query the image directly
        return image_patch.simple_query(""What is the size of the gray tail?"")
    return gray_tail_patches[0].simple_query(""What is the size of the gray tail?"") # crop would include the tail so keep it in the query"
7640236,Are there any cabinets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet""))"
11145197,Which side of the picture is the woman on?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the woman on?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11404000,Is the bush behind the giraffe that is not male?," # giraffe is not male
    image_patch = ImagePatch(image)
    giraffe_patches = image_patch.find(""giraffe"")
    # Question assumes only one giraffe patch
    if len(giraffe_patches) == 0:
        # If no giraffe is found, query the image directly
        return image_patch.simple_query(""Is the bush behind the giraffe that is not male?"")
    giraffe_patch = giraffe_patches[0]
    if giraffe_patch.verify_property(""giraffe"", ""male"") == False:
        bush_patches = image_patch.find(""bush"")
        # Question assumes only one bush patch
        if len(bush_patches) == 0:
            return image_patch.simple_query(""Is the bush behind the giraffe that is not male?"")
        for bush_patch in bush_patches:
            if bush_patch.horizontal_center < giraffe_patch.horizontal_center:
                return ""yes""
    return ""no"""
4832509,The woman is walking towards what?," # contains a relation (towards, away from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman is walking towards what?"")"
8577784,Are the cap and the helmet the same color?," # contains a relation (same color), so ask directly
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    helmet_patches = image_patch.find(""helmet"")
    if len(cap_patches) == 0 or len(helmet_patches) == 0:
        return ""no""
    cap_color = cap_patches[0].simple_query(""What color is the cap?"")
    helmet_color = helmet_patches[0].simple_query(""What color is the helmet?"")
    return bool_to_yesno(cap_color == helmet_color)"
6567000,Is the cabinet above or under the sink?," # contains a relation (above, under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cabinet above or under the sink?"")"
15152695,Does the faucet look metallic and silver?," # returns yes or no
    image_patch = ImagePatch(image)
    faucet_patches = image_patch.find(""faucet"")
    # Question assumes only one faucet patch
    if len(faucet_patches) == 0:
        # If no faucet is found, query the image directly
        return image_patch.simple_query(""Does the faucet look metallic and silver?"")
    return bool_to_yesno(faucet_patches[0].verify_property(""faucet"", ""metallic"") and faucet_patches[0].verify_property(""faucet"", ""silver""))"
17482802,Where is the barefoot boy standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the barefoot boy standing on?"")"
17413979,Which kind of device is to the right of the bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the bottle?"")"
8558034,Do you see benches or ice cubes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_benches = image_patch.exists(""benches"")
    is_ice_cubes = image_patch.exists(""ice cubes"")
    return bool_to_yesno(is_benches or is_ice_cubes)"
4133553,What kind of furniture is facing the window?," # contains a relation (facing the window), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is facing the window?"")"
1290846,On which side is the green curtain?," # left or right
    image_patch = ImagePatch(image)
    green_curtain_patches = image_patch.find(""green curtain"")
    # Question assumes only one green curtain patch
    if len(green_curtain_patches) == 0:
        # If no green curtain is found, query the image directly
        return image_patch.simple_query(""On which side is the green curtain?"")
    green_curtain_patch = green_curtain_patches[0]
    horizontal_center = green_curtain_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13262061,Are there men near the plates the cup is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men near the plates the cup is on?"")"
1684615,Is the kid to the right or to the left of the person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid to the right or to the left of the person that is wearing a shirt?"")"
171030474,Are there both cars and windows in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_car and is_window)"
161066143,The horse is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The horse is in front of what?"")"
8474021,Who is riding a motorcycle?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding a motorcycle?"")"
21010849,What is on the paper in the picture?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the paper in the picture?"")"
6875750,What is the ketchup on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the ketchup on?"")"
7766205,Which kind of meat is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is it?"")"
12102865,What is located on top of the tray?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the tray?"")"
16483735,Is the woman wearing a hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman wearing a hat?"")"
6642835,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
14262564,Who do you think are the people to the left of the glasses watching?," # glasses is a relational verb
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses is found, query the image directly
        return image_patch.simple_query(""Who do you think are the people to the left of the glasses watching?"")
    glasses_patch = glasses_patches[0]
    people_patches = image_patch.find(""people"")
    # Question assumes only one people patch
    if len(people_patches) == 0:
        # If no people is found, query the image directly
        return image_patch.simple_query(""Who do you think are the people to the left of the glasses watching?"")
    for people_patch in people_patches:
        if people_patch.horizontal_center < glasses_patch.horizontal_center:
            return people_patch.simple_query(""Who do you think are the people to the left of the glasses watching?"")
    return image_patch.simple_query(""Who do you think are the people to the left of the glasses watching?"")"
18275051,Is the white umbrella on the right or on the left of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white umbrella on the right or on the left of the photo?"")"
2708586,Is there a fork or a plate in the picture?," # fork or plate
    image_patch = ImagePatch(image)
    is_fork = image_patch.exists(""fork"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_fork or is_plate)"
552252,What is the food to the right of the pot?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the pot?"")"
2660399,Which side of the photo is the white sheet on?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the photo is the white sheet on?"")"
1832508,Is the open vehicle to the left or to the right of the fence?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the open vehicle to the left or to the right of the fence?"")"
9753555,Is the truck to the right or to the left of the blue car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck to the right or to the left of the blue car?"")"
7212532,On which side of the photo are the books?," # left or right
    image_patch = ImagePatch(image)
    book_patches = image_patch.find(""book"")
    # Question assumes only one book patch
    if len(book_patches) == 0:
        # If no book is found, query the image directly
        return image_patch.simple_query(""On which side of the photo are the books?"")
    if book_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13343429,What color is the chair on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the chair on the left?"")"
5579186,Does the zebra that is to the right of the other zebra look white?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the zebra that is to the right of the other zebra look white?"")"
10575730,Is the frisbee to the right of a stuffed bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the frisbee to the right of a stuffed bear?"")"
1787773,What kind of animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is it?"")"
135588,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
1848377,Is there any grass or sand that is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    sand_patches = image_patch.find(""sand"")
    for grass_patch in grass_patches:
        if grass_patch.verify_property(""grass"", ""brown""):
            return ""yes""
    for sand_patch in sand_patches:
        if sand_patch.verify_property(""sand"", ""brown""):
            return ""yes""
    return ""no"""
11575029,What is on the dessert to the right of the cream?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the dessert to the right of the cream?"")"
13959901,Which kind of furniture is the cat on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the cat on?"")"
11770908,Is there any food on top of the plate that is in the bottom of the photo?," # contains a relation (on top of, in the bottom of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any food on top of the plate that is in the bottom of the photo?"")"
15868852,Do you see a horse there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""horse""))"
12480711,What is before the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is before the water?"")"
17766142,How is the animal that is to the right of the fence on the left side called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the animal that is to the right of the fence on the left side called?"")"
19976873,What is the container made of?," # container is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the container made of?"")"
16648657,What is on the tower?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the tower?"")"
8359059,Is the man standing in front of an airplane?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man standing in front of an airplane?"")"
2502039,Does the grass on the ground appear to be short and green?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the grass on the ground appear to be short and green?"")"
18724439,Are there either bottles or cups in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bottle"") or image_patch.exists(""cup""))"
243985,What is the flower in?," # container
    image_patch = ImagePatch(image)
    flower_patches = image_patch.find(""flower"")
    # Question assumes only one flower patch
    if len(flower_patches) == 0:
        # If no flower is found, query the image directly
        return image_patch.simple_query(""What is the flower in?"")
    return flower_patches[0].simple_query(""What is the flower in?"") # crop would include the container so keep it in the query"
15859530,Where is the child standing on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the child standing on?"")"
31043868,On which side of the photo is the yellow toy?," # left or right
    image_patch = ImagePatch(image)
    yellow_toy_patches = image_patch.find(""yellow toy"")
    # Question assumes only one yellow toy patch
    if len(yellow_toy_patches) == 0:
        # If no yellow toy is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the yellow toy?"")
    yellow_toy_patch = yellow_toy_patches[0]
    horizontal_center = yellow_toy_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13305939,Which side is the girl on?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Which side is the girl on?"")
    if girl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19249254,What is around the boulders that are not small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is around the boulders that are not small?"")"
2673629,What's on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the plate?"")"
15463100,Are the cart and the roof made of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the cart and the roof made of the same material?"")"
12946379,Are there ovens to the left of the appliance that looks black?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there ovens to the left of the appliance that looks black?"")"
1031701,Are there chairs to the left of the ladder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair"") and image_patch.exists(""ladder"") and image_patch.simple_query(""Are there chairs to the left of the ladder?"") == ""yes"")"
7928,Is there either any grass or sand that is not brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    sand_patches = image_patch.find(""sand"")
    for grass_patch in grass_patches:
        if grass_patch.verify_property(""grass"", ""brown"") == False:
            return ""yes""
    for sand_patch in sand_patches:
        if sand_patch.verify_property(""sand"", ""brown"") == False:
            return ""yes""
    return ""no"""
7711799,"In which part of the picture is the man, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the picture is the man, the bottom or the top?"")"
15186111,Is the fence white and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence white and small?"")"
9230548,Which side of the photo is the train car on?," # left or right
    image_patch = ImagePatch(image)
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        # If no train is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the train car on?"")
    return ""left"" if train_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
370111,"What clothing item is not pink, the coat or the dress?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What clothing item is not pink, the coat or the dress?"")"
3574860,What kind of vehicle is in front of the graffiti?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is in front of the graffiti?"")"
9197742,Are there any ladders or fences in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ladder"") or image_patch.exists(""fence""))"
17564828,Where is that bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is that bird?"")"
1762555,Is he to the right of a picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the right of a picture?"")"
2552764,What color do you think the empty plate has?," # empty plate
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the empty plate has?"")"
17519247,What is the photo showing?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the photo showing?"") # assumes the image is the whole scene"
1021630,Are there any surfboards or crates?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_crates = image_patch.exists(""crate"")
    return bool_to_yesno(is_surfboard or is_crates)"
735679,Is the child to the right or to the left of the woman who is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child to the right or to the left of the woman who is wearing a shirt?"")"
9632603,What is the piece of furniture that the plush teddy bear is lying on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the plush teddy bear is lying on?"")"
4464629,Is the chair in the bottom part?," # contains a relation (on, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair in the bottom part?"")"
81035329,What is the piece of furniture in the office?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture in the office?"")"
932330,Is the lady to the left or to the right of the bag that is to the left of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the left or to the right of the bag that is to the left of the picture?"")"
8768727,What is the color of the umbrella to the right of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the umbrella to the right of the woman?"")"
2788188,What is the cooking utensil that is to the left of the pot made of metal called?," # contains a relation (left of, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil that is to the left of the pot made of metal called?"")"
545974,Are there any ambulances in the garage?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ambulance""))"
17564875,Are there chairs or carts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_cart = image_patch.exists(""cart"")
    return bool_to_yesno(is_chair or is_cart)"
16156535,What is the person in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person in front of?"")"
17684393,What is the cat in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat in front of?"")"
1819866,What color is the bag made of plastic?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the bag made of plastic?"")"
12823636,Does the dish have green color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""dish"", ""green""))"
1922390,Is there any kite in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""kite""))"
16223026,Is the boy to the right or to the left of the skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the right or to the left of the skateboard?"")"
12495385,Is the pot on the right or on the left side of the image?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pot on the right or on the left side of the image?"")"
1964224,Is the pan to the left or to the right of the pot?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pan to the left or to the right of the pot?"")"
1070814,On which side is the utensil?," # left or right
    image_patch = ImagePatch(image)
    utensil_patches = image_patch.find(""utensil"")
    # Question assumes only one utensil patch
    if len(utensil_patches) == 0:
        # If no utensil is found, query the image directly
        return image_patch.simple_query(""On which side is the utensil?"")
    return ""right"""
21018364,Who wears a glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a glove?"")"
10167870,Is the blue vehicle to the right or to the left of the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue vehicle to the right or to the left of the umbrella?"")"
8414766,"On which side is the silver device, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the silver device, the right or the left?"")"
2726219,Where is the cat playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the cat playing?"")"
1498466,Who wears a purse?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a purse?"")"
272712,Who is holding the flags?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the flags?"")"
18965055,What kind of animal is in front of the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is in front of the wall?"")"
9158417,The lemons are on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The lemons are on what?"")"
18474392,What size are the yellow lemons?," # returns the size of the lemons
    image_patch = ImagePatch(image)
    lemon_patches = image_patch.find(""lemon"")
    # Question assumes only one lemon patch
    if len(lemon_patches) == 0:
        # If no lemon is found, query the image directly
        return image_patch.simple_query(""What size are the yellow lemons?"")
    return lemon_patches[0].simple_query(""What size are the yellow lemons?"") # crop would include the color so keep it in the query"
5374718,Do you see animals in the grass?," # contains a relation (in the grass), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see animals in the grass?"")"
8280514,Which color is the wood table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the wood table?"")"
41048771,Are there both ice cubes and rackets in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_ice_cube = image_patch.exists(""ice cube"")
    is_racket = image_patch.exists(""racket"")
    return bool_to_yesno(is_ice_cube and is_racket)"
11638731,What is the color of the trees?," # returns the color of the first tree
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""What is the color of the trees?"")
    return tree_patches[0].simple_query(""What is the color of the tree?"") # crop would include the tree so keep it in the query"
5992681,Is the car on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the car on the left side or on the right of the image?"")"
7416695,Which animal in the picture is black?," # returns the first black animal found
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""black""):
            return animal_patch.simple_query(""What animal is black?"")
    return image_patch.simple_query(""Which animal in the picture is black?"")"
19848369,Is the picture showing a field or a beach?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture showing a field or a beach?"")"
10909742,Is the couch to the left of the woman that wears a bandana?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch to the left of the woman that wears a bandana?"")"
15427983,What is the vehicle that is pulling a cart?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is pulling a cart?"")"
14898050,Are there either red glasses or ties?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_glasses = image_patch.exists(""red glasses"")
    is_tie = image_patch.exists(""tie"")
    return bool_to_yesno(is_red_glasses or is_tie)"
1988997,What's the ball on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the ball on?"")"
21069107,What is the man that is to the left of the boy wearing?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the left of the boy wearing?"")"
6830273,On which side of the image are the papers?," # left or right
    image_patch = ImagePatch(image)
    paper_patches = image_patch.find(""paper"")
    # Question assumes only one paper patch
    if len(paper_patches) == 0:
        # If no paper is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the papers?"")
    if paper_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13699264,Is the sky overcast and blue?," # overcast and blue
    image_patch = ImagePatch(image)
    is_overcast = image_patch.verify_property(""sky"", ""overcast"")
    is_blue = image_patch.verify_property(""sky"", ""blue"")
    return bool_to_yesno(is_overcast and is_blue)"
19245242,Which kind of cooking utensil is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of cooking utensil is on the table?"")"
16370269,The woman to the right of the man is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman to the right of the man is wearing what?"")"
12496463,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
18489887,Are there any rugs or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_rug = image_patch.exists(""rug"")
    is_umbrella = image_patch.exists(""umbrella"")
    return bool_to_yesno(is_rug or is_umbrella)"
4441862,Is the helmet different in color than the skateboard?," # helmet and skateboard are assumed to be in the same image
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet different in color than the skateboard?"")
    helmet_patch = helmet_patches[0]
    skateboard_patches = image_patch.find(""skateboard"")
    # Question assumes only one skateboard patch
    if len(skateboard_patches) == 0:
        return ""no""
    for skateboard_patch in skateboard_patches:
        helmet_color = helmet_patch.simple_query(""What is the color of the helmet?"")
        skateboard_color = skateboard_patch.simple_query(""What is the color of the skateboard?"")
        return bool_to_yesno(helmet_color != skateboard_color)"
18338521,Is the container made of plastic covered by the lid?," # container and lid are assumed to be found
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    lid_patches = image_patch.find(""lid"")
    # Question assumes only one container and one lid patch
    if len(container_patches) == 0 or len(lid_patches) == 0:
        # If no container or lid is found, query the image directly
        return image_patch.simple_query(""Is the container made of plastic covered by the lid?"")
    container_patch = container_patches[0]
    lid_patch = lid_patches[0]
    return bool_to_yesno(container_patch.verify_property(""container"", ""plastic"") and lid_patch.verify_property(""lid"", ""covering"")) # container and lid are assumed to be found"
605164,How big is the brown bird?," # returns a string
    image_patch = ImagePatch(image)
    bird_patches = image_patch.find(""brown bird"")
    # Question assumes only one bird patch
    if len(bird_patches) == 0:
        # If no bird is found, query the image directly
        return image_patch.simple_query(""How big is the brown bird?"")
    return bird_patches[0].simple_query(""How big is the brown bird?"") # crop would include the bird so keep it in the query"
91008727,"Which side of the image is the grape on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the image is the grape on, the right or the left?"")"
489534,Is the cut food cooked in the large appliance?," # assumes only one cut food and one large appliance
    image_patch = ImagePatch(image)
    cut_food_patches = image_patch.find(""cut food"")
    large_appliance_patches = image_patch.find(""large appliance"")
    if len(cut_food_patches) == 0 or len(large_appliance_patches) == 0:
        return image_patch.simple_query(""Is the cut food cooked in the large appliance?"")
    cut_food_patch = cut_food_patches[0]
    large_appliance_patch = large_appliance_patches[0]
    return bool_to_yesno(cut_food_patch.verify_property(""cut food"", ""cooked in the large appliance""))"
5639091,Does the sweater look black or maroon?," # returns a string
    image_patch = ImagePatch(image)
    sweater_patches = image_patch.find(""sweater"")
    # Question assumes only one sweater patch
    if len(sweater_patches) == 0:
        # If no sweater is found, query the image directly
        return image_patch.simple_query(""Does the sweater look black or maroon?"")
    return sweater_patches[0].best_text_match([""black"", ""maroon""])"
244066,What color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color is the jacket?"")
    return jacket_patches[0].simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query"
9273509,What is the mouse on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the mouse on?"")"
16443338,What is the name of the fruits that are on the fruit plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the fruits that are on the fruit plate?"")"
9530763,What color are the shoes that the player is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the shoes that the player is wearing?"")"
7416783,Is the cat that is to the right of the book looking at at camera?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat that is to the right of the book looking at at camera?"")"
1866756,What are the fruits in the container on the ground called?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the fruits in the container on the ground called?"")"
19952138,What is the soda in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the soda in?"")"
6130706,Which kind of vehicle is the fence in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is the fence in front of?"")"
2318991,What kind of fast food is on top of the tray?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is on top of the tray?"")"
4399606,Is that mask metallic and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that mask metallic and black?"")"
3380309,Is the box in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box in the bottom part or in the top of the photo?"")"
11124555,What kind of device is to the right of the monitor?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the right of the monitor?"")"
91030902,Which kind of furniture is the computer mouse on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the computer mouse on?"")"
17818171,Do you see bicycles there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bicycle""))"
13970337,What is the piece of furniture that the name tag is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the name tag is on?"")"
13263477,How is the vehicle that is parked in the field called?," # contains a relation (parked in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle that is parked in the field called?"")"
18906488,Of which color are the bananas held by the person?," # returns the color of the bananas
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Of which color are the bananas held by the person?"")
    person_patch = person_patches[0]
    bananas_patches = image_patch.find(""bananas"")
    # Question assumes only one bananas patch
    if len(bananas_patches) == 0:
        return image_patch.simple_query(""Of which color are the bananas held by the person?"")
    for bananas_patch in bananas_patches:
        if bananas_patch.horizontal_center > person_patch.horizontal_center:
            return bananas_patch.simple_query(""What color are the bananas?"")
    return image_patch.simple_query(""Of which color are the bananas held by the person?"")"
4434441,Is this a television or a computer?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a television or a computer?"")"
10667001,What is the napkin on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the napkin on?"")"
8319580,Do the tee shirt and the suitcase have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    tee_shirt_patches = image_patch.find(""tee shirt"")
    # Question assumes only one tee shirt patch
    if len(tee_shirt_patches) == 0:
        # If no tee shirt is found, query the image directly
        return image_patch.simple_query(""Do the tee shirt and the suitcase have a different colors?"")
    suitcase_patches = image_patch.find(""suitcase"")
    # Question assumes only one suitcase patch
    if len(suitcase_patches) == 0:
        return ""no""
    tee_shirt_color = tee_shirt_patches[0].simple_query(""What color is the tee shirt?"")
    suitcase_color = suitcase_patches[0].simple_query(""What color is the suitcase?"")
    return bool_to_yesno(tee_shirt_color != suitcase_color)"
3746662,Is the man who is to the right of the giraffe wearing a hat?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man who is to the right of the giraffe wearing a hat?"")"
19914651,What color is the door the sign is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the door the sign is on?"")"
5123811,What are the trees on the hill covering?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the trees on the hill covering?"")"
13740211,What the piece of clothing that is gray is called?," # gray is a property of the clothing
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What the piece of clothing that is gray is called?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""gray""):
            return clothing_patch.simple_query(""What the piece of clothing that is gray is called?"")
    return clothing_patch.simple_query(""What the piece of clothing that is gray is called?"") # if no gray clothing is found, query the image directly"
4861644,Which kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is made of wood?"")"
843099,Is the bent man wearing a suit?," # contains a relation (bent man), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bent man wearing a suit?"")"
11769519,Do you see people to the right of the woman with the coat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see people to the right of the woman with the coat?"")"
5303754,Is the zebra to the right or to the left of the fence made of stone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra to the right or to the left of the fence made of stone?"")"
10677853,What do you think is the butter on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the butter on?"")"
4410960,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
8104655,Do you see benches in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench""))"
1762145,The lamb is climbing what?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The lamb is climbing what?"")"
2826493,Is the dog in a bag?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog in a bag?"")"
4729331,Is the water in a bottle?," # bottle is a container
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""water"")
    # Question assumes only one water patch
    if len(water_patches) == 0:
        # If no water is found, query the image directly
        return image_patch.simple_query(""Is the water in a bottle?"")
    for water_patch in water_patches:
        return water_patch.verify_property(""water"", ""in a bottle"") # crop would include the bottle so keep it in the query"
9883949,Is the drawer on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the drawer on the right or on the left?"")"
17106029,Who is wearing a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a skirt?"")"
16833437,What is resting on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is resting on the bed?"")"
191023219,Is the playing woman to the left of the racket wearing shorts?," # contains a relation (left of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the playing woman to the left of the racket wearing shorts?"")"
12549498,Which color is the wire fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the wire fence?"")"
11944745,What type of appliance is to the left of the veggies inside the can?," # contains a relation (inside, left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of appliance is to the left of the veggies inside the can?"")"
9859542,Is there any dog beside the man that is skating?," # contains a relation (next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any dog beside the man that is skating?"")"
16208777,What is the device that is to the right of the black television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is to the right of the black television?"")"
141032825,On which side of the picture is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8316840,Are the drawers to the right of a dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the drawers to the right of a dog?"")"
4319002,Where is the cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the cow?"")"
7616624,Are there both a bird and a monkey in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bird = image_patch.exists(""bird"")
    is_monkey = image_patch.exists(""monkey"")
    return bool_to_yesno(is_bird and is_monkey)"
9538661,Is the black phone to the left or to the right of the screen?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black phone to the left or to the right of the screen?"")"
1636839,Does the black hair appear to be short?," # assumes only one black hair patch
    image_patch = ImagePatch(image)
    black_hair_patches = image_patch.find(""black hair"")
    if len(black_hair_patches) == 0:
        # If no black hair is found, query the image directly
        return image_patch.simple_query(""Does the black hair appear to be short?"")
    return bool_to_yesno(black_hair_patches[0].verify_property(""black hair"", ""short""))"
608100,On which side of the photo is the boy?," # left or right
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the boy?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
215286,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
6575820,What kind of furniture has the same color as the wall?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture has the same color as the wall?"")"
8874109,Is there a fence or a cow in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_fence or is_cow)"
11825599,Is the man that is reading reading a book?," # contains a relation (reading), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is reading reading a book?"")"
6231053,What is common to the box and the crate?," # assumes only one box and one crate
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    crate_patches = image_patch.find(""crate"")
    # Question assumes only one box and one crate patch
    if len(box_patches) == 0 or len(crate_patches) == 0:
        # If no box or crate is found, query the image directly
        return image_patch.simple_query(""What is common to the box and the crate?"")
    box_patch = box_patches[0]
    crate_patch = crate_patches[0]
    common_properties = set(box_patch.simple_query(""What properties does the box have?"").split("", "")) & set(crate_patch.simple_query(""What properties does the crate have?"").split("", ""))
    return common_properties[0]"
5178679,What is in the pocket?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the pocket?"")"
6676550,Are there both women and players in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_player = image_patch.exists(""player"")
    return bool_to_yesno(is_woman and is_player)"
12149258,What are the devices to the right of the container the umbrella is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the devices to the right of the container the umbrella is to the left of?"")"
8828045,Is the orange cat to the left of the lamp that is shown in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange cat to the left of the lamp that is shown in this picture?"")"
16469883,What color is the napkin on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the napkin on the plate?"")"
1773146,Do you see airplanes in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane""))"
5933590,Who uses the cell phone?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who uses the cell phone?"")"
17122724,Do you think the ground is red?," # ground is a common object
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""ground"", ""red""))"
151002807,What color do you think the jacket the woman is wearing is?," # returns a string
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color do you think the jacket the woman is wearing is?"")
    return jacket_patches[0].simple_query(""What color do you think the jacket the woman is wearing is?"") # crop would include the woman so keep it in the query"
4340472,Are there white keyboards or remote controls?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_keyboard = image_patch.exists(""white keyboard"")
    is_remote_control = image_patch.exists(""remote control"")
    return bool_to_yesno(is_white_keyboard or is_remote_control)"
18930735,Do you see any pictures or clocks?," # returns yes or no
    image_patch = ImagePatch(image)
    is_picture = image_patch.exists(""picture"")
    is_clock = image_patch.exists(""clock"")
    return bool_to_yesno(is_picture or is_clock)"
6483027,The hot dog is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The hot dog is in front of what?"")"
8104449,Are there any televisions or game controllers?," # returns yes or no
    image_patch = ImagePatch(image)
    is_tlevision = image_patch.exists(""television"")
    is_game_controller = image_patch.exists(""game controller"")
    return bool_to_yesno(is_tlevision or is_game_controller)"
1723256,Are there bottles to the left of the woman in the top part?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bottles to the left of the woman in the top part?"")"
9509397,What kind of clothing is brown?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What kind of clothing is brown?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""coat"", ""dress"", ""hat"", ""jacket"", ""pants"", ""scarf"", ""shirt"", ""shoes"", ""socks"", ""suit"", ""t-shirt"", ""vest""])"
12386065,Are there either any garlands or books?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_garland = image_patch.exists(""garland"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_garland or is_book)"
3512338,What kind of cooking utensil is silver?," # contains a relation (next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of cooking utensil is silver?"")"
17152851,Do you see any red fire hydrants or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any red fire hydrants or traffic lights?"")"
16738146,What is the name of this food?," # returns the name of the food
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of this food?"")"
6797449,What kind of clothing is black?," # returns the clothing type of the first black clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What kind of clothing is black?"")
    return image_patch.simple_query(""What kind of clothing is black?"") # if no black clothing is found, query the image directly"
31027186,What is the animal above the branch near the straw called?," # contains a relation (above, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal above the branch near the straw called?"")"
6309963,"Which seems to be younger, the boy or the woman?"," # assumes only one boy and one woman
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    woman_patches = image_patch.find(""woman"")
    if len(boy_patches) == 0 or len(woman_patches) == 0:
        return image_patch.simple_query(""Which seems to be younger, the boy or the woman?"")
    boy = boy_patches[0]
    woman = woman_patches[0]
    if boy.verify_property(""boy"", ""young"") and not woman.verify_property(""woman"", ""young""):
        return ""boy""
    elif not boy.verify_property(""boy"", ""young"") and woman.verify_property(""woman"", ""young""):
        return ""woman""
    else:
        return ""boy"""
1862753,What is the color of the jersey?," # jersey is a type of clothing
    image_patch = ImagePatch(image)
    jersey_patches = image_patch.find(""jersey"")
    # Question assumes only one jersey patch
    if len(jersey_patches) == 0:
        # If no jersey is found, query the image directly
        return image_patch.simple_query(""What is the color of the jersey?"")
    return jersey_patches[0].simple_query(""What is the color of the jersey?"") # crop would include the jersey so keep it in the query"
18764792,What is the plant in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the plant in?"")"
19277828,Are the shelves to the right or to the left of the person on the sidewalk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the shelves to the right or to the left of the person on the sidewalk?"")"
131064945,Is that a zebra or a cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that a zebra or a cow?"")"
67137,Are there both a fence and a hat in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_hat = image_patch.exists(""hat"")
    return bool_to_yesno(is_fence and is_hat)"
1163929,Are there any bikes or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bike = image_patch.exists(""bike"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_bike or is_flag)"
6568514,Is the glass lamp on the right side of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass lamp on the right side of the photo?"")"
14580117,Is the woman in the top?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman in the top?"")"
8118853,"What vehicle is this, a bus or a truck?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is this, a bus or a truck?"")"
18818523,Is the red canoe in the bottom or in the top part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red canoe in the bottom or in the top part?"")"
61023853,Does the house look red or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the house look red or white?"")"
1508429,Do you see any benches or train cars in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""train car""))"
10337118,What food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is on the plate?"")"
8596029,Do you see either a black bird or zebra?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_bird = image_patch.exists(""black bird"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_black_bird or is_zebra)"
5522282,What is the food that is on top of the plate?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is on top of the plate?"")"
14111871,What's on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"")"
6269279,What does the man that to the right of the woman sit on?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man that to the right of the woman sit on?"")"
5183753,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
317310,Is the man to the right or to the left of the kid in the bottom?," # contains a relation (right, left, bottom, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the kid in the bottom?"")"
13449988,What is on the black island?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the black island?"")"
7247552,What is the device to the left of the spoon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the spoon?"")"
11241499,What is the pattern of the white shirt?," # returns the pattern of the shirt
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""What is the pattern of the white shirt?"")
    shirt_patch = shirt_patches[0]
    return shirt_patch.simple_query(""What is the pattern of the white shirt?"") # crop would include the shirt so keep it in the query"
12370737,What kind of sign rides on the train tracks?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of sign rides on the train tracks?"")"
18533727,Is the fence behind the blooming tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence behind the blooming tree?"")"
1675313,Who wears the heels?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears the heels?"")"
19148346,What is the appliance to the left of the white refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the white refrigerator?"")"
11638405,Do you see any breads or tomatoes in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bread"") or image_patch.exists(""tomato""))"
3873522,The jacket has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The jacket has which color?"")"
19193726,What is the piece of furniture that has the same color as the animal on the floor called?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that has the same color as the animal on the floor called?"")"
142191,What is under the stove?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the stove?"")"
7200667,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
13444354,What animal is the man walking with?," # contains a relation (walking with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the man walking with?"")"
17970604,What is under the cake that is not big?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the cake that is not big?"")"
7525482,"What makes up the bowl, plastic or glass?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What makes up the bowl, plastic or glass?"")"
8197494,Which side of the image is the girl on?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the girl on?"")
    if girl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7533838,Does the shirt have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""black""))"
18995149,Is it an outdoors or indoors picture?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors picture?"")"
8940422,Which kind of animal is sitting?," # contains a relation (sitting on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is sitting?"")"
16155098,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
69596,What is the fence in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence in front of?"")"
6977070,Which kind of device is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the table?"")"
181034816,Is the ball that is to the right of the player both green and small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ball that is to the right of the player both green and small?"")"
1391921,On which side is the passenger?," # assumes only one car and one passenger
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        return image_patch.simple_query(""On which side is the passenger?"")
    car_patch = car_patches[0]
    passenger_patches = image_patch.find(""passenger"")
    if len(passenger_patches) == 0:
        return image_patch.simple_query(""On which side is the passenger?"")
    passenger_patch = passenger_patches[0]
    if passenger_patch.horizontal_center > car_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
7465885,What type of bird is to the left of the bench on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of bird is to the left of the bench on the right?"")"
4499183,Are there people under the umbrella that is not unopened?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there people under the umbrella that is not unopened?"")"
12229697,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9678433,Is the truck behind a bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the truck behind a bus?"")"
18794810,What color is the book to the left of the papers?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the book to the left of the papers?"")"
2242569,Is the sauce red?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sauce red?"")"
5856415,What is beneath the sink?," # contains a relation (beneath, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is beneath the sink?"")"
15517400,Is the colorful screen to the right or to the left of him?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the colorful screen to the right or to the left of him?"")"
12602290,Is the cart to the right or to the left of the man on the elephant?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cart to the right or to the left of the man on the elephant?"")"
1254818,What fruit is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruit is on the table?"")"
101031,Is the keyboard to the left of a laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the keyboard to the left of a laptop?"")"
7688375,Is the cookie jar on the left side or on the right of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cookie jar on the left side or on the right of the photo?"")"
11164319,Do you see any women or catchers there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman"") or image_patch.exists(""catcher""))"
979851,Is the color of the tent the same as that of the sky?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the tent the same as that of the sky?"")"
10286536,Is the color of the skateboard different than the shirt?," # returns yes or no
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return bool_to_yesno(image_patch.simple_query(""Is the color of the skateboard different than the shirt?"") == ""yes"")"
14227223,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
4250420,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
10354530,Are there either any blue helmets or flags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_helmet = image_patch.exists(""blue helmet"")
    is_flag = image_patch.exists(""flag"")
    return bool_to_yesno(is_blue_helmet or is_flag)"
16214567,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
18514364,Is the wood table to the left or to the right of the couch?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood table to the left or to the right of the couch?"")"
16865287,What color is the cow on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the cow on the right?"")"
6352821,Is the airplane on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the airplane on the left side or on the right?"")"
10133847,What vehicle is to the right of the bus the window is on the front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the bus the window is on the front of?"")"
15640079,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
5456682,Are there any airplanes on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane on the ground"")) # crop would include the ground so keep it in the query"
10718361,What is the person that is to the left of the girl riding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the girl riding?"")"
13975135,What is the man that is to the left of the plate doing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the left of the plate doing?"")"
13767192,What vehicle is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is white?"")"
3756862,Are there both helmets and fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_helmet and is_fence)"
4966312,What is the zebra to the right of the giraffe walking in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the zebra to the right of the giraffe walking in?"")"
4802022,Is this an old woman?," # contains a relation (old woman), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this an old woman?"")"
8114352,Which kind of device is broken?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is broken?"")"
3657891,Are there any people to the right of the guy on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any people to the right of the guy on the right?"")"
13207387,Does the open sky look white and overcast?," # contains a relation (over), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the open sky look white and overcast?"")"
4482659,Which kind of food isn't decorated?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food isn't decorated?"")"
2262337,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
2263055,On which side is the scooter?," # left or right
    image_patch = ImagePatch(image)
    scooter_patches = image_patch.find(""scooter"")
    # Question assumes only one scooter patch
    if len(scooter_patches) == 0:
        # If no scooter is found, query the image directly
        return image_patch.simple_query(""On which side is the scooter?"")
    return ""right"""
2977430,Is the round plate to the right or to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the round plate to the right or to the left of the woman?"")"
480318,Is the icing on a donut?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the icing on a donut?"")"
1212225,Does the table to the left of the child look white and striped?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the table to the left of the child look white and striped?"")"
12939144,Does the tall chef look sad?," # contains a relation (tall, chef, sad), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tall chef look sad?"")"
10542640,How tall is the grass that looks green and brown?," # height in cm
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""How tall is the grass that looks green and brown?"")
    return grass_patches[0].simple_query(""How tall is the grass that looks green and brown?"") # crop would include the green and brown so keep it in the query"
10145087,Is there any black truck in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black truck"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
11542131,Is the grass green and small?," # returns yes or no
    image_patch = ImagePatch(image)
    grass_patches = image_patch.find(""grass"")
    # Question assumes only one grass patch
    if len(grass_patches) == 0:
        # If no grass is found, query the image directly
        return image_patch.simple_query(""Is the grass green and small?"")
    return bool_to_yesno(grass_patches[0].verify_property(""grass"", ""green"") and grass_patches[0].verify_property(""grass"", ""small""))"
11709076,Is the cup silver or black?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup silver or black?"")"
532251,What material is the fence made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is the fence made of?"")"
8603917,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
5633748,Is the green ball on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green ball on the right or on the left?"")"
10739570,Is the fence in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the bottom part or in the top of the image?"")"
8106988,Is the pillow to the left of a book?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow to the left of a book?"")"
19418866,Are there pillows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow""))"
3287359,Which kind of aircraft is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of aircraft is white?"")"
11121834,Is there any puppy behind the sheep the box is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any puppy behind the sheep the box is to the left of?"")"
14592061,Are there birds on the bench to the left of the train?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there birds on the bench to the left of the train?"")"
11284510,Where was the image taken?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the image taken?"")"
13216202,What is under the telephone the screen is to the right of?," # contains a relation (under, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the telephone the screen is to the right of?"")"
111044886,Are the chair and the floor the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Are the chair and the floor the same color?"")
    chair_patch = chair_patches[0]
    floor_patches = image_patch.find(""floor"")
    # Question assumes only one floor patch
    if len(floor_patches) == 0:
        return ""yes""
    floor_patch = floor_patches[0]
    return bool_to_yesno(chair_patch.verify_property(""chair"", ""color"") == floor_patch.verify_property(""floor"", ""color""))"
744598,"Which kind of vehicle is not blue, the car or the van?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""Which kind of vehicle is not blue, the car or the van?"")
    for vehicle_patch in vehicle_patches:
        is_blue = vehicle_patch.verify_property(""vehicle"", ""blue"")
        if not is_blue:
            return vehicle_patch.simple_query(""Which kind of vehicle is not blue, the car or the van?"")
    return ""car"""
352538,What is the wall covered by?," # contains a relation (covered by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the wall covered by?"")"
1128385,What rests on the red tomatoes below the sign?," # contains a relation (on, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What rests on the red tomatoes below the sign?"")"
1086487,Does the staircase that looks short have green color?," # contains a relation (short, long, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the staircase that looks short have green color?"")"
5587470,What is the person to the right of the woman hitting?," # contains a relation (hitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the woman hitting?"")"
3327645,Which side of the image is the drawer on?," # left or right
    image_patch = ImagePatch(image)
    drawer_patches = image_patch.find(""drawer"")
    # Question assumes only one drawer patch
    if len(drawer_patches) == 0:
        # If no drawer is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the drawer on?"")
    if drawer_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
18724063,Is the white toilet on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white toilet on the right or on the left?"")"
4782473,What is the cooking utensil to the left of the trash bin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cooking utensil to the left of the trash bin?"")"
10875079,Who is wearing an elbow pad?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing an elbow pad?"")"
154635,What color is the shirt the people are in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the people are in?"")"
4512200,Are there any drawers to the right of the desk that the notepad is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any drawers to the right of the desk that the notepad is on?"")"
13316352,What's the man in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man in front of?"")"
4359146,Is the shelf different in color than the floor?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf different in color than the floor?"")"
4789700,Is the lamp to the right of the laptop metallic or is it wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the right of the laptop metallic or is it wooden?"")"
6957885,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
8329223,Are there both a door and a window in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_door = image_patch.exists(""door"")
    is_window = image_patch.exists(""window"")
    return bool_to_yesno(is_door and is_window)"
8168107,What color do the bottles on the bicycle have?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do the bottles on the bicycle have?"")"
5593271,Is the white vehicle on the right side or on the left of the image?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white vehicle on the right side or on the left of the image?"")"
19426868,Is there either a tennis ball or a hydrant in this scene?," # tennis ball or hydrant
    image_patch = ImagePatch(image)
    is_tennis_ball = image_patch.exists(""tennis ball"")
    is_hydrant = image_patch.exists(""hydrant"")
    return bool_to_yesno(is_tennis_ball or is_hydrant)"
101032701,Which color is the shelf on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shelf on the right of the picture?"")"
11180474,What is the dog wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog wearing?"")"
6289774,What animal is in the water?," # contains a relation (in the water), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the water?"")"
61045598,Is the girl to the right or to the left of the bag the man is carrying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the bag the man is carrying?"")"
11285967,What is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bench?"")"
15130809,Are the tall trees lush or leafless?," # contains a relation (tall, lush, leafless, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the tall trees lush or leafless?"")"
8327455,Is the plate to the right or to the left of the dessert on the tablecloth?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the right or to the left of the dessert on the tablecloth?"")"
15287951,Is the snail cooked?," # assumes only one snail patch
    image_patch = ImagePatch(image)
    snail_patches = image_patch.find(""snail"")
    if len(snail_patches) == 0:
        # If no snail is found, query the image directly
        return image_patch.simple_query(""Is the snail cooked?"")
    return bool_to_yesno(snail_patches[0].verify_property(""snail"", ""cooked""))"
13241501,Does the table look wooden and orange?," # returns yes or no
    image_patch = ImagePatch(image)
    table_patches = image_patch.find(""table"")
    # Question assumes only one table patch
    if len(table_patches) == 0:
        # If no table is found, query the image directly
        return image_patch.simple_query(""Does the table look wooden and orange?"")
    return bool_to_yesno(table_patches[0].verify_property(""table"", ""wooden"") and table_patches[0].verify_property(""table"", ""orange""))"
4788845,Does the bikini of the woman have the same color as the poster?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bikini of the woman have the same color as the poster?"")"
18622315,What item of furniture is on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is on the floor?"")"
161068872,What is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate?"")"
4953369,Is the black umbrella to the right of the magazines on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black umbrella to the right of the magazines on the left side?"")"
1656867,What vehicle is the truck behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the truck behind of?"")"
7775904,Is the jacket blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the jacket blue?"")"
1417998,What is in front of the tree that the building is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the tree that the building is behind of?"")"
8828301,Of what color is the plastic container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the plastic container?"")"
12786258,What kind of device is not broken?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is not broken?"")"
5231631,What vegetable is on top of the plate?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on top of the plate?"")"
7759983,On which side are the red onions?," # left or right
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    # Question assumes only one onion patch
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""On which side are the red onions?"")
    for onion_patch in onion_patches:
        if onion_patch.horizontal_center < image_patch.horizontal_center:
            return ""left""
        else:
            return ""right"""
18917070,How long is the woman's hair?," # returns a string
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""How long is the woman's hair?"")
    return woman_patches[0].simple_query(""How long is the woman's hair?"") # crop would include the hair so keep it in the query"
104271,The napkin is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The napkin is on what?"")"
18573027,What is on the street light?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the street light?"")"
232351,What is the color of the kite's tail?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the kite's tail?"")"
17283706,Which color are the curtains?," # returns the color of the curtains
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtains"")
    # Question assumes only one curtain patch
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Which color are the curtains?"")
    return curtain_patches[0].simple_query(""Which color are the curtains?"")"
14463466,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
2790561,What device is heavy?," # assumes only one device
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    if len(device_patches) == 0:
        return image_patch.simple_query(""What device is heavy?"")
    for device_patch in device_patches:
        if device_patch.verify_property(""device"", ""heavy""):
            return device_patch.simple_query(""What device is heavy?"")
    return image_patch.simple_query(""What device is heavy?"")"
13761575,What is on the tree?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the tree?"")"
11788024,What color are the clouds?," # returns the color of the clouds
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the clouds?"")"
6479608,Is the man to the right or to the left of the wine glass that is to the left of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the wine glass that is to the left of the box?"")"
7113076,Is the camera different in color than the jacket?," # returns yes or no
    image_patch = ImagePatch(image)
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one camera patch
    if len(camera_patches) == 0:
        # If no camera is found, query the image directly
        return image_patch.simple_query(""Is the camera different in color than the jacket?"")
    camera_patch = camera_patches[0]
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        return ""no""
    jacket_patch = jacket_patches[0]
    return bool_to_yesno(camera_patch.verify_property(""camera"", ""color"") != jacket_patch.verify_property(""jacket"", ""color""))"
7126077,What color do you think the skirt is?," # skirt is a predicate of a relational verb (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the skirt is?"")"
18177171,Is the fence in the top or in the bottom?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top or in the bottom?"")"
9156934,What's the egg on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the egg on?"")"
392114,Does the dumpster have the same color as the tree?," # returns yes or no
    image_patch = ImagePatch(image)
    # contains a relation (same color as), so ask directly
    return bool_to_yesno(image_patch.simple_query(""Does the dumpster have the same color as the tree?"") == ""yes"")"
2807546,Are there both scarves and girls in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_scarf = image_patch.exists(""scarf"")
    is_girl = image_patch.exists(""girl"")
    return bool_to_yesno(is_scarf and is_girl)"
17977529,Is there a woman to the right of the bus the man is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the right of the bus the man is to the right of?"")"
1917235,"Which are older, the kids or the man?"," # assumes only one man and one kid
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    kid_patches = image_patch.find(""kid"")
    if len(man_patches) == 0 or len(kid_patches) == 0:
        return image_patch.simple_query(""Which are older, the kids or the man?"")
    man_age = man_patches[0].simple_query(""How old is the man?"")
    kid_age = kid_patches[0].simple_query(""How old is the kid?"")
    if int(man_age) > int(kid_age):
        return ""the man""
    else:
        return ""the kids"""
8362117,Are there pillows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow""))"
3179985,Are there either towels or bottles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_towel = image_patch.exists(""towel"")
    is_bottle = image_patch.exists(""bottle"")
    return bool_to_yesno(is_towel or is_bottle)"
8649851,What is the food that is on top of the pizza?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is on top of the pizza?"")"
6780305,Does the bowl have a different color than the shirt?," # assumes only one bowl and one shirt
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    shirt_patches = image_patch.find(""shirt"")
    if len(bowl_patches) == 0 or len(shirt_patches) == 0:
        return image_patch.simple_query(""Does the bowl have a different color than the shirt?"")
    bowl_patch = bowl_patches[0]
    shirt_patch = shirt_patches[0]
    if bowl_patch.verify_property(""bowl"", ""color"") != shirt_patch.verify_property(""shirt"", ""color""):
        return ""yes""
    return ""no"""
15309496,Is the happy woman in a fire truck?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the happy woman in a fire truck?"")"
2978343,What is the vegetable that is to the left of the tomato in the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable that is to the left of the tomato in the plate?"")"
161064135,What is the item of furniture to the left of the container on the right called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the container on the right called?"")"
13890289,Are there men to the right of the snowboard that is to the left of the ski?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the right of the snowboard that is to the left of the ski?"")"
6742278,What kind of animal is gray?," # contains a relation (gray), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is gray?"")"
12500246,Are these animals of different species?," # contains a relation (same species, different species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals of different species?"")"
16891841,What is the guy that is to the right of the bench wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the guy that is to the right of the bench wearing?"")"
14401740,Are there any clocks or books?," # returns yes or no
    image_patch = ImagePatch(image)
    is_clock = image_patch.exists(""clock"")
    is_book = image_patch.exists(""book"")
    return bool_to_yesno(is_clock or is_book)"
15674601,What kind of furniture is in the kitchen?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is in the kitchen?"")"
17228877,Are there refrigerators to the right of the appliance on the counter?," # assumes only one appliance on the counter
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance on the counter"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""Are there refrigerators to the right of the appliance on the counter?"")
    appliance_patch = appliance_patches[0]
    refrigerator_patches = image_patch.find(""refrigerator"")
    # Question assumes only one refrigerator patch
    if len(refrigerator_patches) == 0:
        return ""no""
    for refrigerator_patch in refrigerator_patches:
        if refrigerator_patch.horizontal_center > appliance_patch.horizontal_center:
            return ""yes""
    return ""no"""
3590785,What is the box made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the box made of?"")"
16978571,Who holds the animal?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the animal?"")"
6540459,Where is the bear?," # returns the location of the bear
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Where is the bear?"")
    return bear_patches[0].simple_query(""Where is the bear?"")"
9828059,Which side is the suitcase on?," # left or right
    image_patch = ImagePatch(image)
    suitcase_patches = image_patch.find(""suitcase"")
    # Question assumes only one suitcase patch
    if len(suitcase_patches) == 0:
        # If no suitcase is found, query the image directly
        return image_patch.simple_query(""Which side is the suitcase on?"")
    suitcase_patch = suitcase_patches[0]
    horizontal_center = suitcase_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7526367,What is the name of the piece of furniture that is not dark?," # dark is a property of the object
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    # Question assumes only one furniture patch
    if len(furniture_patches) == 0:
        # If no furniture is found, query the image directly
        return image_patch.simple_query(""What is the name of the piece of furniture that is not dark?"")
    for furniture_patch in furniture_patches:
        if not furniture_patch.verify_property(""furniture"", ""dark""):
            return furniture_patch.simple_query(""What is the name of the piece of furniture that is not dark?"")
    # If all furniture is dark, query the image directly
    return image_patch.simple_query(""What is the name of the piece of furniture that is not dark?"")"
16972367,Is the chocolate dessert to the right of a man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chocolate dessert to the right of a man?"")"
5907757,What do you think is the item of furniture that the backpack is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the item of furniture that the backpack is on?"")"
13927262,What is filled with wine?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is filled with wine?"")"
16376031,Are there any cars or bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_car or is_bag)"
6911185,Which kind of furniture is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is white?"")"
7893272,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
13973918,On which side of the picture is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12285926,Do you see a plate to the left of him?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Do you see a plate to the left of him?"")
    man_patch = man_patches[0]
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        return ""no""
    for plate_patch in plate_patches:
        if plate_patch.horizontal_center < man_patch.horizontal_center:
            return ""yes""
    return ""no"""
2190612,Do you see any fence to the right of the bull the rock is behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any fence to the right of the bull the rock is behind of?"")"
3559830,Are there any chairs to the left of the backpack the skateboarder is wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any chairs to the left of the backpack the skateboarder is wearing?"")"
66519,What animal is in the mud?," # contains a relation (in the mud), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the mud?"")"
14708479,What is the parking lot surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the parking lot surrounded by?"")"
17409956,What's resting on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's resting on the bench?"")"
4406397,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
349681,"Which material makes up the bottle that is to the right of the container, glass or plastic?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material makes up the bottle that is to the right of the container, glass or plastic?"")"
6466612,Is the yellow tower to the left of an American flag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow tower to the left of an American flag?"")"
15345165,Is the sparse grass brown or green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sparse grass brown or green?"")"
8541700,What is the device that is black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device that is black?"")"
4809781,What sauce is in the appliance that is not closed?," # appliance is not closed
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What sauce is in the appliance that is not closed?"")
    for appliance_patch in appliance_patches:
        if appliance_patch.verify_property(""appliance"", ""closed"") == False:
            return appliance_patch.simple_query(""What sauce is in the appliance that is not closed?"")
    # If no appliance is not closed, query the image directly
    return image_patch.simple_query(""What sauce is in the appliance that is not closed?"")"
16593483,What is the airplane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the airplane in front of?"")"
3184552,Is the horse on the right or on the left side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse on the right or on the left side?"")"
19673602,Do you see either any trains or cars in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""train"") or image_patch.exists(""car""))"
8114354,"What device is not broken, the screen or the laptop computer?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is not broken, the screen or the laptop computer?"")"
9157217,Does the plate look white and small?," # returns yes or no
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Does the plate look white and small?"")
    return bool_to_yesno(plate_patches[0].verify_property(""plate"", ""white"") and plate_patches[0].verify_property(""plate"", ""small""))"
31010451,Do both these people have the same gender?," # gender is not a property of a person, so ask directly
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only two person patches
    if len(person_patches) < 2:
        # If less than two people are found, query the image directly
        return image_patch.simple_query(""Do both these people have the same gender?"")
    person1 = person_patches[0]
    person2 = person_patches[1]
    return bool_to_yesno(person1.verify_property(""person"", ""male"") == person2.verify_property(""person"", ""male"")) # gender is not a property of a person, so ask directly"
14488666,Is the cat to the left of the container sitting on a sofa?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat to the left of the container sitting on a sofa?"")"
8438918,What color are the trousers he is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the trousers he is wearing?"")"
10152353,What toys are to the right of the man?," # returns a list of toys
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What toys are to the right of the man?"")
    man_patch = man_patches[0]
    toy_patches = image_patch.find(""toy"")
    # Question assumes only one toy patch
    if len(toy_patches) == 0:
        # If no toy is found, query the image directly
        return image_patch.simple_query(""What toys are to the right of the man?"")
    toys_to_right = []
    for toy_patch in toy_patches:
        if toy_patch.horizontal_center > man_patch.horizontal_center:
            toys_to_right.append(toy_patch.simple_query(""What toy is to the right of the man?""))
    return toys_to_right"
5864914,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15362410,Is the helmet to the left or to the right of the person that is on the right side?," # helmet and person on right
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the left or to the right of the person that is on the right side?"")
    helmet_patch = helmet_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the helmet to the left or to the right of the person that is on the right side?"")
    person_patch = person_patches[0]
    if person_patch.horizontal_center > helmet_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17291636,On which side of the image is the clock?," # left or right
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the clock?"")
    return ""left"" if clock_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
12211269,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
19210194,What is the device above the TV stand to the left of the laptop?," # contains a relation (above, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device above the TV stand to the left of the laptop?"")"
18571492,Are there cars or buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_car or is_bus)"
10235851,What do the people in front of the trees watch?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the people in front of the trees watch?"")"
16140447,Is the box to the left or to the right of the man that is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the box to the left or to the right of the man that is to the left of the woman?"")"
12751517,Which kind of device is on the desk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is on the desk?"")"
17899853,Do you see either any women or men that are walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman"") or image_patch.exists(""man"")) and image_patch.simple_query(""Are any of them walking?"") == ""yes"""
51798,Are there bikes in front of the man that is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bikes in front of the man that is to the left of the woman?"")"
6410267,Who is wearing pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing pants?"")"
1612171,Is the TV to the right or to the left of the woman that is holding the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the TV to the right or to the left of the woman that is holding the bag?"")"
15864576,What is covered with vegetable?," # contains a relation (covered with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered with vegetable?"")"
13227900,Do you see young women or children?," # contains a relation (young women or children), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see young women or children?"")"
12101947,Does the oven have a different color than the counter top?," # returns yes or no
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""Does the oven have a different color than the counter top?"")
    oven_color = oven_patches[0].simple_query(""What color is the oven?"")
    counter_patches = image_patch.find(""counter top"")
    # Question assumes only one counter patch
    if len(counter_patches) == 0:
        # If no counter top is found, query the image directly
        return image_patch.simple_query(""Does the oven have a different color than the counter top?"")
    counter_color = counter_patches[0].simple_query(""What color is the counter top?"")
    return bool_to_yesno(oven_color != counter_color)"
238223,Are there any shelves to the right of the blinds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelf"") and image_patch.exists(""blinds"") and image_patch.find(""shelf"")[0].horizontal_center > image_patch.find(""blinds"")[0].horizontal_center)"
161055309,"Where in this image is the telephone, in the top or in the bottom?"," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this image is the telephone, in the top or in the bottom?"")"
1262790,What does the snow cover?," # snow is a verb
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the snow cover?"")"
14925170,Do you see a closed door in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a closed door in this photograph?"")"
988701,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
12245470,Are there any rectangular plates?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""rectangular plate"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
9123348,Which kind of furniture is full of the DVDs?," # contains a relation (full of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is full of the DVDs?"")"
6533345,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
2344379,What's the boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the boy holding?"")"
13786149,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17818807,Is the bag in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag in the bottom part of the photo?"")"
2245303,What vehicles are on the street?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicles are on the street?"")"
17383668,Does the shirt look blue or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look blue or white?"")"
7449377,What's the bench made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bench made of?"")"
2667976,What type of animal is behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is behind the fence?"")"
690517,What is the item of furniture that the blender is on?," # blender is on a table
    image_patch = ImagePatch(image)
    blender_patches = image_patch.find(""blender"")
    # Question assumes only one blender patch
    if len(blender_patches) == 0:
        # If no blender is found, query the image directly
        return image_patch.simple_query(""What is the item of furniture that the blender is on?"")
    return blender_patches[0].simple_query(""What is the item of furniture that the blender is on?"") # crop would include the blender so keep it in the query"
8506252,Is the green plate to the left or to the right of the vegetable that is in the bottom of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the green plate to the left or to the right of the vegetable that is in the bottom of the picture?"")"
17165664,Is the cap black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    cap_patches = image_patch.find(""cap"")
    # Question assumes only one cap patch
    if len(cap_patches) == 0:
        # If no cap is found, query the image directly
        return image_patch.simple_query(""Is the cap black?"")
    return cap_patches[0].simple_query(""Is the cap black?"")"
2298371,What is the logo on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the logo on?"")"
10673224,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1791504,"Where in the picture is the paper cup, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the picture is the paper cup, in the bottom or in the top?"")"
5102209,Is the person to the right of the cigarette wearing shorts?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right of the cigarette wearing shorts?"")"
11551729,Which side of the image is the person on?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the person on?"")
    if person_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
151000374,What is in the vase?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the vase?"")"
3237808,Is the lady to the left of the man holding a cup?," # contains a relation (left, right, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady to the left of the man holding a cup?"")"
5876805,Which side is the bottle on?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Which side is the bottle on?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13737857,Is the dog to the left of the glasses sitting on the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog to the left of the glasses sitting on the chair?"")"
14643549,Who is wearing the glove?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glove?"")"
51069202,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
392285,Is the building behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building behind the fence?"")"
15287776,Does the pillow on the couch look white or orange?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pillow on the couch look white or orange?"")"
788503,What do both the traffic sign and the van have in common?," # traffic sign and van
    image_patch = ImagePatch(image)
    traffic_sign_patches = image_patch.find(""traffic sign"")
    van_patches = image_patch.find(""van"")
    # Question assumes only one traffic sign and one van patch
    if len(traffic_sign_patches) == 0 or len(van_patches) == 0:
        # If no traffic sign or van is found, query the image directly
        return image_patch.simple_query(""What do both the traffic sign and the van have in common?"")
    traffic_sign_patch = traffic_sign_patches[0]
    van_patch = van_patches[0]
    common_properties = traffic_sign_patch.verify_property(""traffic sign"", ""red"") and van_patch.verify_property(""van"", ""red"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", ""square"") and van_patch.verify_property(""van"", ""square"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", ""blue"") and van_patch.verify_property(""van"", ""blue"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", ""green"") and van_patch.verify_property(""van"", ""green"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", ""yellow"") and van_patch.verify_property(""van"", ""yellow"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", ""white"") and van_patch.verify_property(""van"", ""white"")
    common_properties = common_properties or traffic_sign_patch.verify_property(""traffic sign"", """
149995,Is the weather cloudless?," # cloudless is a property of weather
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""weather"", ""cloudless""))"
1544152,What kind of place do you think is shown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of place do you think is shown?"")"
3284930,Who is on the snow?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the snow?"")"
18537554,Is the bacon to the left of the utensils on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bacon to the left of the utensils on the right?"")"
1013883,Which side of the picture is the black lock on?," # left or right
    image_patch = ImagePatch(image)
    lock_patches = image_patch.find(""lock"")
    # Question assumes only one lock patch
    if len(lock_patches) == 0:
        # If no lock is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the black lock on?"")
    lock_patch = lock_patches[0]
    if lock_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
16492235,Are there both women and men in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_woman = image_patch.exists(""woman"")
    is_man = image_patch.exists(""man"")
    return bool_to_yesno(is_woman and is_man)"
1498647,Is the man to the right of the purse wearing a backpack?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the purse wearing a backpack?"")"
5778263,Is the clock to the left of a cabinet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the clock to the left of a cabinet?"")"
8643020,Is the shelf to the left of the shelves made of wire?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left of the shelves made of wire?"")"
51039333,Is the small tower to the right or to the left of the clock?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small tower to the right or to the left of the clock?"")"
6179852,Do you see a mug that is not large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a mug that is not large?"")"
3543174,Who is carrying the surfboard?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is carrying the surfboard?"")"
994528,Are there both windows and doors in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
10685585,Is the large device to the left or to the right of the computer in the middle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large device to the left or to the right of the computer in the middle?"")"
7423378,Is the fire hydrant on the left of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fire hydrant on the left of the picture?"")"
18229744,Are there any fences or cars in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_fence or is_car)"
15923299,Are there both ties and glasses in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tie = image_patch.exists(""tie"")
    is_glasses = image_patch.exists(""glasses"")
    return bool_to_yesno(is_tie and is_glasses)"
16951876,Do you see either bikers or women there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""biker"") or image_patch.exists(""woman""))"
19710813,Who is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the building?"")"
3881619,On which side of the photo is the controller?," # left or right
    image_patch = ImagePatch(image)
    controller_patches = image_patch.find(""controller"")
    # Question assumes only one controller patch
    if len(controller_patches) == 0:
        # If no controller is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the controller?"")
    if controller_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5156621,Which kind of meat is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of meat is on the plate?"")"
85319,What is the dressing in?," # assumes only one dressing patch
    image_patch = ImagePatch(image)
    dressing_patches = image_patch.find(""dressing"")
    if len(dressing_patches) == 0:
        # If no dressing is found, query the image directly
        return image_patch.simple_query(""What is the dressing in?"")
    return dressing_patches[0].simple_query(""What is the dressing in?"")"
18628625,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8548635,Is there an orange in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""orange""))"
8580263,Is the catcher behind the home plate wearing shoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the catcher behind the home plate wearing shoes?"")"
1255231,What color do you think the flowers are?," # returns the color of the flowers
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the flowers are?"")"
7534809,What is the skateboarder wearing?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the skateboarder wearing?"")"
14488688,What is the cat hanging off of?," # contains a relation (hanging off of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the cat hanging off of?"")"
12907645,On which side of the picture is the snowboard?," # left or right
    image_patch = ImagePatch(image)
    snowboard_patches = image_patch.find(""snowboard"")
    # Question assumes only one snowboard patch
    if len(snowboard_patches) == 0:
        # If no snowboard is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the snowboard?"")
    return ""left"" if snowboard_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1734756,Are there bags or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bag or is_car)"
261455,Do the chairs that are to the left of the other chair and the round tables both have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""chairs"", ""white"") and image_patch.verify_property(""round tables"", ""white""))"
14164478,Is the bus to the right of a traffic light?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus to the right of a traffic light?"")"
12347847,What is the device on the wall called?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the wall called?"")"
15543117,Does the man on the truck wear jeans?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man on the truck wear jeans?"")"
7724432,What is this woman holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this woman holding?"")"
5431907,Is the zebra's hair black or white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the zebra's hair black or white?"")"
1089587,What is the field in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the field in front of?"")"
2971088,Is the sink made of glass or porcelain?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sink made of glass or porcelain?"")"
15307191,Is there a computer on the wood desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a computer on the wood desk?"")"
4352104,Is the bus stop red and covered?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus stop red and covered?"")"
2974718,What is the black clothing item in the image?," # black clothing item
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What is the black clothing item in the image?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What is the black clothing item in the image?"")
    return clothing_patches[0].simple_query(""What is the black clothing item in the image?"")"
6671462,Which color is the hair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the hair?"")"
7914795,Do you see either any toys or electric toothbrushes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""toy"") or image_patch.exists(""electric toothbrush"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
10260931,What kind of food is not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is not yellow?"")"
113295,Which kind of vehicle is on the road?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is on the road?"")"
31020536,Are there surfboards or kites?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""surfboard"") or image_patch.exists(""kite"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
14455919,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
13623453,Are there tablets or televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tablet = image_patch.exists(""tablet"")
    is_tv = image_patch.exists(""television"")
    return bool_to_yesno(is_tablet or is_tv)"
3444984,Are there any glasses to the right of the pastry on the plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any glasses to the right of the pastry on the plate?"")"
9147459,Of which color is the cat on the right?," # cat on the right
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Of which color is the cat on the right?"")
    cat_patch = cat_patches[0]
    if cat_patch.horizontal_center > image_patch.horizontal_center:
        return cat_patch.simple_query(""What color is the cat?"")
    return cat_patch.simple_query(""Of which color is the cat on the right?"")"
13828111,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
1951924,Is he to the left or to the right of the glasses on the right side of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the left or to the right of the glasses on the right side of the picture?"")"
14982971,What is the person doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person doing?"")"
4420749,What is the bowl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bowl holding?"")"
14899698,Does the bear appear to be baby?," # contains a relation (baby, adult, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bear appear to be baby?"")"
4537727,What's sitting on the sink?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's sitting on the sink?"")"
9638816,Who is wearing a ski?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a ski?"")"
121040940,What is the color of the carpet?," # carpet is a common object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the carpet?"")"
3109789,On which side of the picture is the cup?," # left or right
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the cup?"")
    if cup_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6142024,What does the man hold?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the man hold?"")"
6822697,Who wears a sweater?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a sweater?"")"
5509501,On which side of the picture is the plate?," # left or right
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the plate?"")
    if plate_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11967776,Is there a cat on the back of the brown chair?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a cat on the back of the brown chair?"")"
12679310,The vase on the right of the image has which color?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The vase on the right of the image has which color?"")"
12614176,Are there any pillows to the right of the curtain that is to the right of the painting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any pillows to the right of the curtain that is to the right of the painting?"")"
18215510,Do you see either any cones or bicycles in this photo?," # contains a disjunction (or), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cone"") or image_patch.exists(""bicycle""))"
10758451,Are the people to the left of the cell phone sitting or standing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the people to the left of the cell phone sitting or standing?"")"
41025710,How is the meat that is lying on the white plate called?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the meat that is lying on the white plate called?"")"
2395803,What animal is grazing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is grazing?"")"
161004721,What is on the shelf in the center of the photo?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the shelf in the center of the photo?"")"
556533,Does the pillow that is to the left of the bottle look red?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pillow that is to the left of the bottle look red?"")"
8848325,What is in the glass?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass?"")"
1585527,Is it an outdoors or indoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors scene?"")"
15521026,What device is vintage?," # contains a relation (vintage), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is vintage?"")"
18676472,Is that table below a pizza?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that table below a pizza?"")"
4560313,On which side of the image are the plantains?," # left or right
    image_patch = ImagePatch(image)
    plantain_patches = image_patch.find(""plantain"")
    # Question assumes only one plantain patch
    if len(plantain_patches) == 0:
        # If no plantain is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the plantains?"")
    if plantain_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4161700,Is the lady on the left side or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lady on the left side or on the right?"")"
3222538,Do you see any men to the right of the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any men to the right of the horse?"")"
1359250,What is the woman to the right of the plate holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the right of the plate holding?"")"
10743372,Is the robe on the wall made out of cloth?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the robe on the wall made out of cloth?"")"
1980959,Are there either any large flags or balloons?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_large_flag = image_patch.exists(""large flag"")
    is_balloon = image_patch.exists(""balloon"")
    return bool_to_yesno(is_large_flag or is_balloon)"
2873524,What is sitting on top of the shelf in the top part?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on top of the shelf in the top part?"")"
17918695,Is the black car to the right or to the left of the helmet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black car to the right or to the left of the helmet?"")"
11797312,What is the color of the floor?," # returns the color of the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the floor?"")"
408747,Is she wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is she wearing shorts?"")"
3137995,The trees are where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The trees are where?"")"
7266591,What is on the hydrant in the image?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the hydrant in the image?"")"
71051622,Are there elephants or animals?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_elephant = image_patch.exists(""elephant"")
    is_animal = image_patch.exists(""animal"")
    return bool_to_yesno(is_elephant or is_animal)"
530730,Which kind of animal is the grass behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is the grass behind of?"")"
2249182,Does the woman appear to be old?," # age is a property of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Does the woman appear to be old?"")
    return bool_to_yesno(woman_patches[0].verify_property(""woman"", ""old""))"
18979796,Do you see either spatulas or whisks that are made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    spatula_patches = image_patch.find(""spatula"")
    whisk_patches = image_patch.find(""whisk"")
    for spatula_patch in spatula_patches:
        is_metal = spatula_patch.verify_property(""spatula"", ""metal"")
        if is_metal:
            return ""yes""
    for whisk_patch in whisk_patches:
        is_metal = whisk_patch.verify_property(""whisk"", ""metal"")
        if is_metal:
            return ""yes""
    return ""no"""
18283506,Is there a black table in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black table"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
17965594,Is the white car to the right or to the left of the bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white car to the right or to the left of the bench?"")"
7647887,Is there either any brown grass or sand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_grass = image_patch.exists(""brown grass"")
    is_sand = image_patch.exists(""sand"")
    return bool_to_yesno(is_brown_grass or is_sand)"
3926460,Do the wall and the tea pot have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the wall and the tea pot have a different colors?"")) # crop would include the wall so keep it in the query"
6664608,Is the man to the left of a racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of a racket?"")"
654115,What is the dog doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog doing?"")"
18695805,Does the bike that is to the right of the tissues look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bike that is to the right of the tissues look white?"")"
18105775,Is the broccoli to the right or to the left of the onion that is lying on the tray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the broccoli to the right or to the left of the onion that is lying on the tray?"")"
9958428,What's the wire hanging from?," # contains a relation (hanging from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the wire hanging from?"")"
4128624,Are the chairs to the right or to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the chairs to the right or to the left of the man?"")"
9937904,What is common to the avocado and the pepper?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the avocado and the pepper?"")"
3457467,What color is the grass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the grass?"")"
12462152,"Which color is the grass, brown or green?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the grass, brown or green?"")"
12408841,Is the SUV to the left of the vehicle that is in the bottom part of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the SUV to the left of the vehicle that is in the bottom part of the picture?"")"
8167146,What is on the sofa?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sofa?"")"
12366188,What is the clothing item that is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the clothing item that is white?"")"
7988681,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
18947176,Which kind of toy is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of toy is it?"")"
15532767,On which side is the statue?," # left or right
    image_patch = ImagePatch(image)
    statue_patches = image_patch.find(""statue"")
    # Question assumes only one statue patch
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch.simple_query(""On which side is the statue?"")
    return ""right"""
131027584,Who is wearing a coat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a coat?"")"
51012829,Is there any grass that is short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any grass that is short?"")"
12756632,What is the window made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the window made of?"")"
7155162,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
11366601,Are there either any farms or beaches that are not gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_farm = image_patch.exists(""farm"")
    is_beach = image_patch.exists(""beach"")
    is_gray = image_patch.exists(""gray"")
    return bool_to_yesno(is_farm or is_beach) and not bool_to_yesno(is_gray)"
17363468,Is the cow white or brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cow white or brown?"")"
817676,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4786738,Who is wearing the jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the jacket?"")"
18455396,What vegetables have the same color as the peppers?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetables have the same color as the peppers?"")"
118428,Is the cup on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup on the left side or on the right of the image?"")"
4667577,Is the broom on the left side of the image?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    # contains a relation (left, right), so ask directly
    return image_patch.simple_query(""Is the broom on the left side of the image?"")"
18645238,Are there any bowls or spoons in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bowl"") or image_patch.exists(""spoon""))"
181030141,Which kind of animal do you see?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal do you see?"")"
12719165,Are there both cups and cakes in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_cake = image_patch.exists(""cake"")
    return bool_to_yesno(is_cup and is_cake)"
17866072,What is the girl in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl in front of?"")"
9103455,"In which part of the photo is the tray, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the tray, the top or the bottom?"")"
15636771,Are the bush and the kite the same color?," # contains a relation (same, different, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bush and the kite the same color?"")"
1535667,Is the tree behind the white building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind the white building?"")"
2928322,Is there any towel in this photo that is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any towel in this photo that is red?"")"
5108818,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
15700567,"What is the animal next to the door doing, looking up or waiting?"," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal next to the door doing, looking up or waiting?"")"
16796382,Are the glasses in the top part or in the bottom of the photo?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    glasses_patches = image_patch.find(""glasses"")
    # Question assumes only one glasses patch
    if len(glasses_patches) == 0:
        # If no glasses are found, query the image directly
        return image_patch.simple_query(""Are the glasses in the top part or in the bottom of the photo?"")
    glasses_patch = glasses_patches[0]
    if glasses_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
13843767,Is this shelf to the right of a box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this shelf to the right of a box?"")"
1931215,Are there either any small windows or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_small_window = image_patch.exists(""small window"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_small_window or is_car)"
327003,Is there an umbrella above the person that is to the right of the elephant?," # contains a relation (above, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there an umbrella above the person that is to the right of the elephant?"")"
18456843,Is the light brown hair long or short?," # contains a relation (long or short), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the light brown hair long or short?"")"
4916839,Do you see lamps or alarm clocks?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lamp"") or image_patch.exists(""alarm clock""))"
6757529,Is the tub the same color as the bird?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tub the same color as the bird?"")"
12484845,Is the umbrella in the bottom or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella in the bottom or in the top of the image?"")"
1413762,Does the man to the left of the helmet appear to be walking?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the left of the helmet appear to be walking?"")"
7427518,What is the name of the white piece of furniture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the white piece of furniture?"")"
2234661,Do you see any ropes or snowboards?," # returns yes or no
    image_patch = ImagePatch(image)
    is_rope = image_patch.exists(""rope"")
    is_snowboard = image_patch.exists(""snowboard"")
    return bool_to_yesno(is_rope or is_snowboard)"
805166,How large is the van on the road?," # returns a string
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""How large is the van on the road?"")
    return van_patches[0].simple_query(""How large is the van on the road?"") # crop would include the van so keep it in the query"
8678342,Are the tiles brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""tiles"", ""brown""))"
12600190,What animal is in the field?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the field?"")"
13683575,Are there white helmets in the image?," # helmet
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Are there white helmets in the image?"")
    for helmet_patch in helmet_patches:
        if helmet_patch.verify_property(""helmet"", ""white""):
            return ""yes""
    return ""no"""
3784962,"Which material makes up the ground, clay or asphalt?"," # ground is a relational verb so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material makes up the ground, clay or asphalt?"")"
18786937,Is there a couch to the left of the food in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a couch to the left of the food in the center?"")"
6304540,Do you see any bottle to the left of the man that is holding the glass?," # bottle is not holding the glass
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Do you see any bottle to the left of the man that is holding the glass?"")
    for bottle_patch in bottle_patches:
        man_patches = image_patch.find(""man"")
        for man_patch in man_patches:
            if bottle_patch.horizontal_center < man_patch.horizontal_center:
                return ""yes""
    return ""no"""
17697711,What kind of furniture is made of wood?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is made of wood?"")"
8152619,What type of drink is to the left of the big banana that is on the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of drink is to the left of the big banana that is on the table?"")"
2841051,What is the animal above the grass that is not tall?," # contains a relation (above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal above the grass that is not tall?"")"
897565,What is the animal that the building is in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that the building is in front of?"")"
10646007,What color does the car to the left of the other cars have?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the car to the left of the other cars have?"")"
6694580,How big are the trees?," # returns a string
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""How big are the trees?"")
    return tree_patches[0].simple_query(""How big are the trees?"") # crop would include the tree so keep it in the query"
16410970,Are the boxes to the left of the bag that is to the left of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the boxes to the left of the bag that is to the left of the man?"")"
4311088,Which color does the logo on the shoe have?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the logo on the shoe have?"")"
7268836,Who is on the boat that looks white and blue?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the boat that looks white and blue?"")"
10322418,What is on the curtain?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the curtain?"")"
11303810,"Which color is the bag, white or green?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the bag, white or green?"")"
67518,Is this a pan or a pot?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a pan or a pot?"")"
18533800,Is the bench on the grass both empty and green?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench on the grass both empty and green?"")"
2713558,What is on the wood shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wood shelf?"")"
9253470,On which side is the toasted bread?," # left or right
    image_patch = ImagePatch(image)
    toasted_bread_patches = image_patch.find(""toasted bread"")
    # Question assumes only one toasted_bread patch
    if len(toasted_bread_patches) == 0:
        # If no toasted_bread is found, query the image directly
        return image_patch.simple_query(""On which side is the toasted bread?"")
    toasted_bread_patch = toasted_bread_patches[0]
    horizontal_center = toasted_bread_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1087023,Is the couch to the left of the table brown or white?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch to the left of the table brown or white?"")"
171007942,Do you see a refrigerator there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""refrigerator""))"
161049849,Is the orange bus on the right side or on the left of the photo?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange bus on the right side or on the left of the photo?"")"
7414099,What is the man in the supermarket wearing?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in the supermarket wearing?"")"
2234334,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
673749,What type of food is to the right of the food that is on the left of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of food is to the right of the food that is on the left of the picture?"")"
17765209,What is on the plate on the right side?," # contains a relation (on the right side), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate on the right side?"")"
11201974,What is the bench made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bench made of?"")"
7278174,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
3226563,What's covered in the dirt?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's covered in the dirt?"")"
151027277,Is there a woman to the left of the bag that the man is holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a woman to the left of the bag that the man is holding?"")"
15769776,What color is the mat?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the mat?"")"
12671281,"What color is the umbrella to the left of the other umbrella, white or orange?"," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella to the left of the other umbrella, white or orange?"")"
2214222,On which side of the photo is the blind?," # left or right
    image_patch = ImagePatch(image)
    blind_patches = image_patch.find(""blind"")
    # Question assumes only one blind patch
    if len(blind_patches) == 0:
        # If no blind is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the blind?"")
    blind_patch = blind_patches[0]
    if blind_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
847581,What vehicle is to the right of the lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is to the right of the lamp?"")"
6104722,Does the water bottle have a different color than the lid?," # returns yes or no
    image_patch = ImagePatch(image)
    water_bottle_patches = image_patch.find(""water bottle"")
    # Question assumes only one water bottle patch
    if len(water_bottle_patches) == 0:
        # If no water bottle is found, query the image directly
        return image_patch.simple_query(""Does the water bottle have a different color than the lid?"")
    water_bottle_patch = water_bottle_patches[0]
    lid_patches = image_patch.find(""lid"")
    # Question assumes only one lid patch
    if len(lid_patches) == 0:
        return ""no""
    lid_patch = lid_patches[0]
    return bool_to_yesno(water_bottle_patch.verify_property(""water bottle"", ""blue"") != lid_patch.verify_property(""lid"", ""blue""))"
12216607,Which side of the photo is the chair on?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the chair on?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7569650,What appliance is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is it?"")"
17192107,What is the person who is to the left of the car holding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person who is to the left of the car holding?"")"
992887,What is the color of the hat?," # returns the color of the hat
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What is the color of the hat?"")
    return hat_patches[0].simple_query(""What is the color of the hat?"") # crop would include the hat so keep it in the query"
8151896,Is the sofa on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sofa on the right of the photo?"")"
3660439,What is the color of the shirt that the person is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt that the person is wearing?"")"
16577326,What is the street made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the street made of?"")"
1042389,Do you see any faucets to the right of the yellow towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any faucets to the right of the yellow towel?"")"
8971777,What animal is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is brown?"")"
19893017,Where was the photo taken?," # contains a relation (where was the photo taken), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where was the photo taken?"")"
11323612,What is the baseball bat made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the baseball bat made of?"")"
15502708,Is the man to the right of a suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of a suitcase?"")"
3330041,What is the name of the animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal?"")"
16486644,Are the glass glasses to the left or to the right of the knife on the right of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the glass glasses to the left or to the right of the knife on the right of the picture?"")"
16692276,Is the racket to the left or to the right of the tennis ball?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket to the left or to the right of the tennis ball?"")"
2177021,Is there a speaker to the right of the device that is under the desk?," # contains a relation (under, to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a speaker to the right of the device that is under the desk?"")"
1415753,What is the food to the right of the knife that is shown in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food to the right of the knife that is shown in this photo?"")"
15614235,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
17442487,Are there any pastries to the left of the chocolate chips in the middle of the photo?," # contains a relation (left of, right of, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any pastries to the left of the chocolate chips in the middle of the photo?"")"
1103726,Is the lettuce in the top or in the bottom?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lettuce in the top or in the bottom?"")"
14391367,Which kind of fast food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is it?"")"
8412272,Is that grass tall?," # contains a relation (tall, short, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that grass tall?"")"
438057,What is the color of the vehicle in the bottom?," # bottom is the y-axis
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What is the color of the vehicle in the bottom?"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.vertical_center < image_patch.vertical_center:
            return vehicle_patch.simple_query(""What is the color of the vehicle in the bottom?"")
    return vehicle_patch.simple_query(""What is the color of the vehicle in the bottom?"")"
15937192,Is the brown horse to the right or to the left of the people on the right of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown horse to the right or to the left of the people on the right of the picture?"")"
15584799,Do you see men to the right of the woman on the right side of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see men to the right of the woman on the right side of the picture?"")"
15579866,Is the picture on the right?," # assumes only one image patch
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.horizontal_center > image_patch.width / 2)"
9440938,What was used to make the mirror?," # mirror is not in the image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What was used to make the mirror?"")"
6610575,Is the brown bread on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown bread on the left side or on the right of the image?"")"
1548823,On which side of the picture is the peach?," # left or right
    image_patch = ImagePatch(image)
    peach_patches = image_patch.find(""peach"")
    # Question assumes only one peach patch
    if len(peach_patches) == 0:
        # If no peach is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the peach?"")
    peach_patch = peach_patches[0]
    horizontal_center = image_patch.horizontal_center
    if peach_patch.horizontal_center < horizontal_center:
        return ""left""
    else:
        return ""right"""
5370980,Are there either any trash cans or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_trash_can = image_patch.exists(""trash can"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_trash_can or is_traffic_light)"
18449037,Does the ski to the right of the other skis look white?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the ski to the right of the other skis look white?"")"
4265281,Does the straight hair have orange color and short length?," # straight hair
    image_patch = ImagePatch(image)
    hair_patches = image_patch.find(""hair"")
    # Question assumes only one hair patch
    if len(hair_patches) == 0:
        # If no hair is found, query the image directly
        return image_patch.simple_query(""Does the straight hair have orange color and short length?"")
    for hair_patch in hair_patches:
        if hair_patch.verify_property(""hair"", ""straight"") and hair_patch.verify_property(""hair"", ""orange"") and hair_patch.verify_property(""hair"", ""short""):
            return ""yes""
    return ""no"""
18183622,Are there chairs or doors in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""chair"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_chair or is_door)"
1127543,Are there either men or toddlers in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") or image_patch.exists(""toddler""))"
10339410,Is the bag to the left or to the right of the man?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag to the left or to the right of the man?"")"
2941777,What is on the rug that is shown in this photo?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the rug that is shown in this photo?"")"
17279794,Are there any projectors or cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_projector = image_patch.exists(""projector"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_projector or is_cup)"
8829355,Is there either any white coffee or wine?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_coffee = image_patch.exists(""white coffee"")
    is_wine = image_patch.exists(""wine"")
    return bool_to_yesno(is_white_coffee or is_wine)"
51047527,Who is wearing a helmet?," # helmet
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a helmet?"")"
16425018,Are there either any buses or cars?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bus = image_patch.exists(""bus"")
    is_car = image_patch.exists(""car"")
    return bool_to_yesno(is_bus or is_car)"
3228984,Which color are the shorts?," # returns the color of the shorts
    image_patch = ImagePatch(image)
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one shorts patch
    if len(shorts_patches) == 0:
        # If no shorts are found, query the image directly
        return image_patch.simple_query(""Which color are the shorts?"")
    return shorts_patches[0].simple_query(""Which color are the shorts?"") # crop would include the shorts so keep it in the query"
6415822,Who wears a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a skirt?"")"
263768,What is located on top of the desk?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on top of the desk?"")"
5956370,Which kind of animal is on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is on the floor?"")"
9265895,What do both the pole and the bus have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the pole and the bus have in common?"")"
16830613,Is there a potato on the plate to the right of the pizza?," # contains a relation (on, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a potato on the plate to the right of the pizza?"")"
7169529,Who is holding the controllers which are to the right of the keyboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the controllers which are to the right of the keyboard?"")"
6478534,Does the shirt have white color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""white""))"
629458,Is the SUV to the right of a car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the SUV to the right of a car?"")"
1254289,What is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man doing?"")"
11960690,Who is wearing the shirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shirt?"")"
1015445,What is the lettuce on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lettuce on?"")"
16586647,Does this place mat have green color and striped pattern?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""place mat"", ""green"") and image_patch.verify_property(""place mat"", ""striped"")) # crop would include the pattern so keep it in the query"
14277778,What is the vehicle that is brown?," # contains a relation (brown), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is brown?"")"
9774414,Who is the water in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the water in front of?"")"
61004294,What kind of clothing is black?," # returns the clothing type of the first black clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""black""):
            return clothing_patch.simple_query(""What kind of clothing is black?"")
    return image_patch.simple_query(""What kind of clothing is black?"") # if no black clothing is found, query the image directly"
5918645,Is this a photo of a beach or a field?," # contains a relation (beach or field), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a photo of a beach or a field?"")"
13116263,Who is the blanket wrapped around?," # contains a relation (wrapped around), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the blanket wrapped around?"")"
14900447,What color is the appliance in the top?," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""What color is the appliance in the top?"")
    appliance_patch = appliance_patches[0]
    return appliance_patch.simple_query(""What color is the appliance in the top?"") # crop would include the appliance so keep it in the query"
13700217,Are there fences to the left of the car next to the sidewalk?," # contains a relation (next to, on, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there fences to the left of the car next to the sidewalk?"")"
11666537,"Which part of the photo is the zebra in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the photo is the zebra in, the bottom or the top?"")"
7881542,On which side of the image is the frisbee?," # left or right
    image_patch = ImagePatch(image)
    frisbee_patches = image_patch.find(""frisbee"")
    # Question assumes only one frisbee patch
    if len(frisbee_patches) == 0:
        # If no frisbee is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the frisbee?"")
    if frisbee_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1742971,Is the curtain near the dog white or red?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the curtain near the dog white or red?"")"
8803165,Do you see women that are walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see women that are walking?"")"
840989,Is it an outdoors or indoors picture?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors or indoors picture?"")"
534801,Is the ceiling above pineapples?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the ceiling above pineapples?"")"
1552069,What device is under the cat?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is under the cat?"")"
4193494,"In which part of the image is the bottle, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the image is the bottle, the bottom or the top?"")"
15971298,Are the happy boys wearing goggles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""happy boy wearing goggles"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
9160554,Is the child wearing a cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child wearing a cap?"")"
6817639,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
5752877,"Which type of food is not fresh, the orange or the pineapple?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of food is not fresh, the orange or the pineapple?"")"
8378104,Are there umbrellas in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umbrella""))"
6595400,What is the elephant surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the elephant surrounded by?"")"
21020382,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
7130510,Is the umbrella in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella in the bottom part or in the top of the photo?"")"
9574641,What is the name of the vehicle that has the same color as the shirt?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vehicle that has the same color as the shirt?"")"
7448874,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15869665,Is there any red train or bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""red train"") or image_patch.exists(""red bus""))"
3972360,Is the man to the right or to the left of the orange chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the orange chair?"")"
10142725,Does the bag that is to the left of the other bag have brown color?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bag that is to the left of the other bag have brown color?"")"
11710801,The boy is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The boy is in front of what?"")"
141051547,The person on the ski is using what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The person on the ski is using what?"")"
6913831,What color does the hallway made of glass have?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the hallway made of glass have?"")"
17943633,Is the pan to the left of a pizza?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pan to the left of a pizza?"")"
6547447,"In which part of the photo is the placemat, the top or the bottom?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the placemat, the top or the bottom?"")"
51028674,Does the bird have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""bird"", ""black""))"
12227858,Are there either any coins or mattresses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coin = image_patch.exists(""coin"")
    is_mattress = image_patch.exists(""mattress"")
    return bool_to_yesno(is_coin or is_mattress)"
2956242,Is the remote black?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the remote black?"")"
10234809,Does the balloon look pink?," # balloon is a specific object, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the balloon look pink?"") == ""yes"")"
3935187,Are there either giraffes or elephants that are drinking?," # contains a relation (drinking), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe_drinking = image_patch.exists(""giraffe"") and image_patch.exists(""drinking"")
    is_elephant_drinking = image_patch.exists(""elephant"") and image_patch.exists(""drinking"")
    return bool_to_yesno(is_giraffe_drinking or is_elephant_drinking)"
10249280,What is the name of the vegetable that is in the box?," # contains a relation (in the box), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the vegetable that is in the box?"")"
9158441,What is the container that is to the right of the bowl made of?," # made of is a property
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What is the container that is to the right of the bowl made of?"")"
518299,On which side is the clear bowl?," # left or right
    image_patch = ImagePatch(image)
    clear_bowl_patches = image_patch.find(""clear bowl"")
    # Question assumes only one clear bowl patch
    if len(clear_bowl_patches) == 0:
        # If no clear bowl is found, query the image directly
        return image_patch.simple_query(""On which side is the clear bowl?"")
    clear_bowl_patch = clear_bowl_patches[0]
    if clear_bowl_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11638252,Is the glass large or small?," # contains a relation (large, small, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the glass large or small?"")"
756657,Do you think the sky is clear?," # clear, cloudy, rainy, snowy
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the sky is clear?"")"
14478304,What vehicle is waiting?," # contains a relation (waiting for), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is waiting?"")"
7915679,What color is the hair the boy is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hair the boy is with?"")"
12976264,What device are the wires behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device are the wires behind of?"")"
18302721,How large is the oven that looks black?," # returns a string
    image_patch = ImagePatch(image)
    oven_patches = image_patch.find(""oven"")
    # Question assumes only one oven patch
    if len(oven_patches) == 0:
        # If no oven is found, query the image directly
        return image_patch.simple_query(""How large is the oven that looks black?"")
    for oven_patch in oven_patches:
        if oven_patch.simple_query(""Is the oven black?"") == ""yes"":
            return oven_patch.simple_query(""How large is the oven that looks black?"")
    # If no black oven is found, query the image directly
    return image_patch.simple_query(""How large is the oven that looks black?"")"
31070492,Where is this bird?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is this bird?"")"
17616389,Does the shirt have blue color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""shirt"", ""blue""))"
17276580,Is there a kettle or a pot that is silver?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    kettle_patches = image_patch.find(""kettle"")
    pot_patches = image_patch.find(""pot"")
    for kettle_patch in kettle_patches:
        if kettle_patch.verify_property(""kettle"", ""silver""):
            return ""yes""
    for pot_patch in pot_patches:
        if pot_patch.verify_property(""pot"", ""silver""):
            return ""yes""
    return ""no"""
14686492,Is the man on the left?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the left?"")"
10684887,Which kind of device is to the right of the computer mouse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the computer mouse?"")"
9856187,Is the building in front of the roof tall and white?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building in front of the roof tall and white?"")"
9482332,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
51028107,Do the hose and the chair have a different colors?," # returns yes or no
    image_patch = ImagePatch(image)
    hose_patches = image_patch.find(""hose"")
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one hose and one chair patch
    if len(hose_patches) == 0 or len(chair_patches) == 0:
        # If no hose or chair is found, query the image directly
        return image_patch.simple_query(""Do the hose and the chair have a different colors?"")
    hose_color = hose_patches[0].simple_query(""What color is the hose?"")
    chair_color = chair_patches[0].simple_query(""What color is the chair?"")
    return bool_to_yesno(hose_color != chair_color)"
12464443,Is the closed window clean or is it tinted?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the closed window clean or is it tinted?"")"
16622566,Are there any women that are sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""woman sitting""))"
4207522,What is the American flag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the American flag on?"")"
1654019,Are there either cones or helmets?," # helmet is not in the image
    image_patch = ImagePatch(image)
    is_cone = image_patch.exists(""cone"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_cone or is_helmet)"
1245777,How large is the nest?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How large is the nest?"")"
8404960,Are there cats or dogs in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cat = image_patch.exists(""cat"")
    is_dog = image_patch.exists(""dog"")
    return bool_to_yesno(is_cat or is_dog)"
866142,Does the man's beard have red color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""man's beard"", ""red""))"
416422,What color is the path?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the path?"")"
7214709,What is the tree in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the tree in front of?"")"
444216,Is the woman to the right of the giraffe wearing a necklace?," # giraffe is not found, so query the image directly
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Is the woman to the right of the giraffe wearing a necklace?"")
    for woman_patch in woman_patches:
        giraffe_patches = image_patch.find(""giraffe"")
        # Question assumes only one giraffe patch
        if len(giraffe_patches) == 0:
            # If no giraffe is found, query the image directly
            return image_patch.simple_query(""Is the woman to the right of the giraffe wearing a necklace?"")
        giraffe_patch = giraffe_patches[0]
        if woman_patch.horizontal_center > giraffe_patch.horizontal_center:
            return bool_to_yesno(woman_patch.verify_property(""woman"", ""necklace""))"
5654104,Is the small vehicle to the left or to the right of the red vehicle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the small vehicle to the left or to the right of the red vehicle?"")"
15421871,Does the vehicle to the left of the pilot have black color?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the vehicle to the left of the pilot have black color?"")"
16909594,What fruits are not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What fruits are not yellow?"")"
19790160,Is the device to the left of the clock antique and large?," # returns yes or no
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""Is the device to the left of the clock antique and large?"")
    for device_patch in device_patches:
        clock_patches = image_patch.find(""clock"")
        for clock_patch in clock_patches:
            if device_patch.horizontal_center < clock_patch.horizontal_center:
                return bool_to_yesno(device_patch.verify_property(""device"", ""antique"") and device_patch.verify_property(""device"", ""large""))
    return ""no"""
4524666,"Which color is the child's hair, brown or white?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the child's hair, brown or white?"")"
1380134,What do both the cell phone and the mouse have in common?," # returns a string
    image_patch = ImagePatch(image)
    cell_phone_patches = image_patch.find(""cell phone"")
    mouse_patches = image_patch.find(""mouse"")
    # Question assumes only one cell phone and one mouse patch
    if len(cell_phone_patches) == 0 or len(mouse_patches) == 0:
        # If no cell phone or mouse is found, query the image directly
        return image_patch.simple_query(""What do both the cell phone and the mouse have in common?"")
    cell_phone_patch = cell_phone_patches[0]
    mouse_patch = mouse_patches[0]
    common_properties = set(cell_phone_patch.simple_query(""What properties does the cell phone have?"").split("", "")) & set(mouse_patch.simple_query(""What properties does the mouse have?"").split("", ""))
    return cell_phone_patch.simple_query(""What do both the cell phone and the mouse have in common?"") # crop would include the common properties so keep it in the query"
18974961,What is the large orange hanging on?," # contains a relation (hanging on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large orange hanging on?"")"
12386613,On which side of the image is the ball?," # left or right
    image_patch = ImagePatch(image)
    ball_patches = image_patch.find(""ball"")
    # Question assumes only one ball patch
    if len(ball_patches) == 0:
        # If no ball is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the ball?"")
    if ball_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
9273767,What device is to the right of the chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the chair?"")"
4717664,Is there a pillow in the photo that is not purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    for pillow_patch in pillow_patches:
        if pillow_patch.verify_property(""pillow"", ""purple"") == False:
            return ""yes""
    return ""no"""
12430293,What is the color of the shirt the player wears?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the player wears?"")"
5439227,Are there any helmets or guys?," # helmet or guy
    image_patch = ImagePatch(image)
    is_helmet = image_patch.exists(""helmet"")
    is_guy = image_patch.exists(""guy"")
    return bool_to_yesno(is_helmet or is_guy)"
13675107,Are there both a window and a door in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
91032734,How large is the umbrella?," # returns a string
    image_patch = ImagePatch(image)
    umbrella_patches = image_patch.find(""umbrella"")
    # Question assumes only one umbrella patch
    if len(umbrella_patches) == 0:
        # If no umbrella is found, query the image directly
        return image_patch.simple_query(""How large is the umbrella?"")
    return umbrella_patches[0].simple_query(""How large is the umbrella?"") # crop would include the umbrella so keep it in the query"
3547886,What kind of clothing is short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is short sleeved?"")"
10869902,Do you see both a window and a door in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_window = image_patch.exists(""window"")
    is_door = image_patch.exists(""door"")
    return bool_to_yesno(is_window and is_door)"
19243603,Are there any bags or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bag = image_patch.exists(""bag"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_bag or is_chair)"
10402709,What color is the chair to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the chair to the left of the man?"")"
16831841,How is the dessert that is on the table called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the dessert that is on the table called?"")"
15628366,Is the woman above a bed?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman above a bed?"")"
3233513,Is the dog on a bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog on a bed?"")"
269600,Is the bench both gray and large?," # gray and large are properties
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""Is the bench both gray and large?"")
    return bool_to_yesno(bench_patches[0].verify_property(""bench"", ""gray"") and bench_patches[0].verify_property(""bench"", ""large""))"
1390485,Who is on the skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the skateboard?"")"
1879430,What's located on top of the wall?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the wall?"")"
41018407,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
3398606,Is the broccoli to the right or to the left of the knife?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the broccoli to the right or to the left of the knife?"")"
1489688,What are the people to the right of the other people doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the people to the right of the other people doing?"")"
8389694,What is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the table?"")"
1456325,Is the knife in the bottom part or in the top?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the bottom part or in the top?"")"
1611448,Is there a lamp or a couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lamp = image_patch.exists(""lamp"")
    is_couch = image_patch.exists(""couch"")
    return bool_to_yesno(is_lamp or is_couch)"
41016369,Is the pillow on the right?," # contains a relation (on the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pillow on the right?"")"
2208648,What device is going into the laptop?," # contains a relation (going into), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is going into the laptop?"")"
1903653,How clean is the clear water?," # clear water is a predicate, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How clean is the clear water?"")"
17580653,Is the salad to the right of a beverage?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the salad to the right of a beverage?"")"
1487915,Who is wearing an outfit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing an outfit?"")"
12462696,Who is skiing on the mountain?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing on the mountain?"")"
5958879,Is that ground brown and grassy?," # ground and grass are the same object
    image_patch = ImagePatch(image)
    ground_patches = image_patch.find(""ground"")
    # Question assumes only one ground patch
    if len(ground_patches) == 0:
        # If no ground is found, query the image directly
        return image_patch.simple_query(""Is that ground brown and grassy?"")
    return bool_to_yesno(ground_patches[0].verify_property(""ground"", ""brown"") and ground_patches[0].verify_property(""ground"", ""grassy""))"
15671928,Does the jacket look black?," # returns yes or no
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Does the jacket look black?"")
    return bool_to_yesno(jacket_patches[0].verify_property(""jacket"", ""black""))"
8767803,Is that grass under a bench?," # contains a relation (under, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that grass under a bench?"")"
138751,What kind of furniture is the pillow on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the pillow on?"")"
17293907,What kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is blue?"")"
2868914,Does the umbrella look black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the umbrella look black?"")"
14969841,Which side of the picture are the shelves on?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the picture are the shelves on?"")"
5639165,Is the old man to the right of the suitcase that looks blue and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the old man to the right of the suitcase that looks blue and black?"")"
4858176,Are the trousers white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""trousers"", ""white""))"
16647926,Which color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt?"")"
4934259,Is there any red plate or apple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_plate = image_patch.exists(""red plate"")
    is_red_apple = image_patch.exists(""red apple"")
    return bool_to_yesno(is_red_plate or is_red_apple)"
111057822,Is the tent to the left of an umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tent to the left of an umbrella?"")"
16155962,Are the garlic and the green vegetable next to the mushroom both fresh?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the garlic and the green vegetable next to the mushroom both fresh?"")"
17863916,Are the animals of different types?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""animal"") and not image_patch.exists(""animals"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
9876013,Are there any cakes or glasses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_glass = image_patch.exists(""glass"")
    return bool_to_yesno(is_cake or is_glass)"
3367590,What drink is on the counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is on the counter?"")"
10933533,What's lying on the ground?," # contains a relation (on the ground), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's lying on the ground?"")"
1217239,What is the color of the shirt the man is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the shirt the man is wearing?"")"
12178108,Are there any shelves behind the chair on the right of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""shelf"") and image_patch.horizontal_center < image_patch.cropped_image.shape[2] / 2)"
2894499,What is the vehicle that is the same color as the bicycle pulling the cart called?," # contains a relation (pulling), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that is the same color as the bicycle pulling the cart called?"")"
4369644,Which side of the image is the cabinet on?," # left or right
    image_patch = ImagePatch(image)
    cabinet_patches = image_patch.find(""cabinet"")
    # Question assumes only one cabinet patch
    if len(cabinet_patches) == 0:
        # If no cabinet is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the cabinet on?"")
    if cabinet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19339907,Is the bowl to the left or to the right of the woman?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl to the left or to the right of the woman?"")"
14128520,Are there cages or mattresses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cage = image_patch.exists(""cage"")
    is_mattress = image_patch.exists(""mattress"")
    return bool_to_yesno(is_cage or is_mattress)"
15265313,Are there either pictures or chairs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_picture = image_patch.exists(""picture"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_picture or is_chair)"
9301063,What is the woman looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman looking at?"")"
834011,What is the bridge made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bridge made of?"")"
767886,What device is to the left of the red candle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the red candle?"")"
11146290,Are there chairs at the table?," # contains a relation (at), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""chair at table"")) # crop would include the table so keep it in the query"
12838542,What does the person to the left of the man hold?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person to the left of the man hold?"")"
19309599,What is on the wall that is shown in the picture?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall that is shown in the picture?"")"
868247,Is there any tomato on the pizza?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any tomato on the pizza?"")"
4941034,What is worn on the man?," # contains a relation (worn on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is worn on the man?"")"
2253805,Does the small bear look soft and white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the small bear look soft and white?"")"
3870459,What kind of clothing is not dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of clothing is not dark?"")"
13154586,Is the person in the photo wearing a skirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person in the photo wearing a skirt?"")"
981998,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
17395393,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
14405752,What color is the frisbee on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the frisbee on the right?"")"
12284816,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
18935968,What color are the clothes the boy is wearing?," # returns a string
    image_patch = ImagePatch(image)
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What color are the clothes the boy is wearing?"")
    boy_patch = boy_patches[0]
    return boy_patch.simple_query(""What color are the clothes the boy is wearing?"") # crop would include the clothes so keep it in the query"
8412099,Do you see a train near the building?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a train near the building?"")"
91006049,Which kind of animal is young?," # contains a relation (young), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is young?"")"
1766581,Which kind of furniture is the candle sitting on top of?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the candle sitting on top of?"")"
7396908,What is the woman in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman in front of?"")"
18407648,Do you see cars to the left of the vehicle which is to the right of the rope?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cars to the left of the vehicle which is to the right of the rope?"")"
16624535,What is the color of the hat that the boy is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the hat that the boy is wearing?"")"
4583622,Is the sailboat on the left side or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sailboat on the left side or on the right of the image?"")"
5542653,Which kind of device is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is white?"")"
18228841,What is the guy wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the guy wearing?"")"
12916038,Where is the woman standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the woman standing?"")"
16980023,Are there hot dogs on the plate that is sitting on the table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there hot dogs on the plate that is sitting on the table?"")"
8994332,Is the bed to the right or to the left of the drawer on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bed to the right or to the left of the drawer on the left?"")"
14371188,Where is the zebra?," # returns the location of the zebra
    image_patch = ImagePatch(image)
    zebra_patches = image_patch.find(""zebra"")
    # Question assumes only one zebra patch
    if len(zebra_patches) == 0:
        # If no zebra is found, query the image directly
        return image_patch.simple_query(""Where is the zebra?"")
    return zebra_patches[0].simple_query(""Where is the zebra?"") # crop would include the zebra so keep it in the query"
13606912,Which kind of clothing is tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is tan?"")"
5989613,The man to the left of the person is wearing what?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The man to the left of the person is wearing what?"")"
9978108,Do you see cakes in the box?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see cakes in the box?"")"
4456491,What kind of furniture is in front of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is in front of the television?"")"
10388571,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
4663744,How large is the open bag?," # returns a string
    image_patch = ImagePatch(image)
    bag_patches = image_patch.find(""bag"")
    # Question assumes only one bag patch
    if len(bag_patches) == 0:
        # If no bag is found, query the image directly
        return image_patch.simple_query(""How large is the open bag?"")
    return bag_patches[0].simple_query(""How large is the open bag?"") # crop would include the open bag so keep it in the query"
46510,What is the item of furniture to the left of the person that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the person that is wearing a shirt?"")"
12171044,Is the girl to the right or to the left of the computer?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the right or to the left of the computer?"")"
442618,What is on the microwave?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the microwave?"")"
15972559,What is the child wrapped in?," # contains a relation (wrapped in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the child wrapped in?"")"
9691704,Is the wood fence behind or in front of the animal by the card?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood fence behind or in front of the animal by the card?"")"
3886590,What piece of furniture is messy?," # assumes only one piece of furniture is messy
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    if len(furniture_patches) == 0:
        return image_patch.simple_query(""What piece of furniture is messy?"")
    for furniture_patch in furniture_patches:
        is_messy = furniture_patch.simple_query(""Is the furniture messy?"") == ""yes""
        if is_messy:
            return furniture_patch.simple_query(""What piece of furniture is messy?"")
    return furniture_patches[0].simple_query(""What piece of furniture is messy?"")"
13362569,Does the tie appear to be red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the tie appear to be red?"")) # crop would include the tie so keep it in the query"
6660410,Is the woman to the right of an umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of an umbrella?"")"
10224532,Are the trees bare or lush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trees bare or lush?"")"
13201853,What animal is in the sink?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the sink?"")"
16550570,Is the man in the bottom part of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man in the bottom part of the photo?"")"
19396195,Are the goggles green or red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the goggles green or red?"")"
10659364,On which side is the tower?," # left or right
    image_patch = ImagePatch(image)
    tower_patches = image_patch.find(""tower"")
    # Question assumes only one tower patch
    if len(tower_patches) == 0:
        # If no tower is found, query the image directly
        return image_patch.simple_query(""On which side is the tower?"")
    if tower_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
4690441,On which side is the small appliance?," # left or right
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""small appliance"")
    # Question assumes only one appliance patch
    if len(appliance_patches) == 0:
        # If no appliance is found, query the image directly
        return image_patch.simple_query(""On which side is the small appliance?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3464042,Is the man to the left or to the right of the truck in this image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the truck in this image?"")"
16558001,What is the lady holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady holding?"")"
6950577,Is the man to the right or to the left of the yellow bags?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the yellow bags?"")"
11898461,Which side of the photo is the remote control on?," # left or right
    image_patch = ImagePatch(image)
    remote_control_patches = image_patch.find(""remote control"")
    # Question assumes only one remote control patch
    if len(remote_control_patches) == 0:
        # If no remote control is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the remote control on?"")
    remote_control_patch = remote_control_patches[0]
    horizontal_center = remote_control_patch.horizontal_center
    if horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10605258,What do both the hat and the canopy have in common?," # returns a string
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""What do both the hat and the canopy have in common?"")
    hat_patch = hat_patches[0]
    canopy_patches = image_patch.find(""canopy"")
    # Question assumes only one canopy patch
    if len(canopy_patches) == 0:
        return image_patch.simple_query(""What do both the hat and the canopy have in common?"")
    canopy_patch = canopy_patches[0]
    common_properties = set(hat_patch.verify_property(""hat"", property) for property in [""red"", ""blue"", ""green"", ""yellow"", ""white"", ""black"", ""gray"", ""brown"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""])
    common_properties = common_properties.union(set(canopy_patch.verify_property(""canopy"", property) for property in [""red"", ""blue"", ""green"", ""yellow"", ""white"", ""black"", ""gray"", ""brown"", ""orange"", ""purple"", ""pink"", ""turquoise"", ""silver"", ""gold""]))
    return common_properties.pop()"
12872618,Are there both a train and a fence in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_train and is_fence)"
1074954,Who is using the bat?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is using the bat?"")"
17974911,What device is to the right of the television?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the television?"")"
15155988,Which animals in the image are female?," # returns a string
    image_patch = ImagePatch(image)
    animal_patches = image_patch.find(""animal"")
    # Question assumes only one animal patch
    if len(animal_patches) == 0:
        # If no animal is found, query the image directly
        return image_patch.simple_query(""Which animals in the image are female?"")
    for animal_patch in animal_patches:
        if animal_patch.verify_property(""animal"", ""female""):
            return animal_patch.simple_query(""Which animals in the image are female?"")
    return ""none"""
17127937,What type of baked good is below the tomato on the sandwich?," # contains a relation (below, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of baked good is below the tomato on the sandwich?"")"
7979006,Is the floor brown or green?," # contains a relation (on, above, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the floor brown or green?"")"
4898324,What article of clothing is blue?," # returns the first article of clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What article of clothing is blue?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""clothing"", ""blue""):
            return clothing_patch.simple_query(""What article of clothing is blue?"")
    return image_patch.simple_query(""What article of clothing is blue?"")"
3770783,Are the trees covered or bare?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the trees covered or bare?"")"
2946942,Is there a knife or a plate in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""knife"") or image_patch.exists(""plate""))"
7509830,Are there either any giraffes or cows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"") or image_patch.exists(""cow""))"
7861493,What color are the books on the right side?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the books on the right side?"")"
7259128,"In which part of the picture is the potato, the bottom or the top?"," # potato
    image_patch = ImagePatch(image)
    potato_patches = image_patch.find(""potato"")
    # Question assumes only one potato patch
    if len(potato_patches) == 0:
        # If no potato is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the potato, the bottom or the top?"")
    if potato_patches[0].vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
429372,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
633496,Are there bookcases to the left of the candle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bookcase"") and image_patch.exists(""candle"") and image_patch.find(""bookcase"")[0].horizontal_center < image_patch.find(""candle"")[0].horizontal_center)"
8476919,The net is in front of who?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The net is in front of who?"")"
3755122,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
5146490,Does the man's hair appear to be brown and short?," # returns yes or no
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the man's hair appear to be brown and short?"")
    man_patch = man_patches[0]
    return bool_to_yesno(man_patch.verify_property(""man"", ""brown"") and man_patch.verify_property(""man"", ""short""))"
7828624,Is the kite in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kite in the top part of the image?"")"
4305148,Is there a goat or a cow that is walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    goat_patches = image_patch.find(""goat"")
    cow_patches = image_patch.find(""cow"")
    for goat_patch in goat_patches:
        if goat_patch.verify_property(""goat"", ""walking""):
            return ""goat""
    for cow_patch in cow_patches:
        if cow_patch.verify_property(""cow"", ""walking""):
            return ""cow""
    return ""no"""
18552600,What is the person on the bench looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person on the bench looking at?"")"
12237045,Is this a bed or a couch?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a couch?"")"
11934928,What is the woman to the left of the papers looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the left of the papers looking at?"")"
16637588,What kind of baked good is in the container that is made of cardboard?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is in the container that is made of cardboard?"")"
766832,What is the device to the right of the book on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the right of the book on the left side?"")"
12363548,What piece of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is it?"")"
1299124,What color is the rope?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the rope?"")"
13849362,Are there any spoons to the right of the burger that is above the bread?," # contains a relation (above, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any spoons to the right of the burger that is above the bread?"") # contains a relation (above, to the right of, etc), so ask directly"
5321139,Is the white tent to the left or to the right of the man that is to the left of the camera?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white tent to the left or to the right of the man that is to the left of the camera?"")"
12506511,How is the vehicle below the wires called?," # contains a relation (below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the vehicle below the wires called?"")"
19462655,What's the tag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the tag on?"")"
5988038,The animal that looks beige and tan is wearing what?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The animal that looks beige and tan is wearing what?"")"
1298121,Is the black and white animal behind the fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black and white animal behind the fence?"")"
14904369,What animal is outdoors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is outdoors?"")"
14966431,Which color is the water?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the water?"")"
1283449,What are the hedges in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the hedges in front of?"")"
135931,What color is the long tail?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the long tail?"")"
3744075,What is the piece of furniture that the box is in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the box is in front of?"")"
11186526,What's the bridge made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the bridge made of?"")"
7958113,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
19834383,Which kind of vehicle is the man in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is the man in front of?"")"
6303385,Which side is the bottle on?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""Which side is the bottle on?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
3256802,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
4861669,What color is the toy to the left of the girl?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the toy to the left of the girl?"")"
2821788,What animal is the woman in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is the woman in front of?"")"
10558783,On which side of the photo is the white towel?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the white towel?"")"
7238883,Is the long table behind or in front of the man that is to the left of the wine bottle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the long table behind or in front of the man that is to the left of the wine bottle?"")"
1755039,Is the black motorcycle to the left or to the right of the person in the middle of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black motorcycle to the left or to the right of the person in the middle of the image?"")"
6298876,What are the horses in front of the trees eating?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the horses in front of the trees eating?"")"
809270,Is the striped chair to the right or to the left of the black phone?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the striped chair to the right or to the left of the black phone?"")"
5572127,Is the book on a shelf?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book on a shelf?"")"
11463815,Is that woman in front of a refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that woman in front of a refrigerator?"")"
4364098,Is the knife in the top of the picture?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the knife in the top of the picture?"")"
18982390,Are the pears on the left or on the right of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pears on the left or on the right of the image?"")"
9691501,What is the color of the jacket the person is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the jacket the person is wearing?"")"
16391368,Is the man to the right or to the left of the monitor in the middle?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the monitor in the middle?"")"
864602,What kind of vehicle is on the street that the buildings are along?," # contains a relation (along, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is on the street that the buildings are along?"")"
267104,Are there umpires behind the home plate?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""umpire"") and image_patch.simple_query(""Are the umpires behind the home plate?"") == ""yes"")"
2402628,What color does the bench have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the bench have?"")"
11111534,What is the dessert on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dessert on the plate?"")"
2995194,What is the man that is to the right of the can wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man that is to the right of the can wearing?"")"
4236132,Is that book open or closed?," # contains a relation (open, closed), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that book open or closed?"")"
15422558,Is the big tree near the building brown and tall?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the big tree near the building brown and tall?"")"
8166172,What vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is on the street?"")"
1248086,Was this image taken in a forest or in a farm?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Was this image taken in a forest or in a farm?"")"
8105938,"Which material is the white chair made of, plastic or leather?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which material is the white chair made of, plastic or leather?"")"
16549759,Are there dishwashers in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""dishwasher""))"
9802010,Do you see a plate or a cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a plate or a cup?"")"
14742484,What do you think is the man doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the man doing?"")"
8132911,Are there both locks and bicycles in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lock = image_patch.exists(""lock"")
    is_bicycle = image_patch.exists(""bicycle"")
    return bool_to_yesno(is_lock and is_bicycle)"
18452715,What is the vehicle to the right of the taxi called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the taxi called?"")"
18425298,Are there both rackets and fences in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_racket = image_patch.exists(""racket"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_racket and is_fence)"
7242209,What color do the pants have?," # returns the color of the pants
    image_patch = ImagePatch(image)
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        # If no pants are found, query the image directly
        return image_patch.simple_query(""What color do the pants have?"")
    return pants_patches[0].simple_query(""What color do the pants have?"") # crop would include the pants so keep it in the query"
17639028,The small car is which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The small car is which color?"")"
7743827,What is on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bed?"")"
1791162,Which side of the photo is the woman on?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the woman on?"")
    woman_patch = woman_patches[0]
    if woman_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8205681,Are there both bottles and plates in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bottle = image_patch.exists(""bottle"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_bottle and is_plate)"
4430292,Does the guy that is to the right of the other guy appear to be sitting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the guy that is to the right of the other guy appear to be sitting?"")"
3756432,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
5507875,Is the man on the right?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man on the right?"")"
9592349,What device is on top of the desk?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on top of the desk?"")"
12737432,Does the cup look large?," # returns a boolean
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the cup look large?"") == ""yes"")"
19640327,With what animal is the person to the right of the guitar playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""With what animal is the person to the right of the guitar playing?"")"
18302956,Which color does the appliance the stove top is on have?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does the appliance the stove top is on have?"")"
5499516,Does the scarf appear to be red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the scarf appear to be red?"")) # crop would include the scarf so keep it in the query"
51058469,Which side is the car on?," # left or right
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    # Question assumes only one car patch
    if len(car_patches) == 0:
        # If no car is found, query the image directly
        return image_patch.simple_query(""Which side is the car on?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
13794250,What type of animal is in front of the orange wall?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of animal is in front of the orange wall?"")"
9372222,What is the animal under the black umbrella?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal under the black umbrella?"")"
17527241,Who is on the bike that looks red and black?," # contains a relation (on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bike that looks red and black?"")"
6989798,Are there any balls in the air?," # contains a relation (in the air), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""ball""))"
16978719,Does the tshirt look orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the tshirt look orange?"")"
1295368,On which side is the man?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""On which side is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12921484,Is the piano to the right of a pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the piano to the right of a pillow?"")"
6736977,Are the trees behind a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the trees behind a fence?""))"
6797934,What is the dog on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dog on?"")"
11009293,How are the pieces of furniture that are made of wood called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How are the pieces of furniture that are made of wood called?"")"
16267541,Is the hair light brown or blond?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair light brown or blond?"")"
2433621,Does the cat look black and white or colorful?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cat look black and white or colorful?"")"
1870985,That man is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That man is where?"")"
11117211,Is the car on the right side?," # assumes only one car
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    if len(car_patches) == 0:
        return image_patch.simple_query(""Is the car on the right side?"")
    car_patch = car_patches[0]
    if car_patch.horizontal_center > image_patch.horizontal_center:
        return ""yes""
    return ""no"""
3548904,Does the chair that is to the right of the bookshelf have red color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the chair that is to the right of the bookshelf have red color?"")"
111029029,Is the girl with the glove wearing a hat?," # contains a relation (with, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl with the glove wearing a hat?"")"
15136174,Do you see both surfboards and paintings?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_surfboard = image_patch.exists(""surfboard"")
    is_painting = image_patch.exists(""painting"")
    return bool_to_yesno(is_surfboard and is_painting)"
7284854,Is there any airplane in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""airplane in the sky"")) # contains a relation (in the sky), so ask directly"
3684177,Are the pedestrians to the left of a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pedestrians to the left of a truck?"")"
12256444,What is the bag on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bag on?"")"
15292537,What animal is in the bathroom?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the bathroom?"")"
4410926,Which side of the image is the rope on?," # left or right
    image_patch = ImagePatch(image)
    rope_patches = image_patch.find(""rope"")
    # Question assumes only one rope patch
    if len(rope_patches) == 0:
        # If no rope is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the rope on?"")
    rope_patch = rope_patches[0]
    if rope_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6984943,Are there either gifts or rugs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_gift = image_patch.exists(""gift"")
    is_rug = image_patch.exists(""rug"")
    return bool_to_yesno(is_gift or is_rug)"
9909054,Is the man to the left of the person holding a surfboard?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the person holding a surfboard?"")"
230816,"What kind of vehicle is white, the van or the car?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is white, the van or the car?"")"
13581910,Is the logo green or orange?," # contains a logo
    image_patch = ImagePatch(image)
    logo_patches = image_patch.find(""logo"")
    # Question assumes only one logo patch
    if len(logo_patches) == 0:
        # If no logo is found, query the image directly
        return image_patch.simple_query(""Is the logo green or orange?"")
    return logo_patches[0].best_text_match([""green"", ""orange""])"
14314920,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
18498895,Where is the man with the stick playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the man with the stick playing?"")"
141032779,Is the yellow mug to the left or to the right of the yellow object near the knife?," # contains a relation (left, right, near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow mug to the left or to the right of the yellow object near the knife?"")"
1680298,What is the animal to the right of the bag doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the right of the bag doing?"")"
320606,Which kind of fruit is inside the box?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is inside the box?"")"
870925,Does the motorcycle in front of the man have red color?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the motorcycle in front of the man have red color?"")"
3301928,Do you see either pink umbrellas or kites?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pink umbrella"") or image_patch.exists(""kite""))"
8347893,Is the mirror to the right or to the left of the shower curtain?," # mirror and shower curtain are assumed to be found
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    shower_curtain_patches = image_patch.find(""shower curtain"")
    # Question assumes only one mirror patch and one shower curtain patch
    mirror_patch = mirror_patches[0]
    shower_curtain_patch = shower_curtain_patches[0]
    if mirror_patch.horizontal_center > shower_curtain_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
10193213,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
7797392,Do you see either any flags or motorcycles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_flag = image_patch.exists(""flag"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_flag or is_motorcycle)"
10644262,Who is skateboarding?," # contains a relation (skateboarding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skateboarding?"")"
5343770,What do the bench and the hedge have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do the bench and the hedge have in common?"")"
15804125,Is the plastic fence to the right or to the left of the helmet in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic fence to the right or to the left of the helmet in the top part of the image?"")"
5631256,Is the bread to the right of the food that is on top of the table?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bread to the right of the food that is on top of the table?"")"
4781572,Are there flags to the left of the horse?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""flag"") and image_patch.find(""flag"")[0].horizontal_center < image_patch.find(""horse"")[0].horizontal_center)"
20226,What animal do you think is in the suitcase in the middle?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal do you think is in the suitcase in the middle?"")"
18662447,What is inside the crate that is made of wood?," # contains a relation (inside, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the crate that is made of wood?"")"
1283555,Are there fire hydrants on the sidewalk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fire hydrant"") or image_patch.exists(""fire hydrants""))"
15825976,What is in front of the animal?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the animal?"")"
17920073,What type of device is to the right of the appliance in the bedroom?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of device is to the right of the appliance in the bedroom?"")"
2122533,Which kind of food is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is on the plate?"")"
13690286,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1917444,What is the man to the left of the woman wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man to the left of the woman wearing?"")"
1919180,Is there a doll near the yellow flowers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a doll near the yellow flowers?"")"
13961050,Are the white blinds to the left of the table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the white blinds to the left of the table?"")"
5815208,What's the wall around of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the wall around of?"")"
4681802,Which color is the container on the shelf?," # container on the shelf
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    # Question assumes only one container patch
    if len(container_patches) == 0:
        # If no container is found, query the image directly
        return image_patch.simple_query(""Which color is the container on the shelf?"")
    return container_patches[0].simple_query(""What color is the container on the shelf?"") # crop would include the shelf so keep it in the query"
15176143,Who is wearing the cap?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the cap?"")"
3216137,Is the screen to the left or to the right of the girl that is wearing a bracelet?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the screen to the left or to the right of the girl that is wearing a bracelet?"")"
14453807,Is the plate in the top of the image?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate in the top of the image?"")"
2994172,Which kind of furniture is tan?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is tan?"")"
15930579,Is the napkin to the left of the food blue or white?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin to the left of the food blue or white?"")"
8559115,Are the pepper grinder and the wallet to the right of the container both small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the pepper grinder and the wallet to the right of the container both small?"")) # crop would include the container so keep it in the query"
6637212,"Which kind of clothing is not tan, the coat or the shirt?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    shirt_patches = image_patch.find(""shirt"")
    for coat_patch in coat_patches:
        is_tan = coat_patch.simple_query(""Is the coat tan?"") == ""yes""
        if not is_tan:
            return coat_patch.simple_query(""Which kind of clothing is not tan, the coat or the shirt?"")
    for shirt_patch in shirt_patches:
        is_tan = shirt_patch.simple_query(""Is the shirt tan?"") == ""yes""
        if not is_tan:
            return shirt_patch.simple_query(""Which kind of clothing is not tan, the coat or the shirt?"")
    return ""coat"""
4435556,What is the glove made of?," # returns the material of the glove
    image_patch = ImagePatch(image)
    glove_patches = image_patch.find(""glove"")
    # Question assumes only one glove patch
    if len(glove_patches) == 0:
        # If no glove is found, query the image directly
        return image_patch.simple_query(""What is the glove made of?"")
    return glove_patches[0].simple_query(""What is the glove made of?"") # crop would include the glove so keep it in the query"
2533327,What is the name of the item of furniture that is made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture that is made of metal?"")"
8334867,What does the person wear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the person wear?"")"
5232471,Is the field long and brown?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""field"", ""long"") and image_patch.verify_property(""field"", ""brown""))"
11773206,Is the black kettle on the left side?," # contains a relation (on, left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black kettle on the left side?"")"
8608496,What is the food that is to the right of the plate that the salad is to the left of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the right of the plate that the salad is to the left of?"")"
9317432,Are there boys on the bike that is on the road?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there boys on the bike that is on the road?"")"
706183,What is on the plate that the napkin is next to?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate that the napkin is next to?"")"
11912969,Are the clocks in the bottom or in the top of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the clocks in the bottom or in the top of the picture?"")"
10802546,Which type of furniture is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of furniture is this?"")"
2348055,On which side of the picture is the silver device?," # left or right
    image_patch = ImagePatch(image)
    silver_patches = image_patch.find(""silver device"")
    # Question assumes only one silver patch
    if len(silver_patches) == 0:
        # If no silver device is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the silver device?"")
    if silver_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
41026557,Is the SUV to the right or to the left of the car?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the SUV to the right or to the left of the car?"")"
1335274,What is the kettle on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the kettle on?"")"
18429830,What color is the hair the man is with?," # contains a relation (with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hair the man is with?"")"
3554678,What is the animal that is trying to catch the water bottle?," # contains a relation (trying to catch), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is trying to catch the water bottle?"")"
19489775,Do the flowers look pink or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the flowers look pink or blue?"")"
11466030,Is the blue box on a counter?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue box on a counter?"")"
8424505,Which kind of animal is standing?," # contains a relation (standing, eating, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is standing?"")"
354012,Is the shelf to the left of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the left of the box?"")"
1450871,Is the child to the left or to the right of the person that holds the hamburger?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child to the left or to the right of the person that holds the hamburger?"")"
1251489,"What are the towels on, a chair or a shelf?"," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the towels on, a chair or a shelf?"")"
8242794,Are the blue chairs to the right or to the left of the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the blue chairs to the right or to the left of the umbrella?"")"
2762706,What is the man in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man in front of?"")"
725634,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
16656860,Are both the t-shirt and the camera the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    tshirt_patches = image_patch.find(""t-shirt"")
    # Question assumes only one t-shirt patch
    if len(tshirt_patches) == 0:
        # If no t-shirt is found, query the image directly
        return image_patch.simple_query(""Are both the t-shirt and the camera the same color?"")
    tshirt_patch = tshirt_patches[0]
    camera_patches = image_patch.find(""camera"")
    # Question assumes only one camera patch
    if len(camera_patches) == 0:
        return ""yes""
    camera_patch = camera_patches[0]
    return bool_to_yesno(tshirt_patch.verify_property(""t-shirt"", ""blue"") == camera_patch.verify_property(""camera"", ""blue""))"
9480351,Do you see either any cans or wigs there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""can"") or image_patch.exists(""wig""))"
71038544,Are there both airplanes and trucks in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_airplane = image_patch.exists(""airplane"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_airplane and is_truck)"
6474381,Is the picture on the left side or on the right of the picture?," # image is the original image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the picture on the left side or on the right of the picture?"")"
131037307,What color does the sweater the man is wearing have?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color does the sweater the man is wearing have?"")"
4935982,Which kind of furniture is behind the girl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is behind the girl?"")"
101053403,What is in front of the lady?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the lady?"")"
7156619,Who is holding the tennis racket on the left side?," # left side
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""Who is holding the tennis racket on the left side?"")"
2121039,On which side of the photo is the box?," # left or right
    image_patch = ImagePatch(image)
    box_patches = image_patch.find(""box"")
    # Question assumes only one box patch
    if len(box_patches) == 0:
        # If no box is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the box?"")
    if box_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
363580,What place is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place is pictured?"")"
16848641,Do you see both cars and traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_car and is_traffic_light)"
11797698,Are there either white tables or beds in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_table = image_patch.exists(""white table"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_white_table or is_bed)"
21058666,How clean is the uniform?," # uniform is a general term, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How clean is the uniform?"")"
19876835,What kind of furniture is shown in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is shown in the picture?"")"
7324594,Is the racket to the left or to the right of the man that is on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the racket to the left or to the right of the man that is on the right?"")"
1995681,Does the bun fall off a burger?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the bun fall off a burger?"")"
3474665,Are there pillows or towels that are not white?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    towel_patches = image_patch.find(""towel"")
    for pillow_patch in pillow_patches:
        if not pillow_patch.verify_property(""pillow"", ""white""):
            return ""yes""
    for towel_patch in towel_patches:
        if not towel_patch.verify_property(""towel"", ""white""):
            return ""yes""
    return ""no"""
13292996,Is there a pizza on the cooking utensil that is on the counter?," # contains a relation (on, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pizza on the cooking utensil that is on the counter?"")"
466351,On which side is the knife?," # left or right
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""On which side is the knife?"")
    if knife_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7978142,Which kind of furniture is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is black?"")"
9413078,Does the brown bear look ugly?," # ugly is a property of the bear
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""brown bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Does the brown bear look ugly?"")
    return bool_to_yesno(bear_patches[0].verify_property(""brown bear"", ""ugly""))"
929644,"Where is the bike, in the top or in the bottom of the photo?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the bike, in the top or in the bottom of the photo?"")"
17674194,What kind of furniture is on top of the carpet?," # carpet is on the floor, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is on top of the carpet?"")"
19521120,What drink is inside the cup?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What drink is inside the cup?"")"
15426579,The small bottle is holding what?," # bottle is holding something
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""The small bottle is holding what?"")
    for bottle_patch in bottle_patches:
        if bottle_patch.simple_query(""Is the bottle holding something?"") == ""yes"":
            return bottle_patch.simple_query(""The small bottle is holding what?"")
    return ""nothing"""
19391949,What is the brown animal doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown animal doing?"")"
13605113,Does the shelf have a different color than the planter?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shelf have a different color than the planter?"")"
12250508,Does the shirt look blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the shirt look blue?"")"
7735934,What is the giraffe in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the giraffe in front of?"")"
1811958,The door behind the tree is what color?," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The door behind the tree is what color?"")"
5287962,What is the vegetable to the left of the cheese in this picture?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the left of the cheese in this picture?"")"
1014317,Is this a red suitcase?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a red suitcase?"")"
530694,What is that bear walking through?," # contains a relation (walking through), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that bear walking through?"")"
13562951,Is there either a white bird or cat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_white_bird = image_patch.exists(""white bird"")
    is_cat = image_patch.exists(""cat"")
    return bool_to_yesno(is_white_bird or is_cat)"
1787815,Is there a donkey in front of the brush that looks green?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a donkey in front of the brush that looks green?"")"
19921246,Do you think the window is green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the window is green?"")"
17542167,Is the table wooden or metallic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table wooden or metallic?"")"
2599797,Is the bowl in the bottom of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bowl in the bottom of the image?"")"
18959124,What kind of animal is standing on the parking lot?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is standing on the parking lot?"")"
18992957,Is the kid to the right or to the left of the person that is standing?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid to the right or to the left of the person that is standing?"")"
3232772,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
7325222,What is this item of furniture called?," # returns the name of the object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this item of furniture called?"")"
8383437,"Which color is the woman, blond or brunette?"," # contains a relation (blond or brunette), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the woman, blond or brunette?"")"
1154672,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
1911571,Are there any cookers on the stove the towel is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any cookers on the stove the towel is to the right of?"")"
17517576,What kind of fast food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of fast food is it?"")"
253951,What color is the animal that is not thin?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the animal that is not thin?"")"
9194551,What's on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"")"
17843267,Who wears a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who wears a helmet?"")
    helmet_patch = helmet_patches[0]
    person_patches = helmet_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return image_patch.simple_query(""Who wears a helmet?"")
    return person_patches[0].simple_query(""Who wears a helmet?"") # crop would include the helmet so keep it in the query"
665356,"What vehicle is the road behind of, a truck or a bus?"," # contains a relation (behind), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is the road behind of, a truck or a bus?"")"
11626781,Which kind of fast food is to the left of the egg?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is to the left of the egg?"")"
14270923,Is the bench on the right side of the picture?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench on the right side of the picture?"")"
1614363,What is that boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that boy holding?"")"
2700216,Does the monitor that is not turned on have silver color?," # contains a relation (on, off, etc), so ask directly
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only one monitor patch
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch.simple_query(""Does the monitor that is not turned on have silver color?"")
    for monitor_patch in monitor_patches:
        if monitor_patch.simple_query(""Is the monitor turned on?"") == ""no"":
            return bool_to_yesno(monitor_patch.verify_property(""monitor"", ""silver""))
    return ""no"""
984777,Is the purple van in the top or in the bottom part?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the purple van in the top or in the bottom part?"")"
4710191,What is on the sidewalk that looks brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the sidewalk that looks brown?"")"
16653230,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
13304722,What do you think is the boy to the left of the screen wearing?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the boy to the left of the screen wearing?"")"
17213745,Is there either a blanket or a pillow in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""blanket"") or image_patch.exists(""pillow""))"
11997978,What kind of appliance is behind the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is behind the woman?"")"
9579264,What is the large animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the large animal called?"")"
1291606,Which kind of fast food is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fast food is it?"")"
9292929,What is the fruit that is below the tablet?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit that is below the tablet?"")"
191038190,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
12803201,What kind of animal is on the dirt?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the dirt?"")"
16512258,Does the telephone to the right of the palm look pink?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the telephone to the right of the palm look pink?"")"
1013927,What vehicle is made of metal?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is made of metal?"")"
5713644,Is the orange shirt long sleeved or maybe short sleeved?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the orange shirt long sleeved or maybe short sleeved?"")"
2932009,Is the silver knife to the left or to the right of the food in the center?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the silver knife to the left or to the right of the food in the center?"")"
12144355,What device is on the desk?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is on the desk?"")"
16543689,Is the fork silver and small?," # fork is a common object
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Is the fork silver and small?"")
    return bool_to_yesno(fork_patches[0].verify_property(""fork"", ""silver"") and fork_patches[0].verify_property(""fork"", ""small""))"
171058836,What is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the plate?"")"
8948775,What kind of meat is on top of the round pizza that is on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of meat is on top of the round pizza that is on top of the table?"")"
14618683,What do you think is the color of the boots?," # returns the color of the boots
    image_patch = ImagePatch(image)
    boots_patches = image_patch.find(""boots"")
    # Question assumes only one boots patch
    if len(boots_patches) == 0:
        # If no boots are found, query the image directly
        return image_patch.simple_query(""What do you think is the color of the boots?"")
    return boots_patches[0].simple_query(""What do you think is the color of the boots?"") # crop would include the boots so keep it in the query"
81024808,Does the open window look brown?," # contains a relation (open window), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the open window look brown?"")"
641117,Is the toy of the man in the bottom or in the top part of the image?," # contains a relation (of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toy of the man in the bottom or in the top part of the image?"")"
11641568,What's the table in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the table in front of?"")"
18519854,Are there artichokes or cookies in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""artichoke"") or image_patch.exists(""cookie""))"
5652512,What vehicle is on the street?," # contains a relation (on the street), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is on the street?"")"
12768014,Which color is the utensil on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the utensil on the table?"")"
2365764,What food is to the left of the milk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is to the left of the milk?"")"
4205421,Of what color is the cup?," # returns the color of the cup
    image_patch = ImagePatch(image)
    cup_patches = image_patch.find(""cup"")
    # Question assumes only one cup patch
    if len(cup_patches) == 0:
        # If no cup is found, query the image directly
        return image_patch.simple_query(""Of what color is the cup?"")
    return cup_patches[0].simple_query(""Of what color is the cup?"") # crop would include the cup so keep it in the query"
2421903,Is there a towel to the left of the bottle on the left?," # bottle on the left
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""Is there a towel to the left of the bottle on the left?"")
    for towel_patch in towel_patches:
        bottle_patches = image_patch.find(""bottle"")
        for bottle_patch in bottle_patches:
            if bottle_patch.horizontal_center < image_patch.horizontal_center and towel_patch.horizontal_center < bottle_patch.horizontal_center:
                return ""yes""
    return ""no"""
1794510,Does the appliance that looks white look small or large?," # assumes only one appliance patch
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""Does the appliance that looks white look small or large?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.verify_property(""appliance"", ""white""):
        return appliance_patch.simple_query(""Does the appliance that looks white look small or large?"")
    return image_patch.simple_query(""Does the appliance that looks white look small or large?"")"
863581,Is the soap dish to the right of a mirror?," # mirror is not a standard object
    image_patch = ImagePatch(image)
    soap_dish_patches = image_patch.find(""soap dish"")
    # Question assumes only one soap dish patch
    if len(soap_dish_patches) == 0:
        # If no soap dish is found, query the image directly
        return image_patch.simple_query(""Is the soap dish to the right of a mirror?"")
    for soap_dish_patch in soap_dish_patches:
        mirror_patches = image_patch.find(""mirror"")
        for mirror_patch in mirror_patches:
            if mirror_patch.horizontal_center < soap_dish_patch.horizontal_center:
                return ""yes""
    return ""no"""
14830305,Who is wearing the glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the glasses?"")"
5181598,Do the cars look dry?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the cars look dry?"")"
16296883,Is the hair blond?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair blond?"")"
5395498,Do you see any plate on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any plate on the table?"")"
9557750,Do you see any vehicles to the right of the vehicle on the left of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any vehicles to the right of the vehicle on the left of the photo?"")"
1882670,What is sitting on the floor?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the floor?"")"
11918601,Which color is the wood table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the wood table?"")"
13546583,Who is wearing the hat?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the hat?"")"
527881,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
7842600,The cat is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The cat is on what?"")"
1079102,Is the teddy bear to the left or to the right of the bear that is on the left?," # left bear is on the left
    image_patch = ImagePatch(image)
    teddy_bear_patches = image_patch.find(""teddy bear"")
    # Question assumes only one teddy bear patch
    if len(teddy_bear_patches) == 0:
        # If no teddy bear is found, query the image directly
        return image_patch.simple_query(""Is the teddy bear to the left or to the right of the bear that is on the left?"")
    teddy_bear_patch = teddy_bear_patches[0]
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Is the teddy bear to the left or to the right of the bear that is on the left?"")
    bear_patch = bear_patches[0]
    if teddy_bear_patch.horizontal_center < bear_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2546784,Do the cat and the shoe lace have the same color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Do the cat and the shoe lace have the same color?"")
    cat_color = cat_patches[0].simple_query(""What color is the cat?"")
    shoe_lace_patches = image_patch.find(""shoe lace"")
    # Question assumes only one shoe lace patch
    if len(shoe_lace_patches) == 0:
        # If no shoe lace is found, query the image directly
        return image_patch.simple_query(""Do the cat and the shoe lace have the same color?"")
    shoe_lace_color = shoe_lace_patches[0].simple_query(""What color is the shoe lace?"")
    return bool_to_yesno(cat_color == shoe_lace_color)"
10447317,Are there any bags to the left of the woman?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bag"") and image_patch.find(""bag"")[0].horizontal_center < image_patch.find(""woman"")[0].horizontal_center)"
3287897,Is there a red truck or bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_truck = image_patch.exists(""red truck"")
    is_bus = image_patch.exists(""red bus"")
    return bool_to_yesno(is_truck or is_bus)"
399354,Is the man to the left of the woman wearing a hat?," # contains a relation (left of, wearing a hat, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left of the woman wearing a hat?"")"
15337464,Does this purse look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does this purse look white?"") == ""yes"")"
16892092,Are there both plates and pizzas in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_pizza = image_patch.exists(""pizza"")
    return bool_to_yesno(is_plate and is_pizza)"
1639738,Is the cat on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cat on the left or on the right?"")"
4757190,What kind of furniture is dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is dark?"")"
1868220,What is the appliance to the right of the towel on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the right of the towel on the left?"")"
14998269,Do you see a fence or a tennis racket?," # tennis racket is not a standard object, so use a more general query
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_tennis_racket = image_patch.exists(""sports equipment"")
    return bool_to_yesno(is_fence or is_tennis_racket)"
7555208,What are the pieces of furniture that are to the right of the bowl on the left part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the pieces of furniture that are to the right of the bowl on the left part?"")"
121045202,Is the person on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person on the left side?"")
    if person_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""yes""
    else:
        return ""no"""
1791668,What is the fork on the plate made of?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fork on the plate made of?"")"
41051355,What is the girl in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl in front of?"")"
712383,Who is holding the frisbee?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the frisbee?"")"
3392877,What color is the umbrella on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella on the left side of the image?"")"
16865412,What is the surfer on the surf board wearing?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the surfer on the surf board wearing?"")"
8955525,What animal is long?," # contains a relation (long), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is long?"")"
4235944,Are there any planes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""plane""))"
8649291,What is the girl holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl holding?"")"
11664295,What's the silverware on?," # assumes only one silverware patch
    image_patch = ImagePatch(image)
    silverware_patches = image_patch.find(""silverware"")
    if len(silverware_patches) == 0:
        return image_patch.simple_query(""What's the silverware on?"")
    return silverware_patches[0].simple_query(""What's the silverware on?"")"
10145082,Are there both cars and trucks in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_truck = image_patch.exists(""truck"")
    return bool_to_yesno(is_car and is_truck)"
4926603,Do you see a train to the right of the person that is standing on the platform?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a train to the right of the person that is standing on the platform?"")"
19765716,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
91047038,What is he holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he holding?"")"
18142235,Does the clear water look brown?," # clear water is a specific type of water
    image_patch = ImagePatch(image)
    water_patches = image_patch.find(""clear water"")
    # Question assumes only one clear water patch
    if len(water_patches) == 0:
        # If no clear water is found, query the image directly
        return image_patch.simple_query(""Does the clear water look brown?"")
    return bool_to_yesno(water_patches[0].verify_property(""clear water"", ""brown""))"
6879376,Who is on the bed?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bed?"")"
4904689,What is the animal to the left of the cabinet that is on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the left of the cabinet that is on the right?"")"
17494852,Does the sweater have red color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sweater"", ""red""))"
3547237,Are there either any red fire hydrants or traffic lights?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_fire_hydrant = image_patch.exists(""red fire hydrant"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_red_fire_hydrant or is_traffic_light)"
1394795,Which kind of furniture is to the left of the woman?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the woman?"")"
6349073,Are there any boys to the right of the blanket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy"") and image_patch.find(""blanket"")[0].horizontal_center < image_patch.horizontal_center)"
7355661,Is the girl's hair short and blond?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl's hair short and blond?"")"
5606050,Are the person to the right of the man and the person to the left of the man both standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is the person to the right of the man standing?"") == ""yes"" and image_patch.simple_query(""Is the person to the left of the man standing?"") == ""yes"")"
171013403,What is the toilet paper on?," # assumes only one toilet paper patch
    image_patch = ImagePatch(image)
    return image_patch.find(""toilet paper"")[0].simple_query(""What is the toilet paper on?"")"
5561717,What does the woman to the left of the glasses carry?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What does the woman to the left of the glasses carry?"")"
3209297,Are there any trains or trucks that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_truck = image_patch.exists(""truck"")
    is_train_black = image_patch.exists(""train"") and image_patch.find(""train"")[0].verify_property(""train"", ""black"")
    is_truck_black = image_patch.exists(""truck"") and image_patch.find(""truck"")[0].verify_property(""truck"", ""black"")
    return bool_to_yesno(is_train or is_truck) and not (is_train_black or is_truck_black)"
1428979,What is in the blue suitcase in front of the pillow?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the blue suitcase in front of the pillow?"")"
8227386,Do the pine trees to the left of the helmet look tall and brown?," # helmet is a man's helmet
    image_patch = ImagePatch(image)
    pine_patches = image_patch.find(""pine tree"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do the pine trees to the left of the helmet look tall and brown?"")
    helmet_patch = helmet_patches[0]
    for pine_patch in pine_patches:
        if pine_patch.horizontal_center < helmet_patch.horizontal_center:
            return bool_to_yesno(pine_patch.verify_property(""pine tree"", ""tall"") and pine_patch.verify_property(""pine tree"", ""brown""))
    return ""no"""
15704109,What is the brown piece of furniture called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the brown piece of furniture called?"")"
10137985,What is on the pole?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the pole?"")"
16582790,On which side of the image are the bottles?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the image are the bottles?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14389863,Does the clock look tiny and yellow?," # returns yes or no
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Does the clock look tiny and yellow?"")
    return bool_to_yesno(clock_patches[0].verify_property(""clock"", ""tiny"") and clock_patches[0].verify_property(""clock"", ""yellow""))"
445716,What is on the car?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the car?"")"
3188,What's the spoon made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the spoon made of?"")"
13460570,Do you see both a motorcycle and a helmet there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorcycle = image_patch.exists(""motorcycle"")
    is_helmet = image_patch.exists(""helmet"")
    return bool_to_yesno(is_motorcycle and is_helmet)"
15116043,Is there a pepper or a potato that is not red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pepper = image_patch.exists(""pepper"")
    is_potato = image_patch.exists(""potato"")
    if is_pepper:
        pepper_patches = image_patch.find(""pepper"")
        for pepper_patch in pepper_patches:
            if not pepper_patch.verify_property(""pepper"", ""red""):
                return ""yes""
    if is_potato:
        potato_patches = image_patch.find(""potato"")
        for potato_patch in potato_patches:
            if not potato_patch.verify_property(""potato"", ""red""):
                return ""yes""
    return ""no"""
765227,On which side is the blue van?," # left or right
    image_patch = ImagePatch(image)
    van_patches = image_patch.find(""van"")
    # Question assumes only one van patch
    if len(van_patches) == 0:
        # If no van is found, query the image directly
        return image_patch.simple_query(""On which side is the blue van?"")
    van_patch = van_patches[0]
    if van_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7832352,Is the building in front of the tree that is not short?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the building in front of the tree that is not short?"")"
531790,Are there both pepperoni and cheese in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_pepperoni = image_patch.exists(""pepperoni"")
    is_cheese = image_patch.exists(""cheese"")
    return bool_to_yesno(is_pepperoni and is_cheese)"
18909732,Which color is the table lamp?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the table lamp?"")"
1560560,Is the black bag to the right or to the left of the skier on the left side?," # left and right are relative to the skier on the left
    image_patch = ImagePatch(image)
    black_bag_patches = image_patch.find(""black bag"")
    # Question assumes only one black bag patch
    if len(black_bag_patches) == 0:
        # If no black bag is found, query the image directly
        return image_patch.simple_query(""Is the black bag to the right or to the left of the skier on the left side?"")
    for black_bag_patch in black_bag_patches:
        skier_patches = image_patch.find(""skier"")
        # Question assumes only one skier patch
        if len(skier_patches) == 0:
            # If no skier is found, query the image directly
            return image_patch.simple_query(""Is the black bag to the right or to the left of the skier on the left side?"")
        skier_patch = skier_patches[0]
        if black_bag_patch.horizontal_center > skier_patch.horizontal_center:
            return ""right""
        else:
            return ""left"""
11937482,"What type of furniture is this, a couch or a bed?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is this, a couch or a bed?"")"
4521424,"What type of furniture is made of wood, the dresser or the dresser drawer?"," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is made of wood, the dresser or the dresser drawer?"")"
19493122,Does the frisbee that looks red and orange seem to be lying?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the frisbee that looks red and orange seem to be lying?"")"
3301422,On which side is the woman?," # left or right
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""On which side is the woman?"")
    return ""left"" if woman_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
10279724,Is the chrome faucet in the bottom or in the top part?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chrome faucet in the bottom or in the top part?"")"
12741364,Is there any bed near the black dresser?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bed near the black dresser?"")"
2794707,What is the dark device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the dark device?"")"
1032549,What is the picture showing?," # image is a PIL Image object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the picture showing?"") # image is a PIL Image object"
11598739,Is the phone in the top?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the phone in the top?"")"
16476741,What color is the sky?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the sky?"")"
18133273,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
2279158,What is the audience watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the audience watching?"")"
9675143,What material is used to make the floor?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What material is used to make the floor?"")"
6699596,What do you think is located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is located on top of the table?"")"
19657255,Who is skiing?," # contains a relation (skiing with, skiing near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is skiing?"")"
7528700,Is the fur white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fur white?"")"
6257181,What kind of vehicle is on the road the sheep is crossing?," # contains a relation (on the road), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is on the road the sheep is crossing?"")"
1335603,What do the tape and the sock have in common?," # returns a string
    image_patch = ImagePatch(image)
    tape_patches = image_patch.find(""tape"")
    # Question assumes only one tape patch
    if len(tape_patches) == 0:
        # If no tape is found, query the image directly
        return image_patch.simple_query(""What do the tape and the sock have in common?"")
    sock_patches = image_patch.find(""sock"")
    # Question assumes only one sock patch
    if len(sock_patches) == 0:
        return image_patch.simple_query(""What do the tape and the sock have in common?"")
    tape_patch = tape_patches[0]
    sock_patch = sock_patches[0]
    common_properties = set(tape_patch.simple_query(""What properties does the tape have?"").split("", "")) & set(sock_patch.simple_query(""What properties does the sock have?"").split("", ""))
    return common_properties[0]"
1083947,Is the person that is to the left of the vehicle carrying an umbrella?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person that is to the left of the vehicle carrying an umbrella?"")"
10478395,How long is the woman's hair?," # returns a string
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""How long is the woman's hair?"")
    return woman_patches[0].simple_query(""How long is the woman's hair?"") # crop would include the hair so keep it in the query"
352855,Which clothing item is not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which clothing item is not yellow?"")"
19137810,Which side of the picture is the metal airplane on?," # left or right
    image_patch = ImagePatch(image)
    airplane_patches = image_patch.find(""airplane"")
    # Question assumes only one airplane patch
    if len(airplane_patches) == 0:
        # If no airplane is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the metal airplane on?"")
    airplane_patch = airplane_patches[0]
    if airplane_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14258198,Is the book in the bottom part or in the top of the picture?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the book in the bottom part or in the top of the picture?"")"
15935780,Are there both tables and chairs in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_table = image_patch.exists(""table"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_table and is_chair)"
16280315,Are there pillows beside the animal that is resting?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there pillows beside the animal that is resting?"")"
16848383,Is the fork in the bottom part or in the top of the picture?," # contains a relation (in the bottom part or in the top of the picture), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fork in the bottom part or in the top of the picture?"")"
12312339,What's the sidewalk made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the sidewalk made of?"")"
2408476,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
17841630,What is the liquid in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the liquid in?"")"
11424179,Are there any glasses to the right of the person that is holding the scissors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any glasses to the right of the person that is holding the scissors?"")"
4534234,Does the sky look blue and overcast?," # overcast is a property of the sky
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""Does the sky look blue and overcast?"")
    return bool_to_yesno(sky_patches[0].verify_property(""sky"", ""blue"") and sky_patches[0].verify_property(""sky"", ""overcast""))"
171053595,"On which side of the image is the dog, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the dog, the left or the right?"")"
1809734,Is the napkin in the bottom part of the image?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the napkin in the bottom part of the image?"")"
3538804,Are both the car and the pole the same color?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    car_patches = image_patch.find(""car"")
    pole_patches = image_patch.find(""pole"")
    # Question assumes only one car and one pole patch
    if len(car_patches) == 0 or len(pole_patches) == 0:
        # If no car or pole is found, query the image directly
        return image_patch.simple_query(""Are both the car and the pole the same color?"")
    car_color = car_patches[0].simple_query(""What color is the car?"")
    pole_color = pole_patches[0].simple_query(""What color is the pole?"")
    return bool_to_yesno(car_color == pole_color)"
19697673,Is the toilet to the left or to the right of the dispenser in the middle?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the toilet to the left or to the right of the dispenser in the middle?"")"
858463,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
17611134,What vegetable is to the left of the sandwich?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the sandwich?"")"
14663649,Who is wearing the socks?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the socks?"")"
14583783,That man is holding what?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That man is holding what?"")"
285403,Is there a tablecloth or a plate in this photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""tablecloth"") or image_patch.exists(""plate""))"
12262244,Does the horse to the right of the other horse have brown color and large size?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the horse to the right of the other horse have brown color and large size?"")"
1151529,What is the color of the screen?," # returns the color of the screen
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the screen?"")"
4818337,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
154531,What's wearing the tie?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's wearing the tie?"")"
8895915,Are there either any trash cans or benches in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""trash can"") or image_patch.exists(""bench""))"
1278946,Are there both speakers and computer mice in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_speaker = image_patch.exists(""speaker"")
    is_computer_mouse = image_patch.exists(""computer mouse"")
    return bool_to_yesno(is_speaker and is_computer_mouse)"
16710113,Is there either a mug or a cup in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mug"") or image_patch.exists(""cup""))"
6471216,Does the oven door have black color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""oven door"", ""black""))"
14581683,Who is wearing the pants?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the pants?"")"
1993409,Is the man to the right of the backpack wearing a jacket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right of the backpack wearing a jacket?"")"
6240914,Who is playing tennis?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is playing tennis?"")"
19628511,Are there forks to the left of the food that is to the left of the cake?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there forks to the left of the food that is to the left of the cake?"")"
17603505,What vegetable is to the left of the bag that is on the right of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is to the left of the bag that is on the right of the photo?"")"
7799974,What kind of furniture is to the left of the refrigerator?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the refrigerator?"")"
13400057,In which part of the photo is the tennis racket?," # crop would include the hand so keep it in the query
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the tennis racket?"")"
5152851,What is the name of the blue article of clothing?," # returns the name of the article of clothing
    image_patch = ImagePatch(image)
    article_patches = image_patch.find(""article of clothing"")
    # Question assumes only one article of clothing patch
    if len(article_patches) == 0:
        # If no article of clothing is found, query the image directly
        return image_patch.simple_query(""What is the name of the blue article of clothing?"")
    for article_patch in article_patches:
        if article_patch.verify_property(""article of clothing"", ""blue""):
            return article_patch.simple_query(""What is the name of the blue article of clothing?"")
    return image_patch.simple_query(""What is the name of the blue article of clothing?"")"
5665983,Is the brown sauce inside a container?," # contains a relation (inside, on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown sauce inside a container?"")"
51063978,Do you see horses to the right of the carriage on the right side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see horses to the right of the carriage on the right side of the photo?"")"
14142940,On which side of the picture is the screen?," # left or right
    image_patch = ImagePatch(image)
    screen_patches = image_patch.find(""screen"")
    # Question assumes only one screen patch
    if len(screen_patches) == 0:
        # If no screen is found, query the image directly
        return image_patch.simple_query(""On which side of the picture is the screen?"")
    if screen_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6891743,Which kind of food is not dark?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not dark?"")"
12398536,Do the shoes have a different color than the clouds?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the shoes have a different color than the clouds?"")"
3369389,What kind of furniture is the game on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the game on?"")"
9168008,What is that elephant in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that elephant in front of?"")"
5787595,Who is wearing the wetsuit?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the wetsuit?"")"
12624716,Is the yellow bus behind or in front of the white car?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow bus behind or in front of the white car?"")"
1810747,Do you see a giraffe near the wall?," # contains a relation (near, next to, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a giraffe near the wall?"")"
8613949,Is there a pillow to the right of the kid on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a pillow to the right of the kid on the left?"")"
11828163,How large do you think are the bottles that are to the right of the other bottle?," # returns a string
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""How large do you think are the bottles that are to the right of the other bottle?"")
    for bottle_patch in bottle_patches:
        right_bottle_patches = image_patch.find(""bottle"")
        for right_bottle_patch in right_bottle_patches:
            if right_bottle_patch.horizontal_center > bottle_patch.horizontal_center:
                return right_bottle_patch.simple_query(""How large do you think are the bottles that are to the right of the other bottle?"")
    return image_patch.simple_query(""How large do you think are the bottles that are to the right of the other bottle?"")"
19684714,Does the man on the snow seem to be sitting?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man on the snow seem to be sitting?"")"
181509,What is flying through the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is flying through the sky?"")"
111049390,"Which color is that sky, blue or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is that sky, blue or black?"")"
899099,Is the color of the sign the same as the lamp?," # contains a relation (same as, different from, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the sign the same as the lamp?"")"
13679840,Is the person next to the woman having meeting or sleeping?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person next to the woman having meeting or sleeping?"")"
248918,Are there any giraffes in front of the green bush?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""giraffe"") and image_patch.exists(""green bush"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
18324793,Are the blinds on the left side?," # left and right are relative to the image
    image_patch = ImagePatch(image)
    # contains a relation (left, right), so ask directly
    return image_patch.simple_query(""Are the blinds on the left side?"")"
11971017,Is he holding a camera?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he holding a camera?"")"
18748895,What is he doing?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""What is he doing?"")
    return man_patches[0].simple_query(""What is he doing?"")"
91032148,Is the computer on the left?," # assumes only one computer patch
    image_patch = ImagePatch(image)
    computer_patches = image_patch.find(""computer"")
    if len(computer_patches) == 0:
        return image_patch.simple_query(""Is the computer on the left?"")
    computer_patch = computer_patches[0]
    if computer_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    return ""no"""
11577440,Is the person on the surfboard wearing shorts?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person on the surfboard wearing shorts?"")"
329153,Is the fence in front of the cow that looks white and black?," # cow is white and black
    image_patch = ImagePatch(image)
    cow_patches = image_patch.find(""cow"")
    # Question assumes only one cow patch
    if len(cow_patches) == 0:
        # If no cow is found, query the image directly
        return image_patch.simple_query(""Is the fence in front of the cow that looks white and black?"")
    for cow_patch in cow_patches:
        fence_patches = image_patch.find(""fence"")
        for fence_patch in fence_patches:
            if fence_patch.horizontal_center > cow_patch.horizontal_center:
                return ""yes""
    return ""no"""
11726825,What is the guy in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the guy in front of?"")"
14864078,Are there any brown horses or dogs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_brown_horse = image_patch.exists(""brown horse"")
    is_brown_dog = image_patch.exists(""brown dog"")
    return bool_to_yesno(is_brown_horse or is_brown_dog)"
4913626,Is this a tall fence?," # contains a relation (tall, short, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a tall fence?"")"
1116665,Are there boats in the water that looks wavy?," # water type is not a property of the boat
    image_patch = ImagePatch(image)
    boat_patches = image_patch.find(""boat"")
    # Question assumes only one boat patch
    if len(boat_patches) == 0:
        # If no boat is found, query the image directly
        return image_patch.simple_query(""Are there boats in the water that looks wavy?"")
    for boat_patch in boat_patches:
        is_wavy = boat_patch.simple_query(""What type of water is the boat in?"") == ""wavy""
        return bool_to_yesno(is_wavy)"
18525876,Do the bun and the suitcase have the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    bun_patches = image_patch.find(""bun"")
    suitcase_patches = image_patch.find(""suitcase"")
    # Question assumes only one bun and one suitcase patch
    if len(bun_patches) == 0 or len(suitcase_patches) == 0:
        # If no bun or suitcase is found, query the image directly
        return image_patch.simple_query(""Do the bun and the suitcase have the same color?"")
    bun_patch = bun_patches[0]
    suitcase_patch = suitcase_patches[0]
    return bool_to_yesno(bun_patch.verify_property(""bun"", ""red"") == suitcase_patch.verify_property(""suitcase"", ""red""))"
5892456,Does the urinal made of porcelain look low?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the urinal made of porcelain look low?"")"
9284301,Is the brown fence to the right or to the left of the dog on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown fence to the right or to the left of the dog on the left side?"")"
1592022,On which side of the image is the bottle?," # left or right
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bottle?"")
    if bottle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1942141,Is the cupboard on the left side or on the right of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cupboard on the left side or on the right of the photo?"")"
16731153,Is the color of the cab different than the door?," # contains a relation (different than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the cab different than the door?"")"
9421115,Are there vases to the right of the shelf that is to the right of the pillow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there vases to the right of the shelf that is to the right of the pillow?"")"
14282465,Is the kitchen towel to the left of an oven?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kitchen towel to the left of an oven?"")"
15924843,What's located on top of the table?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's located on top of the table?"")"
5685368,What device is to the left of the pillow on the couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the pillow on the couch?"")"
121060,What is the watercraft that is to the right of the sailboats that are presented in the photograph?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the watercraft that is to the right of the sailboats that are presented in the photograph?"")"
16170814,Is there either a black bike or skateboard?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_black_bike = image_patch.exists(""black bike"")
    is_skateboard = image_patch.exists(""skateboard"")
    return bool_to_yesno(is_black_bike or is_skateboard)"
14551217,What is in the glass in front of the window?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the glass in front of the window?"")"
18565037,What's the airplane in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the airplane in front of?"")"
13332136,Are there any crabs or cows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_crab = image_patch.exists(""crab"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_crab or is_cow)"
7189374,Are the pole and the fence made out of the same material?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the pole and the fence made out of the same material?"")"
15635789,What is the person carrying?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person carrying?"")"
18881299,Is the man to the left or to the right of the person on the sidewalk?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the person on the sidewalk?"")"
8454590,Do you see bananas to the left of the fruit on the left side of the image?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see bananas to the left of the fruit on the left side of the image?"")"
9656835,What is the room filled with?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the room filled with?"")"
8981600,What piece of furniture is not square?," # returns the first piece of furniture that is not square
    image_patch = ImagePatch(image)
    furniture_patches = image_patch.find(""furniture"")
    for furniture_patch in furniture_patches:
        if furniture_patch.simple_query(""Is the furniture square?"") == ""no"":
            return furniture_patch.simple_query(""What piece of furniture is not square?"")
    return ""No furniture is not square."""
1413327,What color is the wood fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the wood fence?"")"
693602,What is that toilet paper on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that toilet paper on?"")"
14915572,How big is the computer monitor that looks black?," # returns a string
    image_patch = ImagePatch(image)
    monitor_patches = image_patch.find(""monitor"")
    # Question assumes only one monitor patch
    if len(monitor_patches) == 0:
        # If no monitor is found, query the image directly
        return image_patch.simple_query(""How big is the computer monitor that looks black?"")
    monitor_patch = monitor_patches[0]
    return monitor_patch.simple_query(""How big is the computer monitor that looks black?"") # crop would include the black so keep it in the query"
18408444,Are there any backpacks to the left of the shelf?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""backpack"") and image_patch.simple_query(""Is the backpack to the left of the shelf?"") == ""yes"")"
12476366,Are the curtains to the right or to the left of the pillow that is on the bed?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the curtains to the right or to the left of the pillow that is on the bed?"")"
3382855,Is the lid both round and brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""lid"", ""round"") and image_patch.verify_property(""lid"", ""brown""))"
9129927,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
1811466,Are there either any green bottles or spoons?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_green_bottle = image_patch.exists(""green bottle"")
    is_spoon = image_patch.exists(""spoon"")
    return bool_to_yesno(is_green_bottle or is_spoon)"
14684529,What is the piece of furniture that the lamp is on called?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture that the lamp is on called?"")"
17257130,What item of furniture is the beverage on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What item of furniture is the beverage on?"")"
10976899,On which side of the image is the magazine?," # left or right
    image_patch = ImagePatch(image)
    magazine_patches = image_patch.find(""magazine"")
    # Question assumes only one magazine patch
    if len(magazine_patches) == 0:
        # If no magazine is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the magazine?"")
    magazine_patch = magazine_patches[0]
    if magazine_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
8653024,The trousers are of what color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The trousers are of what color?"")"
16444755,Is that TV to the left of a speaker?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that TV to the left of a speaker?"")"
41014663,Which kind of fruit is left of the garlic?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of fruit is left of the garlic?"")"
1757073,Is there any sand in the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""sand""))"
6383327,"In which part is the chair, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the chair, the bottom or the top?"")"
15760923,Is the meat to the left of the cheese in the top part?," # assumes only one meat and one cheese patch
    image_patch = ImagePatch(image)
    meat_patches = image_patch.find(""meat"")
    cheese_patches = image_patch.find(""cheese"")
    # Question assumes only one meat and one cheese patch
    if len(meat_patches) == 0 or len(cheese_patches) == 0:
        # If no meat or cheese is found, query the image directly
        return image_patch.simple_query(""Is the meat to the left of the cheese in the top part?"")
    meat_patch = meat_patches[0]
    cheese_patch = cheese_patches[0]
    if meat_patch.horizontal_center < cheese_patch.horizontal_center and meat_patch.vertical_center > image_patch.vertical_center:
        return ""yes""
    return ""no"""
9581369,Are there either yellow ropes or boats?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_yellow_rope = image_patch.exists(""yellow rope"")
    is_boat = image_patch.exists(""boat"")
    return bool_to_yesno(is_yellow_rope or is_boat)"
5364549,Is this a camera or a phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a camera or a phone?"")"
18218697,On which side is the lemon?," # left or right
    image_patch = ImagePatch(image)
    lemon_patches = image_patch.find(""lemon"")
    # Question assumes only one lemon patch
    if len(lemon_patches) == 0:
        # If no lemon is found, query the image directly
        return image_patch.simple_query(""On which side is the lemon?"")
    lemon_patch = lemon_patches[0]
    if lemon_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6338923,Who in the picture is drinking?," # contains a relation (drinking from), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in the picture is drinking?"")"
4799997,What kind of furniture is to the left of the faucet on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the left of the faucet on the right?"")"
2776033,Is there a toy or a dog in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""toy"") or image_patch.exists(""dog""))"
143938,What kind of food is not cooked?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of food is not cooked?"")"
3808122,Which side of the picture is the shelf on?," # left or right
    image_patch = ImagePatch(image)
    shelf_patches = image_patch.find(""shelf"")
    # Question assumes only one shelf patch
    if len(shelf_patches) == 0:
        # If no shelf is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the shelf on?"")
    if shelf_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15257019,What animal is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is black?"")"
4982692,What is inside the black container?," # contains a relation (inside, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the black container?"")"
7686244,Is the man to the right or to the left of the shelf that is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the right or to the left of the shelf that is white?"")"
10100125,Is the black device to the right or to the left of the speaker that is to the left of the toaster?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black device to the right or to the left of the speaker that is to the left of the toaster?"")"
6909769,What is the boy to the right of the helmet wearing?," # helmet is a headgear
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""What is the boy to the right of the helmet wearing?"")
    helmet_patch = helmet_patches[0]
    boy_patches = image_patch.find(""boy"")
    # Question assumes only one boy patch
    if len(boy_patches) == 0:
        # If no boy is found, query the image directly
        return image_patch.simple_query(""What is the boy to the right of the helmet wearing?"")
    boy_patch = boy_patches[0]
    if boy_patch.horizontal_center > helmet_patch.horizontal_center:
        return boy_patch.simple_query(""What is the boy to the right of the helmet wearing?"")
    return helmet_patch.simple_query(""What is the boy to the right of the helmet wearing?"")"
131011480,Which kind of animal is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is brown?"")"
4287163,What is that lamp on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that lamp on?"")"
8725444,What animals are the people riding?," # contains a relation (riding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are the people riding?"")"
14973045,What is the person holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person holding?"")"
3819704,Is the mushroom to the right of a potato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the mushroom to the right of a potato?"")"
755043,What is the color of the ball in the top of the photo?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the ball in the top of the photo?"")"
5523609,What is the name of the animal on the green grass?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal on the green grass?"")"
409647,What is the rectangular container lying on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the rectangular container lying on?"")"
15584863,Which side is the vegetable on?," # left or right
    image_patch = ImagePatch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch.simple_query(""Which side is the vegetable on?"")
    if vegetable_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
5685408,What is the device to the left of the pillow sitting on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device to the left of the pillow sitting on?"")"
16151133,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
19364968,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
16596596,Are there spoons or trays?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""spoon"") or image_patch.exists(""tray""))"
13997132,Is the keyboard to the right or to the left of the book on the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the keyboard to the right or to the left of the book on the desk?"")"
2610096,On which side of the image is the pillow?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the pillow?"")
    return ""right"" if pillow_patches[0].horizontal_center > image_patch.horizontal_center else ""left"""
9433035,Who is wearing the shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the shorts?"")"
6759615,"On which side is the knife, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the knife, the left or the right?"")"
5568022,Who is in front of the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is in front of the pole?"")"
15968285,What animal is eating the pumpkin?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is eating the pumpkin?"")"
12760455,What is the girl wearing?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl wearing?"")"
18472029,Are there men to the left of the beer bottle that the plate is to the right of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the beer bottle that the plate is to the right of?"")"
670507,On which side of the image is the surfboard?," # left or right
    image_patch = ImagePatch(image)
    surfboard_patches = image_patch.find(""surfboard"")
    # Question assumes only one surfboard patch
    if len(surfboard_patches) == 0:
        # If no surfboard is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the surfboard?"")
    if surfboard_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10557598,What is the aircraft above the ground?," # aircraft is above the ground
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the aircraft above the ground?"")"
14397861,What is under the round fruit?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is under the round fruit?"")"
6224783,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
16492448,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
10627217,Which kind of furniture isn't brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture isn't brown?"")"
3289958,Is the vase on the table small or large?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vase on the table small or large?"")"
13434729,What kind of device is on the left of the mug?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is on the left of the mug?"")"
10937181,What is in front of the fence made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the fence made of wood?"")"
18637857,On which side is the skateboard?," # left or right
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the skateboard?"")"
1128202,Are there any white towels or pillows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_towel = image_patch.exists(""towel"") and image_patch.simple_query(""Is the towel white?"") == ""yes""
    is_pillow = image_patch.exists(""pillow"") and image_patch.simple_query(""Is the pillow white?"") == ""yes""
    return bool_to_yesno(is_towel or is_pillow)"
17375566,"Which is older, the lady or the girl?"," # assumes only one lady and one girl
    image_patch = ImagePatch(image)
    lady_patches = image_patch.find(""lady"")
    girl_patches = image_patch.find(""girl"")
    if len(lady_patches) == 0 or len(girl_patches) == 0:
        return image_patch.simple_query(""Which is older, the lady or the girl?"")
    lady_age = lady_patches[0].simple_query(""How old is the lady?"")
    girl_age = girl_patches[0].simple_query(""How old is the girl?"")
    if int(lady_age) > int(girl_age):
        return ""the lady""
    else:
        return ""the girl"""
171053060,Are the jeans black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""jeans"", ""black""))"
8656651,Does the sofa that is to the left of the magazine have green color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the sofa that is to the left of the magazine have green color?"")"
14207112,Is the white boat on the right or on the left?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white boat on the right or on the left?"")"
12549081,Are there traffic lights or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_traffic_light = image_patch.exists(""traffic light"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_traffic_light or is_fence)"
171049944,Which side of the image is the bowl on?," # left or right
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the bowl on?"")
    if bowl_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15963668,Do you see either any girls or balls in the picture?," # returns yes or no
    image_patch = ImagePatch(image)
    is_girl = image_patch.exists(""girl"")
    is_ball = image_patch.exists(""ball"")
    return bool_to_yesno(is_girl or is_ball)"
14431658,What is the man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man holding?"")"
743785,What animal is to the left of the drink in the center of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is to the left of the drink in the center of the photo?"")"
21015847,Do you see sheep in the snow?," # contains a relation (in the snow), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see sheep in the snow?"")"
15228016,Is the woman to the left of the bag holding a baby?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left of the bag holding a baby?"")"
13974871,Does the rice cooker to the right of the lady look white and metallic?," # contains a relation (to the right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the rice cooker to the right of the lady look white and metallic?"")"
15953157,What's he doing?," # assumes only one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    if len(man_patches) == 0:
        return image_patch.simple_query(""What's he doing?"")
    return man_patches[0].simple_query(""What's he doing?"")"
6987771,Are there either cake slices or mailboxes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cake = image_patch.exists(""cake"")
    is_mailbox = image_patch.exists(""mailbox"")
    return bool_to_yesno(is_cake or is_mailbox)"
18540085,On which side of the photo is the fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11914955,What device is to the right of the box?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the right of the box?"")"
16480981,What is sitting on the large rug?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is sitting on the large rug?"")"
5809940,Do the potatoes have purple color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""potatoes"", ""purple""))"
8442948,Are there either cars or buses?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_car = image_patch.exists(""car"")
    is_bus = image_patch.exists(""bus"")
    return bool_to_yesno(is_car or is_bus)"
5712980,What is the bush on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bush on?"")"
4564384,What color do you think the shirt that she is wearing is?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the shirt that she is wearing is?"")"
12535430,Which venue is this?," # venue is a broad category
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which venue is this?"")"
580322,What color is the covered vehicle?," # returns the color of the vehicle
    image_patch = ImagePatch(image)
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        # If no vehicle is found, query the image directly
        return image_patch.simple_query(""What color is the covered vehicle?"")
    return vehicle_patches[0].simple_query(""What color is the vehicle?"") # crop would include the cover so keep it in the query"
19519972,Where is the wall?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the wall?"")"
7797335,What vegetable is on the countertop?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on the countertop?"")"
181005470,Is there a hat or a scarf that is not white?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    scarf_patches = image_patch.find(""scarf"")
    for hat_patch in hat_patches:
        if hat_patch.verify_property(""hat"", ""white"") == False:
            return ""yes""
    for scarf_patch in scarf_patches:
        if scarf_patch.verify_property(""scarf"", ""white"") == False:
            return ""yes""
    return ""no"""
16271079,Is wood used to make the fence to the left of the man?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is wood used to make the fence to the left of the man?"")"
2777368,Is that purse to the left of a bench?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is that purse to the left of a bench?"")"
11902296,Do you see any small benches or umbrellas?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""umbrella""))"
14271787,Which kind of vehicle is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is it?"")"
12271321,Does the chair to the left of the other chair seem to be purple?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the chair to the left of the other chair seem to be purple?"")"
12345484,Is the white animal biting a frisbee?," # contains a relation (biting, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white animal biting a frisbee?"")"
6324878,What animal is on the couch?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the couch?"")"
12874650,Are the curtains tall?," # assumes only one curtain patch
    image_patch = ImagePatch(image)
    curtain_patches = image_patch.find(""curtains"")
    if len(curtain_patches) == 0:
        # If no curtain is found, query the image directly
        return image_patch.simple_query(""Are the curtains tall?"")
    return bool_to_yesno(curtain_patches[0].verify_property(""curtains"", ""tall""))"
7636574,Which color is the jacket that is worn on the person?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Which color is the jacket that is worn on the person?"")
    jacket_patch = jacket_patches[0]
    return jacket_patch.simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query"
14686208,Is the tree behind a horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tree behind a horse?"")"
15179840,Are there either tools or bicycles?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_tool = image_patch.exists(""tool"")
    is_bicycle = image_patch.exists(""bicycle"")
    return bool_to_yesno(is_tool or is_bicycle)"
17951816,Is there either an umbrella or a bag in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_umbrella = image_patch.exists(""umbrella"")
    is_bag = image_patch.exists(""bag"")
    return bool_to_yesno(is_umbrella or is_bag)"
17814189,Does that dress look white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does that dress look white?"")"
13463248,Is the plate to the right or to the left of the fork?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the right or to the left of the fork?"")"
1504941,Does the blue sticker look short?," # returns yes or no
    image_patch = ImagePatch(image)
    sticker_patches = image_patch.find(""sticker"")
    # Question assumes only one sticker patch
    if len(sticker_patches) == 0:
        # If no sticker is found, query the image directly
        return image_patch.simple_query(""Does the blue sticker look short?"")
    for sticker_patch in sticker_patches:
        if sticker_patch.verify_property(""sticker"", ""blue""):
            return bool_to_yesno(sticker_patch.verify_property(""sticker"", ""short""))
    return ""no"""
8404557,What's the woman wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the woman wearing?"")"
2808433,On which side of the image is the bench of the elephant?," # left or right
    image_patch = ImagePatch(image)
    bench_patches = image_patch.find(""bench"")
    # Question assumes only one bench patch
    if len(bench_patches) == 0:
        # If no bench is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the bench of the elephant?"")
    for bench_patch in bench_patches:
        if bench_patch.horizontal_center < image_patch.horizontal_center:
            return ""left""
        else:
            return ""right"""
2842795,Are there people to the left of the snowboarder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""person"") and image_patch.find(""snowboarder"")[0].horizontal_center > image_patch.horizontal_center)"
173553,What is located on the edge of the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is located on the edge of the wall?"")"
358941,"On which side is the wine, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the wine, the right or the left?"")"
286309,Is the white cup above the saucer that is above the receipt?," # contains a relation (above), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white cup above the saucer that is above the receipt?"")"
10340486,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
10685761,"What is this, a cabinet or a mirror?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this, a cabinet or a mirror?"")"
9524163,Is the bald person walking next to the bird?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bald person walking next to the bird?"")"
17644452,Is the red pot in the bottom part or in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the red pot in the bottom part or in the top of the photo?"")"
17629784,"Where in the photo is the white truck, in the top or in the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in the photo is the white truck, in the top or in the bottom?"")"
2496571,Is the boy to the right of a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the right of a fence?"")"
4282373,Who is wearing a ski?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a ski?"")"
161036000,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"")"
6126142,On which side is the metal fence?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""metal fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""On which side is the metal fence?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10351045,"How does the car look like, white or black?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How does the car look like, white or black?"")"
18536931,Are there both mirrors and table lamps in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_table_lamp = image_patch.exists(""table lamp"")
    return bool_to_yesno(is_mirror and is_table_lamp)"
181062522,Which color are the pants that the man is wearing?," # returns the color of the pants
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which color are the pants that the man is wearing?"")
    man_patch = man_patches[0]
    pants_patches = image_patch.find(""pants"")
    # Question assumes only one pants patch
    if len(pants_patches) == 0:
        return image_patch.simple_query(""Which color are the pants that the man is wearing?"")
    for pants_patch in pants_patches:
        if pants_patch.horizontal_center > man_patch.horizontal_center:
            return pants_patch.simple_query(""Which color are the pants that the man is wearing?"")
    return image_patch.simple_query(""Which color are the pants that the man is wearing?"")"
15973358,What kind of vegetable is to the right of the soup in the container?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vegetable is to the right of the soup in the container?"")"
3430457,Is the person to the left of the microphone wearing a necktie?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the left of the microphone wearing a necktie?"")"
3690643,"On which side of the image is the napkin, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the napkin, the left or the right?"")"
3323571,Which kind of furniture is under the desk?," # contains a relation (under), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is under the desk?"")"
17769616,Is the glass clear and full?," # clear and full are properties
    image_patch = ImagePatch(image)
    glass_patches = image_patch.find(""glass"")
    # Question assumes only one glass patch
    if len(glass_patches) == 0:
        # If no glass is found, query the image directly
        return image_patch.simple_query(""Is the glass clear and full?"")
    return bool_to_yesno(glass_patches[0].verify_property(""glass"", ""clear"") and glass_patches[0].verify_property(""glass"", ""full""))"
5447291,What type of furniture is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is pictured?"")"
12159679,Does the fruit that is not small look ripe?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the fruit that is not small look ripe?"")"
16496531,Which kind of clothing is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is black?"")"
5963554,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9590267,What is the name of the striped animal?," # returns the name of the striped animal
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the striped animal?"")"
6601597,Do the trees near the building seem to be leafless and short?," # contains a relation (near), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the trees near the building seem to be leafless and short?"")"
31058421,What does he wear?," # assumes one man
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What does he wear?"")
    return man_patches[0].simple_query(""What does he wear?"")"
4943059,Is the onion large and fried?," # onion is a common object
    image_patch = ImagePatch(image)
    onion_patches = image_patch.find(""onion"")
    # Question assumes only one onion patch
    if len(onion_patches) == 0:
        # If no onion is found, query the image directly
        return image_patch.simple_query(""Is the onion large and fried?"")
    return bool_to_yesno(onion_patches[0].verify_property(""onion"", ""large"") and onion_patches[0].verify_property(""onion"", ""fried""))"
15910544,Is the shelf to the right of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shelf to the right of a chair?"")"
10666175,Are there trains near the person that is wearing a jacket?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""Are there trains near the person that is wearing a jacket?"")
    jacket_patch = jacket_patches[0]
    train_patches = image_patch.find(""train"")
    # Question assumes only one train patch
    if len(train_patches) == 0:
        return ""no""
    for train_patch in train_patches:
        if train_patch.horizontal_center > jacket_patch.horizontal_center:
            return ""yes""
    return ""no"""
3150647,Are the bottles on the left?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the bottles on the left?"")"
12887523,Does the sky seem to be cloudy?," # -> bool
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Does the sky seem to be cloudy?"") == ""yes"")"
15423240,Which color are the trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the trees?"")"
17157635,Who holds the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the racket?"")"
17563105,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
131058802,Where is the woman?," # returns the location of the woman
    image_patch = ImagePatch(image)
    woman_patches = image_patch.find(""woman"")
    # Question assumes only one woman patch
    if len(woman_patches) == 0:
        # If no woman is found, query the image directly
        return image_patch.simple_query(""Where is the woman?"")
    return woman_patches[0].simple_query(""Where is the woman?"")"
61040955,What device is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is white?"")"
16967055,Are there both a sheep and a fence in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sheep = image_patch.exists(""sheep"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_sheep and is_fence)"
8531643,"On which side of the image is the blue bag, the left or the right?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the image is the blue bag, the left or the right?"")"
14250271,Which side of the photo is the fork on?," # left or right
    image_patch = ImagePatch(image)
    fork_patches = image_patch.find(""fork"")
    # Question assumes only one fork patch
    if len(fork_patches) == 0:
        # If no fork is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the fork on?"")
    if fork_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
6210226,Is the statue brown and small?," # returns yes or no
    image_patch = ImagePatch(image)
    statue_patches = image_patch.find(""statue"")
    # Question assumes only one statue patch
    if len(statue_patches) == 0:
        # If no statue is found, query the image directly
        return image_patch.simple_query(""Is the statue brown and small?"")
    return bool_to_yesno(statue_patches[0].verify_property(""statue"", ""brown"") and statue_patches[0].verify_property(""statue"", ""small""))"
1663000,On which side is the faucet?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the faucet?"")"
16358773,Is the woman that is to the left of the man wearing a necklace?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman that is to the left of the man wearing a necklace?"")"
14135103,Is there a coffee table or a mirror that is not rectangular?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_coffee_table = image_patch.exists(""coffee table"")
    is_mirror = image_patch.exists(""mirror"")
    return bool_to_yesno(is_coffee_table or is_mirror)"
12796391,Does the man's hair look brown and short?," # returns yes or no
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Does the man's hair look brown and short?"")
    man_patch = man_patches[0]
    return bool_to_yesno(man_patch.verify_property(""man"", ""brown"") and man_patch.verify_property(""man"", ""short""))"
1876640,"In which part is the shelf, the right or the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the shelf, the right or the left?"")"
7329376,Is the boy to the right or to the left of the lady that is wearing a shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the right or to the left of the lady that is wearing a shirt?"")"
131004205,What is the company the made the shoes that look white called?," # contains a relation (made by), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the company the made the shoes that look white called?"")"
12773883,Are there any pillows to the left of the microwave?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pillow"") and image_patch.exists(""microwave"")) # contains a relation (left of, right of, etc), so ask directly"
15907987,Which kind of animal is standing in the dirt?," # contains a relation (standing in the dirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is standing in the dirt?"")"
107768,What type of sauce is presented?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of sauce is presented?"")"
15784556,What is the fork on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fork on?"")"
14802017,Who is the horse in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the horse in front of?"")"
6512991,What is covering the small bush?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covering the small bush?"")"
3841232,Are there both street signs and traffic lights in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_street_sign = image_patch.exists(""street sign"")
    is_traffic_light = image_patch.exists(""traffic light"")
    return bool_to_yesno(is_street_sign and is_traffic_light)"
6571684,Is the large flower on a table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the large flower on a table?"")"
17900222,Are there birds near the water?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bird"") and image_patch.exists(""water""))"
16172932,Is the black bag to the left or to the right of the guy?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the left or to the right of the guy?"")"
17723883,Is the man that is to the left of the elephant wearing gloves?," # contains a relation (left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is to the left of the elephant wearing gloves?"")"
2300790,What items of furniture are beneath the counter the bowl is on?," # contains a relation (beneath, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What items of furniture are beneath the counter the bowl is on?"")"
3418314,Is the bus different in color than the plane?," # contains a relation (different in color than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bus different in color than the plane?"")"
15689548,What is the drink that is to the left of the bread on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the drink that is to the left of the bread on the right?"")"
2679463,What is the water surrounded by?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the water surrounded by?"")"
2151090,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
8603010,Are the tall palm trees on the left side?," # contains a relation (on the left, on the right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the tall palm trees on the left side?"")"
8152818,Which kind of food is not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is not yellow?"")"
6519190,What is the person doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person doing?"")"
6203764,Which side of the photo is the racket on?," # left or right
    image_patch = ImagePatch(image)
    racket_patches = image_patch.find(""racket"")
    # Question assumes only one racket patch
    if len(racket_patches) == 0:
        # If no racket is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the racket on?"")
    if racket_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7462613,What's the chair made of?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the chair made of?"")"
8486652,Do the towels have a different color than the pillows?," # returns yes or no
    image_patch = ImagePatch(image)
    towel_patches = image_patch.find(""towel"")
    # Question assumes only one towel patch
    if len(towel_patches) == 0:
        # If no towel is found, query the image directly
        return image_patch.simple_query(""Do the towels have a different color than the pillows?"")
    towel_color = towel_patches[0].simple_query(""What color are the towels?"")
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""Do the towels have a different color than the pillows?"")
    pillow_color = pillow_patches[0].simple_query(""What color are the pillows?"")
    return bool_to_yesno(towel_color != pillow_color)"
171040210,Which kind of furniture is the computer mouse on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the computer mouse on?"")"
121021820,Is the door gray and large?," # gray and large
    image_patch = ImagePatch(image)
    door_patches = image_patch.find(""door"")
    # Question assumes only one door patch
    if len(door_patches) == 0:
        # If no door is found, query the image directly
        return image_patch.simple_query(""Is the door gray and large?"")
    return bool_to_yesno(door_patches[0].verify_property(""door"", ""gray"") and door_patches[0].verify_property(""door"", ""large""))"
15713727,Who wears a ski?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a ski?"")"
10594750,Do you see any people to the left of the guy that catches a frisbee?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any people to the left of the guy that catches a frisbee?"")"
4758766,Is the fence in the top of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top of the photo?"")"
12413818,Do you see either chairs or tables that are made of plastic?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_chair = image_patch.exists(""plastic chair"")
    is_table = image_patch.exists(""plastic table"")
    return bool_to_yesno(is_chair or is_table)"
10151554,On which side are the white paper towels?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side are the white paper towels?"")"
11268688,Which kind of furniture is the woman lying on?," # contains a relation (lying on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the woman lying on?"")"
14774953,Is the dog to the right or to the left of the person on the stick?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the dog to the right or to the left of the person on the stick?"")"
1468256,What animal are the trees in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal are the trees in front of?"")"
17645640,What kind of device is to the right of the laptops?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is to the right of the laptops?"")"
19352484,The poster is in front of what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The poster is in front of what?"")"
11309736,How is the weather?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How is the weather?"")"
8757894,Is the woman to the left or to the right of the drink in the middle of the picture?," # contains a relation (left, right, middle, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left or to the right of the drink in the middle of the picture?"")"
11229861,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
11833919,Is the sign the same color as the helmet?," # helmet is not found
    image_patch = ImagePatch(image)
    sign_patches = image_patch.find(""sign"")
    # Question assumes only one sign patch
    if len(sign_patches) == 0:
        # If no sign is found, query the image directly
        return image_patch.simple_query(""Is the sign the same color as the helmet?"")
    sign_patch = sign_patches[0]
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        return ""no""
    helmet_patch = helmet_patches[0]
    return bool_to_yesno(sign_patch.verify_property(""sign"", helmet_patch.simple_query(""What color is the helmet?"")))"
11467203,Are there either any fences or benches that are made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bench = image_patch.exists(""bench"")
    is_wood_fence = False
    is_wood_bench = False
    if is_fence:
        fence_patches = image_patch.find(""fence"")
        for fence_patch in fence_patches:
            is_wood_fence = fence_patch.verify_property(""fence"", ""wood"")
            if is_wood_fence:
                break
    if is_bench:
        bench_patches = image_patch.find(""bench"")
        for bench_patch in bench_patches:
            is_wood_bench = bench_patch.verify_property(""bench"", ""wood"")
            if is_wood_bench:
                break
    return bool_to_yesno(is_wood_fence or is_wood_bench)"
1277355,What is surrounding the train?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is surrounding the train?"")"
18802983,Is the cake on the left side or on the right of the photo?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cake on the left side or on the right of the photo?"")"
7172346,What animal is in front of the fence made of wood?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in front of the fence made of wood?"")"
9564910,Which kind of animal is black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is black?"")"
16884820,Are there silver fences in the scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""silver fence"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
5668930,Which side is the cardboard container on?," # left or right
    image_patch = ImagePatch(image)
    cardboard_patches = image_patch.find(""cardboard container"")
    # Question assumes only one cardboard patch
    if len(cardboard_patches) == 0:
        # If no cardboard is found, query the image directly
        return image_patch.simple_query(""Which side is the cardboard container on?"")
    if cardboard_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
12566561,Does the man to the right of the towel toss a ball?," # contains a relation (right of, tosses), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the man to the right of the towel toss a ball?"")"
4762836,"Which vehicle is green, the bus or the truck?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which vehicle is green, the bus or the truck?"")"
14975676,Does this trash can look large or small?," # trash can is a specific object
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does this trash can look large or small?"")"
12408051,Is the surfboard to the right of the bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the surfboard to the right of the bag?"")"
4784975,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
820175,What is in the snow?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in the snow?"")"
370212,Does the child's hair have short length and brown color?," # returns yes or no
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    # Question assumes only one child patch
    if len(child_patches) == 0:
        # If no child is found, query the image directly
        return image_patch.simple_query(""Does the child's hair have short length and brown color?"")
    return bool_to_yesno(child_patches[0].verify_property(""hair"", ""brown"") and child_patches[0].verify_property(""hair"", ""length"") == ""short"")"
14395718,What type of furniture is pictured?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is pictured?"")"
16510450,The shirt the man is wearing is of what color?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The shirt the man is wearing is of what color?"")"
12317562,What vehicle is behind the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is behind the man?"")"
16333269,Do you see trains or buses that are not yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_train = image_patch.exists(""train"")
    is_bus = image_patch.exists(""bus"")
    is_yellow_train = image_patch.exists(""train"") and image_patch.exists(""yellow"")
    is_yellow_bus = image_patch.exists(""bus"") and image_patch.exists(""yellow"")
    return bool_to_yesno(is_train or is_bus) and not (is_yellow_train or is_yellow_bus)"
16647253,Are the napkins to the right of potatoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the napkins to the right of potatoes?"") == ""yes"")"
2961548,Who is standing behind the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing behind the horse?"")"
17331544,Is there a backpack to the right of the person that is wearing sandals?," # sandals is a predicate of wearing, so ask directly
    image_patch = ImagePatch(image)
    backpack_patches = image_patch.find(""backpack"")
    # Question assumes only one backpack patch
    if len(backpack_patches) == 0:
        # If no backpack is found, query the image directly
        return image_patch.simple_query(""Is there a backpack to the right of the person that is wearing sandals?"")
    for backpack_patch in backpack_patches:
        person_patches = image_patch.find(""person"")
        for person_patch in person_patches:
            if person_patch.simple_query(""Is the person wearing sandals?"") == ""yes"":
                if backpack_patch.horizontal_center > person_patch.horizontal_center:
                    return ""yes""
    return ""no"""
866076,Are there pots to the left of the man that is wearing shoes?," # contains a relation (to the left of, wearing shoes, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there pots to the left of the man that is wearing shoes?"")"
13975322,Who is sitting on the bench?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the bench?"")"
16610471,Which color is the apple to the left of the bucket?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the apple to the left of the bucket?"")"
8297819,Of what color is the fruit which is in the pan?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Of what color is the fruit which is in the pan?"")"
121035586,Who is running?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is running?"")"
16488281,What animal is painted on the wall made of cement?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is painted on the wall made of cement?"")"
18653371,What animal is large?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is large?"")"
397731,Is the taxi to the right or to the left of the white vehicle?," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the taxi to the right or to the left of the white vehicle?"")"
13434263,Which kind of furniture is to the left of the curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is to the left of the curtain?"")"
9544258,"On which side is the lamp, the left or the right?"," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the lamp, the left or the right?"")"
13543599,Do you think the bike that is to the left of the fence is orange or white?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the bike that is to the left of the fence is orange or white?"")"
1890162,Is the wood cabinet white and closed?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wood cabinet white and closed?"")"
13218171,Who is watching the man?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is watching the man?"")"
6141893,What's the sign hanging over?," # contains a relation (hanging over), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the sign hanging over?"")"
841961,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
9936221,Is there a boat in the photograph?," # contains a relation (in the photograph), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boat""))"
7407182,The motorcycle is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The motorcycle is where?"")"
591004,What is the animal on top of the car that looks gray and blue called?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal on top of the car that looks gray and blue called?"")"
17191937,What's the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the man on?"")"
8933607,Do you see towels there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""towels""))"
4261987,Do you think the glass is white?," # contains a relation (on top of, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you think the glass is white?"")"
15255115,Is the gray rock behind the panda bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the gray rock behind the panda bear?"")"
968498,What is the name of the item of furniture that the pillow is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the item of furniture that the pillow is on?"")"
7544321,Who is sitting on the horses that are on the street?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting on the horses that are on the street?"")"
1619124,"Which is less healthy, the popcorn or the banana?"," # contains a relation (less healthy, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which is less healthy, the popcorn or the banana?"")"
3837186,Do you think the clothes are black?," # returns yes or no
    image_patch = ImagePatch(image)
    clothes_patches = image_patch.find(""clothes"")
    # Question assumes only one clothes patch
    if len(clothes_patches) == 0:
        # If no clothes are found, query the image directly
        return image_patch.simple_query(""Do you think the clothes are black?"")
    return bool_to_yesno(clothes_patches[0].verify_property(""clothes"", ""black""))"
13859381,Is the horse to the left or to the right of the cart?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the horse to the left or to the right of the cart?"")"
1517774,What is the vehicle that the man to the right of the person is looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle that the man to the right of the person is looking at?"")"
14654785,What type of baked good is the covered man eating?," # contains a relation (eating), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of baked good is the covered man eating?"")"
12260079,Which color is the kite in the sky?," # contains a relation (in the sky), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the kite in the sky?"")"
823038,Who in this image is walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who in this image is walking?"")"
151023981,Is the man in the top or in the bottom part of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the man in the top or in the bottom part of the image?"")
    man_patch = man_patches[0]
    if man_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
19412185,What is that boy in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is that boy in front of?"")"
14926190,Is the umbrella that is not little both red and bright?," # contains a relation (is not), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella that is not little both red and bright?"")"
12496617,Do the shirt and the swim suit have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        # If no shirt is found, query the image directly
        return image_patch.simple_query(""Do the shirt and the swim suit have a different colors?"")
    shirt_patch = shirt_patches[0]
    swim_suit_patches = image_patch.find(""swim suit"")
    # Question assumes only one swim suit patch
    if len(swim_suit_patches) == 0:
        return ""no""
    swim_suit_patch = swim_suit_patches[0]
    shirt_color = shirt_patch.simple_query(""What is the color of the shirt?"")
    swim_suit_color = swim_suit_patch.simple_query(""What is the color of the swim suit?"")
    return bool_to_yesno(shirt_color != swim_suit_color)"
129774,What is the food that is to the left of the cake called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the left of the cake called?"")"
19657998,Where is the safety cone?," # returns a string describing the location of the safety cone
    image_patch = ImagePatch(image)
    safety_cone_patches = image_patch.find(""safety cone"")
    # Question assumes only one safety cone patch
    if len(safety_cone_patches) == 0:
        # If no safety cone is found, query the image directly
        return image_patch.simple_query(""Where is the safety cone?"")
    return safety_cone_patches[0].simple_query(""Where is the safety cone?"") # crop would include the safety cone so keep it in the query"
6985983,Which kind of device is to the right of the guy?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the guy?"")"
3723417,"In which part of the photo is the lady, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part of the photo is the lady, the top or the bottom?"")"
13428156,What is the vehicle to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the person?"")"
19623350,Does the forest have a different color than the bus?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the forest have a different color than the bus?"")"
16393344,Does the device to the left of the computer monitor appear to be silver?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the device to the left of the computer monitor appear to be silver?"")"
12635458,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
1139993,Is there any cat on the green car?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any cat on the green car?"")"
14714940,Which kind of furniture is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is it?"")"
7754257,Is the speaker to the left or to the right of the television on the shelf?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the speaker to the left or to the right of the television on the shelf?"")"
6902309,Are there either any elephants or fences?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_elephant = image_patch.exists(""elephant"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_elephant or is_fence)"
3355814,Are there bags to the right of the woman that is to the right of the paper towels?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bags to the right of the woman that is to the right of the paper towels?"")"
18944788,What type of furniture is he in front of?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is he in front of?"")"
5376712,Is the bag on the left side or on the right of the picture?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bag on the left side or on the right of the picture?"")"
6686504,What is the name of the appliance to the left of the woman that is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the appliance to the left of the woman that is to the left of the person?"")"
71057967,What is the horse carrying?," # contains a relation (carrying), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the horse carrying?"")"
1861065,Who is on the bench?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is on the bench?"")"
18464969,What type of furniture is to the right of the woman on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of furniture is to the right of the woman on the left?"")"
1130398,The device that the wire is beside of has what color?," # device is a general term
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""The device that the wire is beside of has what color?"")"
8760820,Which kind of furniture is the blanket covering?," # contains a relation (covering), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is the blanket covering?"")"
1556844,What is the sauce that is orange called?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the sauce that is orange called?"")"
487203,Which side of the picture is the lamp on?," # left or right
    image_patch = ImagePatch(image)
    lamp_patches = image_patch.find(""lamp"")
    # Question assumes only one lamp patch
    if len(lamp_patches) == 0:
        # If no lamp is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the lamp on?"")
    if lamp_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11365837,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
10207102,Which type of baked good is this?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which type of baked good is this?"")"
14822454,What kind of appliance is in the kitchen?," # contains a relation (in the kitchen), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of appliance is in the kitchen?"")"
16585518,Is the large appliance on the left side?," # assumes only one large appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""large appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""Is the large appliance on the left side?"")
    appliance_patch = appliance_patches[0]
    if appliance_patch.horizontal_center < image_patch.horizontal_center:
        return ""yes""
    return ""no"""
12910058,What is on the wall?," # contains a relation (on the wall), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
21033226,What is the color of the folding chair the umbrella is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the folding chair the umbrella is on?"")"
13270061,What animal is on the desk that is above the shelf?," # contains a relation (above, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the desk that is above the shelf?"")"
10425216,Which room is it?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which room is it?"")"
1836112,Is the shirt red or blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the shirt red or blue?"")"
15524491,The woman that is to the right of the towel is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman that is to the right of the towel is wearing what?"")"
54474,Are there both lamps and chairs in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_lamp = image_patch.exists(""lamp"")
    is_chair = image_patch.exists(""chair"")
    return bool_to_yesno(is_lamp and is_chair)"
6300142,Which side of the picture is the fence on?," # left or right
    image_patch = ImagePatch(image)
    fence_patches = image_patch.find(""fence"")
    # Question assumes only one fence patch
    if len(fence_patches) == 0:
        # If no fence is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the fence on?"")
    if fence_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
2985580,Is there either a red scarf or hat?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_red_scarf = image_patch.exists(""red scarf"")
    is_red_hat = image_patch.exists(""red hat"")
    return bool_to_yesno(is_red_scarf or is_red_hat)"
17744616,Is the black bag to the left or to the right of the person that is watching the skateboarder?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the black bag to the left or to the right of the person that is watching the skateboarder?"")"
834556,Do you see any mirrors or beds?," # mirror or bed
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_bed = image_patch.exists(""bed"")
    return bool_to_yesno(is_mirror or is_bed)"
17286733,Is there any lettuce to the right of the sandwich that looks light brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any lettuce to the right of the sandwich that looks light brown?"")"
8169125,Is there a squirrel in front of the picture?," # contains a relation (in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a squirrel in front of the picture?"")"
8414115,What piece of furniture is to the right of the phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What piece of furniture is to the right of the phone?"")"
3642012,How clean are the blue jeans?," # returns a string
    image_patch = ImagePatch(image)
    blue_jeans_patches = image_patch.find(""blue jeans"")
    # Question assumes only one blue jeans patch
    if len(blue_jeans_patches) == 0:
        # If no blue jeans are found, query the image directly
        return image_patch.simple_query(""How clean are the blue jeans?"")
    return blue_jeans_patches[0].simple_query(""How clean are the blue jeans?"") # crop would include the blue jeans so keep it in the query"
14491644,Are the papers in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the papers in the bottom part or in the top of the image?"")"
161007168,Is the man sitting next to the surfboard that is yellow and white?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man sitting next to the surfboard that is yellow and white?"")"
11368669,What is the purple clothing item called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the purple clothing item called?"")"
10948531,Are there both cups and plates in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_plate = image_patch.exists(""plate"")
    return bool_to_yesno(is_cup and is_plate)"
7898636,Are there any men to the right of the motorcycle on the right?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.find(""motorcycle"")[0].horizontal_center < image_patch.horizontal_center)"
12196352,Which color are the scissors in the knife block?," # contains a relation (in the knife block), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color are the scissors in the knife block?"")"
16731861,What color is the jacket?," # returns the color of the jacket
    image_patch = ImagePatch(image)
    jacket_patches = image_patch.find(""jacket"")
    # Question assumes only one jacket patch
    if len(jacket_patches) == 0:
        # If no jacket is found, query the image directly
        return image_patch.simple_query(""What color is the jacket?"")
    return jacket_patches[0].simple_query(""What color is the jacket?"") # crop would include the jacket so keep it in the query"
19754100,"Who seems to be younger, the woman or the kid?"," # contains a relation (younger than), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who seems to be younger, the woman or the kid?"")"
15278904,"Where in this picture is the cart, on the right or on the left?"," # contains a relation (right, left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this picture is the cart, on the right or on the left?"")"
7752422,Is he to the right or to the left of the picture?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is he to the right or to the left of the picture?"")"
11661120,Is the woman talking on the cell phone to the right of the man?," # contains a relation (talking to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman talking on the cell phone to the right of the man?"")"
19315180,Is the brown table small or large?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the brown table small or large?"")"
5772557,Who wears a bracelet?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a bracelet?"")"
6857079,Where is the horse standing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the horse standing?"")"
17637654,What do you think is the photo showing?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is the photo showing?"") # returns a string"
4993435,Is the blanket in the top or in the bottom of the photo?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blanket in the top or in the bottom of the photo?"")"
2336055,Is the woman to the right of the bag wearing a tank top?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the right of the bag wearing a tank top?"")"
8973910,Do you see any cabinets in the bathroom?," # bathroom is not a property of a cabinet
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""cabinet"")) # assumes bathroom is not a property of a cabinet"
4318574,Is the grass short?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the grass short?"")"
8183094,Is the person to the right of the man wearing a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Is the person to the right of the man wearing a helmet?"")
    man_patch = man_patches[0]
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return ""no""
    for person_patch in person_patches:
        if person_patch.horizontal_center > man_patch.horizontal_center:
            return bool_to_yesno(person_patch.verify_property(""person"", ""helmet""))
    return ""no"""
7303851,Which kind of clothing is purple?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is purple?"")"
17450143,Do you see any women to the right of the mobile phone?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any women to the right of the mobile phone?"")"
13797444,Do you see a cabinet above the sink?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a cabinet above the sink?"")"
1427055,Are there any stoves to the left of the cabinets in the kitchen?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there any stoves to the left of the cabinets in the kitchen?"")"
16310575,Is the person to the right or to the left of the train in the middle of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the person to the right or to the left of the train in the middle of the photo?"")"
16616114,Does the microwave look large and white?," # contains a relation (large and white), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the microwave look large and white?"")"
8307108,What is the foil on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the foil on?"")"
2302606,Is the vegetable to the right of the carrot dirty and fresh?," # dirty and fresh
    image_patch = ImagePatch(image)
    vegetable_patches = image_patch.find(""vegetable"")
    # Question assumes only one vegetable patch
    if len(vegetable_patches) == 0:
        # If no vegetable is found, query the image directly
        return image_patch.simple_query(""Is the vegetable to the right of the carrot dirty and fresh?"")
    for vegetable_patch in vegetable_patches:
        carrot_patches = image_patch.find(""carrot"")
        for carrot_patch in carrot_patches:
            if vegetable_patch.horizontal_center > carrot_patch.horizontal_center:
                return bool_to_yesno(vegetable_patch.verify_property(""vegetable"", ""dirty"") and vegetable_patch.verify_property(""vegetable"", ""fresh""))
    return ""no"""
4189228,Which kind of food is to the left of the fork?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of food is to the left of the fork?"")"
10962571,Is the white helmet to the right or to the left of the horse?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white helmet to the right or to the left of the horse?"")"
1411978,How large is the television?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How large is the television?"")"
6784759,What kind of meat is to the right of the cheese that is to the right of the tomato?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of meat is to the right of the cheese that is to the right of the tomato?"")"
11321000,"On which side is the oven, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the oven, the right or the left?"")"
14899610,Who is standing?," # contains a relation (standing on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is standing?"")"
11219013,Is the color of the trash bag different than the color of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the color of the trash bag different than the color of the building?"")"
8436893,Is this a mirror or a table?," # mirror or table
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    table_patches = image_patch.find(""table"")
    if len(mirror_patches) > 0:
        return ""mirror""
    elif len(table_patches) > 0:
        return ""table""
    else:
        return image_patch.simple_query(""Is this a mirror or a table?"")"
14309042,What is the animal to the right of the people that are sitting beside the road?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal to the right of the people that are sitting beside the road?"")"
7137509,What is piled on the fire hydrant?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is piled on the fire hydrant?"")"
14724944,Is the person on the right or on the left side?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person on the right or on the left side?"")
    if person_patches[0].horizontal_center > image_patch.horizontal_center:
        return ""right""
    else:
        return ""left"""
5456097,Is the plate to the left of the food the pizza is to the left of?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plate to the left of the food the pizza is to the left of?"")"
7566521,Which kind of furniture is in front of the window?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is in front of the window?"")"
1925451,What sign is in front of the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sign is in front of the building?"")"
14748464,Is the girl to the left of a bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the girl to the left of a bag?"")"
7927639,What's the clock on?," # assumes only one clock patch
    image_patch = ImagePatch(image)
    clock_patches = image_patch.find(""clock"")
    if len(clock_patches) == 0:
        return image_patch.simple_query(""What's the clock on?"")
    return clock_patches[0].simple_query(""What's the clock on?"")"
15586872,Are both the peppers to the right of the onions and the peppers that are to the right of the ham yellow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""pepper"") and image_patch.exists(""pepper"") and image_patch.exists(""ham"")) # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly"
141007896,What is covering the home plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covering the home plate?"")"
1798255,What article of clothing is green?," # returns the first article of clothing found
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""article of clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What article of clothing is green?"")
    for clothing_patch in clothing_patches:
        if clothing_patch.verify_property(""article of clothing"", ""green""):
            return clothing_patch.simple_query(""What article of clothing is green?"")
    return image_patch.simple_query(""What article of clothing is green?"")"
4564624,How big is the wallet made of leather?," # returns the size of the wallet
    image_patch = ImagePatch(image)
    wallet_patches = image_patch.find(""wallet"")
    # Question assumes only one wallet patch
    if len(wallet_patches) == 0:
        # If no wallet is found, query the image directly
        return image_patch.simple_query(""How big is the wallet made of leather?"")
    wallet_patch = wallet_patches[0]
    return wallet_patch.simple_query(""How big is the wallet made of leather?"") # crop would include the wallet so keep it in the query"
12222684,Are the DVDs in the top part of the image?," # DVD is a specific object
    image_patch = ImagePatch(image)
    dvd_patches = image_patch.find(""DVD"")
    # Question assumes only one DVD patch
    if len(dvd_patches) == 0:
        # If no DVD is found, query the image directly
        return image_patch.simple_query(""Are the DVDs in the top part of the image?"")
    for dvd_patch in dvd_patches:
        if dvd_patch.vertical_center > image_patch.vertical_center:
            return ""yes""
    return ""no"""
8576538,Are there fire extinguishers or ropes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_extinguisher = image_patch.exists(""fire extinguisher"")
    is_rope = image_patch.exists(""rope"")
    return bool_to_yesno(is_fire_extinguisher or is_rope)"
1357875,What is the vehicle to the right of the person that is sitting in the wagon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vehicle to the right of the person that is sitting in the wagon?"")"
1054374,What is the Caucasian person holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the Caucasian person holding?"")"
13346519,What is the girl to the left of the car wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl to the left of the car wearing?"")"
15758912,What is the airplane in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the airplane in?"")"
5665906,What material is the container made of?," # assumes only one container
    image_patch = ImagePatch(image)
    container_patches = image_patch.find(""container"")
    if len(container_patches) == 0:
        return image_patch.simple_query(""What material is the container made of?"")
    return container_patches[0].simple_query(""What material is the container made of?"")"
17133556,Where is the man that is to the right of the parachute standing?," # contains a relation (right of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the man that is to the right of the parachute standing?"")"
14527491,What is the blanket on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the blanket on?"")"
5658114,Does the cat have a different color than the clock?," # returns yes or no
    image_patch = ImagePatch(image)
    cat_patches = image_patch.find(""cat"")
    # Question assumes only one cat patch
    if len(cat_patches) == 0:
        # If no cat is found, query the image directly
        return image_patch.simple_query(""Does the cat have a different color than the clock?"")
    cat_color = cat_patches[0].simple_query(""What color is the cat?"")
    clock_patches = image_patch.find(""clock"")
    # Question assumes only one clock patch
    if len(clock_patches) == 0:
        # If no clock is found, query the image directly
        return image_patch.simple_query(""Does the cat have a different color than the clock?"")
    clock_color = clock_patches[0].simple_query(""What color is the clock?"")
    return bool_to_yesno(cat_color != clock_color)"
2516203,Does that mirror appear to be small?," # mirror is a tricky one, it can be small or large
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""Does that mirror appear to be small?"")
    return bool_to_yesno(mirror_patches[0].verify_property(""mirror"", ""small""))"
91013404,Is the laptop to the right or to the left of the nightstand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the laptop to the right or to the left of the nightstand?"")"
18504810,Is there a plate to the right of the bread?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a plate to the right of the bread?"")"
9920594,Is there any desk in this scene?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""desk""))"
12693590,Is there a bench in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench""))"
3245639,What is the person to the left of the DVD player playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the DVD player playing?"")"
6341087,Does that sky look cloudy and blue?," # returns yes or no
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""sky"", ""cloudy"") and image_patch.verify_property(""sky"", ""blue""))"
5214538,Is the policeman in the top part of the image?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the policeman in the top part of the image?"")"
14646717,Is the man to the left or to the right of the curtain on the right?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the curtain on the right?"")"
14140100,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
6621472,Is the planter on the right or on the left?," # contains a relation (on the right, on the left, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the planter on the right or on the left?"")"
7134385,What is he in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he in front of?"")"
4945139,Who is the snow before?," # contains a relation (before, after, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is the snow before?"")"
91018096,Is there a boat in the water near the rocks?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a boat in the water near the rocks?"")"
1694146,Is the tower to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tower to the left of a chair?"")"
35177,Is the counter below a wolf?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the counter below a wolf?"")"
221437,Do you see any rackets to the left of the girl?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any rackets to the left of the girl?"")"
4661643,Where is he sitting?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is he sitting?"")"
11482886,What kind of animal is the man kissing?," # contains a relation (kissing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is the man kissing?"")"
121040593,What animal is adult?," # contains a relation (adult), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is adult?"")"
2589708,What is the knife in?," # knife in a container
    image_patch = ImagePatch(image)
    knife_patches = image_patch.find(""knife"")
    # Question assumes only one knife patch
    if len(knife_patches) == 0:
        # If no knife is found, query the image directly
        return image_patch.simple_query(""What is the knife in?"")
    return knife_patches[0].simple_query(""What is the knife in?"") # crop would include the container so keep it in the query"
14761243,Where is the bear?," # returns the location of the bear
    image_patch = ImagePatch(image)
    bear_patches = image_patch.find(""bear"")
    # Question assumes only one bear patch
    if len(bear_patches) == 0:
        # If no bear is found, query the image directly
        return image_patch.simple_query(""Where is the bear?"")
    return bear_patches[0].simple_query(""Where is the bear?"")"
17682018,What kind of animal is to the right of the swan that looks orange?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is to the right of the swan that looks orange?"")"
12423542,Are the plates on a counter?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the plates on a counter?""))"
2225487,What animal is on the pavement?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is on the pavement?"")"
4679420,Is there any black bench or fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""black bench"") or image_patch.exists(""fence""))"
18301224,What is the color of the man shoes?," # returns the color of the shoes
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""What is the color of the man shoes?"")
    man_patch = man_patches[0]
    shoe_patches = image_patch.find(""shoes"")
    # Question assumes only one shoe patch
    if len(shoe_patches) == 0:
        return image_patch.simple_query(""What is the color of the man shoes?"")
    shoe_patch = shoe_patches[0]
    return shoe_patch.simple_query(""What is the color of the man shoes?"") # crop would include the shoes so keep it in the query"
8530522,What color do you think the vehicle to the left of the truck is?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the vehicle to the left of the truck is?"")"
18485511,Is it outdoors or indoors?," # contains a relation (outdoors, indoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors or indoors?"")"
1490322,What do both the rolling pin and the table have in common?," # assumes only one table and one rolling pin
    image_patch = ImagePatch(image)
    rolling_pin_patches = image_patch.find(""rolling pin"")
    table_patches = image_patch.find(""table"")
    # Question assumes only one rolling pin patch and one table patch
    if len(rolling_pin_patches) == 0 or len(table_patches) == 0:
        # If no rolling pin or table is found, query the image directly
        return image_patch.simple_query(""What do both the rolling pin and the table have in common?"")
    rolling_pin_patch = rolling_pin_patches[0]
    table_patch = table_patches[0]
    common_properties = set(rolling_pin_patch.simple_query(""What properties does the rolling pin have?"").split("", "")) & set(table_patch.simple_query(""What properties does the table have?"").split("", ""))
    return common_properties[0]"
13803814,Is the wine in the top part of the image?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the wine in the top part of the image?"")"
299886,What animal is that fence in front of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is that fence in front of?"")"
1577125,What type of vehicle is to the left of the mirror?," # mirror is a vehicle
    image_patch = ImagePatch(image)
    mirror_patches = image_patch.find(""mirror"")
    # Question assumes only one mirror patch
    if len(mirror_patches) == 0:
        # If no mirror is found, query the image directly
        return image_patch.simple_query(""What type of vehicle is to the left of the mirror?"")
    mirror_patch = mirror_patches[0]
    vehicle_patches = image_patch.find(""vehicle"")
    # Question assumes only one vehicle patch
    if len(vehicle_patches) == 0:
        return image_patch.simple_query(""What type of vehicle is to the left of the mirror?"")
    for vehicle_patch in vehicle_patches:
        if vehicle_patch.horizontal_center < mirror_patch.horizontal_center:
            return vehicle_patch.simple_query(""What type of vehicle is to the left of the mirror?"")
    return image_patch.simple_query(""What type of vehicle is to the left of the mirror?"")"
71057176,Is the pineapple in the bottom or in the top part of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the pineapple in the bottom or in the top part of the image?"")"
3355770,What color is the shirt the man is in?," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the man is in?"")"
9768423,"Who is younger, the child or the woman?"," # assumes only one child and one woman
    image_patch = ImagePatch(image)
    child_patches = image_patch.find(""child"")
    woman_patches = image_patch.find(""woman"")
    if len(child_patches) == 0 or len(woman_patches) == 0:
        return image_patch.simple_query(""Who is younger, the child or the woman?"")
    child_age = child_patches[0].simple_query(""How old is the child?"")
    woman_age = woman_patches[0].simple_query(""How old is the woman?"")
    if child_age < woman_age:
        return ""the child""
    else:
        return ""the woman"""
329395,The glove has which color?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The glove has which color?"")"
17122477,Are there men to the left of the food in the top of the picture?," # contains a relation (left, top, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the left of the food in the top of the picture?"")"
5635755,Which kind of furniture is wooden?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is wooden?"")"
1611315,Are the socks white or black?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the socks white or black?"")"
6390106,Are there any orange curtains or blankets?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_orange_curtain = image_patch.exists(""orange curtain"")
    is_orange_blanket = image_patch.exists(""orange blanket"")
    return bool_to_yesno(is_orange_curtain or is_orange_blanket)"
13180690,Are there both giraffes and zebras in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_giraffe = image_patch.exists(""giraffe"")
    is_zebra = image_patch.exists(""zebra"")
    return bool_to_yesno(is_giraffe and is_zebra)"
1129675,Do you see a table to the left of the trash bin on the left?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a table to the left of the trash bin on the left?"")"
14706332,"Which side is the apple on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the apple on, the right or the left?"")"
12696592,What is the animal that is sitting on the heart that looks red?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is sitting on the heart that looks red?"")"
5224338,What's on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's on the table?"")"
2568316,Are these animals the same species?," # contains a relation (same species, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are these animals the same species?"")"
2806318,What is the color of the trunks he is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the trunks he is wearing?"")"
4905719,On which side of the photo is the black handbag?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the photo is the black handbag?"")"
5584864,What is the person to the right of the racket hitting?," # contains a relation (hitting), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the right of the racket hitting?"")"
18847599,What is the bottle made of?," # bottle is a common object
    image_patch = ImagePatch(image)
    bottle_patches = image_patch.find(""bottle"")
    # Question assumes only one bottle patch
    if len(bottle_patches) == 0:
        # If no bottle is found, query the image directly
        return image_patch.simple_query(""What is the bottle made of?"")
    return bottle_patches[0].simple_query(""What is the bottle made of?"") # crop would include the bottle so keep it in the query"
1266727,Are there fences or breads?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_bread = image_patch.exists(""bread"")
    return bool_to_yesno(is_fence or is_bread)"
16908730,"Which side of the image is the fruit on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side of the image is the fruit on, the right or the left?"")"
1553536,What's holding the girl?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's holding the girl?"")"
11154987,Is the young man on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the young man on the left side of the image?"")"
14160267,What sign is in front of the tree that is not big?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What sign is in front of the tree that is not big?"")"
3908333,Is the cup to the right of the food that is to the left of the lemon?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the cup to the right of the food that is to the left of the lemon?"")"
12183780,Does the bus have a different color than the door frame?," # bus and door frame are assumed to be in the same image
    image_patch = ImagePatch(image)
    bus_patches = image_patch.find(""bus"")
    # Question assumes only one bus patch
    if len(bus_patches) == 0:
        # If no bus is found, query the image directly
        return image_patch.simple_query(""Does the bus have a different color than the door frame?"")
    bus_color = bus_patches[0].simple_query(""What color is the bus?"")
    door_frame_patches = image_patch.find(""door frame"")
    # Question assumes only one door frame patch
    if len(door_frame_patches) == 0:
        # If no door frame is found, query the image directly
        return image_patch.simple_query(""Does the bus have a different color than the door frame?"")
    door_frame_color = door_frame_patches[0].simple_query(""What color is the door frame?"")
    return bool_to_yesno(bus_color != door_frame_color)"
926073,The train is where?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The train is where?"")"
14530990,Is this a red towel?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a red towel?"")"
10929040,Are there any colorful towels or bedspreads?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""colorful towel"") or image_patch.exists(""colorful bedspread""))"
181065904,What vehicle is left of the box?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is left of the box?"")"
14790788,What are the animals in front of the truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the animals in front of the truck?"")"
6865813,Is the man behind a fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man behind a fence?"")"
14145031,Are there either fire hydrants or fences in this photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_hydrant = image_patch.exists(""fire hydrant"")
    is_fence = image_patch.exists(""fence"")
    return bool_to_yesno(is_fire_hydrant or is_fence)"
17418235,Which kind of clothing is blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing is blue?"")"
11264073,What do both the pole and the wall have in common?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do both the pole and the wall have in common?"")"
9472547,What is the item of furniture that the person to the right of the guy is sitting in?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that the person to the right of the guy is sitting in?"")"
15252610,Who is wearing a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a shirt?"")"
8450086,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
4196338,What food is browned?," # contains a relation (browned), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What food is browned?"")"
2911062,Which side of the photo is the garbage bin on?," # left or right
    image_patch = ImagePatch(image)
    garbage_bin_patches = image_patch.find(""garbage bin"")
    # Question assumes only one garbage bin patch
    if len(garbage_bin_patches) == 0:
        # If no garbage bin is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the garbage bin on?"")
    if garbage_bin_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
158607,On which side is the brown meat?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side is the brown meat?"")"
10436058,What color are the sneakers?," # returns the color of the sneakers
    image_patch = ImagePatch(image)
    sneakers_patches = image_patch.find(""sneakers"")
    # Question assumes only one sneakers patch
    if len(sneakers_patches) == 0:
        # If no sneakers are found, query the image directly
        return image_patch.simple_query(""What color are the sneakers?"")
    return sneakers_patches[0].simple_query(""What color are the sneakers?"") # crop would include the sneakers so keep it in the query"
244540,Are there boys on top of the skateboard?," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""boy on top of skateboard"")) # crop would include the skateboard so keep it in the query"
15405623,Is the player to the right of the sheep wearing a jersey?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the player to the right of the sheep wearing a jersey?"")"
3731176,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
5950618,Is the umbrella to the left of the chair closed or open?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the umbrella to the left of the chair closed or open?"")"
2804450,Which color does that door have?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color does that door have?"")"
5970406,Are the chairs on the right?," # contains a relation (on the right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the chairs on the right?"")"
13484757,Is the hat white or brown?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hat white or brown?"")"
10295599,On which side of the photo is the girl?," # left or right
    image_patch = ImagePatch(image)
    girl_patches = image_patch.find(""girl"")
    # Question assumes only one girl patch
    if len(girl_patches) == 0:
        # If no girl is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the girl?"")
    return ""left"" if girl_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
1375812,Do you see bowls or tables there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bowl = image_patch.exists(""bowl"")
    is_table = image_patch.exists(""table"")
    return bool_to_yesno(is_bowl or is_table)"
11162018,Is there a blue chair or table?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_blue_chair = image_patch.exists(""blue chair"")
    is_blue_table = image_patch.exists(""blue table"")
    return bool_to_yesno(is_blue_chair or is_blue_table)"
3943426,Is the table under an umbrella?," # contains a relation (under, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the table under an umbrella?"")"
19586205,What animal is in the suitcase?," # contains a relation (in, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is in the suitcase?"")"
2187778,What is on the bag that is on the side walk?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bag that is on the side walk?"")"
8842038,Does the window on the side of the building look white?," # contains a relation (on the side of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the window on the side of the building look white?"")"
8487949,Which color is the coat?," # returns the color of the coat
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Which color is the coat?"")
    return coat_patches[0].simple_query(""Which color is the coat?"")"
18744001,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9221101,Who is holding the racket?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the racket?"")"
4965040,Is there either a empty wineglass or cup?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_empty_wineglass = image_patch.exists(""empty wineglass"")
    is_cup = image_patch.exists(""cup"")
    return bool_to_yesno(is_empty_wineglass or is_cup)"
61034027,Is it an indoors or outdoors scene?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an indoors or outdoors scene?"")"
14345516,Is the soap bottle to the left or to the right of the refrigerator that is on the right?," # contains a relation (left, right, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the soap bottle to the left or to the right of the refrigerator that is on the right?"")"
15541690,What color is the floor?," # returns the color of the floor
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the floor?"")"
556391,Do you see any mushrooms or oranges?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""mushroom"") or image_patch.exists(""orange""))"
7817977,Do you see either screens or televisions?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""screen"") or image_patch.exists(""television""))"
2514978,Are there men to the right of the people on the snow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there men to the right of the people on the snow?"")"
6843831,Which kind of vehicle is to the right of the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the right of the bike?"")"
8180888,Which side of the image is the sheet on?," # left or right
    image_patch = ImagePatch(image)
    sheet_patches = image_patch.find(""sheet"")
    # Question assumes only one sheet patch
    if len(sheet_patches) == 0:
        # If no sheet is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the sheet on?"")
    if sheet_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
1866692,What color is the umbrella?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the umbrella?"")"
15424580,Are there any benches or lamps in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bench"") or image_patch.exists(""lamp""))"
3876946,Is the lettuce to the left of the carrots that are on the left side of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lettuce to the left of the carrots that are on the left side of the photo?"")"
15464249,Do the leaves have small size?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""leaves"", ""small""))"
11431222,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2937199,On which side of the image is the umpire?," # left or right
    image_patch = ImagePatch(image)
    umpire_patches = image_patch.find(""umpire"")
    # Question assumes only one umpire patch
    if len(umpire_patches) == 0:
        # If no umpire is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the umpire?"")
    return ""left"" if umpire_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
2469546,What vehicle is red?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vehicle is red?"")"
209836,Is the hair short or long?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the hair short or long?"")"
34190,"Which part of the picture is the white pot in, the bottom or the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which part of the picture is the white pot in, the bottom or the top?"")"
5237598,On which side is the red box?," # left or right
    image_patch = ImagePatch(image)
    red_box_patches = image_patch.find(""red box"")
    # Question assumes only one red box patch
    if len(red_box_patches) == 0:
        # If no red box is found, query the image directly
        return image_patch.simple_query(""On which side is the red box?"")
    red_box_patch = red_box_patches[0]
    if red_box_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19931222,Who is wearing a hat?," # contains a relation (wearing a hat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a hat?"")"
4358659,What is the name of the animal in the blue water?," # contains a relation (in, on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal in the blue water?"")"
3848210,Is the guy to the left or to the right of the man on the right side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy to the left or to the right of the man on the right side of the image?"")"
10697988,Is the surfboard on the right side?," # contains a relation (on the right side of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the surfboard on the right side?"")"
12982388,What appliance is to the right of the utensils behind the stuffed bear?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the utensils behind the stuffed bear?"")"
2357974,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
10568729,Who is wearing shorts?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing shorts?"")"
12519450,"What is the person to the left of the hot dog holding, beer or wine?"," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the hot dog holding, beer or wine?"")"
3775810,Is there any bag to the left of the person that is to the left of the bowl?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there any bag to the left of the person that is to the left of the bowl?"")"
17183942,Are there both faucets and toasters in the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_faucet = image_patch.exists(""faucet"")
    is_toaster = image_patch.exists(""toaster"")
    return bool_to_yesno(is_faucet and is_toaster)"
1946209,Is there a coffee maker in the image that is not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    coffee_maker_patches = image_patch.find(""coffee maker"")
    for coffee_maker_patch in coffee_maker_patches:
        if coffee_maker_patch.verify_property(""coffee maker"", ""black"") == False:
            return ""yes""
    return ""no"""
1964605,What kind of baked good is on the table?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of baked good is on the table?"")"
19921771,Is the person holding a racket?," # tennis
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""Is the person holding a racket?"")
    for person_patch in person_patches:
        racket_patches = image_patch.find(""racket"")
        for racket_patch in racket_patches:
            if racket_patch.horizontal_center > person_patch.horizontal_center:
                return ""yes""
    return ""no"""
13368106,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
1948158,What is the man looking at?," # contains a relation (looking at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man looking at?"")"
6234902,Are there any cups or computers in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_cup = image_patch.exists(""cup"")
    is_computer = image_patch.exists(""computer"")
    return bool_to_yesno(is_cup or is_computer)"
17650506,What type of clothing is brown?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What type of clothing is brown?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""coat"", ""dress"", ""hat"", ""jacket"", ""pants"", ""scarf"", ""shirt"", ""shoes"", ""socks"", ""suit"", ""t-shirt"", ""vest""])"
15242007,Are there any plates or breads?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_plate = image_patch.exists(""plate"")
    is_bread = image_patch.exists(""bread"")
    return bool_to_yesno(is_plate or is_bread)"
121018263,What is the device on the table that is made of wood?," # contains a relation (on, made of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the device on the table that is made of wood?"")"
6606346,What is the animal called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal called?"")"
3117819,Is the sofa to the right or to the left of the coffee table the wineglass is on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sofa to the right or to the left of the coffee table the wineglass is on?"")"
12341529,Which color is the shirt that is sitting on the man?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the shirt that is sitting on the man?"")"
842952,The helmet is what color?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The helmet is what color?"")"
1682726,Is the blue comforter to the right of the curtain?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue comforter to the right of the curtain?"")"
9716718,How large is the window?," # returns a string
    image_patch = ImagePatch(image)
    window_patches = image_patch.find(""window"")
    # Question assumes only one window patch
    if len(window_patches) == 0:
        # If no window is found, query the image directly
        return image_patch.simple_query(""How large is the window?"")
    return window_patches[0].simple_query(""How large is the window?"") # crop would include the window so keep it in the query"
16808656,What color is the shirt the person is wearing?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt the person is wearing?"")"
8735034,What is wearing a cap?," # contains a relation (wearing a cap), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is wearing a cap?"")"
12583655,Are there any ladies to the right of the white shopping bag?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""lady"") and image_patch.find(""white shopping bag"")[0].horizontal_center < image_patch.horizontal_center)"
3257306,Is the bowl to the left of the lemon orange and small?," # bowl is to the left of the lemon
    image_patch = ImagePatch(image)
    bowl_patches = image_patch.find(""bowl"")
    # Question assumes only one bowl patch
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Is the bowl to the left of the lemon orange and small?"")
    for bowl_patch in bowl_patches:
        lemon_patches = image_patch.find(""lemon"")
        for lemon_patch in lemon_patches:
            if lemon_patch.horizontal_center > bowl_patch.horizontal_center:
                return bool_to_yesno(bowl_patch.verify_property(""bowl"", ""orange"") and bowl_patch.verify_property(""bowl"", ""small""))
    return ""no"""
16539941,Is the metal fence in the bottom part or in the top of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the metal fence in the bottom part or in the top of the image?"")"
19240270,Are there bottles to the right of the spoon on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there bottles to the right of the spoon on the left?"")"
269051,What is the girl using?," # contains a relation (using), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl using?"")"
8521319,What is the man on the sidewalk doing?," # contains a relation (on the sidewalk), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on the sidewalk doing?"")"
10242244,Does the boat that is to the left of the bag look large and metallic?," # contains a relation (left of, large, metallic), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the boat that is to the left of the bag look large and metallic?"")"
12713374,Do the trees look bushy?," # returns yes or no
    image_patch = ImagePatch(image)
    tree_patches = image_patch.find(""tree"")
    # Question assumes only one tree patch
    if len(tree_patches) == 0:
        # If no tree is found, query the image directly
        return image_patch.simple_query(""Do the trees look bushy?"")
    return bool_to_yesno(tree_patches[0].verify_property(""tree"", ""bushy""))"
310473,What is the piece of furniture to the left of the person that is shown in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the piece of furniture to the left of the person that is shown in the image?"")"
8722568,Is the guy wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the guy wearing a jacket?"")"
1148146,Are there sheep or horses that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_sheep = image_patch.exists(""sheep"")
    is_horse = image_patch.exists(""horse"")
    is_black_sheep = image_patch.exists(""sheep with black coat"")
    is_black_horse = image_patch.exists(""horse with black coat"")
    return bool_to_yesno(is_sheep or is_horse or is_black_sheep or is_black_horse)"
10636086,Does the cat in front of the utility pole look striped and orange?," # contains a relation (in front of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the cat in front of the utility pole look striped and orange?"")"
465234,Is the white bowl to the right or to the left of the vegetables on the left of the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white bowl to the right or to the left of the vegetables on the left of the image?"")"
2610179,What kind of animal is wearing a collar?," # contains a relation (wearing a collar), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is wearing a collar?"")"
18718332,Do you see a bag or a chair there?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see a bag or a chair there?"")"
12196324,Is it an indoors scene?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Is it an indoors scene?"")) # contains a relation (indoors, outdoors), so ask directly"
3860370,What is the person to the left of the fire extinguisher wearing?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person to the left of the fire extinguisher wearing?"")"
1056997,Who is wearing the watch?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the watch?"")"
12601366,The number is on what?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The number is on what?"")"
15138539,"On which side of the picture is the cart, the right or the left?"," # contains a relation (on the right of, on the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""On which side of the picture is the cart, the right or the left?"")"
13886611,Is it an outdoors scene?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it an outdoors scene?"")"
15930449,Who is waiting?," # contains a relation (waiting for), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is waiting?"")"
16554869,Are there books on the table to the left of the ottoman?," # contains a relation (on, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are there books on the table to the left of the ottoman?"")"
19297675,Are there any small buckets or soaps?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bucket = image_patch.exists(""bucket"")
    is_soap = image_patch.exists(""soap"")
    return bool_to_yesno(is_bucket or is_soap)"
18743537,What kind of vehicle is the truck behind of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is the truck behind of?"")"
91018597,The woman that is to the left of the chair is holding who?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The woman that is to the left of the chair is holding who?"")"
2903562,Are the letter and the helmet the same color?," # returns yes or no
    image_patch = ImagePatch(image)
    letter_patches = image_patch.find(""letter"")
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one letter and helmet patch
    if len(letter_patches) == 0 or len(helmet_patches) == 0:
        # If no letter or helmet is found, query the image directly
        return image_patch.simple_query(""Are the letter and the helmet the same color?"")
    letter_patch = letter_patches[0]
    helmet_patch = helmet_patches[0]
    return bool_to_yesno(letter_patch.verify_property(""letter"", helmet_patch.simple_query(""What color is the helmet?"")))"
19850346,Is the man to the left or to the right of the white bag?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man to the left or to the right of the white bag?"")"
10775969,Is it indoors or outdoors?," # contains a relation (indoors, outdoors), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it indoors or outdoors?"")"
4279290,Who is wearing the eye glasses?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the eye glasses?"")"
10370638,What is in front of the bear that is walking?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the bear that is walking?"")"
19818385,What are the girls doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the girls doing?"")"
41057532,Is the vase to the left of a chair?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the vase to the left of a chair?"")"
7964935,Does the mailbox look white?," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the mailbox look white?"")"
6679517,What's the person watching?," # contains a relation (watching), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the person watching?"")"
141043368,What kind of vehicle is to the left of the man?," # contains a relation (left of, right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of vehicle is to the left of the man?"")"
11533547,What kind of furniture is the television on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the television on?"")"
18728051,What is the man on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man on?"")"
5262293,Who is wearing a tshirt?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a tshirt?"")"
10582168,Is the couch to the right or to the left of the table the pillows are on?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the couch to the right or to the left of the table the pillows are on?"")"
6473174,What kind of meat is presented in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of meat is presented in this picture?"")"
7953804,What color are the curtains?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color are the curtains?"")"
7455603,Are there nightstands next to the bed?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nightstand"") and image_patch.exists(""bed""))"
7643027,What is the fruit on the lid?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fruit on the lid?"")"
10990072,What place was the photo taken at?," # returns a string
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place was the photo taken at?"")"
19879708,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
13986558,Is the tablecloth on the right or on the left side of the image?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tablecloth on the right or on the left side of the image?"")"
9531408,What is the girl that is playing wearing?," # contains a relation (playing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the girl that is playing wearing?"")"
2686303,What is the woman that is not sad wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman that is not sad wearing?"")"
730123,Which kind of animal is brown?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of animal is brown?"")"
17919987,Is it outdoors?," # contains a relation (outdoors, indoors, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is it outdoors?"") # contains a relation (outdoors, indoors, etc), so ask directly"
2320302,What is the color of the car that is on the left part?," # contains a relation (on the left part), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the car that is on the left part?"")"
551857,What is the person that is to the left of the alarm clock holding?," # contains a relation (left of, holding, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person that is to the left of the alarm clock holding?"")"
18236794,On which side of the photo is the pillow?," # left or right
    image_patch = ImagePatch(image)
    pillow_patches = image_patch.find(""pillow"")
    # Question assumes only one pillow patch
    if len(pillow_patches) == 0:
        # If no pillow is found, query the image directly
        return image_patch.simple_query(""On which side of the photo is the pillow?"")
    return ""left"" if pillow_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
12890686,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
1458937,Is the woman to the left of the birds in the center?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman to the left of the birds in the center?"")"
3475191,On which side of the image is the person?," # left or right
    image_patch = ImagePatch(image)
    person_patches = image_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        # If no person is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the person?"")
    return ""left"" if person_patches[0].horizontal_center < image_patch.horizontal_center else ""right"""
3954544,Are the blinds to the right or to the left of the television?," # left or right
    image_patch = ImagePatch(image)
    blinds_patches = image_patch.find(""blinds"")
    # Question assumes only one blinds patch
    if len(blinds_patches) == 0:
        # If no blinds are found, query the image directly
        return image_patch.simple_query(""Are the blinds to the right or to the left of the television?"")
    for blinds_patch in blinds_patches:
        tv_patches = image_patch.find(""television"")
        for tv_patch in tv_patches:
            if blinds_patch.horizontal_center > tv_patch.horizontal_center:
                return ""right""
    return ""left"""
1415042,What is the color of the propeller?," # propeller is a relation so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the propeller?"")"
1856327,Is the boy to the left of the racket wearing shorts?," # contains a relation (left of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy to the left of the racket wearing shorts?"")"
10511451,What is the item of furniture that is the same color as the paper called?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture that is the same color as the paper called?"")"
16557819,Is the scarf white and long?," # returns yes or no
    image_patch = ImagePatch(image)
    scarf_patches = image_patch.find(""scarf"")
    # Question assumes only one scarf patch
    if len(scarf_patches) == 0:
        # If no scarf is found, query the image directly
        return image_patch.simple_query(""Is the scarf white and long?"")
    return bool_to_yesno(scarf_patches[0].verify_property(""scarf"", ""white"") and scarf_patches[0].verify_property(""scarf"", ""long""))"
5654885,Is the yellow bag on the left or on the right?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the yellow bag on the left or on the right?"")"
13379105,Are there any nightstands by the bed?," # contains a relation (by, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""nightstand""))"
19249230,Are the tall mountains gray and snowy?," # mountain is a general term, so query directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.verify_property(""mountains"", ""gray"") and image_patch.verify_property(""mountains"", ""snowy""))"
7258965,"Where in this photo is the juice, in the top or in the bottom?"," # contains a relation (in), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this photo is the juice, in the top or in the bottom?"")"
655862,Which side of the photo is the man on?," # left or right
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""Which side of the photo is the man on?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7208759,Is the chair to the right of the computer yellow or gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""Is the chair to the right of the computer yellow or gray?"")
    chair_patch = chair_patches[0]
    computer_patches = image_patch.find(""computer"")
    # Question assumes only one computer patch
    if len(computer_patches) == 0:
        # If no computer is found, query the image directly
        return image_patch.simple_query(""Is the chair to the right of the computer yellow or gray?"")
    computer_patch = computer_patches[0]
    if chair_patch.horizontal_center > computer_patch.horizontal_center:
        return chair_patch.best_text_match([""yellow"", ""gray""])
    return computer_patch.best_text_match([""yellow"", ""gray""])"
10870146,Who is wearing the uniform?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the uniform?"")"
11158094,What is on the large platform?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the large platform?"")"
965070,Which kind of furniture is gray?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of furniture is gray?"")"
11387595,Is the sidewalk made of the same material as the mailbox?," # contains a relation (made of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the sidewalk made of the same material as the mailbox?"")"
1723079,In which part of the picture is the man?," # horizontal center
    image_patch = ImagePatch(image)
    man_patches = image_patch.find(""man"")
    # Question assumes only one man patch
    if len(man_patches) == 0:
        # If no man is found, query the image directly
        return image_patch.simple_query(""In which part of the picture is the man?"")
    man_patch = man_patches[0]
    if man_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
10776584,Which kind of device is to the right of the headphones?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of device is to the right of the headphones?"")"
1922699,Is there any brown grass or sand?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""brown grass"") or image_patch.exists(""sand""))"
2697358,Is there a horse to the right of the animal on the left?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a horse to the right of the animal on the left?"")"
1046357,"In which part is the man, the top or the bottom?"," # contains a relation (on top of, in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""In which part is the man, the top or the bottom?"")"
6309572,Are the green trees behind the building?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Are the green trees behind the building?"")"
181015396,What is filled with the clouds?," # contains a relation (filled with), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is filled with the clouds?"")"
11570341,What is the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man wearing?"")"
570407,Are there any bears or dinosaurs?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bear = image_patch.exists(""bear"")
    is_dinosaur = image_patch.exists(""dinosaur"")
    return bool_to_yesno(is_bear or is_dinosaur)"
1635192,Do you see breads in the photograph?," # contains a plural noun, so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""bread""))"
15288568,Is the white plate to the right or to the left of the vegetable that is on top of the table?," # contains a relation (on top of, to the right of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white plate to the right or to the left of the vegetable that is on top of the table?"")"
10939434,What is the appliance that the towel is on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance that the towel is on?"")"
81027286,What is the boy holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the boy holding?"")"
11873964,What is the man sitting on?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the man sitting on?"")"
6967706,Is the kid to the right of a racket?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the kid to the right of a racket?"")"
12401070,Who is sitting?," # contains a relation (sitting on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is sitting?"")"
14752981,Are there rackets in the image?," # tennis rackets
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""racket""))"
19548537,Who is wearing trousers?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing trousers?"")"
18889112,What the clothing items that are tan are called?," # returns a list of strings
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""What the clothing items that are tan are called?"")
    tan_patches = clothing_patches[0].find(""tan"")
    # Question assumes only one tan patch
    if len(tan_patches) == 0:
        return clothing_patches[0].simple_query(""What the clothing items that are tan are called?"")
    return tan_patches[0].simple_query(""What the clothing items that are tan are called?"")"
4887235,Do you see any trucks in the picture that are not black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do you see any trucks in the picture that are not black?"") # crop would include the color so keep it in the query"
3592316,What animals are on the skateboard?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animals are on the skateboard?"")"
1438338,"What type of device is the person holding, a cell phone or a camera?"," # returns the best match
    image_patch = ImagePatch(image)
    device_patches = image_patch.find(""device"")
    # Question assumes only one device patch
    if len(device_patches) == 0:
        # If no device is found, query the image directly
        return image_patch.simple_query(""What type of device is the person holding, a cell phone or a camera?"")
    return device_patches[0].best_text_match([""cell phone"", ""camera""]) # crop would include the device so keep it in the query"
566885,Who holds the child?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who holds the child?"")"
1874763,Is there a coat that is yellow?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    coat_patches = image_patch.find(""coat"")
    # Question assumes only one coat patch
    if len(coat_patches) == 0:
        # If no coat is found, query the image directly
        return image_patch.simple_query(""Is there a coat that is yellow?"")
    return bool_to_yesno(coat_patches[0].verify_property(""coat"", ""yellow""))"
16801427,What color is the hay?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the hay?"")"
12206227,Where is it?," # contains a relation (where is it?), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is it?"") # contains a relation (where is it?), so ask directly"
3436307,Do the cats on the chair look orange?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Do the cats on the chair look orange?"")"
12807362,What is the animal that is walking in the sand that is on the beach?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the animal that is walking in the sand that is on the beach?"")"
19216126,Which kind of baked good is on the plate?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of baked good is on the plate?"")"
1024755,What animal is facing the camera?," # contains a relation (facing the camera), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is facing the camera?"")"
17853251,The officer is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The officer is wearing what?"")"
5437879,"Where in this scene is the orange cat, in the bottom or in the top?"," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where in this scene is the orange cat, in the bottom or in the top?"")"
9838371,Is the tennis ball on the right?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the tennis ball on the right?"")"
19702411,What is the bun on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bun on?"")"
8177585,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
9265130,Is the surfboard the same color as the sky?," # contains a relation (same color as), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the surfboard the same color as the sky?"")"
14891862,What device is to the left of the CD?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What device is to the left of the CD?"")"
8467793,Where is the cow?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the cow?"")"
51047380,Are there fences or cows in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fence = image_patch.exists(""fence"")
    is_cow = image_patch.exists(""cow"")
    return bool_to_yesno(is_fence or is_cow)"
4697235,What is this man holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is this man holding?"")"
13412147,Is the toaster to the left or to the right of the appliance that is on top of the counter?," # assumes only one toaster and one appliance on top of the counter
    image_patch = ImagePatch(image)
    toaster_patches = image_patch.find(""toaster"")
    appliance_patches = image_patch.find(""appliance on top of counter"")
    if len(toaster_patches) == 0 or len(appliance_patches) == 0:
        return image_patch.simple_query(""Is the toaster to the left or to the right of the appliance that is on top of the counter?"")
    toaster_patch = toaster_patches[0]
    appliance_patch = appliance_patches[0]
    if toaster_patch.horizontal_center < appliance_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
151017564,Do you see any helmets there that are white?," # helmet is a noun, so go step by step
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Do you see any helmets there that are white?"")
    for helmet_patch in helmet_patches:
        is_white = helmet_patch.simple_query(""Is the helmet white?"") == ""yes""
        if is_white:
            return helmet_patch.simple_query(""Do you see any helmets there that are white?"")
    return ""no"""
19675845,Is the lamp to the right or to the left of the tan couch?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp to the right or to the left of the tan couch?"")"
1372756,Is the child chasing a ball?," # contains a relation (chasing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child chasing a ball?"")"
4513331,Are there hats or fences that are black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_hat_black = image_patch.exists(""hat"") and image_patch.verify_property(""hat"", ""black"")
    is_fence_black = image_patch.exists(""fence"") and image_patch.verify_property(""fence"", ""black"")
    return bool_to_yesno(is_hat_black or is_fence_black)"
1636036,Are there either benches or motorcycles in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_bench = image_patch.exists(""bench"")
    is_motorcycle = image_patch.exists(""motorcycle"")
    return bool_to_yesno(is_bench or is_motorcycle)"
11666480,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
15266304,What is the color of the bike to the right of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the color of the bike to the right of the person?"")"
17566933,Is the plastic cup to the left or to the right of the device that is not large?," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the plastic cup to the left or to the right of the device that is not large?"")"
1041221,Is the chair to the right or to the left of the black device?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the chair to the right or to the left of the black device?"")"
16388674,What kind of furniture is to the right of the drawer on the left of the photo?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is to the right of the drawer on the left of the photo?"")"
623926,Who wears a shirt?," # contains a relation (wearing a shirt), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who wears a shirt?"")"
10355298,Of which color are the rectangular plates?," # returns a string
    image_patch = ImagePatch(image)
    plate_patches = image_patch.find(""plate"")
    # Question assumes only one plate patch
    if len(plate_patches) == 0:
        # If no plate is found, query the image directly
        return image_patch.simple_query(""Of which color are the rectangular plates?"")
    return plate_patches[0].simple_query(""Of which color are the rectangular plates?"") # crop would include the plates so keep it in the query"
18761560,Who is wearing a jacket?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing a jacket?"")"
4666408,Who is wearing the tie?," # contains a relation (wearing), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is wearing the tie?"")"
8317161,What is the vegetable to the right of the person that is holding the dog?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the vegetable to the right of the person that is holding the dog?"")"
4275878,What is the watercraft to the right of the elephant in the middle?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the watercraft to the right of the elephant in the middle?"")"
2278290,"Which color is the lid, green or white?"," # contains a relation (on top of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which color is the lid, green or white?"")"
18560015,What color is the shirt?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the shirt?"")"
1704086,Is this a train or a truck?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a train or a truck?"")"
51037657,What is on the bathtub?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the bathtub?"")"
6409021,Is the bench in the bottom part or in the top of the picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the bench in the bottom part or in the top of the picture?"")"
4909374,Do you see either any fire hydrants or umbrellas that are green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_fire_hydrant_green = image_patch.exists(""fire hydrant"") and image_patch.exists(""green"")
    is_umbrella_green = image_patch.exists(""umbrella"") and image_patch.exists(""green"")
    return bool_to_yesno(is_fire_hydrant_green or is_umbrella_green)"
1861951,What is covered by the dirt?," # contains a relation (on top of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is covered by the dirt?"")"
7610281,What cooking utensil is to the left of the utensil that is to the left of the tissue?," # contains a relation (left of), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What cooking utensil is to the left of the utensil that is to the left of the tissue?"")"
3861646,What do you think is on the floor?," # contains a relation (on the floor), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What do you think is on the floor?"")"
11402769,Is the child on the left or on the right side of the image?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the child on the left or on the right side of the image?"")"
237456,Is there a lamp next to the computer the computer mouse is to the right of?," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is there a lamp next to the computer the computer mouse is to the right of?"")"
727573,What is in front of the pole?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the pole?"")"
17450029,Who is riding the vehicle the bell is in front of?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is riding the vehicle the bell is in front of?"")"
19682128,That cheese is on what?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""That cheese is on what?"")"
14607624,What is the appliance on?," # assumes only one appliance
    image_patch = ImagePatch(image)
    appliance_patches = image_patch.find(""appliance"")
    if len(appliance_patches) == 0:
        return image_patch.simple_query(""What is the appliance on?"")
    appliance_patch = appliance_patches[0]
    return appliance_patch.simple_query(""What is the appliance on?"")"
16979175,What kind of furniture is the plant on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of furniture is the plant on?"")"
10418781,Is the open luggage in front of the tree?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the open luggage in front of the tree?"")"
18975117,What are the leaves that look narrow surrounding?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the leaves that look narrow surrounding?"")"
17404542,What color is the plate that is to the right of the laptop?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the plate that is to the right of the laptop?"")"
650276,How the clothing item that is brown is called?," # clothing item is brown
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing item"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing item is found, query the image directly
        return image_patch.simple_query(""How the clothing item that is brown is called?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.simple_query(""What is the clothing item that is brown called?"") # crop would include the brown so keep it in the query"
6795568,What is in front of the green trees?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the green trees?"")"
12445388,What appliance is white?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is white?"")"
14542177,In which part of the image is the blanket?," # returns the part of the image (left, right, top, bottom)
    image_patch = ImagePatch(image)
    blanket_patches = image_patch.find(""blanket"")
    # Question assumes only one blanket patch
    if len(blanket_patches) == 0:
        # If no blanket is found, query the image directly
        return image_patch.simple_query(""In which part of the image is the blanket?"")
    if blanket_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
19671488,Are there any men to the right of the male person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""man"") and image_patch.exists(""man"") == image_patch.exists(""male person""))"
16472390,What is the item of furniture to the left of the bed that is to the left of the desk?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the item of furniture to the left of the bed that is to the left of the desk?"")"
17351347,Are there either mirrors or tennis balls in the image?," # returns yes or no
    image_patch = ImagePatch(image)
    is_mirror = image_patch.exists(""mirror"")
    is_tennis_ball = image_patch.exists(""tennis ball"")
    return bool_to_yesno(is_mirror or is_tennis_ball)"
1137076,What vegetable is on the counter that is tan?," # contains a relation (on the counter), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What vegetable is on the counter that is tan?"")"
9307258,What are the black cows doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What are the black cows doing?"")"
10397085,Do the plane and the door have a different colors?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Do the plane and the door have a different colors?"")) # crop would include the door so keep it in the query"
316383,Is the lettuce to the left of the cheese?," # contains a relation (left, right, above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lettuce to the left of the cheese?"")"
9127184,On which side of the picture are the candles?," # left or right
    image_patch = ImagePatch(image)
    candle_patches = image_patch.find(""candle"")
    # Question assumes only one candle patch
    if len(candle_patches) == 0:
        # If no candle is found, query the image directly
        return image_patch.simple_query(""On which side of the picture are the candles?"")
    if candle_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
11558878,What kind of animal is on the truck to the right of the man?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of animal is on the truck to the right of the man?"")"
13916235,Is the blue rope on the left or on the right side of the photo?," # contains a relation (left, right), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the blue rope on the left or on the right side of the photo?"")"
7380740,Who wears a helmet?," # helmet is a property of the person
    image_patch = ImagePatch(image)
    helmet_patches = image_patch.find(""helmet"")
    # Question assumes only one helmet patch
    if len(helmet_patches) == 0:
        # If no helmet is found, query the image directly
        return image_patch.simple_query(""Who wears a helmet?"")
    helmet_patch = helmet_patches[0]
    person_patches = helmet_patch.find(""person"")
    # Question assumes only one person patch
    if len(person_patches) == 0:
        return ""no""
    return person_patches[0].simple_query(""Who wears a helmet?"") # crop would include the helmet so keep it in the query"
16331409,Which place is it?," # contains a relation (in, at, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which place is it?"")"
2804120,Which color is the computer on the desk?," # returns the color of the computer
    image_patch = ImagePatch(image)
    computer_patches = image_patch.find(""computer"")
    # Question assumes only one computer patch
    if len(computer_patches) == 0:
        # If no computer is found, query the image directly
        return image_patch.simple_query(""Which color is the computer on the desk?"")
    return computer_patches[0].simple_query(""What color is the computer?"") # crop would include the computer so keep it in the query"
10499961,Is the woman drinking?," # contains a relation (drinking), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the woman drinking?"")"
513021,In which part is the chair?," # assumes only one chair
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""chair"")
    if len(chair_patches) == 0:
        # If no chair is found, query the image directly
        return image_patch.simple_query(""In which part is the chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
1181729,Where is the animal that is dark playing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Where is the animal that is dark playing?"")"
10991965,What is on the wall?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the wall?"")"
9484352,Which side of the image is the wood drawer on?," # left or right
    image_patch = ImagePatch(image)
    wood_drawer_patches = image_patch.find(""wood drawer"")
    # Question assumes only one wood drawer patch
    if len(wood_drawer_patches) == 0:
        # If no wood drawer is found, query the image directly
        return image_patch.simple_query(""Which side of the image is the wood drawer on?"")
    if wood_drawer_patches[0].horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
51009398,Where do you think is the dog?," # returns the position of the dog
    image_patch = ImagePatch(image)
    dog_patches = image_patch.find(""dog"")
    # Question assumes only one dog patch
    if len(dog_patches) == 0:
        # If no dog is found, query the image directly
        return image_patch.simple_query(""Where do you think is the dog?"")
    return dog_patches[0].simple_query(""Where do you think is the dog?"")"
1916042,Are there ovens or cabinets in this image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_oven = image_patch.exists(""oven"")
    is_cabinet = image_patch.exists(""cabinet"")
    return bool_to_yesno(is_oven or is_cabinet)"
12102605,The coach is wearing what?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""The coach is wearing what?"")"
21004689,Which side is the truck on?," # left or right
    image_patch = ImagePatch(image)
    truck_patches = image_patch.find(""truck"")
    # Question assumes only one truck patch
    if len(truck_patches) == 0:
        # If no truck is found, query the image directly
        return image_patch.simple_query(""Which side is the truck on?"")
    truck_patch = truck_patches[0]
    if truck_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
17278559,Is the boy in front of the tree wearing a flip flop?," # contains a relation (in front of, wearing, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the boy in front of the tree wearing a flip flop?"")"
11296785,What color do you think the vehicle near the house has?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color do you think the vehicle near the house has?"")"
7819123,What is common to the food truck and the street sign?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is common to the food truck and the street sign?"")"
18455943,Is the man that is running wearing a coat?," # contains a relation (running, wearing a coat), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the man that is running wearing a coat?"")"
1460393,What is the woman to the right of the man wearing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the woman to the right of the man wearing?"")"
1042922,Is there either any doll or teddy bear that is not small?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    doll_patches = image_patch.find(""doll"")
    teddy_bear_patches = image_patch.find(""teddy bear"")
    for doll_patch in doll_patches:
        if not doll_patch.verify_property(""doll"", ""small""):
            return ""yes""
    for teddy_bear_patch in teddy_bear_patches:
        if not teddy_bear_patch.verify_property(""teddy bear"", ""small""):
            return ""yes""
    return ""no"""
9898800,Are the tiles different in color than the cups?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are the tiles different in color than the cups?"") == ""yes"")"
19384079,What appliance is to the left of the chairs in the kitchen?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the chairs in the kitchen?"")"
1871838,What is the food that is to the left of the red vegetable called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the food that is to the left of the red vegetable called?"")"
18708135,Which kind of vehicle is to the left of the person?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of vehicle is to the left of the person?"")"
2680355,What type of vegetable is to the left of the white cheese?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What type of vegetable is to the left of the white cheese?"")"
16598986,"What is the person next to the pizza staring at, an oven or a dishwasher?"," # contains a relation (next to), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the person next to the pizza staring at, an oven or a dishwasher?"")"
16404043,Which side of the picture is the orange cone on?," # left or right
    image_patch = ImagePatch(image)
    cone_patches = image_patch.find(""orange cone"")
    # Question assumes only one cone patch
    if len(cone_patches) == 0:
        # If no cone is found, query the image directly
        return image_patch.simple_query(""Which side of the picture is the orange cone on?"")
    cone_patch = cone_patches[0]
    if cone_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
7547812,Which kind of clothing is gray?," # clothing is a broad category
    image_patch = ImagePatch(image)
    clothing_patches = image_patch.find(""clothing"")
    # Question assumes only one clothing patch
    if len(clothing_patches) == 0:
        # If no clothing is found, query the image directly
        return image_patch.simple_query(""Which kind of clothing is gray?"")
    clothing_patch = clothing_patches[0]
    return clothing_patch.best_text_match([""shirt"", ""pants"", ""dress"", ""jacket"", ""hat"", ""scarf"", ""socks"", ""shoes""])"
19714893,Is this a bed or a table?," # contains a relation (on, in, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a table?"")"
15941620,"How do the shorts seem to be, black or blue?"," # black or blue
    image_patch = ImagePatch(image)
    shorts_patches = image_patch.find(""shorts"")
    # Question assumes only one shorts patch
    if len(shorts_patches) == 0:
        # If no shorts are found, query the image directly
        return image_patch.simple_query(""How do the shorts seem to be, black or blue?"")
    return shorts_patches[0].best_text_match([""black"", ""blue""])"
1246709,What is on the post?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is on the post?"")"
191041124,On which side of the image is the blue chair?," # left or right
    image_patch = ImagePatch(image)
    chair_patches = image_patch.find(""blue chair"")
    # Question assumes only one chair patch
    if len(chair_patches) == 0:
        # If no blue chair is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the blue chair?"")
    chair_patch = chair_patches[0]
    if chair_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
15877750,What is the material of the white fence?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the material of the white fence?"")"
19656649,What does the player hold?," # holds is a relational verb
    image_patch = ImagePatch(image)
    # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    return image_patch.simple_query(""What does the player hold?"")"
5387587,Which kind of clothing isn't green?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which kind of clothing isn't green?"")"
15299435,What is the bottle on the shelf holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the bottle on the shelf holding?"")"
4359610,What color is the chair at the table?," # contains a relation (at), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What color is the chair at the table?"")"
10434808,What is the watercraft to the left of the woman that wears a life jacket?," # contains a relation (left of, to the left of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the watercraft to the left of the woman that wears a life jacket?"")"
4239963,Is the carrot in the bottom part or in the top?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the carrot in the bottom part or in the top?"")"
8599492,What is in front of the doorway?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is in front of the doorway?"")"
8306573,What is he using?," # assumes only one person
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is he using?"")"
17542909,Are there either any stone statues or bell towers?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_stone_statue = image_patch.exists(""stone statue"")
    is_bell_tower = image_patch.exists(""bell tower"")
    return bool_to_yesno(is_stone_statue or is_bell_tower)"
11200127,On which side is the pineapple?," # left or right
    image_patch = ImagePatch(image)
    pineapple_patches = image_patch.find(""pineapple"")
    # Question assumes only one pineapple patch
    if len(pineapple_patches) == 0:
        # If no pineapple is found, query the image directly
        return image_patch.simple_query(""On which side is the pineapple?"")
    return ""right"""
6345371,What is the painted graffiti painted on?," # contains a relation (painted on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the painted graffiti painted on?"")"
13432595,What is the lady holding?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady holding?"")"
7304920,Does the hat look small or large?," # returns small or large
    image_patch = ImagePatch(image)
    hat_patches = image_patch.find(""hat"")
    # Question assumes only one hat patch
    if len(hat_patches) == 0:
        # If no hat is found, query the image directly
        return image_patch.simple_query(""Does the hat look small or large?"")
    return hat_patches[0].simple_query(""Does the hat look small or large?"") # crop would include the hat so keep it in the query"
1105309,What is the appliance to the left of the black object on the counter called?," # contains a relation (left of, on, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the appliance to the left of the black object on the counter called?"")"
14470962,Are there any windows?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""window""))"
19447027,Is the SUV in the bottom or in the top part of the picture?," # contains a relation (above, below, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the SUV in the bottom or in the top part of the picture?"")"
18251207,Is the fence in the top or in the bottom part of the image?," # contains a relation (top, bottom), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the fence in the top or in the bottom part of the image?"")"
12316968,Are there fences in the image?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""fence""))"
2695283,Does the toothbrush have a different color than the bowl?," # assumes only one toothbrush and one bowl
    image_patch = ImagePatch(image)
    toothbrush_patches = image_patch.find(""toothbrush"")
    if len(toothbrush_patches) == 0:
        # If no toothbrush is found, query the image directly
        return image_patch.simple_query(""Does the toothbrush have a different color than the bowl?"")
    toothbrush_patch = toothbrush_patches[0]
    bowl_patches = image_patch.find(""bowl"")
    if len(bowl_patches) == 0:
        # If no bowl is found, query the image directly
        return image_patch.simple_query(""Does the toothbrush have a different color than the bowl?"")
    bowl_patch = bowl_patches[0]
    return bool_to_yesno(toothbrush_patch.verify_property(""toothbrush"", ""color"") != bowl_patch.verify_property(""bowl"", ""color""))"
2729218,Do you see zebras or flamingoes?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.exists(""zebra"") or image_patch.exists(""flamingo""))"
16517045,What place does this represent?," # image is a PIL Image
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What place does this represent?"")"
161026324,How are the vehicles behind the fence near the garbage called?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""How are the vehicles behind the fence near the garbage called?"")"
18307204,What is the fence made of?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the fence made of?"")"
2665586,Is the color of the sky different than the shirt?," # sky and shirt are assumed to be in the same image
    image_patch = ImagePatch(image)
    sky_patches = image_patch.find(""sky"")
    # Question assumes only one sky patch
    if len(sky_patches) == 0:
        # If no sky is found, query the image directly
        return image_patch.simple_query(""Is the color of the sky different than the shirt?"")
    shirt_patches = image_patch.find(""shirt"")
    # Question assumes only one shirt patch
    if len(shirt_patches) == 0:
        return ""no""
    shirt_patch = shirt_patches[0]
    return bool_to_yesno(sky_patches[0].simple_query(""What is the color of the sky?"") != shirt_patch.simple_query(""What is the color of the shirt?""))"
181025518,What's the weight of the door?," # weight is a property, so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What's the weight of the door?"")"
635585,On which side of the image is the blue mat?," # left or right
    image_patch = ImagePatch(image)
    mat_patches = image_patch.find(""mat"")
    # Question assumes only one mat patch
    if len(mat_patches) == 0:
        # If no mat is found, query the image directly
        return image_patch.simple_query(""On which side of the image is the blue mat?"")
    mat_patch = mat_patches[0]
    if mat_patch.horizontal_center < image_patch.horizontal_center:
        return ""left""
    else:
        return ""right"""
14832221,What is the name of the animal to the right of the man on the bike?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the name of the animal to the right of the man on the bike?"")"
12446185,What animal is it?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What animal is it?"")"
971824,What appliance is to the right of the mirrors that are made of glass?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the right of the mirrors that are made of glass?"")"
18894889,How big are the brown rocks?," # returns a string
    image_patch = ImagePatch(image)
    rock_patches = image_patch.find(""brown rock"")
    # Question assumes only one rock patch
    if len(rock_patches) == 0:
        # If no rock is found, query the image directly
        return image_patch.simple_query(""How big are the brown rocks?"")
    return rock_patches[0].simple_query(""How big are the brown rocks?"") # crop would include the rock so keep it in the query"
173453,What kind of device is the pen on?," # contains a relation (on), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What kind of device is the pen on?"")"
1365356,Does the pot on the counter have small size?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the pot on the counter have small size?"")"
13773776,Are all these animals elephants?," # contains a relation (all, some, etc), so ask directly
    image_patch = ImagePatch(image)
    return bool_to_yesno(image_patch.simple_query(""Are all these animals elephants?"")) # crop would include the animals so keep it in the query"
181004910,Are there towels or blankets that are blue?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_towel_blue = image_patch.exists(""towel"") and image_patch.exists(""blue"")
    is_blanket_blue = image_patch.exists(""blanket"") and image_patch.exists(""blue"")
    return bool_to_yesno(is_towel_blue or is_blanket_blue)"
9890645,"Which side is the statue on, the right or the left?"," # contains a relation (left, right, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Which side is the statue on, the right or the left?"")"
15295375,Do you see either motorbikes or airplanes in this picture?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    is_motorbike = image_patch.exists(""motorbike"")
    is_airplane = image_patch.exists(""airplane"")
    return bool_to_yesno(is_motorbike or is_airplane)"
111012205,What appliance is to the left of the oven?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What appliance is to the left of the oven?"")"
8468406,What is the lady doing?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is the lady doing?"")"
7636281,Is the lamp that is to the right of the person tall and black?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the lamp that is to the right of the person tall and black?"")"
5767986,Does the horse in front of the carriage seem to be walking?," # contains a relation (in front of, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Does the horse in front of the carriage seem to be walking?"")"
15514005,Who is holding the cow?," # contains a relation (holding), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Who is holding the cow?"")"
2854821,In which part is the bike?," # assumes only one bike
    image_patch = ImagePatch(image)
    bike_patches = image_patch.find(""bike"")
    if len(bike_patches) == 0:
        # If no bike is found, query the image directly
        return image_patch.simple_query(""In which part is the bike?"")
    bike_patch = bike_patches[0]
    if bike_patch.vertical_center < image_patch.vertical_center:
        return ""bottom""
    else:
        return ""top"""
6176760,What is inside the basket near the bowl?," # contains a relation (near, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""What is inside the basket near the bowl?"")"
5127078,Is the white box to the right or to the left of the bananas that are on the left side?," # contains a relation (around, next to, on, near, on top of, in front of, behind, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is the white box to the right or to the left of the bananas that are on the left side?"")"
51002182,Is this a bed or a lamp?," # contains a relation (on, next to, etc), so ask directly
    image_patch = ImagePatch(image)
    return image_patch.simple_query(""Is this a bed or a lamp?"")"
