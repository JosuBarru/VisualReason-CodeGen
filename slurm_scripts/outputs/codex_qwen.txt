SELECTED CONFIG FILES: gqa/general_config,config_codex_qwen2.5-7b,gqa/save_codex,gqa/train
LOADING MODEL: DISABLED
INFO 02-25 09:27:38 __init__.py:183] Automatically detected platform cuda.
INFO 02-25 09:27:48 config.py:526] This model supports multiple tasks: {'embed', 'score', 'reward', 'classify', 'generate'}. Defaulting to 'generate'.
INFO 02-25 09:27:48 llm_engine.py:232] Initializing a V0 LLM engine (v0.7.1) with config: model='Qwen/Qwen2.5-Math-7B', speculative_config=None, tokenizer='Qwen/Qwen2.5-Math-7B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-Math-7B, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 02-25 09:27:50 cuda.py:235] Using Flash Attention backend.
INFO 02-25 09:27:51 model_runner.py:1111] Starting to load model Qwen/Qwen2.5-Math-7B...
INFO 02-25 09:27:51 weight_utils.py:251] Using model weights format ['*.safetensors']
INFO 02-25 09:27:53 model_runner.py:1116] Loading model weights took 14.2419 GB
INFO 02-25 09:27:54 worker.py:266] Memory profiling takes 0.83 seconds
INFO 02-25 09:27:54 worker.py:266] the current vLLM instance can use total_gpu_memory (79.15GiB) x gpu_memory_utilization (0.90) = 71.24GiB
INFO 02-25 09:27:54 worker.py:266] model weights take 14.24GiB; non_torch_memory takes 0.09GiB; PyTorch activation peak memory takes 1.42GiB; the rest of the memory reserved for KV Cache is 55.49GiB.
INFO 02-25 09:27:55 executor_base.py:108] # CUDA blocks: 64935, # CPU blocks: 4681
INFO 02-25 09:27:55 executor_base.py:113] Maximum concurrency for 4096 tokens per request: 253.65x
INFO 02-25 09:27:57 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 02-25 09:28:12 model_runner.py:1563] Graph capturing finished in 16 secs, took 0.78 GiB
INFO 02-25 09:28:12 llm_engine.py:429] init engine (profile, create kv cache, warmup model) took 19.16 seconds
modelo: <class 'vision_models.Qwen257b'> , proceso:  Qwen257b
{'Qwen257b': <function make_fn.<locals>._function at 0x7fd081fdbce0>}
Final accuracy: 0.109375
